Warning: session_start(): Cannot start session when headers already sent in C:\xampp\htdocs\esp-project\common\connect.php on line 1

customer search modal with data table- responsive , scss - done 
redux , hooks for customer search ,react form data on submit ,
laravel api , custt modal get data , paginate - done 
dt populate with api fetch via props - done 
column sort on new data - to do 

//////////
For functional components:
useState() helps you manage state variables. The component will refresh if the state changes.
useReducer() helps you manage state Redux style - actions up, data down.
useRef() helps you create state variables that do not trigger a refresh when its value changes
useContext() helps you share a state value in a component tree/branch
 ////////////////

IB CIF - 3119187154 / card no - 5044338504505099611 /  1894 / 01/24

/////////

action --> dispatch(params) --> reducer( return params according to action type) --> return data to props 

action --> btn click - > helloredux() --> dispatch --> helloredux() action called    
2.to update data

reducer --> 1. pass it on createStore-- store (central /global Data) -- pass to provider 
2. changes store data --> take action and state
3.
////////////

lLevel':0.8065,'VBatteryVolts':14.652000000000001,'BrakeForce':0.0,'Acceleration':0.0}]}";

unix date ko real date main convert kar lena

Timestamp karna hai ////////// yyyy/mm/dd 


database\migrations\2014_10_12_000000_create_roles_table.php

database\migrations\2014_10_12_000000_create_role_admins_table.php

php artisan migrate:refresh --path=\database\migrations\2014_10_12_000000_create_roles_table.php

php artisan migrate:refresh --path=\database\migrations\2014_10_12_000000_create_role_admins_table.php

reset to prevoius commit
git reset --hard f603db7 
then pull

composer create-project --prefer-dist laravel/laravel blog

////////////
error_reporting(E_ALL); ini_set('display_errors', 1);  on index file

Delete the vendor folder
Delete composer.lock
Run the command composer clearcache (or clear-cache)
Run composer ins

/////////
000webhost site nrjesp / %RMUcX(ZPbubCTn2jYhw https://nrjesp.000webhostapp.com/
/////////////////////
////////////////////////
//////////////////////////////////
///////////////////////////////////////////////////
///////////////////////////////////////////////////
///////////////////////////////////////////////////
///////////////////////////////////////////////////

//Route::get('/test', function () { return json_encode(['data'=>'Hello World']);});

// Route::middleware('auth:api')->get('/user', function (Request $request) {
//     return $request->user();
// });

// Route::get('salesNotAuthorised', function (Request $request) { return json_encode(['data'=>'salesNotAuthorised']); })->name('salesNotAuthorised');



// Route::get('salesLoggedIn', function (){
//     return  response()->json([
//     'name' => 'Abigail',
//     'state' => 'CA'
// ]);
//   })->name('salesLoggedIn');


//Route::get('sales', 'sales\LoginController@showLoginForm')->name('sales.login');

// Route::middleware(['sessions'])->group(function () {

//     Route::get('createSession', function (){
//       $a = session(['example'=> 'ijkl']);
//       return json_encode(['data'=>'session created']);
//     });
  
//     Route::get('getSession', function () {
//       return json_encode(['data'=>session('example')]);
//     });
  
//   });


// Route::get('createSession', function (){
//     $a = Session::put('example', 'this is example session.');
//     return json_encode(['data'=>'session created']);
    
//   });

//   Route::get('getSession', function () {
     
//     return json_encode(['data'=>Session::get('example')]);
//   });


// Route::group(['middleware' => ['sessions']], function () {
//     Route::post('saleslogin', 'sales\LoginController@login')->name('saleslogin');

// });


// Route::group(['middleware' => 'web'], function () {
//     Route::post('saleslogin', 'sales\LoginController@login')->name('saleslogin');
   
// });
 
// Route::post('test', function (Request $request) { return json_encode(['data'=>$request->All()]); })->name('test')->withoutMiddleware('auth:api');

// Route::middleware('auth:salpt')->group(function () {
  
   
//     // Route::post('test', function (Request $request) { return json_encode(['data'=>$request->All()]); })->name('test')->withoutMiddleware('auth:api');

    
// });

          <form onSubmit={handleSubmit(onSubmit)}>
      {/* you will have to register your input into react-hook-form, by invoke the register function with ref as the argument */}
      <input
        type="text"
        name="example"
        ref={register({ required: true })}
      />
      {/* include validation with required field or other standard html validation rules */}
      <input
        type="text"
        name="exampleRequired"
        ref={register({ required: true, maxLength: 10 })}
      />
      {/* errors will return true if particular field validation is invalid  */}
      {errors.example && '<span>This field is required</span>'}
      <input type="submit" />
    </form>

    


    ///////////////////////

 <form onSubmit={handleSubmit(onSubmit)}>
      {/* you will have to register your input into react-hook-form, by invoke the register function with ref as the argument */}
      <input
        type="text"
        name="example"
        ref={register({ required: true })}
      />
      {/* include validation with required field or other standard html validation rules */}
      <input
        type="text"
        name="exampleRequired"
        ref={register({ required: true, maxLength: 10 })}
      />
      {/* errors will return true if particular field validation is invalid  */}
      {errors.example && '<span>This field is required</span>'}
      <input type="submit" />
    </form>

  ////////////


https://stackblitz.com/edit/react-datatable?file=DataTable.js
https://codepen.io/eraditya123/pen/yJQaap


<Helmet>

<link rel="stylesheet" href="https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap.min.css"/>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"/>
<link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.2.4/css/responsive.bootstrap.min.css"/>

<script src="https://code.jquery.com/jquery-3.5.1.js"/>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" />
<script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js" />
<script src="https://cdn.datatables.net/1.10.21/js/dataTables.bootstrap.min.js" />
<script src="https://cdn.datatables.net/responsive/2.2.4/js/dataTables.responsive.min.js" />
<script src="https://cdn.datatables.net/responsive/2.2.4/js/responsive.bootstrap.min.js" />


    </Helmet>

https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css
https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css
https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css
https://code.jquery.com/jquery-1.12.4.js
https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js
https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap.min.js
https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js
https://cdn.datatables.net/responsive/2.1.1/js/dataTables.responsive.min.js
https://cdn.datatables.net/responsive/2.1.1/js/responsive.bootstrap.min.js


https://code.jquery.com/jquery-3.5.1.js
https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js
https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js
https://cdn.datatables.net/1.10.21/js/dataTables.bootstrap.min.js
https://cdn.datatables.net/responsive/2.2.4/js/dataTables.responsive.min.js
https://cdn.datatables.net/responsive/2.2.4/js/responsive.bootstrap.min.js


navbar
https://stackblitz.com/edit/bootstrap-navbar?file=index.js
https://stackblitz.com/edit/react-github-navbar


const items =this.props.dataItems.map((item, i) => {
      return ( <li class="dropdown-submenu" key={i}>
       <a href="#" class="dropdown-toggle" data-toggle="dropdown">{item.name}</a>
       { 
       item.subMenu?item.subMenu.map((c, i) => 
       <ul class="dropdown-menu" key={i}>
         <li class="dropdown-submenu">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown">{c.name}</a>
          {
          c.subMenu?c.subMenu.map((c2, i2) =>
          <ul class="dropdown-menu"  key={i2}>
            <li><a href="#">{c2.name}</a></li>
            </ul>
          ):null
            }
            </li>
       </ul>):null}
     </li>
      )
       })
       
       
  // const items =  
  // <li class="dropdown-submenu">
  //         <a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a>
  //         <ul class="dropdown-menu">
  //             <li class="dropdown-submenu">
  //                 <a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a>
  //                 <ul class="dropdown-menu">
  //                     <li class="dropdown-submenu">
  //                         <a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a>
  //                         <ul class="dropdown-menu">
  //                             <li><a href="#">Action</a></li>
  //                         </ul>
  //                     </li>
  //                 </ul>
  //             </li>
  //         </ul>
  //     </li>


<li className="nav-item dropdown" key={i}>
<a className="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
 {item.name}
     { 
       <div className="dropdown-menu" aria-labelledby="navbarDropdown">
         {
           item.subMenu?item.subMenu.map((c, i2) => 
           
           <a className="nav-link dropdown-toggle" href="#" id="navbarDropdown2" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
           {c.name}
                    { 
                      <div className="dropdown-menu" aria-labelledby="navbarDropdown2">
                        {
                          c.subMenu?c.subMenu.map((c2, i2) => 
                          
                          <a className="nav-link dropdown-toggle" href="#" id="navbarDropdown3" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                          
                          <div className="dropdown-menu" aria-labelledby="navbarDropdown2">
                          {c2.name}
                            </div>
                          </a>
                          ):null
                          
                        }

                    </div>
                    }
           </a>
           ):null
          
         }

     </div>
     }

    
</a>
</li>


    // const clickables = [
    //   { name: "Overview" },
    //   { name: "Repositories" },
    //   { name: "Stars" },
    //   { name: "Followers" },
    //   { name: "Following" }
    // ];

    // this.props.menu.forEach((m1)=>{

    //   if(m1.menu2 && m1.menu2.length>0)
    //   {
    //     m1.menu2.map((m2)=>{

    //       console.log(m2.menu3)

    //       if(m2.menu3 && m2.menu3.length>0)
    //       {
    //           console.log(m2.menu3)
    //       }

    //     })
    //   }
     

    // })

    // this.props.menu.map((m, index)=>
    // {
    //   // console.log(m.menu1)
    //   // console.log(m.menu2)

    //   m.menu2.forEach((m2)=>{

    //     console.log(m2)
    //   })

    // //   m.menu2.map((m2, index)=>
    // // {
    // //   console.log(m2)

    // // })

    // })

    const textAreaStyles = [{
      width: 235,
      margin: 5
    }];
    
    //var fido = {{}menu1:'1',menu1:'2'  }
 
    const items = Object.keys(this.props.menu).map((i)=>{

      // return (
      //     <div>{key} : {value.toString()}</div>
      // );
    return <li key={i}> {this.props.menu[i] }</li>;
    })

    // const items = textAreaStyles.map(function(item,i){
    //   return <li key={i}> {item} </li>;
    // });



        // <Link  to=''>
        //   <li>
        //    1
        //   </li>
        //   <li>
        //    2
        //   </li>
        // </Link>


{/* <li className="nav-item active">
      <a className="nav-link" href="#">
        Home
        <span className="sr-only">(current)</span>
      </a>
    </li> */}

        { clickables.map((clickable, i) => {
            
           (
           
           <li className="nav-item dropdown">
            <a className="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true"
              aria-expanded="false">
              Dropdown
            </a>
            <div className="dropdown-menu" aria-labelledby="navbarDropdown">
              <a className="dropdown-item" href="#">
                Action
              </a>
              <a className="dropdown-item" href="#">
                Another action
              </a>
              <div className="dropdown-divider"></div>
              <a className="dropdown-item" href="#">
                Something else here
              </a>
            </div>
          </li>

          )
         })
       } 

// localStorage.getItem('user')
// ? <Component {...props} />
// : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />


// props.location.pathname==='/login'
//     ?localStorage.getItem('user')?<Redirect to={{ pathname: '/home'}} />: <Redirect to={{ pathname: '/login'}} />
//     : <Redirect  to={{ pathname: '/login'}} />

    //<Redirect to={{ pathname: '/login', state: { from: props.location } }} />


    //localStorage==true?

    //route= login?  localStorage==true ? home :login :
    // (props.location==='/login')?<Redirect to={{ pathname: '/login'}} />:<Redirect to={{ pathname: '/login'}} />


//             bookingpartnerid: "0"
// emailaccount: "mail.nrj@gmail.com"
// emailaddress: "mail.nrj@gmail.com"
// emailpasswd: null
// firstname: "neeraj"
// groupid: null
// language: "1"
// lastname: "verma"
// loginid: "neeraj"
// passwd: "$2y$10$x.8PFm3Zkwn31yQzwA2Hz.X0odlssmTbvs/JnnXGbmcHAPkJc0cYS"
// pmsalias: null
// reachmeaddr2: null
// reachmeaddress: null
// reachmeat: null
// reachmecity: null
// reachmecntry: "0"
// reachmefax: null
// reachmephone: null
// reachmepostcode: null
// reachmestate: null
// salesid: 86

/////////////

//auth()->user()

//$user = Auth::user('salpt');
//$token =  $this->guard()->user()->createToken('MyApp')->accessToken;

//return json_encode(['err'=>false,'data'=>$this->guard()->user()->api_token]); 


// return  json_encode(['err'=>true,'data'=>($request->All())]);

// return  json_encode(['err'=>true,'data'=>($this->attemptLogin($request))]); 

 /////////////      


paulv@campallen.org
esp

saurabh new jsn 

string arr = @"{'Events':[{'DeviceId':'apc51','Timestamp':1586252998,'Latitude':32.4724238,'Longitude':-85.1210323,'StatusCode':61472,'Speed':0.0,'Heading':90.0,'Odometer':0.0,'CreationTime':1586252999,'GpsFixType':0,'Hdop':1.0,'SatelliteCount':10,'BatteryVolts':4.102,'Fue


        if(session('applocale')=='en')
        {
            return json_encode(['session'=>session('applocale')]);  

        }
        else
        {
            
          session(['applocale' => 'en']);

        }

https://stackoverflow.com/questions/56292897/multi-user-login-authentication-react-redux

    // return fetch(`${config.apiUrl}/users/authenticate`, requestOptions)
    //     .then(handleResponse)
    //     .then(user => {
    //         // store user details and jwt token in local storage to keep user logged in between page refreshes
    //         localStorage.setItem('user', JSON.stringify(user));

    //         return user;
    //     });

    //return fetch('http://127.0.0.1:8000/api/saleslogin', requestOptions)


     // store user details and jwt token in local storage to keep user logged in between page refreshes
            //localStorage.setItem('user', JSON.stringify(user));
            //console.warn(data)
           // return JSON.stringify(data);

     

        // fetch(`${config.apiUrl}/api/saleslogin`).then((response) => {
        //     console.warn(response)
        //     if (response.ok) {
        //       return response.json();
        //     } else {
        //       throw new Error('Something went wrong');
        //     }
        //   })
        //   .then((responseJson) => {
        //     // Do something with the response
        //     return responseJson;
        //   })
        //   .catch((error) => {
        //     console.log(error)
        //   });


/////////////////
      
You may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders


login - https://stackblitz.com/edit/react-redux-registration-login-example

https://stackblitz.com/edit/react-redux-app?file=components%2FNavBar.js
https://stackblitz.com/edit/react-github-navbar?file=App.js
https://stackblitz.com/edit/react-github-navbar?file=style.css


/////////////

redux - state maps to props

const mapStateToProps = (state) => {
  return { [reducername in root reduer]: state };
};

const { [reducername in root reduer] } = this.props;

/////////

// case userConstants.LOGIN_FAILURE:
//       return {
//         loggedIn: false,
//         type: 'alert-danger',
//         message: action.message
//       };


// function bookContainer() {
//     return (<div>
//        <h1>Number of Books</h1>
//        <button>Buy Book</button>
//     </div>)
//   }

// //function bookContainer(props)
// function abc()
// {
//     return 
//    (
//     <div>
//         1
//     </div>
//    )
// }

//////////

    // public function login(Request $request)
    // {
    //     if (method_exists($this, 'hasTooManyLoginAttempts') &&
    //         $this->hasTooManyLoginAttempts($request)) {
    //         $this->fireLockoutEvent($request);

    //         return $this->sendLockoutResponse($request);
    //     }

    //      if (Auth::guard('sale')->attempt(array(
    //         'emailaddress' =>$request->input('emailaddress'),
    //         'password' => $request->input('password'),
    //     ))) {
    //         return $this->sendLoginResponse($request);
    //     }

    //     $this->incrementLoginAttempts($request);

    //     return $this->sendFailedLoginResponse($request);
    // }


////////////


        // foreach ($this->guard()->user()->role as $role) {

        //     if($role->name=='sales')
        //     {
        //         return redirect('sales/home');
        //     }
        //     else if($role->name=='editor')
        //     {
        //         return redirect('sales/Editor');
        //     }
        // }



        //dd($request->input('emailaddress').$request->input('password'));

        // dd(Auth::guard('sale')->attempt(array(
        //     'emailaddress' =>'mail.nrj@gmail.com',
        //     'password' => '11111111',
        // )));

        // dd(Auth::guard('sale')->attempt(array(
        //     'emailaddress' =>$request->input('emailaddress'),
        //     'password' => $request->input('password'),
        // )));



 php artisan migrate:refresh --path=\database\migrations\database\migrations\2014_10_12_000000_create_users_table.php





php artisan migrate:refresh --path=/database/migrations/CreateAdminsTable.php

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateAdminsTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('admins', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->rememberToken();
            $table->timestamps();
        });
    }
    //database\migrations\2020_04_16_120719_create_users_table.php
    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('admins');
    }
}


//////////////////////


Route::prefix('admin')->group(function() {

    Route::get('/', 'Admin\AdminController@index')->name('admin.home');
    Route::get('/login', 'Admin\LoginController@showLoginForm')->name('admin.login');
    Route::post('/login', 'Admin\LoginController@login')->name('admin.login.submit');
    Route::get('/password/request', 'Admin\ForgotPasswordController@showLinkRequestForm')->name('admin.password.request');
    Route::post('/password/email', 'Admin\ForgotPasswordController@sendResetLinkEmail')->name('admin.password.email');
    Route::get('/password/reset/{token}', 'Admin\ResetPasswordController@showResetForm')->name('admin.password.reset');

});

/////////////

   protected function broker()
    {
        return Password::broker('admins');
    }
    
    protected function guard()
    {
        return Auth::guard('admin');
    } 

    /////////////

    <?php

namespace App\Http\Controllers\Admin;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Providers\RouteServiceProvider;
use Illuminate\Foundation\Auth\ResetsPasswords;
use Illuminate\Http\JsonResponse;
use Illuminate\Support\Facades\Password;

class AdminController extends Controller
{
    /**
     * Create a new controller instance.
     *
     * @return void
     */
    public function __construct()
    {
           //$this->middleware('auth:admin');
           $this->middleware('guest:admin', ['except' => 'logout']);
    }

    /**
     * Show the application dashboard.
     *
     * @return \Illuminate\Contracts\Support\Renderable
     */
    public function index()
    {
        return view('admin.home');
    }
}


////////////

//     Route::get('/login', 'Auth\AdminLoginController@showLoginForm')->name('admin.login');
        //     // Route::post('/logout', 'Auth\AdminLoginController@logout')->name('admin.logout');
        //     // Route::post('/login', 'Auth\AdminLoginController@login')->name('admin.login.submit');
        
        //     Route::get('/adminPasswordReset', 'Auth\ResetPasswordController@rp')->name('admin.password.reset');
            
        //     Route::get('/password/reset', 'Auth\ForgotPasswordController@showLinkRequestForm')->name('admin.password.request');
        //     Route::post('/password/email', 'Auth\ForgotPasswordController@sendResetLinkEmail')->name('admin.password.email');
        //     Route::get('/password/reset/{token}', 'Auth\ResetPasswordController@showAdminResetForm')->name('admin.password.reset');
        //     Route::post('/password/reset', 'Auth\ResetAdminPasswordController@reset')->name('admin.password.update');
        
            
        //     // Route::get('/home', 'AdminController@index')->name('admin.home');
        //     // Route::get('/register', 'Auth\AdminRegisterController@showRegistrationForm')->name('admin.register');
        //     // Route::post('/register', 'Auth\AdminRegisterController@create')->name('admin.register.submit');
        //     // Route::get('/passwordRequest', 'Auth\AdminLoginController@passwordRequest')->name('password.request');
        //     // Route::get('/passwordEmail', 'Auth\AdminLoginController@passwordEmail')->name('password.email');
        //     // Route::post('/passwordEmail', 'Auth\AdminLoginController@passwordEmail')->name('password.email');
        

////////////
        
Illuminate\Database\QueryException
SQLSTATE[08001]: [Microsoft][ODBC Driver 17 for SQL Server]TCP Provider: No connection could be made because the target machine actively refused it.
 (SQL: select top 1 * from [users] where [email] = mail.nrj@gmail.com)


//string outArr = "$<UID>,<EV#>,<D>,<T>,<LT>,<LN>,<AL>,<SP>,<AC>,<DC>,<RP>,<HD>,<SV>,<HP>,<MI>,<MG>,<BV>,<CQ>,<GS>,<GT>,<FL>,<AX>,<AY >,< AZ >[,< SEQ >]##";

original string 

string arr = @"[ { 'deviceid': 'STRING', 'timestamp': 'UNIX_TIMESTAMP', 'statuscode': 'INTEGER', 'latitude': 'FLOAT', 'longitude': 'FLOAT', 'speedkph': 'FLOAT', 'heading': 'FLOAT', 'odometerkm': 'FLOAT', 'creationtime': 'UNIX_TIMESTAMP', 'gpsfixtype': 'INTEGER', 'hdop': 'FLOAT', 'satellitecount': 'INTEGER', 'batteryvolts': 'FLOAT', 'fuellevel': 'FLOAT', 'vbatteryvolts': 'FLOAT', 'brakegforce': 'FLOAT', 'acceleration': 'FLOAT' }, { 'deviceid': 'STRING', 'timestamp': 'UNIX_TIMESTAMP', 'statuscode': 'INTEGER', 'latitude': 'FLOAT', 'longitude': 'FLOAT', 'speedkph': 'FLOAT', 'heading': 'FLOAT', 'odometerkm': 'FLOAT', 'creationtime': 'UNIX_TIMESTAMP', 'gpsfixtype': 'INTEGER', 'hdop': 'FLOAT', 'satellitecount': 'INTEGER', 'batteryvolts': 'FLOAT', 'fuellevel': 'FLOAT', 'vbatteryvolts': 'FLOAT', 'brakegforce': 'FLOAT', 'acceleration': 'FLOAT' } ]";


[
  {
    "Events": [
      {
        "DeviceId": "apc51",
        "Timestamp": 1586252998,
        "Latitude": 32.4724238,
        "Longitude": -85.1210323,
        "StatusCode": 61472,
        "Speed": 0,
        "Heading": 90,
        "Odometer": 0,
        "CreationTime": 1586252999,
        "GpsFixType": 0,
        "Hdop": 1,
        "SatelliteCount": 10,
        "BatteryVolts": 4.102
      }
    ]
  }
]

///////////////////

rough 

json file poori upload hokar hi sahi pass horo hai 


na JsonConvert.DeserializeObject ki zarooart hai 

//jsonResponse[0]["Events"][0]["DeviceId"]   


//   JObject json = JsonConvert.DeserializeObject<JObject>(jsonResponse);
//foreach (Dictionary<string, object> item in data["Elements"])
//{
//    foreach (string val in item.Values)
//    {
//        Console.WriteLine(val);
//    }
//}

//List<Events> result = JsonConvert.DeserializeObject<List<Events>>(recivedData);


"[\r\n  {\r\n    \"Events\": [\r\n      {\r\n        \"DeviceId\": \"apc51\"\r\n      }\r\n    ]\r\n  }\r\n]"


                JavaScriptSerializer ser = new JavaScriptSerializer();
                var r = ser.Deserialize<List<Events>>(recivedData);


public void HandleDeivce(Object obj)
        {
            TcpClient client = (TcpClient)obj;
            var stream = client.GetStream();
            string imei = String.Empty;
            string recivedData = "";
            Byte[] bytes = new Byte[256];
            int i;
            try
            {
                while ((i = stream.Read(bytes, 0, bytes.Length)) != 0)
                {
                    string hex = BitConverter.ToString(bytes);
                    recivedData = recivedData + Encoding.ASCII.GetString(bytes, 0, i);
                }

                JavaScriptSerializer ser = new JavaScriptSerializer();
                var r = ser.Deserialize<List<Events>>(recivedData);

                Console.ReadLine();
            }
            catch (Exception e)
            {
                Console.WriteLine("Exception: {0}", e.ToString());
                client.Close();
            }
        }



    public class Events
    {
        public string DeviceId { get; set; }
            public int Timestamp { get; set; }
            public double Latitude { get; set; }
            public double Longitude { get; set; }
            public int StatusCode { get; set; }
            public int Speed { get; set; }
            public int Heading { get; set; }
            public int Odometer { get; set; }
            public int CreationTime { get; set; }
            public int GpsFixType { get; set; }
            public int Hdop { get; set; }
            public int SatelliteCount { get; set; }
            public double BatteryVolts { get; set; }

        }
                //var json_serializer = new JavaScriptSerializer();
                //Events routes_list = json_serializer.Deserialize<Events>(data);
                //Console.WriteLine(routes_list);

                //var result = JsonConvert.DeserializeObject<Events>(data);

               // string customerdata =
               //"[" +
               //    "{" +
               //        "\"Status\": 21," +
               //        "\"CustomerId\": \"e3633ccb-bbea-465d-9ce6-6c37e9c40e2e\"" +
               //    "}," +
               //    "{" +
               //        "\"Status\": 20," +
               //        "\"CustomerId\": \"d02e2970-7c28-41b0-89f3-5276a97e12c9\"" +
               //    "}" +
               //"]";


////////////


                //string arr = @"{'Events':[{'DeviceId':'apc51','Timestamp':1586252998,'Latitude':32.4724238,'Longitude':-85.1210323,'StatusCode':61472,'Speed':0.0,'FuelLevel':0.8065,'VBatteryVolts':14.652000000000001,'BrakeForce':0.0,'Acceleration':0.0}]}";

                //string outArr = "$" + events.DeviceId + ",4001," + events.Timestamp + "," + events.Latitude + "," + events.Longitude + ",0," + events.Speed + ",0,0,0[,0]##";

                //Console.WriteLine(outArr);


////////////
                (Events)json_serializer.DeserializeObject("{ \"test\":\"some data\" }");
                dynamic parsedData = JsonConvert.DeserializeObject(data);

                dynamic events = parsedData[0].Events[0];


                ///////////

            //string file = Server.MapPath("~/App_Data/output.json");
            ////deserialize JSON from file  
            //string Json = System.IO.File.ReadAllText(file);
            //JavaScriptSerializer ser = new JavaScriptSerializer();

            //string arr = @"[{ "Events": [{ "DeviceId": "apc51", "Timestamp": 1586252998, "Latitude": 32.4724238, "Longitude": -85.1210323, "StatusCode": 61472, "Speed": 0, "Heading": 90, "Odometer": 0, "CreationTime": 1586252999, "GpsFixType": 0, "Hdop": 1, "SatelliteCount": 10, "BatteryVolts": 4.102 }] }]";

            //string arr = @"{'Events':[{'DeviceId':'apc51','Timestamp':1586252998,'Latitude':32.4724238,'Longitude':-85.1210323,'StatusCode':61472,'Speed':0.0,'Heading':90.0,'Odometer':0.0,'CreationTime':1586252999,'GpsFixType':0,'Hdop':1.0,'SatelliteCount':10,'BatteryVolts':4.102,'FuelLevel':0.8065,'VBatteryVolts':14.652000000000001,'BrakeForce':0.0,'Acceleration':0.0}]}";


            ////////
//string arr = @"{'Events':[{'DeviceId':'apc51','Timestamp':1586252998,'Latitude':32.4724238,'Longitude':-85.1210323,'StatusCode':61472,'Speed':0.0,'Heading':90.0,'Odometer':0.0,'CreationTime':1586252999,'GpsFixType':0,'Hdop':1.0,'SatelliteCount':10,'BatteryVolts':4.102,'FuelLevel':0.8065,'VBatteryVolts':14.652000000000001,'BrakeForce':0.0,'Acceleration':0.0}]}";


AL, DC,RP,MG,CQ,GT,AX,AY,AZ ki value 0 kar di hai 
timestamp to yyyy/mm/dd me kar diya hai 
baki order me hai


SEQ
Console.WriteLine(UnixTimeStampToDateTime(1586252998));

////////

rough

 Newtonsoft.Json.JsonReaderException: Unexpected character encountered while parsing value: }. Path '', line 0, position 0.


 string outArr = "$" + events.DeviceId + ",4001," + UnixTimeStampToDate(events.Timestamp) + "," + events.CreationTime + "," + events.Latitude + "," + events.Longitude + ",0," + events.Speed + "," + events.Acceleration + ",0,0," + events.Heading + "," + events.SatelliteCount + "," + events.Hdop + "," + events.Odometer + ",0," + events.BatteryVolts + ",0," + events.StatusCode + ",0," + events.FuelLevel + ",0,0,0[,0]##";

//[{ {"deviceid": "STRING"), {"timestamp": "UNIX_TIMESTAMP"}, {"statuscode": "INTEGER"}, {"latitude": "FLOAT"}, {"longitude": "FLOAT"}, {"speedkph": "FLOAT"}, {"heading": "FLOAT"}, {"odometerkm": "FLOAT"), {"creationtime": "UNIX_TIMESTAMP"), {"gpsfixtype": "INTEGER"), {"hdop": "FLOAT"), {"satellitecount": "INTEGER") {"batteryvolts": "FLOAT"), {"fuellevel": "FLOAT"), {"vbatteryvolts": "FLOAT"), {"brakegforce": "FLOAT"), {"acceleration": "FLOAT"), }]

//if (NMEA_DATA[0].Contains("deviceid") && Speed.Equals(""))
//{
//	Speed = NMEA_DATA[7];
//}
//else if (NMEA_DATA[0].Contains("timestamp") && Altitude.Equals(""))
//{
//	Altitude = NMEA_DATA[9];
//}
//else if (NMEA_DATA[0].Contains("GPRMC") && Latitude.Equals(""))
//{
//	Latitude = NMEA_DATA[3];
//	Longitude = NMEA_DATA[5];
//	Heading = NMEA_DATA[8];
//	Time = NMEA_DATA[1].Substring(0, NMEA_DATA[1].IndexOf("."));
//	Date = NMEA_DATA[9];
//}
//else if (NMEA_DATA[0].Contains("DEVID"))
//{
//	String prefixedData = lines[i].Substring(lines[i].IndexOf("$DEVID,") + 9);
//	DeviceID = prefixedData;
//}

//string datetime_format_recived = "ddMMyyHHmmss";
//DateTime dateTime = DateTime.ParseExact(Date + Time, datetime_format_recived, CultureInfo.InvariantCulture);
DateTime date_now = DateTime.UtcNow;

//string event_code = "4001";
//try
//{
//	double val_speed = Double.Parse(Speed, CultureInfo.InvariantCulture);
//	if (val_speed < 5)
//		event_code = "4002";
//}
//catch (Exception e)
//{
//	// TODO: handle exception



String[] lines = datafromdev.Split("*");
for (int i = 0; i < lines.Length; i++)
{
String NMEA_SET = "";
if (lines[i].Contains("$"))
{
NMEA_SET = lines[i];
String[] NMEA_DATA = NMEA_SET.Split(",");

DeviceID =  NMEA_DATA[0];
TimeStamp = NMEA_DATA[1];
StatusCode = NMEA_DATA[2];
Latitude = NMEA_DATA[3];
Longitude = NMEA_DATA[4];
SpeedKPH = NMEA_DATA[5];
Heading = NMEA_DATA[6];
OdometerKM = NMEA_DATA[7];
CreationTime = NMEA_DATA[8];
gpsFixType = NMEA_DATA[9];
HDOP = NMEA_DATA[10];
SatelliteCount = NMEA_DATA[11];
BatteryVolts = NMEA_DATA[12];
FuelLevel = NMEA_DATA[13];
VBatteryVolts = NMEA_DATA[14];
BrakegForce = NMEA_DATA[15];
Acceleration = NMEA_DATA[16];

}

}	

String[] data = new String[20];
data[0] = HexToDecimal(DeviceID) + "";
data[1] = TimeStamp;
data[2] = StatusCode;
data[3] = ConvertLatLong(Latitude, true) + "";
data[4] = ConvertLatLong(Longitude, true) + "";
data[5] = SpeedKPH;
data[6] = Heading;
data[7] = OdometerKM;
data[8] = CreationTime;
data[9] = gpsFixType;
data[10] = HDOP;
data[11] = SatelliteCount;
data[12] = BatteryVolts;
data[13] = FuelLevel;
data[14] = VBatteryVolts;
data[15] = BrakegForce;
data[16] = Acceleration;
//}


/////

			
DeviceID = "";
TimeStamp= "";
StatusCode = "";
Latitude = "";
Longitude = "";
SpeedKPH = "";
Heading = "";
OdometerKM = "";
CreationTime = "";
gpsFixType = "";
HDOP = "";
SatelliteCount = "";
BatteryVolts = "";
FuelLevel = "";
VBatteryVolts = "";
BrakegForce = "";
Acceleration = "";

///////////////

String DeviceID ;
String TimeStamp;
String StatusCode;
String Latitude;
String Longitude;
String SpeedKPH;
String Heading;
String OdometerKM;

String CreationTime;
String gpsFixType;
String HDOP;
String SatelliteCount;
String BatteryVolts;
String FuelLevel;
String VBatteryVolts;
String BrakegForce;
String Acceleration;

//String Latitude = "";
//String Longitude = "";
//String DeviceID = "";
//String Date = "";
//String Time = "";
//String Speed = "";
//String Heading = "";
//String Altitude = "";

//////


Severity	Code	Description	Project	File	Line	Suppression State
Error	MSB3644	The reference assemblies for .NETFramework,Version=v4.6.2 were not found. To resolve this, install the Developer Pack (SDK/Targeting Pack) for this framework version or retarget your application. You can download .NET Framework Developer Packs at https://aka.ms/msbuild/developerpacks	ITfoxtec.Identity.Saml2	C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin\Microsoft.Common.CurrentVersion.targets	1175	


//////////

HttpRequestException: No connection could be made because the target machine actively refused it.

127.0.0.1:44305

https://localhost:44306/

////////////

Severity	Code	Description	Project	File	Line	Suppression State
Error	CS0234	The type or namespace name 'Xml' does not exist in the namespace 'System.Security.Cryptography' (are you missing an assembly reference?)	DotNet_SAML	C:\Users\neeraj\source\repos\DotNet_SAML\Consume.aspx.cs	13	Active

The type 'AccountSettings' exists in both 'c:\Users\neeraj\AppData\Local\Temp\Temporary ASP.NET Files\vs\5e323c09\79dba3c8\App_Code.6-yxvvpy.dll' and 'c:\Users\neeraj\AppData

\Local\Temp\Temporary ASP.NET Files\vs\5e323c09\79dba3c8\assembly\dl3\13c0fe83\577580c0_35fcd501\DotNet_SAML.DLL'

//////

MISSING OR INVALID AUTHENTICATION REQUEST.
///////

assertionConsumerServiceUrl = "http://localhost:49573/SamlConsumer/Consume.aspx";
string issuer = "test-app";
idp_sso_target_url = "https://app.onelogin.com/saml/signon/20219";
////

-----BEGIN CERTIFICATE----- MIIEFDCCAvygAwIBAgIUBzaGbaYK7pKr/9J2cdbLMtKdYiwwDQYJKoZIhvcNAQEF BQAwVzEiMCAGA1UECgwZaHR0cDovL2F2aWt0ZWNobm9zb2Z0LmNvbTEVMBMGA1UE CwwMT25lTG9naW4gSWRQMRowGAYDVQQDDBFPbmVMb2dpbiBBY2NvdW50IDAeFw0y MDAzMTcxMDA0NDdaFw0yNTAzMTcxMDA0NDdaMFcxIjAgBgNVBAoMGWh0dHA6Ly9h dmlrdGVjaG5vc29mdC5jb20xFTATBgNVBAsMDE9uZUxvZ2luIElkUDEaMBgGA1UE AwwRT25lTG9naW4gQWNjb3VudCAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK AoIBAQCjt/VKmrKlZvou3WFVap43lPdwFNCr6wwyvilO2kho70SSO0e9XIS0IKcl QrTpnYAFfojyrKb5G0iJbo+23lJ0mDZwSst60eV3Um06xQ6XvD52PXlp5UI6YB+g 1Ulkl1S0gG9wUiKSlxWJrdlflY+1u2Jh9zhcKn6B75dSVokQYbG8yT35OB7tmj6o kQ/ELs50qk6OMpZfN4lv0ufrZlpOeWWYarKzqxhSreJwQevDslhpxj/qce7zpoUH 89BANwqHbjiOJZK5gZsnCcYmx3tF6ev67wt9swQcfXeDdDxhB8eu1muxsoNfzfuz ETihYgClC0QLr/Yhomp9dvMFS3F5AgMBAAGjgdcwgdQwDAYDVR0TAQH/BAIwADAd BgNVHQ4EFgQUzpwiKSDFvY38pyUxMu9l5MbXejUwgZQGA1UdIwSBjDCBiYAUzpwi KSDFvY38pyUxMu9l5MbXejWhW6RZMFcxIjAgBgNVBAoMGWh0dHA6Ly9hdmlrdGVj aG5vc29mdC5jb20xFTATBgNVBAsMDE9uZUxvZ2luIElkUDEaMBgGA1UEAwwRT25l TG9naW4gQWNjb3VudCCCFAc2hm2mCu6Sq//SdnHWyzLSnWIsMA4GA1UdDwEB/wQE AwIHgDANBgkqhkiG9w0BAQUFAAOCAQEAMk+oVpGmG2/9QTDcY326edPlVw5E22iu eFHz8jap7nvA4DguxqINw8Uq9fW0mmHqe0Teq33CW0FN0sD6aXPpMgA7nsDTnB5t 1YfFs9PCgDUQ07AEwwteXrZkcFdQetmyCrN8k8Ie28DkPkbRUwX2vF48XFsD80q0 jTINOyMj4WkpPQPmC1VOXxAvquw+vY5yM9b6z5mo3sU1wV2GuS7CdCuhEVTaXoMf 2o9ssmDkP/3zTNMZH1edomZm5/Pq3yIb/jVRsGqk/542HYLr7T5giOsgv3c9N1+1 r3tEPzPD3NnL3OH2TgwsAUy+hyi77cesiKFwrNsOrtOXaTYdjH6B6g== -----END CERTIFICATE----- 

https://app.onelogin.com/saml/signon/3501

//////

"PHNhbWxwOkF1dGhuUmVxdWVzdCBJRD0iX2Q1MzNmNWNiLWFjMzEtNDk3OC1iZjI2LTQzZTUwMjMwYzBmZCIgVmVyc2lvbj0iMi4wIiBJc3N1ZUluc3RhbnQ9IjIwMjAtMDMtMThUMDc6MjY6NDlaIiBQcm90b2NvbEJpbmRpbmc9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpiaW5kaW5nczpIVFRQLVBPU1QiIEFzc2VydGlvbkNvbnN1bWVyU2VydmljZVVSTD0iaHR0cDovL2xvY2FsaG9zdC9TYW1sQ29uc3VtZXIvQ29uc3VtZS5hc3B4IiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj48c2FtbDpJc3N1ZXIgeG1sbnM6c2FtbD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI%2bdGVzdC1hcHA8L3NhbWw6SXNzdWVyPjxzYW1scDpOYW1lSURQb2xpY3kgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDp1bnNwZWNpZmllZCIgQWxsb3dDcmVhdGU9InRydWUiIC8%2bPHNhbWxwOlJlcXVlc3RlZEF1dGhuQ29udGV4dCBDb21wYXJpc29uPSJleGFjdCI%2bPHNhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWYgeG1sbnM6c2FtbD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI%2bdXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFjOmNsYXNzZXM6UGFzc3dvcmRQcm90ZWN0ZWRUcmFuc3BvcnQ8L3NhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY%2bPC9zYW1scDpSZXF1ZXN0ZWRBdXRobkNvbnRleHQ%2bPC9zYW1scDpBdXRoblJlcXVlc3Q%2b"

SAMLRequest=PHNhbWxwOkF1dGhuUmVxdWVzdCBJRD0iX2Q1MzNmNWNiLWFjMzEtNDk3OC1iZjI2LTQzZTUwMjMwYzBmZCIgVmVyc2lvbj0iMi4wIiBJc3N1ZUluc3RhbnQ9IjIwMjAtMDMtMThUMDc6MjY6NDlaIiBQcm90b2NvbEJpbmRpbmc9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpiaW5kaW5nczpIVFRQLVBPU1QiIEFzc2VydGlvbkNvbnN1bWVyU2VydmljZVVSTD0iaHR0cDovL2xvY2FsaG9zdC9TYW1sQ29uc3VtZXIvQ29uc3VtZS5hc3B4IiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj48c2FtbDpJc3N1ZXIgeG1sbnM6c2FtbD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI+dGVzdC1hcHA8L3NhbWw6SXNzdWVyPjxzYW1scDpOYW1lSURQb2xpY3kgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDp1bnNwZWNpZmllZCIgQWxsb3dDcmVhdGU9InRydWUiIC8+PHNhbWxwOlJlcXVlc3RlZEF1dGhuQ29udGV4dCBDb21wYXJpc29uPSJleGFjdCI+PHNhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWYgeG1sbnM6c2FtbD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI+dXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFjOmNsYXNzZXM6UGFzc3dvcmRQcm90ZWN0ZWRUcmFuc3BvcnQ8L3NhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY+PC9zYW1scDpSZXF1ZXN0ZWRBdXRobkNvbnRleHQ+PC9zYW1scDpBdXRoblJlcXVlc3Q+


///////

Providers. Protect the apps and redirect to the IdP when user want to log in the app.

In your case, you need to add SAML support to APP-A1 and APP-A2 (turning them Service Providers) and connect both to an Identity Provider.

Service Peoviders need to send an AuthNRequest (first code you mentioned) to the IdP SSO URL.

And also need to have an Assertion Consumer Service (SP ACS URL, second code you mentioned) in order to receive and process the SAMLResponse.

If you are using Onelogin as Identity Provider and have a a developer account you will be able to go to Apps>Add app and later look for a "SAML Test Connector"

On the "Configuration" section you should provide SP info and at the SSO section you get the IdP data... you may create one App connector per each SP. More info at https://support.onelogin.com/hc/en-us/articles/202673944-How-to-Use-the-OneLogin-SAML-Test-Connector

IMPORTANT: The dotnet toolkit is a proof of concept, you should not use it in production as mentioned on the description of its 

github repository: https://github.com/onelogin/dotnet-saml Please use the alternatives mentioned there.
//////////
https://support.templafy.com/hc/en-us/articles/115005026225-How-to-setup-SSO-with-OneLogin-SAML-

/////////

SAML Signature Algorithm

Issuer URL
https://app.onelogin.com/saml/metadata/4515784d-e806-4c6c-8426-ce0d8e119b5d
 
SAML 2.0 Endpoint (HTTP)
https://http-aviktechnosft-com-dev.onelogin.com/trust/saml2/http-post/sso/4515784d-e806-4c6c-8426-ce0d8e119b5d
 
SLO Endpoint (HTTP)
https://http-aviktechnosft-com-dev.onelogin.com/trust/saml2/http-redirect/slo/1100609
 
///////////
 
Issuer URL
https://app.onelogin.com/saml/metadata/fdab7072-ebcb-4eff-804f-db0b91a25b00
 
SAML 2.0 Endpoint (HTTP)
https://syrtex-technologies.onelogin.com/trust/saml2/http-post/sso/fdab7072-ebcb-4eff-804f-db0b91a25b00
 
SLO Endpoint (HTTP)
https://syrtex-technologies.onelogin.com/trust/saml2/http-redirect/slo/1100629
 

/////////////////////

https://syrtex-technologies.onelogin.com

//////////


Audience: 	https://aviktechc.onelogin.com/AuthServices
Recipient:	https://aviktechc.onelogin.com/AuthServices
ACS (Consumer) URL Validator: 	https://aviktechc.onelogin.com/AuthServices/Acs
ACS (Consumer) URL:	https://aviktechc.onelogin.com/AuthServices/Acs
Login URL:	https://YOURCUSTOMERDOMAIN.templafy.com

In "field name", write "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"
Tick off "Include in SAML assertion"
Click "Save"


////////

//public string certificate = "MIIEFDCCAvygAwIBAgIUBzaGbaYK7pKr/9J2cdbLMtKdYiwwDQYJKoZIhvcNAQEF BQAwVzEiMCAGA1UECgwZaHR0cDovL2F2aWt0ZWNobm9zb2Z0LmNvbTEVMBMGA1UE CwwMT25lTG9naW4gSWRQMRowGAYDVQQDDBFPbmVMb2dpbiBBY2NvdW50IDAeFw0y MDAzMTcxMDA0NDdaFw0yNTAzMTcxMDA0NDdaMFcxIjAgBgNVBAoMGWh0dHA6Ly9h dmlrdGVjaG5vc29mdC5jb20xFTATBgNVBAsMDE9uZUxvZ2luIElkUDEaMBgGA1UE AwwRT25lTG9naW4gQWNjb3VudCAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK AoIBAQCjt/VKmrKlZvou3WFVap43lPdwFNCr6wwyvilO2kho70SSO0e9XIS0IKcl QrTpnYAFfojyrKb5G0iJbo+23lJ0mDZwSst60eV3Um06xQ6XvD52PXlp5UI6YB+g 1Ulkl1S0gG9wUiKSlxWJrdlflY+1u2Jh9zhcKn6B75dSVokQYbG8yT35OB7tmj6o kQ/ELs50qk6OMpZfN4lv0ufrZlpOeWWYarKzqxhSreJwQevDslhpxj/qce7zpoUH 89BANwqHbjiOJZK5gZsnCcYmx3tF6ev67wt9swQcfXeDdDxhB8eu1muxsoNfzfuz ETihYgClC0QLr/Yhomp9dvMFS3F5AgMBAAGjgdcwgdQwDAYDVR0TAQH/BAIwADAd BgNVHQ4EFgQUzpwiKSDFvY38pyUxMu9l5MbXejUwgZQGA1UdIwSBjDCBiYAUzpwi KSDFvY38pyUxMu9l5MbXejWhW6RZMFcxIjAgBgNVBAoMGWh0dHA6Ly9hdmlrdGVj aG5vc29mdC5jb20xFTATBgNVBAsMDE9uZUxvZ2luIElkUDEaMBgGA1UEAwwRT25l TG9naW4gQWNjb3VudCCCFAc2hm2mCu6Sq//SdnHWyzLSnWIsMA4GA1UdDwEB/wQE AwIHgDANBgkqhkiG9w0BAQUFAAOCAQEAMk+oVpGmG2/9QTDcY326edPlVw5E22iu eFHz8jap7nvA4DguxqINw8Uq9fW0mmHqe0Teq33CW0FN0sD6aXPpMgA7nsDTnB5t 1YfFs9PCgDUQ07AEwwteXrZkcFdQetmyCrN8k8Ie28DkPkbRUwX2vF48XFsD80q0 jTINOyMj4WkpPQPmC1VOXxAvquw+vY5yM9b6z5mo3sU1wV2GuS7CdCuhEVTaXoMf 2o9ssmDkP/3zTNMZH1edomZm5/Pq3yIb/jVRsGqk/542HYLr7T5giOsgv3c9N1+1 r3tEPzPD3NnL3OH2TgwsAUy+hyi77cesiKFwrNsOrtOXaTYdjH6B6g==";

//////////////


// public string assertionConsumerServiceUrl = "http://localhost:49573/SamlConsumer/Consume.aspx";
// public string assertionConsumerServiceUrl = "http://localhost/SamlConsumer/Consume.aspx";
// public string assertionConsumerServiceUrl = "http://localhost:63248/SamlConsumer";
// public string issuer = "https://app.onelogin.com/saml/metadata/532a4b35-034d-4358-bba2-9b496ab2a888";

///////////////////

//public string certificate = "-----BEGIN CERTIFICATE-----\nMIIBrTCCAaGgAwIBAgIBATADBgEAMGcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApD\nYWxpZm9ybmlhMRUwEwYDVQQHDAxTYW50YSBNb25pY2ExETAPBgNVBAoMCE9uZUxv\nZ2luMRkwFwYDVQQDDBBhcHAub25lbG9naW4uY29tMB4XDTEwMDMwOTA5NTgzNFoX\nDTE1MDMwOTA5NTgzNFowZzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3Ju\naWExFTATBgNVBAcMDFNhbnRhIE1vbmljYTERMA8GA1UECgwIT25lTG9naW4xGTAX\nBgNVBAMMEGFwcC5vbmVsb2dpbi5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ\nAoGBANtmwriqGBbZy5Dwy2CmJEtHEENVPoATCZP3UDESRDQmXy9Q0Kq1lBt+KyV4\nkJNHYAAQ9egLGWQ8/1atkPBye5s9fxROtf8VO3uk/x/X5VSRODIrhFISGmKUnVXa\nUhLFIXkGSCAIVfoR5S2ggdfpINKUWGsWS/lEzLNYMBkURXuVAgMBAAEwAwYBAAMB\nAA==\n-----END CERTIFICATE-----";
	
http-aviktechnosft-com-dev.onelogin.com / https://syrtex-technologies.onelogin.com /

//////////////


http://localhost:63248

http://localhost:63248/saml/sso
////////

public string certificate = "-----BEGIN CERTIFICATE----- MIID3zCCAsegAwIBAgIUJ2JbgiLh3oQ/wsTXasbGDB+jgnUwDQYJKoZIhvcNAQEF BQAwRjERMA8GA1UECgwIYXZpa3RlY2gxFTATBgNVBAsMDE9uZUxvZ2luIElkUDEa MBgGA1UEAwwRT25lTG9naW4gQWNjb3VudCAwHhcNMjAwMzE4MTA1NDU0WhcNMjUw MzE4MTA1NDU0WjBGMREwDwYDVQQKDAhhdmlrdGVjaDEVMBMGA1UECwwMT25lTG9n aW4gSWRQMRowGAYDVQQDDBFPbmVMb2dpbiBBY2NvdW50IDCCASIwDQYJKoZIhvcN AQEBBQADggEPADCCAQoCggEBAKqFQTJqUDW9KmPSad9FGb8dIeu+nar9uwxAE0pp 1ljt5F8DsqV8Z2wLH8ucUnCY3+NCXOyxXFiP0kmtGKOYEJzzI1V7zYhilq4C+ROZ AnhCyCax+Ab1997EEg4a4ahNs6Ck3KDQJAQf8MsnNcUGw5QXPo/Tvqr1IwXGJOdP i2xiOYdRDjccDhMCNO3beicV11Bs45ecUoR5QuJG3j6Zwta/F2phyXZwpCy16x6M YBvlXx+/1SZbPJB37VppvGrkkzGUDVMw3vgNroO7ML241XX7hRz1jYJxcrYx5+uW 0d5q526LbBXEVY7PwnwnczKAMUsPJ/jsCoK9zuA1DCopHBECAwEAAaOBxDCBwTAM BgNVHRMBAf8EAjAAMB0GA1UdDgQWBBTNwvHP3FLBZKS46Bs0aLVYhIowhzCBgQYD VR0jBHoweIAUzcLxz9xSwWSkuOgbNGi1WISKMIehSqRIMEYxETAPBgNVBAoMCGF2 aWt0ZWNoMRUwEwYDVQQLDAxPbmVMb2dpbiBJZFAxGjAYBgNVBAMMEU9uZUxvZ2lu IEFjY291bnQgghQnYluCIuHehD/CxNdqxsYMH6OCdTAOBgNVHQ8BAf8EBAMCB4Aw DQYJKoZIhvcNAQEFBQADggEBAB+wuF0JT8KMpuxC+ZckjhU3UIuHE5M3k4tzlxzk 0GTINTrgn6Vc7dAGyGWCBarKtrPg0MhZkDUjoaupbzpa8/HxGA2Cg0/NEglOnFXD PDRv3l5FMZyUX1osxB1+ppIoLlWZzeVBVVrAbBAB4ZB1PvgNUQHsidqMJ8BkFHYf DifuADbH3Maj2JxDBg9EY4NcaHbFwtRQ2OoJm+U+37odmDbwu8V9rxUfakq6jmbN TwVHMWmmawUwxRSj+3EW0CLPhNF9dWicsThBNBo8r/QKMs1kURmJNL/gwkuud07I eUnvSuUjnVi+OmIm3Eyrbxa4NT1BeKTVnVf1bwaUqKZW21I= -----END CERTIFICATE-----";


public string idp_sso_target_url = "https://app.onelogin.com/saml/signon/20219";

//////////////

SAMLRequest=PHNhbWxwOkF1dGhuUmVxdWVzdCBJRD0iXzA1MmFhYzJmLWZhNDMtNDM4OS1iMjY0LTliMDU3MTBmOTdhNiIgVmVyc2lvbj0iMi4wIiBJc3N1ZUluc3RhbnQ9IjIwMjAtMDMtMTlUMDU6MzQ6MTlaIiBQcm90b2NvbEJpbmRpbmc9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpiaW5kaW5nczpIVFRQLVBPU1QiIEFzc2VydGlvbkNvbnN1bWVyU2VydmljZVVSTD0iaHR0cDovL2xvY2FsaG9zdDo0OTU3My9TYW1sQ29uc3VtZXIvQ29uc3VtZS5hc3B4IiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj48c2FtbDpJc3N1ZXIgeG1sbnM6c2FtbD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI+dGVzdC1hcHA8L3NhbWw6SXNzdWVyPjxzYW1scDpOYW1lSURQb2xpY3kgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDp1bnNwZWNpZmllZCIgQWxsb3dDcmVhdGU9InRydWUiIC8+PHNhbWxwOlJlcXVlc3RlZEF1dGhuQ29udGV4dCBDb21wYXJpc29uPSJleGFjdCI+PHNhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWYgeG1sbnM6c2FtbD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI+dXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFjOmNsYXNzZXM6UGFzc3dvcmRQcm90ZWN0ZWRUcmFuc3BvcnQ8L3NhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY+PC9zYW1scDpSZXF1ZXN0ZWRBdXRobkNvbnRleHQ+PC9zYW1scDpBdXRoblJlcXVlc3Q+

/////////





// var HtmlWebpackPlugin = require('html-webpack-plugin');
// const ExtractTextPlugin = require("extract-text-webpack-plugin");

// module.exports = {
//     mode: 'development',
//     resolve: {
//         extensions: ['.js', '.jsx']
//     },
//     // module: {
//     //     rules: [
//     //         {
//     //             test: /\.jsx?$/,
//     //             loader: 'babel-loader'
//     //         }
//     //     ]
//     // },
//     // plugins: [new HtmlWebpackPlugin({
//     //     template: './src/index.html'
//     // })],


//     module: {
//         rules: [
//           {
//             test: /\.css$/,
//             use: ExtractTextPlugin.extract({
//               fallback: "style-loader",
//               use: "css-loader"
//             })
//           }
//         ]
//       },
//       plugins: [
//         new ExtractTextPlugin("styles.css"),
//       ],


//     devServer: {
//         historyApiFallback: true
//     },
//     externals: {
//         // global app config object
//         config: JSON.stringify({
//             apiUrl: 'http://localhost:4000'
//         })
//     },
//     // test: /\.scss$/,
//     //     exclude: /node_modules/,
//     // use: ExtractTextPlugin.extract({
//     //     fallback: "style-loader",
//     //     use: [{
//     //         loader: "css-loader" // translates CSS into CommonJS
//     //     }, {
//     //         loader: "sass-loader"
//     //     }]
//     //   }),
//     //   test: /\.scss$/,
//     //   exclude: /node_modules/,
      
// }

//////////

rules: [
            {
                test: /\.jsx?$/,
                loader: 'babel-loader'
            },
            {
                test: /\.scss$/,
                loaders: ["style", "css", "sass"]
              }
        ]

//////////        
http://localhost:63248

//https://aviktechc.onelogin.com/trust/saml2/http-post/sso/8d6fb528-9768-4698-b6ec-f3944eddd368

//public string idp_sso_target_url = "https://aviktechc.onelogin.com/trust/saml2/http-post/sso/8d6fb528-9768-4698-b6ec-f3944eddd368";

////////

powershell -noexit "& "C:\Users\neeraj\source\repos\OIOSAML.Net\setup\setup_prerequisites.ps1"

Powershell.exe -File C:\Users\neeraj\source\repos\OIOSAML.Net\setup\setup_prerequisi
tes.ps1

//////

- [ComponentSpace](http://www.componentspace.com/) (commercial)
- [OIOSAML](https://digitaliser.dk/resource/2972745) (open source)
- [ITfoxtec](http://itfoxtec.com/identitysaml2) (open source)
- [Sustainsys](https://github.com/Sustainsys/Saml2) (formerly Kentor) (open source)
- [Owin.Security.Saml](https://github.com/elerch/SAML2) (open source)


//////////

-----BEGIN CERTIFICATE-----
MIIDbzCCAlegAwIBAgIJAPyhmwC99RaOMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNV
BAYTAkRLMRAwDgYDVQQHDAdEZW5tYXJrMREwDwYDVQQKDAhJVGZveHRlYzEaMBgG
A1UEAwwRcm9vdC5pdGZveHRlYy5jb20wHhcNMTIwMTA2MTUwMTQwWhcNMjIwMTAz
MTUwMTQwWjBOMQswCQYDVQQGEwJESzEQMA4GA1UEBwwHRGVubWFyazERMA8GA1UE
CgwISVRmb3h0ZWMxGjAYBgNVBAMMEXJvb3QuaXRmb3h0ZWMuY29tMIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx1FEHApsWag8KS1BeYDl0SbQaPBU3uUH
lzvCGEKrHWkocagPUUFZZ1rSHJrkvBWbIvIE3cRRuX4wU8mLR3hNJW3iJp1F9GvD
2oJgTy3dwcoemrzdC0L37v0045m5OqCA6HVb+CYlLjgn9konEySreXujeO/48Efs
SmWvnodIK9pZ8pNhjGW7XM1jiOk7vMzVY6a6EK6yTlo5iM95Bt9M6ZofEkkGf8uN
PVCUJrlxHxi8uZUj7FPiICbCg97quamDcY0wqVt6srNO2HD6yQFi7UQuw9rrNENa
J3ai5gtBJcX9qQX9bvzJ3G3jF71BxiIc8+6ZLLLomsjVl1FNqUGz9wIDAQABo1Aw
TjAdBgNVHQ4EFgQUy465Sczj7sIf8l+N2sS5aa1nWNIwHwYDVR0jBBgwFoAUy465
Sczj7sIf8l+N2sS5aa1nWNIwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOC
AQEAJHN0/ucfCkBPg0onpx4xs40db2G2S7i0pCYlrCbm/ertjtk1yJjA7oMvSkEZ
Kv/JkwhTrdzb1RzkVTTYEWkwwjRYgjeBljyG5UFBzMThxEVSsB2AQurN4ctvpj7p
H0HxtrzEa0kwGsG62EN0/8QayMB+ACVCQpbacAaBugB1PW03Ww+P91FvmiVfRGCU
jE8YLXSqz8HTYzIqPOxoaTUjwqJ+QbBM1FDFvt7FkGfGrS+lrgRp0GX5nDtLw7Z5
LGt4uR90kJcNhtUtHT2E17T0V7wC/J0OCVwyje8vDa9jfDcXwCLNM9G4oxZ5wuYo
wXYUnfbN/RteuR6IC2zapz0yFQ==
-----END CERTIFICATE-----

////

one login me to SAML Test Connector banakar user add kiya,IDP me App add kari 
 
Test Connector ki configuration me ye set kiye -  Audience (EntityID),Recipient,ACS (Consumer) URL Validator,ACS (Consumer) URL*,Single Logout URL,Login URL

////////////

https://app.onelogin.com/saml/signon/20219
https://app.onelogin.com/login

OneLogin - aviktechc.onelogin.com / mohini@aviktechnosoft.com / Ndt2ox1@

not to use 

https://onelogin.service-now.com/support/?id=kb_social_qa_question&sys_id=cc23546bdb68934024c780c74b96191f

https://stackoverflow.com/questions/54414345/code-your-c-asp-net-app-to-provide-sso-via-onelogin-getting-errors


/////////

https://github.com/futureroads/Listeners
////////


 
class TCPSocket
{
private Socket _socket = new Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);
private const int bufSize = 8 * 1024;
private State state = new State();
private EndPoint epFrom = new IPEndPoint(IPAddress.Any, 0);
private AsyncCallback recv = null;
        
public class State
{
public byte[] buffer = new byte[bufSize];
}

public void Server(string address, int port)
{
_socket.SetSocketOption(SocketOptionLevel.IP, SocketOptionName.ReuseAddress, true);
_socket.Bind(new IPEndPoint(IPAddress.Parse(address), port));
Receive();
}

private void Receive()
{
_ = _socket.BeginReceiveFrom(state.buffer, 0, bufSize, SocketFlags.None, ref epFrom, recv = (ar) =>
{
State so = (State)ar.AsyncState;
int bytes = _socket.EndReceiveFrom(ar, ref epFrom);
_socket.BeginReceiveFrom(so.buffer, 0, bufSize, SocketFlags.None, ref epFrom, recv, so);
String _recivedData = Encoding.ASCII.GetString(so.buffer, 0, bytes) ;
ParseRecivedData(_recivedData);
}, state);
}

private void ParseRecivedData(String _recivedData)
{
using (var context = new Context())
{
context.tbl_collector_Utilimarc.Add(new tbl_collector_Utilimarc
{
data = _recivedData,
port = "2996",
type = "SW_NMEA",
date_time = DateTime.Now
});

context.SaveChanges();
}
}
}


///////

[ { "deviceid": "STRING", "timestamp": "UNIX_TIMESTAMP", "statuscode": "INTEGER", "latitude": "FLOAT", "longitude": "FLOAT", "speedkph": "FLOAT", "heading": "FLOAT", "odometerkm": "FLOAT", "creationtime": "UNIX_TIMESTAMP", "gpsfixtype": "INTEGER", "hdop": "FLOAT", "satellitecount": "INTEGER", "batteryvolts": "FLOAT", "fuellevel": "FLOAT", "vbatteryvolts": "FLOAT", "brakegforce": "FLOAT", "acceleration": "FLOAT" }, { "deviceid": "STRING", "timestamp": "UNIX_TIMESTAMP", "statuscode": "INTEGER", "latitude": "FLOAT", "longitude": "FLOAT", "speedkph": "FLOAT", "heading": "FLOAT", "odometerkm": "FLOAT", "creationtime": "UNIX_TIMESTAMP", "gpsfixtype": "INTEGER", "hdop": "FLOAT", "satellitecount": "INTEGER", "batteryvolts": "FLOAT", "fuellevel": "FLOAT", "vbatteryvolts": "FLOAT", "brakegforce": "FLOAT", "acceleration": "FLOAT" } ] 


/////////


//new Thread(() =>
//{
//    Thread.CurrentThread.IsBackground = true;
//    Connect("192.168.1.70", "Hello I'm Device 1...");
//}).Start();

//new Thread(() =>
//{
//    Thread.CurrentThread.IsBackground = true;
//    Connect("192.168.1.70", "Hello I'm Device 2...");
//}).Start();

////////

static void Connect(String server, String message)
{
try
{
Int32 port = 13000;
TcpClient client = new TcpClient(server, port);

NetworkStream stream = client.GetStream();

int count = 0;
while (count++ < 3)
{
// Translate the Message into ASCII.
Byte[] data = System.Text.Encoding.ASCII.GetBytes(message);

// Send the message to the connected TcpServer. 
stream.Write(data, 0, data.Length);
Console.WriteLine("Sent: {0}", message);

// Bytes Array to receive Server Response.
data = new Byte[256];
String response = String.Empty;

// Read the Tcp Server Response Bytes.
Int32 bytes = stream.Read(data, 0, data.Length);
response = System.Text.Encoding.ASCII.GetString(data, 0, bytes);
Console.WriteLine("Received: {0}", response);

Thread.Sleep(2000);
}

stream.Close();
client.Close();
}
catch (Exception e)
{
Console.WriteLine("Exception: {0}", e);
}

Console.Read();

}

////

//TCPSocket s = new TCPSocket();
//s.Server("127.0.0.1", 2990);
//Console.ReadKey();


/////
//json parse

//string json1 = @"{a: 'a1',b: ['b1','b2']}";

//string json = @" { 'deviceid': 'STRING', 'timestamp': 'UNIX_TIMESTAMP', 'statuscode': 'INTEGER', 'latitude': 'FLOAT', 'longitude': 'FLOAT', 'speedkph': 'FLOAT', 'heading': 'FLOAT', 'odometerkm': 'FLOAT', 'creationtime': 'UNIX_TIMESTAMP', 'gpsfixtype': 'INTEGER', 'hdop': 'FLOAT', 'satellitecount': 'INTEGER', 'batteryvolts': 'FLOAT', 'fuellevel': 'FLOAT', 'vbatteryvolts': 'FLOAT', 'brakegforce': 'FLOAT', 'acceleration': 'FLOAT' } ";

//JObject o = JObject.Parse(json);
//Console.WriteLine(o.ToString());


//////

$$<UID>,<EV#>,<D>,<T>,<LT>,<LN>,<AL>,<SP>,<AC>,<DC>,<RP>,<HD>,<SV>,<HP>,<MI>,<MG>,<BV>,<CQ>,<GS>,<GT>,<FL>,<AX>,<A
Y>,<AZ>[,<SEQ>]##

///////

'deviceid': '270113185603503325', 'timestamp': '2020/03/24', 'statuscode': 0, 'latitude': '75148', 'longitude': 'FLOAT', 'speedkph': 'FLOAT', 'heading': 'FLOAT', 'odometerkm': 'FLOAT', 'creationtime': 'UNIX_TIMESTAMP', 'gpsfixtype': 'INTEGER', 'hdop': 'FLOAT', 'satellitecount': 'INTEGER', 'batteryvolts': 'FLOAT', 'fuellevel': 'FLOAT', 'vbatteryvolts': 'FLOAT', 'brakegforce': 'FLOAT', 'acceleration': 'FLOAT'



$$270113185603503325,6007,2020/03/24,13:23:01,33.75148,-84.38535,302,11.8,0.0,2.4,763,309,13,1.4,9599,0.0,13.5,31,1,0,45.6,-203,-39,-859##

//////


'deviceid': '270113185603503325', 'timestamp': '2020/03/24', 'statuscode': 0, 'latitude': '75148', 'longitude': 'FLOAT', 'speedkph': 'FLOAT', 'heading': 'FLOAT', 'odometerkm': 'FLOAT', 'creationtime': 'UNIX_TIMESTAMP', 'gpsfixtype': 'INTEGER', 'hdop': 'FLOAT', 'satellitecount': 'INTEGER', 'batteryvolts': 'FLOAT', 'fuellevel': 'FLOAT', 'vbatteryvolts': 'FLOAT', 'brakegforce': 'FLOAT', 'acceleration': 'FLOAT'



////////


//string arr = @" { 'deviceid': '270113185603503325', 'timestamp': '2020/03/24', 'statuscode': '0', 'latitude': '75148' } ";

//string outArr = "$<UID>,<EV#>,<D>,<T>,<LT>,<LN>,<AL>,<SP>,<AC>,<DC>,<RP>,<HD>,<SV>,<HP>,<MI>,<MG>,<BV>,<CQ>,<GS>,<GT>,<FL>,<AX>,<AY >,< AZ >[,< SEQ >]##";

//$$270113185603503325,6007,2020 / 03 / 24,13:23:01,33.75148,-84.38535,302,11.8,0.0,2.4,763,309,13,1.4,9599,0.0,13.5,31,1,0,45.6,-203,-39,-8
//59##


///


//string json = @" { 'deviceid': 'STRING', 'timestamp': 'UNIX_TIMESTAMP', 'statuscode': 'INTEGER', 'latitude': 'FLOAT', 'longitude': 'FLOAT', 'speedkph': 'FLOAT', 'heading': 'FLOAT', 'odometerkm': 'FLOAT', 'creationtime': 'UNIX_TIMESTAMP', 'gpsfixtype': 'INTEGER', 'hdop': 'FLOAT', 'satellitecount': 'INTEGER', 'batteryvolts': 'FLOAT', 'fuellevel': 'FLOAT', 'vbatteryvolts': 'FLOAT', 'brakegforce': 'FLOAT', 'acceleration': 'FLOAT' } ";

////////


$<UID>,<EV#>,<D>,    <T>,<LT>,<LN>,    <AL>,<SP>,<AC>,    <DC>,<RP>,<HD>,   <SV>,<HP>,<MI>,   <MG>,<BV>,<CQ>,  <GS>,<GT>,<FL>,  <AX>,<AY >,< AZ >  [,< SEQ >]

deviceid , EventCode ,UTCDate ,    UTCTime , latitude,longitude  ,   Altitude,Speedkph ,acceleration  ,    Deceleration ,RP,heading    ,  satellitecount,hdop,MileDriven ,    MG ,batteryvolts,signalStrength  ,  statuscode,lostLockTime,fuellevel   , AccelX,Accely,AccelZ, msgIndicator


270113185603503325,6007,2020 / 03 / 24,    13:23:01,33.75148,-84.38535,    302,11.8,0.0,                    2.4,763,309,  
13,1.4,9599,                   0.0,13.5,31,                               1,0,45. 6,                  -203,-39,-8,             59


//


,,,,,< LN>,<AL>,<SP>,<AC>,<DC>,<RP>,<HD>,<SV>,<HP>,<MI>,<MG>,<BV>,<CQ>,<GS>,<GT>,<FL>,<AX>,<AY >,< AZ >[,< SEQ >]

270113185603503325 < UID >,
6007 < EV#>
,2020 / 03 / 24<D>
,13:23:01 < T >,
33.75148 < LT >,-84.38535,302,11.8,0.0,2.4,763,309,13,1.4,9599,0.0,13.5,31,1,0,45.6,-203,-39,-8,59##


//string arr = @" [{ 'deviceid': '270113185603503325','EV#': '6007', 'timestamp': '2020/03/24', 'statuscode': '0', 'latitude': '75148' , 'longitude': '-84.38535', 'speedkph': '11.8', 'heading': 'FLOAT', 'odometerkm': 'FLOAT', 'creationtime': 'UNIX_TIMESTAMP', 'gpsfixtype': 'INTEGER', 'hdop': 'FLOAT', 'satellitecount': 'INTEGER', 'batteryvolts': 'FLOAT', 'fuellevel': 'FLOAT', 'vbatteryvolts': 'FLOAT', 'brakegforce': 'FLOAT', 'acceleration': 'FLOAT' }] ";
///////////////////////
///

'deviceid< UID >', 'timestamp' < D >, 'statuscode' < GS >, 'latitude' < LT >, 'longitude' < LN >, 'speedkph' < SP >, 'heading' < HD >, 'odometerkm' < MI >, 'hdop' < HP >, 'satellitecount' < SV >, 'batteryvolts' < BV >, 'fuellevel' < MG >,  'acceleration' < AC >,'brakegforce', 'creationtime', 'gpsfixtype', 'vbatteryvolts' , 

            
//string outArr = "$<T><AL>,<DC>,<RP>,<CQ>,<GT>,<FL>,<AX>,<AY >,< AZ >[,< SEQ >]##";

//string outArr = "$,,,,,,<AL>,<SP>,<AC>,<DC>,<RP>,<HD>,<SV>,<HP>,<MI>,<MG>,<BV>,<CQ>,<GS>,<GT>,<FL>,<AX>,<AY >,< AZ >[,< SEQ >]##";

//$$ <UID> - 270113185603503325,<EV#>-6007,<D>-2020 / 03 / 24,<T>-13:23:01,<LT>-33.75148,<LN>- -84.38535,302,11.8,0.0,2.4,763,309,13,1.4,9599,0.0,13.5,31,1,0,45.6,-203,-39,-8,59##


'deviceid< UID >' : '270113185603503325', 'timestamp' < D >: '2020/03/24', 'statuscode' < GS >: 0, 'latitude' < LT >: '75148', 'longitude' < LN >: 'FLOAT', 'speedkph' < SP >: 'FLOAT', 'heading' < HD >: 'FLOAT', 'odometerkm' < MI >: 'FLOAT', 'hdop' < HP >: 'FLOAT', 'satellitecount' < SV >: 'INTEGER', 'batteryvolts' < BV >: 'FLOAT', 'fuellevel' < MG >: 'FLOAT',  'acceleration' < AC >: 'FLOAT','brakegforce': 'FLOAT', 'creationtime': 'UNIX_TIMESTAMP', 'gpsfixtype': 'INTEGER', 'vbatteryvolts' : 'FLOAT'


'deviceid< UID >' : '270113185603503325', 'timestamp' < D >: '2020/03/24', 'statuscode' < GS >: 0, 'latitude' < LT >: '75148', 'longitude' < LN >: 'FLOAT', 'speedkph' < SP >: 'FLOAT', 'heading' < HD >: 'FLOAT', 'odometerkm' < MI >: 'FLOAT', 'creationtime': 'UNIX_TIMESTAMP', 'gpsfixtype': 'INTEGER', 'hdop' < HP >: 'FLOAT', 'satellitecount': 'INTEGER', 'batteryvolts': 'FLOAT', 'fuellevel' < MG >: 'FLOAT', 'vbatteryvolts' < BV >: 'FLOAT', 'brakegforce': 'FLOAT', 'acceleration' < AC >: 'FLOAT'


//string arr = @" [{ 'deviceid': '270113185603503325','EV#': '6007', 'timestamp': '2020/03/24', 'statuscode': '0', 'latitude': '75148' , 'longitude': 'FLOAT', 'speedkph': '11.8', 'heading': 'FLOAT', 'odometerkm': 'FLOAT', 'creationtime': 'UNIX_TIMESTAMP', 'gpsfixtype': 'INTEGER', 'hdop': 'FLOAT', 'satellitecount': 'INTEGER', 'batteryvolts': 'FLOAT', 'fuellevel': 'FLOAT', 'vbatteryvolts': 'FLOAT', 'brakegforce': 'FLOAT', 'acceleration': 'FLOAT' }] ";

string arr = @" [{  'odometerkm'<MI>: 'FLOAT', 'creationtime': 'UNIX_TIMESTAMP', 'gpsfixtype': 'INTEGER','batteryvolts': 'FLOAT', 'fuellevel<MG>': 'FLOAT', 'vbatteryvolts<BV>': 'FLOAT', 'brakegforce': 'FLOAT', }] ";

//string outArr = "$<AL>-302,<acceleration>-0,<DC>-0,<RP>-2,<MI>-13,<MG>-1.4,<BV>-9599,<CQ>-0.0,<GT>-31,<FL>-1,<AX>-0,<AY >-45.6,< AZ >-203[,< SEQ >-39]##";

//string outArr = "$<deviceid>270113185603503325,<EV#>6007,<UTCDate>-2020 / 03 / 24,<UTCTime>-13:23:01,<latitude>-33.75148,<longitude>- -84.38535,<AL>-302,<speedkph>-11.8,<AC>-0,<DC>-0,<RP>-2,<heading>-4,<satellitecount>-763,<hdop>-309,<MI>-13,<MG>-1.4,<BV>-9599,<CQ>-0.0,<statuscode>-13.5,<GT>-31,<FL>-1,<AX>-0,<AY >-45.6,< AZ >-203[,< SEQ >-39]##";

//$$,,,,.,.,,,,,,,,,,,,,,-8
//59##

//////

            
//dynamic o1 = parsedData[1];

//string outArr = "$" + o.deviceid + "," + o.EventCode + "," + o.UTCDate + "," + o.UTCTime + "," + o.latitude + "," + o.longitude + "," + o.Altitude + "," + o.speedkph + "," + o.acceleration + "," + o.Deceleration + "," + o.RP + "," + o.heading + "," + o.satellitecount + "," + o.hdop + "," + o.MileDriven + "," + o.MG + "," + o.batteryvolts + "," + o.signalStrength + "," + o.statuscode + "," + o.lostLockTime + "," + o.fuellevel + "," + o.AccelX + ","+ o.Accely + "," + o.AccelZ + "," + o.msgIndicator + "##";

///////////

                
//using (var context = new Context())
//{
//    context.tbl_collector_Utilimarc.Add(new tbl_collector_Utilimarc
//    {
//        data = data,
//        port = "2994",
//        type = "Utilimarc",
//        date_time = DateTime.Now
//    });

//    context.SaveChanges();

//////////
//}


//string outArr = "$<UID>,<EV#>,<D>,<T>,<LT>,<LN>,<AL>,<SP>,<AC>,<DC>,<RP>,<HD>,<SV>,<HP>,<MI>,<MG>,<BV>,<CQ>,<GS>,<GT>,<FL>,<AX>,<AY >,< AZ >[,< SEQ >]##";

//$$ 270113185603503325,6007,2020 / 03 / 24,13:23:01,33.75148,-84.38535,302,11.8,0.0,2.4,763,309,13,1.4,9599,0.0,13.5,31,1,0,45.6,-203,-39,-8
//59##


//////////


{"Unexpected character encountered while parsing value: c. Path '', line 0, position 0."}


Newtonsoft.Json.JsonReaderException: Unexpected character encountered while parsing value: l. Path '', line 0, position 0.

///

// var rootObj = JsonConvert.DeserializeObject<Object>(data);

//string address = stuff.Address.City;

//var jsonString = @"{""StaffID"":""S01"",""StaffRank"":""Manager""},{""StaffID"":""S02"",""StaffRank"":""Waiter""}";

//var list = JsonExtensions.FromDelimitedJson<RootObject>(new StringReader(jsonString)).ToList();

// dynamic jsonObj = JsonConvert.DeserializeObject(data);


// var objects = JObject.Parse(data);

///////



//dynamic stuff = JsonConvert.DeserializeObject(data);

dynamic name = stuff[0];
dynamic name1 = stuff[1];


//dynamic stuff = JsonConvert.DeserializeObject("[{'deviceid': '22','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '203', 'AccelZ': '8','msgIndicator': '59'},{'deviceid': '11','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '203', 'AccelZ': '8','msgIndicator': '59'}]");


//dynamic parsedData = JsonConvert.DeserializeObject(stuff);




////////

Ultimarc_TCP

tbl_collector_Utilimarc



////////


static void StartListener()
{
try
{

dynamic recivedData = "[{'deviceid': '270113185603503325','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763','heading': '309', 'satellitecount': '13', 'hdop': '1.4', 'MileDriven': '9599', 'MG': '0.0', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '-203','Accely': '-39',  'AccelZ': '8','msgIndicator': '59'},{'deviceid': '270113185603503325','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763','heading': '309', 'satellitecount': '13', 'hdop': '1.4', 'MileDriven': '9599', 'MG': '0.0', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '-203','Accely': '-39',  'AccelZ': '8','msgIndicator': '59'}]";

//dynamic parsedData = JsonConvert.DeserializeObject(arr);

//dynamic o = parsedData[0];
//dynamic o1 = parsedData[1];

//string outArr = "$" + o.deviceid + "," + o.EventCode + "," + o.UTCDate + "," + o.UTCTime + "," + o.latitude + "," + o.longitude + "," + o.Altitude + "," + o.speedkph + "," + o.acceleration + "," + o.Deceleration + "," + o.RP + "," + o.heading + "," + o.satellitecount + "," + o.hdop + "," + o.MileDriven + "," + o.MG + "," + o.batteryvolts + "," + o.signalStrength + "," + o.statuscode + "," + o.lostLockTime + "," + o.fuellevel + "," + o.AccelX + ","+ o.Accely + "," + o.AccelZ + "," + o.msgIndicator + "##";

//string outArr1 = "$" + o1.deviceid + "," + o1.EventCode + "," + o1.UTCDate + "," + o1.UTCTime + "," + o1.latitude + "," + o1.longitude + "," + o1.Altitude + "," + o1.speedkph + "," + o1.acceleration + "," + o1.Deceleration + "," + o1.RP + "," + o1.heading + "," + o1.satellitecount + "," + o1.hdop + "," + o1.MileDriven + "," + o1.MG + "," + o1.batteryvolts + "," + o1.signalStrength + "," + o1.statuscode + "," + o1.lostLockTime + "," + o1.fuellevel + "," + o1.AccelX + ","  + o1.Accely + "," + o1.AccelZ + "," + o1.msgIndicator + "##";

//Console.WriteLine("{0}\n{1}", outArr, outArr1);


using (var context = new Context())
{
context.tbl_collector_Utilimarc.Add(new tbl_collector_Utilimarc
{
data = recivedData,
port = "2994",
type = "Utilimarc",
date_time = DateTime.Now
});

context.SaveChanges();
}

}
catch (Exception e)
{
Console.WriteLine("Exception: {0}", e.ToString());
}
        

//string arr = @" [{ 'deviceid': '270113185603503325','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763','abc':'1' }]";

//string arr = "[{'deviceid': '270113185603503325','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '203', 'AccelZ': '8','msgIndicator': '59'}] ";

string arr = "[{ deviceid: '270113185603503325', EventCode: 6007, UTCDate: '2020/03/24',UTCTime: '13:23:01', latitude: '33.75148', longitude: '-84.38535' , Altitude: '302', speedkph: '11.8', acceleration: '0.0'}]";

/////////



//, 'heading': '309', 'satellitecount': '13', 'hdop': '1.4', 'MileDriven': '9599', 'MG': '0.0', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45.6', 'AccelX': '-203,', 'Accely': '-39', 'AccelZ': '-8', 'msgIndicator': '59'

//string arr = @" [{ 'deviceid': '270113185603503325','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763', 'heading': '309', 'satellitecount': '13', 'hdop': '1.4', 'MileDriven': '9599', 'MG': '0.0', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '-203', 'Accely': '-39', 'AccelZ': '-8', 'msgIndicator': '59' },{ 'deviceid': '270113185603503325','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763', 'heading': '309', 'satellitecount': '13', 'hdop': '1.4', 'MileDriven': '9599', 'MG': '0.0', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '-203', 'Accely': '-39', 'AccelZ': '-8', 'msgIndicator': '59' }] ";


/////////////


//dynamic recivedData = "[{'deviceid': '270113185603503325','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763','heading': '309', 'satellitecount': '13', 'hdop': '1.4', 'MileDriven': '9599', 'MG': '0.0', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '-203','Accely': '-39',  'AccelZ': '8','msgIndicator': '59'},{'deviceid': '270113185603503325','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763','heading': '309', 'satellitecount': '13', 'hdop': '1.4', 'MileDriven': '9599', 'MG': '0.0', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '-203','Accely': '-39',  'AccelZ': '8','msgIndicator': '59'}]";

//dynamic parsedData = JsonConvert.DeserializeObject(recivedData);

//dynamic o = parsedData[0];
//dynamic o1 = parsedData[1];

//string outArr = "$" + o.deviceid + "," + o.EventCode + "," + o.UTCDate + "," + o.UTCTime + "," + o.latitude + "," + o.longitude + "," + o.Altitude + "," + o.speedkph + "," + o.acceleration + "," + o.Deceleration + "," + o.RP + "," + o.heading + "," + o.satellitecount + "," + o.hdop + "," + o.MileDriven + "," + o.MG + "," + o.batteryvolts + "," + o.signalStrength + "," + o.statuscode + "," + o.lostLockTime + "," + o.fuellevel + "," + o.AccelX + ","+ o.Accely + "," + o.AccelZ + "," + o.msgIndicator + "##";

//string outArr1 = "$" + o1.deviceid + "," + o1.EventCode + "," + o1.UTCDate + "," + o1.UTCTime + "," + o1.latitude + "," + o1.longitude + "," + o1.Altitude + "," + o1.speedkph + "," + o1.acceleration + "," + o1.Deceleration + "," + o1.RP + "," + o1.heading + "," + o1.satellitecount + "," + o1.hdop + "," + o1.MileDriven + "," + o1.MG + "," + o1.batteryvolts + "," + o1.signalStrength + "," + o1.statuscode + "," + o1.lostLockTime + "," + o1.fuellevel + "," + o1.AccelX + ","  + o1.Accely + "," + o1.AccelZ + "," + o1.msgIndicator + "##";

//using (var context = new Context())
//{
//    context.tbl_collector_Utilimarc.Add(new tbl_collector_Utilimarc
//    {
//        data = recivedData,
//        port = "2994",
//        type = "Utilimarc",
//        date_time = DateTime.Now
//    });

//    context.SaveChanges();
//}


////
                
//static void Main(string[] args)
//{
//    //ServerMain myserver = new ServerMain("192.168.1.70", 2990);
//    //Console.WriteLine("Server Started...!");

//    try
//    {

//        TcpClient tcpclnt = new TcpClient();
//        Console.WriteLine("Connecting.....");

//        tcpclnt.Connect("192.168.1.70", 2990);
//        // use the ipaddress as in the server program

//        Console.WriteLine("Connected");
//        Console.Write("Enter the string to be transmitted : ");

//        String str = Console.ReadLine();
//        Stream stm = tcpclnt.GetStream();

//        ASCIIEncoding asen = new ASCIIEncoding();
//        byte[] ba = asen.GetBytes(str);
//        Console.WriteLine("Transmitting.....");

//        stm.Write(ba, 0, ba.Length);

//        byte[] bb = new byte[100];
//        int k = stm.Read(bb, 0, 100);

//        for (int i = 0; i < k; i++)
//            Console.Write(Convert.ToChar(bb[i]));

//        tcpclnt.Close();
//    }

//    catch (Exception e)
//    {
//        Console.WriteLine("Error..... " + e.StackTrace);
//    }
//}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

public static void Main()
{
try
{
IPAddress ipAd = IPAddress.Parse("192.168.1.70");
// use local m/c IP address, and 
// use the same in the client

/* Initializes the Listener */
TcpListener myList = new TcpListener(ipAd, 2990);

/* Start Listeneting at the specified port */
myList.Start();

Console.WriteLine("The server is running at port 8001...");
Console.WriteLine("The local End point is  :" +
myList.LocalEndpoint);
Console.WriteLine("Waiting for a connection.....");

Socket s = myList.AcceptSocket();
Console.WriteLine("Connection accepted from " + s.RemoteEndPoint);

byte[] b = new byte[100];
int k = s.Receive(b);
Console.WriteLine("Recieved...");
for (int i = 0; i < k; i++)
Console.Write(Convert.ToChar(b[i]));

ASCIIEncoding asen = new ASCIIEncoding();
s.Send(asen.GetBytes("The string was recieved by the server."));
Console.WriteLine("\nSent Acknowledgement");
/* clean up */
s.Close();
myList.Stop();

}
catch (Exception e)
{
Console.WriteLine("Error..... " + e.StackTrace);
}
}

//static void Main(string[] args)
//{
//    //ServerMain myserver = new ServerMain("192.168.1.70", 2990);
//    //Console.WriteLine("Server Started...!");

//    try
//    {

//        TcpClient tcpclnt = new TcpClient();
//        Console.WriteLine("Connecting.....");

//        tcpclnt.Connect("192.168.1.70", 2990);
//        // use the ipaddress as in the server program

//        Console.WriteLine("Connected");
//        Console.Write("Enter the string to be transmitted : ");

//        String str = Console.ReadLine();
//        Stream stm = tcpclnt.GetStream();

//        ASCIIEncoding asen = new ASCIIEncoding();
//        byte[] ba = asen.GetBytes(str);
//        Console.WriteLine("Transmitting.....");

//        stm.Write(ba, 0, ba.Length);

//        byte[] bb = new byte[100];
//        int k = stm.Read(bb, 0, 100);

//        for (int i = 0; i < k; i++)
//            Console.Write(Convert.ToChar(bb[i]));

//        tcpclnt.Close();
//    }

//    catch (Exception e)
//    {
//        Console.WriteLine("Error..... " + e.StackTrace);
//    }

//}
        
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

---------------------------
httpd.exe - Entry Point Not Found
---------------------------
The procedure entry point zval_ptr_dtor could not be located in the dynamic link library C:\xampp\php\ext\php_pdo_sqlsrv_74_ts_x64.dll. 
---------------------------
OK   
---------------------------



//////


//string arr = @"{[{'Odometer':0.0,'GpsFixType':0,'BatteryVolts':4.102,'VBatteryVolts':14.652000000000001,'BrakeForce':0.0}]}";



string outArr1 = "$" + events.DeviceId + ",4001," + events.Timestamp + "," + events.CreationTime + "," + events.Latitude + "," + events.Longitude + ",<AL>," + events.Speed + "," + events.Acceleration + ",<DC>,<RP>," + events.Heading + "," + events.SatelliteCount + "," + events.Hdop + ",<MI>,<MG>," + events.BatteryVolts + ",<CQ>," + events.StatusCode + ",<GT>," + events.FuelLevel + ",<AX>,<AY >,< AZ >[,< SEQ >]##";

//////////


//DateTime convertedDate = DateTime.SpecifyKind(
//DateTime.Parse("1586252998"),
//DateTimeKind.Utc);

//var kind = convertedDate.Kind; // will equal DateTimeKind.Utc


//System.DateTime dtDateTime = new DateTime(1970, 1, 1, 0, 0, 0, 0, "1586252998");
//dtDateTime = dtDateTime.AddMilliseconds(unixTimeStamp);
                
////

                
//convert date time 

//string arr = @"{'Events':

///////


//System.DateTime dtDateTime = new DateTime(1970, 1, 1, 0, 0, 0, 0, System.DateTimeKind.Utc);
//dtDateTime = dtDateTime.AddMilliseconds(unixTimeStamp);

//var dt = new DateTime(1970, 1, 1, 0, 0, 0, 0).AddSeconds(Math.Round(unixTimeStamp / 1000d)).ToLocalTime();
//Console.WriteLine(dt);

//1586252998
//1372061224000
var dt = new DateTime(1970, 1, 1, 0, 0, 0, 0).AddSeconds(Math.Round(1372061224000 / 1000d)).ToLocalTime();


dateTime.ToString("dd/M/yyyy", CultureInfo.InvariantCulture);
return dt;



///////////


AL,DC,RP,MG,CQ,GT,AX,AY,AZ,SEQ

/////

$$164800509,6031,2019/10/11,12:16:49,32.817406,-83.6727,146.4,1,1.7,0,0,0,0,84934,01,0,0,0,0,787,1FVACXBS4ADAP4557##
5:16

like this

///////////

Odometer MI                          AL
GpsFixType                          DC
VBatteryVolts                      RP
BrakeForce                         
MG
CQ
GT
AX
AY
AZ
SEQ

///////
//string arr = @" [{ 'deviceid': '270113185603503325','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763','abc':'1' }]";

            //string arr = "[{'deviceid': '270113185603503325','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '203', 'AccelZ': '8','msgIndicator': '59'}] ";
            //string arr = "[{ deviceid: '270113185603503325', EventCode: 6007, UTCDate: '2020/03/24',UTCTime: '13:23:01', latitude: '33.75148', longitude: '-84.38535' , Altitude: '302', speedkph: '11.8', acceleration: '0.0'}]";

            //, 'heading': '309', 'satellitecount': '13', 'hdop': '1.4', 'MileDriven': '9599', 'MG': '0.0', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45.6', 'AccelX': '-203,', 'Accely': '-39', 'AccelZ': '-8', 'msgIndicator': '59'

            //string arr1= "[{ 'deviceid': '22','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '203', 'AccelZ': '8','msgIndicator': '59'},{ 'deviceid': '11','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '203', 'AccelZ': '8','msgIndicator': '59'}]";

            //string arr = "[{'deviceid': '22','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '203', 'AccelZ': '8','msgIndicator': '59'},{'deviceid': '11','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '203', 'AccelZ': '8','msgIndicator': '59'}]";

            //dynamic recivedData = "[{'deviceid': '270113185603503325','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763','heading': '309', 'satellitecount': '13', 'hdop': '1.4', 'MileDriven': '9599', 'MG': '0.0', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '-203','Accely': '-39',  'AccelZ': '8','msgIndicator': '59'},{'deviceid': '270113185603503325','EventCode': '6007', 'UTCDate': '2020/03/24','UTCTime': '13:23:01', 'latitude': '33.75148', 'longitude': '-84.38535' , 'Altitude': '302', 'speedkph': '11.8', 'acceleration': '0.0', 'Deceleration': '2.4', 'RP': '763','heading': '309', 'satellitecount': '13', 'hdop': '1.4', 'MileDriven': '9599', 'MG': '0.0', 'batteryvolts': '13.5', 'signalStrength': '31', 'statuscode': '1', 'lostLockTime': '0', 'fuellevel': '45. 6', 'AccelX': '-203','Accely': '-39',  'AccelZ': '8','msgIndicator': '59'}]";



////////////////////////////////////////////
////////////////////////////////////////////
////////////////////////////////////////////
////////////////////////////////////////////


        if (validator()->fails()) {
            // echo 'That email address is already registered. You sure you don\'t have an account?';

            return Redirect::back()->withError('That email address is already registered');

        }
        else {
           

        }

//////////////


    // echo 'That email address is already registered. You sure you don\'t have an account?';

    // return redirect('post/create')
    //                     ->withErrors($validator)
    //                     ->withInput();

    

php artisan clear-compiled 
php artisan optimize:clear
composer dump-autoload
php artisan optimize

//////////////

 try {
            
            if(Admin::create([
                'name' => $requestFields['name'],
                'email' => $requestFields['email'],
                'password' => Hash::make($requestFields['password']),
            ]))
            {
                return redirect('/admin/login');
                
            }

        } catch (Throwable $exception) {

            dd($exception);
           return Redirect::back()->withError($exception->getMessage())->withInput();
           // return back()->withError($exception->getMessage())->withInput();
        }
//////////////

    //Validator::make($request->all(), ['email' => 'unique:users,email']);

    //$validator = validator($request->all());

// dd((typeof)$exception);
        // if (!empty($exception) && $exception instanceof FormValidationException) {
        //     return redirect()->back()->withErrors($response->exception->form->getErrors())->withInput();
        //   }

       //return Redirect::back()->withError(response()->json(['message' => $e->getMessage()]))->withInput();
        
       //return response()->json(['message' => $e->getMessage()]);

////////////

check auth on dashboard

        // return 'created';

        // return Salpt::create([
        //     'name' => '1',
        //     'email' => '2']);
            
        //     return User::create([
        //     'name' => $data['name'],
        //     'email' => $data['email'],
        //     'password' => Hash::make($data['password']),
        // ]);

        // $table->integer('salesid', true);
		// 	$table->integer('groupid')->nullable();
		// 	$table->string('loginid', 20);
		// 	$table->string('passwd', 40);
		// 	$table->string('firstname', 50);
		// 	$table->string('lastname', 50)->index('lastname');
		// 	$table->string('spaddress', 100)->nullable();
		// 	$table->string('spaddr2', 40)->nullable();
		// 	$table->string('spcity', 40)->nullable();
		// 	$table->string('spstate', 2)->nullable();
		// 	$table->string('sppostcode', 15)->nullable();
		// 	$table->string('spphone', 30)->nullable();
		// 	$table->string('spfax', 30)->nullable();
		// 	$table->integer('spcntry')->nullable();
		// 	$table->string('reachmeat', 100)->nullable();
		// 	$table->string('reachmeaddress', 100)->nullable();
		// 	$table->string('reachmeaddr2', 40)->nullable();
		// 	$table->string('reachmecity', 40)->nullable();
		// 	$table->string('reachmestate', 2)->nullable();
		// 	$table->string('reachmepostcode', 15)->nullable();
		// 	$table->string('reachmephone', 30)->nullable();
		// 	$table->string('reachmefax', 30)->nullable();
		// 	$table->integer('reachmecntry')->nullable();
		// 	$table->string('sptitle', 100)->nullable();
		// 	$table->boolean('spactive');
		// 	$table->integer('language');
		// 	$table->integer('bookingpartnerid')->nullable();
		// 	$table->string('emailaccount', 100)->nullable();
		// 	$table->string('emailpasswd', 10)->nullable();
		// 	$table->string('emailaddress', 100)->nullable();
		// 	$table->string('pmsalias', 10)->nullable();
		// 	$table->string('yieldalias', 10)->nullable();


////////////////////

SQLSTATE[42S22]: [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Invalid column name 'updated_at'. (SQL: insert into [users] ([name], [email], [password], [updated_at], [created_at]) values (neeraj verma, mail.nrj@gmail.com, $2y$10$dHa6GPX6AXIrqhZkH/5BRO5ZJ32R8skmiDnIxSPiHA7RUujsFHef2, 2020-04-25 10:49:40.787, 2020-04-25 10:49:40.787))

//////

add single table to migration

php artisan migrate:refresh --path=/database/migrations/2020_04_25_130927_create_products_table.php
//////////////

return Salpt::create(['salesid'=>12, 'groupid'=>2,'loginid'=>'paulv','passwd'=>'esp','firstname'=>'','lastname'=>'','spaddress'=>NULL ,'spaddr2'=>NULL,'spcity'=>NULL,'spstate'=>NULL,'sppostcode'=>NULL,'spphone'=>'(936)-825-7175','spfax'=>'(936)-825-8495','spcntry'=>'0','reachmeat'=>NULL,'reachmeaddress'=>NULL,'reachmeaddr2'=>NULL,'reachmecity'=>NULL, 'reachmestate'=>NULL,'reachmepostcode'=>NULL,'reachmephone'=>'(936)-825-7175','reachmefax'=>'(936)-825-8495','reachmecntry'=>0,'sptitle'=>'Assistant Program Director','spactive'=>0,'language'=>1,'bookingpartnerid'=>0,'emailaccount'=>NULL,'emailpasswd'=>NULL, 'emailaddress'=>'paulv@campallen.org','pmsalias'=>NULL,'yieldalias'=>NULL]);

///////////
    
        // Salpt::create(['salesid' => 12',''loginid' => '1'',''loginid' => '1'',''loginid' => '1'',''loginid' => '1'',''loginid' => '1'',''loginid' => '1'',''loginid' => '1'',''loginid' => '1'',''loginid' => '1'',''loginid' => '1'',''loginid' => '1']);

        // salesid-12 groupid-2loginid-paulvpasswd-espfirstname-Paullastname-VickeryspaddressNULL spaddr2 NULLspcity NULLspstate NULLsppostcode NULLspphone -(936) 825 - 7175spfax -(936) 825 - 8495spcntry-0reachmeat NULLreachmeaddress NULLreachmeaddr2 NULLreachmecityNULL reachmestate NULLreachmepostcode NULLreachmephone -(936) 825 - 7175reachmefax -(936) 825 - 8495reachmecntry 0sptitle -Assistant Program Directorspactive 0language 1bookingpartnerid 0emailaccount NULLemailpasswdNULL emailaddress paulv@campallen.orgpmsalias NULLyieldalias NULL
     //////////////       
$results = DB::table('salpt')->get();

        DB::table('users')->insert(
            ['email' => 'john@example.com', 'votes' => 0]
        );

//////////////

  if( !$("#FunctInitDate").val() || $("#FunctInitDate").val() == "" || $("#FunctInitDate").val() == undefined) { alert("initial date not set"); return; } if( !$("#EdFunc_ConfirmDate").val() || $("#EdFunc_ConfirmDate").val() == "" || $("#EdFunc_ConfirmDate").val() == undefined) { alert("initial date not set"); return; } if ( !$("#EdFunc_ContactDate").val() || $("#EdFunc_ContactDate").val() == "" || $("#EdFunc_ContactDate").val() == undefined ) { alert("initial date not set"); return; } 
  
  if ( !$("#EdFunc_Setup").val() || $("#EdFunc_Setup").val() == "" || $("#EdFunc_Setup").val() == undefined ) { alert("setUp not defined"); return; }

  if($("#EdFunc_Status").val()== "" || $("#EdFunc_Status").val() == undefined  || $("#EdFunc_Status").val()== "Select Status")
  {
    alert("Please Select Status"); return; 
  }
  
  if (!$("#EdFunc_Exp").val()) { alert("Exp Value not set"); return; } if (!$("#EdFunc_Set").val()) { alert("Set Value not set"); return; } if (!$("#EdFunc_Gtd").val()) { alert("Gtd Value not set"); return; } if (!$("#EdFunc_SetupType").val()) { alert("SetupType not set"); return; } if (!$("#EdFunc_Salesperson").val()) { alert("SalesPerson not set"); return; } if (!$("#EdFunc_Date").val()) { alert("Function date not set"); return; } if (!$("#EdFunc_Status").val()) { alert("Status not set"); return; } if ($("#EdFunc_RightList").find("div").length == 0) { alert("please select a Room"); return; } if (!$("#EdFunc_RentType").val()) { alert("please Enter Rent type Value"); return; } 

  console.log( $("#NBMdls_Contactperson :selected").val())
  if (!$("#NBMdls_Contactperson :selected").val()) { alert("please select Contact Person"); return; } 
  if ($("#EdFunc_Salesperson").val()=='Select Salesperson') { alert("SalesPerson not set"); return; }

  ////////

  var Save_Starttime = $("#EdFunc_StartTime").val();
  var Save_Endtime = $("#EdFunc_EndTime").val();
  var Timeval = Save_Starttime.split(":");
  var hours = Timeval[0];
  var minutes = Timeval[1];
  var ampm = hours >= 12 ? "pm" : "am";
  var valSave_Starttime = Save_Starttime + ampm;
  var valSave_Endtime = Save_Endtime + ampm;

  if (valSave_Starttime == valSave_Endtime) {
    alert("Start time and End time can not be same.");
    return false;
  } else if (valSave_Starttime > valSave_Endtime) {
    alert("End time should not smaller than start time.");
    return false;
  }

  var starttime = $("[name=EdFunc_StartTime]").val();
  var endtime = $("[name=EdFunc_EndTime]").val();

  var startmin = starttime.charAt(3) + starttime.charAt(4) < 30 ? ":00" : ":30";
  var endmin = endtime.charAt(3) + endtime.charAt(4) < 30 ? ":00" : ":30";

  starttime = starttime.split(":")[0];
  endtime = endtime.split(":")[0];

  starttime = starttime + startmin + ":00";
  endtime = endtime + endmin + ":00";

  ////////

  if(!fn_FunctionID)
  {

    console.log(fn_evtid)
    var fn_Exists=false;

    if (fn_evtid)
      {
        $("#EdFunc_RightList div").each(function() {

          var fnCount=fnExists($("#EdFunc_Funtion :selected").text(),yyyymmdd($("[name=EdFunc_Date]").val()),starttime,endtime,$(this).attr("id"),$("[name=EdFunc_Setup]").val(),$("[name=EdFunc_KnckDwn]").val())
          console.log(fnCount)
            if(fnCount>0)
            {
              alert('fn exists in this slot')
              fn_Exists=true;
              return ;
            }
      
        })

    if(!fn_Exists) return;
      var insertFunctionOut = insertFunction(fn_evtid,starttime,endtime) ;

      if (!insertFunctionOut.includes("error"))
      {
        var updateEventStatusQuery="update EVENT set EvtStatus = '" + $("[name=EdFunc_Status]").val() + "' where EvtID =" + fn_evtid + ";"
      }

      var updateEventStatusOut = CRUD(updateEventStatusQuery);

      if (!updateEventStatusOut.includes("error"))
          {
            var functid = JSON.parse(insertFunctionOut)[0].FunctID; 

            alloteRooms(functid)
            
          }

      } 
      else { 

      var mrktseg = $("#EdFunc_Selection").val() == "All" ? "1" : $("#EdFunc_Selection").val(); 
      var setuptime = $("[name=EdFunc_Setup]").val() == null ? "0" : $("[name=EdFunc_Setup]").val();
      var knockdowntime = $("[name=EdFunc_KnckDwn]").val() == null ? "0" : $("[name=EdFunc_KnckDwn]").val();

      var insertEventQuery = "INSERT INTO event([custid],[contactid],[reservationid] ,[spid],[evtname],[evtstart],[evtend],[evtstatus],[confdate],[evtpaymentmethod],[frequency],[referralsource],[mrktseg],[postas],[loudgroup],[donotpost],[notesexist],[cateringsalesid],[cateringcontact],[contractsent],[contractrecd],[contractdue],[billingcustid],[monitoroverride],[taxexempt],[yieldalias],[matterid],[eventemailsent],[sourceevtid],[taxexemptdetail],[EvtInitDate],[EvtCutoffDate]) values('" + sessionStorage.getItem("custmrId") + "','" + $("#NBMdls_Contactperson :selected").val() + "',0,'" + $("[name=EdFunc_Salesperson]").val() + "','" + $("#NBMdls_Bookingname").val() + "','" + yyyymmdd($("#EdFunc_Date").val()) + "','" + yyyymmdd($("#EdFunc_Date").val()) + "','" + $("#EdFunc_Status").val() + "',CAST(GETDATE() AS DATE),0,0,0,(select top 1 mrktid from mrkt),0,0,0,0,0,0,CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'" + sessionStorage.getItem("custmrId") + "',0,0,0,0,0,0,'" + sessionStorage.getItem("custmrId") + "',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE));"; 
            
      console.log(insertEventQuery)

      var insertEventOut = CRUD(insertEventQuery); 
      
      if (!insertEventOut.includes("error")) 
      {
        var evtId="(select max(evtid) from event)";

        var fn_Exists=false;
        $("#EdFunc_RightList div").each(function() {

          var fnCount=fnExists($("#EdFunc_Funtion :selected").text(),yyyymmdd($("[name=EdFunc_Date]").val()),starttime,endtime,$(this).attr("id"),$("[name=EdFunc_Setup]").val(),$("[name=EdFunc_KnckDwn]").val())
          console.log(fnCount)

            if(fnCount>0)
            {
              alert('fn exists in this slot')
              fn_Exists=true;
              return ;
            }
      
        })

        if(!fn_Exists) return; 

        var insertEventFunctOut = insertFunction(evtId,starttime,endtime); 

        if (!insertEventFunctOut.includes("error")) 
        {
          var functid = JSON.parse(insertEventFunctOut)[0].FunctID;
          
          alloteRooms(functid)

        }
    
      } 

  } 

  console.log($('#FunctionModal').attr('prevscreen'))
  if($('#FunctionModal').attr('prevscreen')=='av')
  {
    FunctionRooms($("#AV_View").val(),$("#AV_Section").val(), $('#AV_Show').val(),yyyymmdd($("#EdFunc_Date").val()))
  }

  $("#FunctionNewBkngId").val("0");
  $("#FunctionModal").modal("hide");
  $("#BM_AutoTraces").modal("hide");

  return;

  }

  // $.ajax({
  //   type: 'post',
  //   op:'updateFunction',
  //   async:false,
  //   url: '../Booking/ajax/function.php',
  //   data: $('#formFunctionModal').serialize(),
  //   success: function (res) {
      
  //     console.log(res)
  //   }
  // });

  updateFunctionQuery = "update FUNCT set SPID = '" + $("[name=EdFunc_Salesperson]").val() + "',FunctName = '" + $("#EdFunc_Funtion :selected").text() + "',OffSitelocation = '',functactnumppl = '" + $("[name=EdFunc_Set]").val() + "',FunctGtdNumPpl = '" + $("[name=EdFunc_Gtd]").val() + "',SetupType = '" + parseInt($("[name=EdFunc_SetupType]").val()) + "',FunctInitDate = '" + yyyymmdd($("[name=FunctInitDate]").val()) + "',FunctConfDate = '" + yyyymmdd($("[name=EdFunc_ConfirmDate]").val()) + "',TimeStat = '',StartDate = '" + yyyymmdd($("[name=EdFunc_Date]").val()) + "',StartTime = '" + starttime + "',EndTime = '" + endtime + "' ,startcol='" + parseInt(KVtime["" + starttime + ""]) + "' ,endcol='" + KVtime["" + endtime + ""] + "' ,RentType = '" + $("[name=EdFunc_RentType]").val() + "',SetupTime = '" + ($("[name=EdFunc_Setup]").val() ? $("[name=EdFunc_Setup]").val() : 0) + "',KnockDownTime = '" + ($("[name=EdFunc_KnckDwn]").val() ? $("[name=EdFunc_KnckDwn]").val() : 0) + "',OnSiteContact = '" + $("[name=EdFunc_SiteContact]").val() + "',UnMovable = '',PostFunctAs = '" + $("[name=EdFunc_Post]").val() + "',alteredby=" + $("[name=EdFunc_SiteContact]").val() + " OUTPUT Inserted.FunctID where FunctID = '" + fn_FunctionID + "';";

  var updateFunctionOut = CRUD(updateFunctionQuery);

  if(updateFunctionOut)
  {
    var updateEventQuery="update EVENT set EvtStatus = '" + $("[name=EdFunc_Status]").val() + "' where EvtID =" + fn_evtid + ";"

    var updateEventOut = CRUD(updateEventQuery);

    if(updateEventOut)
    {
      alloteRooms(fn_FunctionID)
    }

  }



//////////////


        // $end_time = DateTime::createFromFormat('h:i:s', $fnExistRow->endtime);  
        // $exstStart = DateTime::createFromFormat('h:i:s', $fnExistRow->exstStart);
        //$exstEnd = DateTime::createFromFormat('h:i:s', $fnExistRow->exstEnd); 
    

        // [starttime] => 04:00:00
        // [endtime] => 16:30:00
        // [exstStart] => 13:00
        // [exstEnd] => 03:00

        
        // echo ($start_time) ;
        // echo $end_time;

//////////////

   // echo json_encode(['Status'=>'err','msg'=>$exstStart]);
   // return;
   
   //$str=$exstStart.''.$exstEnd.''.$start_time.''.$end_time;

   // echo json_encode(['Status'=>'err','msg'=>$exstStart->format('H:i')]); //13:00
   // echo json_encode(['Status'=>'err','msg'=>$exstEnd->format('H:i')]); //15:30
   // echo json_encode(['Status'=>'err','msg'=>$start_time->format('H:i')]); //04:00
   // echo json_encode(['Status'=>'err','msg'=>$end_time->format('H:i')]); //16:30
   // echo json_encode(['Status'=>'err','msg'=>($exstStart < $start_time  && $start_time < $exstEnd)]); //16:30
   // return;

//////////////////


 //(04:00:00)----------(13:00)<-------> (03:00)---------(16:30:00)
 //[starttime]--------[exstStart]<--> [exstEnd]------ [endtime]

//  echo json_encode(['Status'=>'err','msg'=>$exstStart->format('H:i')]);
//  echo json_encode(['Status'=>'err','msg'=>$exstEnd->format('H:i')]);

//////////////

    // echo ($exstStart->format('H:i').' '.$exstEnd->format('H:i').' '.$start_time->format('H:i'));
    // echo ($exstStart < $start_time);
    // echo "\n";
    //echo json_encode(['Status'=>'err','msg'=>$start_time->format('H:i')]);
    
//////////////  

        // $start_time =DateTime::createFromFormat('h:i:s', $fnExistRow->starttime);

//////////////  


    // $fnExistQuery = "select starttime,endtime,exstStart, exstEnd from( select funct.functid ,convert(char(5), DATEADD(MINUTE, -(setuptime*60), CASE WHEN DATEPART(MINUTE,starttime)= 15 THEN DATEADD(MINUTE, -15, starttime) WHEN DATEPART(MINUTE,starttime)= 45 THEN DATEADD(MINUTE, -15, starttime) ELSE starttime END ) , 108) as exstStart,convert(char(5), DATEADD(MINUTE, -(setuptime*60), CASE WHEN DATEPART(MINUTE,endtime)= 15 THEN DATEADD(MINUTE, -15, endtime) WHEN DATEPART(MINUTE,endtime)= 45 THEN DATEADD(MINUTE, -15, endtime) ELSE endtime END ) , 108) as exstEnd ,CONVERT(VARCHAR(8),DATEADD(MINUTE, -((".$_POST["EdFunc_Setup"].")*60), '".$starttime."'),108)  starttime ,CONVERT(VARCHAR(8),DATEADD(MINUTE, ((".$_POST["EdFunc_KnckDwn"].")*60), '".$endtime."'),108)  endtime  from funct  left join TSLTT on TSLTT.FunctID = funct.functid where functname='".$_POST["funcName"] ."' and startdate='".$_POST["EdFunc_Date"]. "' and frid='".$arr->frid."' ) x ";
    
    //  foreach($conn->query($fnExistQuery)->fetchAll(PDO::FETCH_OBJ) as $fnExistRow)
    //  { 
    //      $start_time = new DateTime($fnExistRow->starttime); 
    //      $end_time = new DateTime($fnExistRow->endtime);
    //      $exstStart = new DateTime($fnExistRow->exstStart);
    //      $exstEnd = new DateTime($fnExistRow->exstEnd); 
    
    //     if($exstStart>$exstEnd) {$exstEnd->modify("+750 minutes");}
   
    //     while ($start_time <= $end_time) {
    //         if (($exstStart <= $start_time  && $start_time <= $exstEnd))
    //         {
    //             echo json_encode(['Status'=>'err','msg'=>"Function Exist in time slot"]);
    //             return;
    //         }
    //         $start_time->add(new DateInterval('PT30M'));
    //     }

    //  } 


///////////////////////


    " . $evtId . "," .$_POST["name=EdFunc_Salesperson"] . ",'" .$_POST["funcname"]. "','0'," .$_POST["EdFunc_Set"] . ",'" . yyyymmdd($_POST["FunctInitDate"]) . "','" . yyyymmdd($_POST["EdFunc_ContactDate"]) . "','" . yyyymmdd($_POST["name=EdFunc_ConfirmDate"]) . "','0','" .  yyyymmdd($_POST["name=EdFunc_Date"]) . "','" . $starttime . "','" . $endtime . "','" . $KVtime["" . $starttime . ""] . "','" . $KVtime[" . $endtime . "] . "','" .$_POST["EdFunc_RentType"] . "',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'" .$_POST["EdFunc_Setup"] . "','" .$_POST["EdFunc_KnckDwn"] . "','" .$_POST["EdFunc_SiteContact"] . "','0','0','0','0'," .$_POST["EdFunc_SiteContact"] . ",CAST(GETDATE() AS DATE),'0','0','0','" .$_POST["EdFunc_Post"] . "','0','0','0',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'0','0','0','0')";


    // $insertFnQry = "INSERT INTO funct(evtid,spid,functname,offsitelocation,functactnumppl,functgtdnumppl,functexpnumppl,setuptype,functinitdate,functcontactdate,functconfdate,timestat,startdate,starttime,endtime,startcol,endcol,renttype,contractsent,contractreceived,setuptime,knockdowntime,onsitecontact,numberset,actualized,unmovable,functionaltered,alteredby,alteredtimestamp,notesexist,roomnightcreated,billinggroup,postfunctas,exhibitcustid,expoparentid,isexpo,delivertime,pickuptime,functemailsent,isweb,sourcefunctid,rlsID) OUTPUT Inserted.FunctID VALUES(" . $evtId . "," .$_POST["name=EdFunc_Salesperson"] . ",'" .$_POST["funcname"]. "','0'," .$_POST["EdFunc_Set"] . " ," .$_POST["EdFunc_Gtd"] . " ," .$_POST["EdFunc_Exp"] . "," .$_POST["EdFunc_Setup"] . ",'" . yyyymmdd($_POST["FunctInitDate"]) . "','" . yyyymmdd($_POST["EdFunc_ContactDate"]) . "','" . yyyymmdd($_POST["name=EdFunc_ConfirmDate"]) . "','0','" .  yyyymmdd($_POST["name=EdFunc_Date"]) . "','" . $starttime . "','" . $endtime . "','" . $KVtime["" . $starttime . ""] . "','" . $KVtime[" . $endtime . "] . "','" .$_POST["EdFunc_RentType"] . "',now(),now(),'" .$_POST["EdFunc_Setup"] . "','" .$_POST["EdFunc_KnckDwn"] . "','" .$_POST["EdFunc_SiteContact"] . "','0','0','0','0'," .$_POST["EdFunc_SiteContact"] . ",now(),'0','0','0','" .$_POST["EdFunc_Post"] . "','0','0','0',now(),now(),'0','0','0','0')";

/////////////////


    // VALUES(19900,12,,0,1,1,1,,00:00,00:00,00:00,0,00:00,04:00,04:30,,,4,CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),0,0,3,0,0,0,0,,,,0,0,,0,0,0,CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),0,0,0,0)

    // VALUES((select max(evtid) from event),1,'Meeting','0',1 ,1 ,1,0,'2019-08-06','2019-08-06','2019-08-06','0','2019-08-06','04:30:00','05:30:00','11','13','4',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'0','0','1','0','0','0','0',1,CAST(GETDATE() AS DATE),'0','0','0',
    
    // '','0','0','0',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'0','0','0','0');

///////////




 
    if(($_POST["fn_FunctionID"]==undefined) || (is_null($_POST["fn_FunctionID"])))
    {
       
        if($_POST["fn_evtid"]==undefined || $_POST["fn_evtid"]=='null')
        {
            $mrktseg = $_POST["EdFunc_Selection"] == "All" ? "1" : $_POST["EdFunc_Selection"]; 
            $setuptime = $_POST["EdFunc_Setup"] == null ? "0" : $_POST["EdFunc_Setup"];
            $knockdowntime = $_POST["EdFunc_KnckDwn"] == null ? "0" : $_POST["EdFunc_KnckDwn"];
      
            $custmrId =  $_POST["custmrId"] ;
            $EdFunc_Date=yyyymmdd($_POST["EdFunc_Date"]);

           $insertEventQuery = "INSERT INTO event(custid,contactid,reservationid,spid,evtname,evtstart,evtend,evtstatus,confdate,evtpaymentmethod,frequency,referralsource,mrktseg,postas,loudgroup,donotpost,notesexist,cateringsalesid,cateringcontact,contractsent,contractrecd,contractdue,billingcustid,monitoroverride,taxexempt,yieldalias,matterid,eventemailsent,sourceevtid,taxexemptdetail,EvtInitDate,EvtCutoffDate) OUTPUT Inserted.evtid  values('" .$custmrId  ."','" .$_POST["NBMdls_Contactperson :selected"] ."',0,'" .$_POST["EdFunc_Salesperson"] ."','" .$_POST["NBMdls_Bookingname"] ."','" .$EdFunc_Date ."','" .$EdFunc_Date ."','" .$_POST["EdFunc_Status"] ."',CAST(GETDATE() AS DATE),0,0,0,(select top 1 mrktid from mrkt),0,0,0,0,0,0,CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'" .$custmrId ."',0,0,0,0,0,0,'" .$custmrId  ."',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE));"; 
            
            $insertEventRes = $bkgConnection->query($insertEventQuery)->fetchAll(PDO::FETCH_OBJ)[0];

            if($insertEventRes->evtid) 
            {
                $insertFunctionRes= insertFunction($conn,$insertEventRes->evtid,$starttime,$endtime);
                echo $insertFunctionRes;

                if($insertFunctionRes=='Success')
                {
                    echo json_encode(['Status'=>'success','data'=>'Function Created']);
                    return;
                }
            } 

        }
        else
        {  
            $insertFunctionRes= insertFunction($conn,$_POST["fn_evtid"],$starttime,$endtime);
            if($insertFunctionRes=='Success')
            {
                echo json_encode(['Status'=>'success','data'=>'Function Created']);
                return;
            }
        }
    }
    else
    {  
        $updateFunctionQuery = "update FUNCT set SPID = '".$_POST["EdFunc_Salesperson"]. "',FunctName = '" . $_POST["funcName"]."',OffSitelocation = '',functactnumppl = '".$_POST["EdFunc_Set"]. "',FunctGtdNumPpl = '".$_POST["EdFunc_Gtd"]. "',SetupType = '" . ($_POST["EdFunc_SetupType"]) . "',FunctInitDate = '" . yyyymmdd($_POST["FunctInitDate"]) . "',FunctConfDate = '" . yyyymmdd($_POST["EdFunc_ConfirmDate"]) . "',TimeStat = '',StartDate = '" . yyyymmdd($_POST["EdFunc_Date"]) . "',StartTime = '" . $starttime . "',EndTime = '" . $endtime . "' ,startcol='" . slotCols("" . $starttime . "") . "' ,endcol='" . slotCols("" . $endtime . "") . "' ,RentType = '".$_POST["EdFunc_RentType"]. "',SetupTime = '" . ($_POST["EdFunc_Setup"] ? $_POST["EdFunc_Setup"] : 0) . "',KnockDownTime = '" . $_POST["EdFunc_KnckDwn"] . "',OnSiteContact = '".$_POST["EdFunc_SiteContact"]. "',UnMovable = '',PostFunctAs = '".$_POST["EdFunc_Post"]. "',alteredby=".$_POST["EdFunc_SiteContact"]. " OUTPUT Inserted.functid where FunctID = '" . $_POST["fn_FunctionID"] . "';";
 
        echo $updateFunctionQuery;
        $updateFnOut = $conn->query($updateFunctionQuery)->fetchAll(PDO::FETCH_OBJ)[0];

        if($updateFnOut->functid)
        {
            $updateEventQuery="update EVENT set EvtStatus = '".$_POST["EdFunc_Status"]. "' where EvtID =" . $_POST["fn_evtid"] . ";";

            echo $updateEventQuery;

            $updateFnRes= alloteRooms($updateFnOut->functid);
            if($updateFnRes=='Success')
            {
                echo json_encode(['Status'=>'success','data'=>'Function Updates']);
                return;
            }


        }
    }





/////////////
$alloteRoomsQry=
        "IF NOT EXISTS (SELECT * from tsltt where functid=".$functId.")
                INSERT INTO tsltt(frid,functid)VALUES(" .$arr->frid. "," .$functId. ")
         ELSE
                UPDATE tsltt SET frid = " .$arr->frid. "  WHERE functId=" .$functId. "";

 ///////////////////////

 
            // $insertFnQry = "INSERT INTO funct(evtid,spid,functname,offsitelocation,functactnumppl,functgtdnumppl,functexpnumppl,setuptype,functinitdate,functcontactdate,functconfdate,timestat,startdate,starttime,endtime,startcol,endcol,renttype,contractsent,contractreceived,setuptime,knockdowntime,onsitecontact,numberset,actualized,unmovable,functionaltered,alteredby,alteredtimestamp,notesexist,roomnightcreated,billinggroup,postfunctas,exhibitcustid,expoparentid,isexpo,delivertime,pickuptime,functemailsent,isweb,sourcefunctid,rlsID) OUTPUT Inserted.FunctID VALUES(" . $evtId . "," .$_POST["name=EdFunc_Salesperson"] . ",'" .$_POST["funcname"]. "','0'," .$_POST["EdFunc_Set"] . " ," .$_POST["EdFunc_Gtd"] . " ," .$_POST["EdFunc_Exp"] . "," .$_POST["EdFunc_Setup"] . ",'" . yyyymmdd($_POST["FunctInitDate"]) . "','" . yyyymmdd($_POST["EdFunc_ContactDate"]) . "','" . yyyymmdd($_POST["name=EdFunc_ConfirmDate"]) . "','0','" .  yyyymmdd($_POST["name=EdFunc_Date"]) . "','" . $starttime . "','" . $endtime . "','" . $KVtime["" . $starttime . ""] . "','" . $KVtime[" . $endtime . "] . "','" .$_POST["EdFunc_RentType"] . "',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'" .$_POST["EdFunc_Setup"] . "','" .$_POST["EdFunc_KnckDwn"] . "','" .$_POST["EdFunc_SiteContact"] . "','0','0','0','0'," .$_POST["EdFunc_SiteContact"] . ",CAST(GETDATE() AS DATE),'0','0','0','" .$_POST["EdFunc_Post"] . "','0','0','0',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'0','0','0','0')";

            ///////////               

  // var fnCount=fnExists($("#EdFunc_Funtion :selected").text(),yyyymmdd($("[name=EdFunc_Date]").val()),starttime,endtime,$(this).attr("id"),$("[name=EdFunc_Setup]").val(),$("[name=EdFunc_KnckDwn]").val())
  // console.log(fnCount)
  //   if(fnCount>0)
  //   {
  //     alert('fn exists in this slot')
  //     fn_Exists=true;
  //     return ;
  //   }

///////////

  $('<input>', {
    type: 'hidden',
    name: 'arrRoomList[]',
    value: arrRoomList
}).appendTo('#formFunctionModal');



if($_POST["op"]=='fnExists')
{
    $fnExistQuery = "select starttime,endtime,exstStart, exstEnd from( select funct.functid ,convert(char(5), DATEADD(MINUTE, -(setuptime*60), CASE WHEN DATEPART(MINUTE,starttime)= 15 THEN DATEADD(MINUTE, -15, starttime) WHEN DATEPART(MINUTE,starttime)= 45 THEN DATEADD(MINUTE, -15, starttime) ELSE starttime END ) , 108) as exstStart,convert(char(5), DATEADD(MINUTE, -(setuptime*60), CASE WHEN DATEPART(MINUTE,endtime)= 15 THEN DATEADD(MINUTE, -15, endtime) WHEN DATEPART(MINUTE,endtime)= 45 THEN DATEADD(MINUTE, -15, endtime) ELSE endtime END ) , 108) as exstEnd ,CONVERT(VARCHAR(8),DATEADD(MINUTE, -((".$_POST["setup"].")*60), '".$_POST["starttime"]."'),108)  starttime ,CONVERT(VARCHAR(8),DATEADD(MINUTE, ((".$_POST["knowndwn"].")*60), '".$_POST["endtime"]."'),108)  endtime  from funct  left join TSLTT on TSLTT.FunctID = funct.functid where functname='".$_POST["functname"]. "' and startdate='".$_POST["startdate"]. "' and frid='".$_POST["frid"]."' ) x ";

    foreach($conn->query($fnExistQuery)->fetchAll(PDO::FETCH_OBJ) as $fnExistRow)
    {
      
    $starttime = new DateTime($fnExistRow->starttime);
    $endtime = new DateTime($fnExistRow->endtime);
    $exstStart = new DateTime($fnExistRow->exstStart);
    $exstEnd = new DateTime($fnExistRow->exstEnd); 

    if($exstStart>$exstEnd)
    {
        $exstEnd->modify("+750 minutes");
    }

    while ($exstStart <= $exstEnd) {

        if (($exstStart < $starttime  && $starttime < $exstEnd) ||($exstStart < $endtime  && $endtime < $exstEnd))
        {
           echo 1;
           return ;
        }

        $exstStart->add(new DateInterval('PT30M'));

    }

    }  
   
}

/////////////


    if( !$_POST["FunctInitDate"] || $_POST["FunctInitDate"] == "" || $_POST["FunctInitDate"] == undefined) {  echo json_encode(['Status'=>'err','msg'=>"initial date not set"]); return; } 
    
    if( !$_POST["EdFunc_ConfirmDate"] || $_POST["EdFunc_ConfirmDate"] == "" || $_POST["EdFunc_ConfirmDate"] == undefined) { echo json_encode(['Status'=>'err','msg'=>"initial date not set"]); return; } 
    
    if ( !$_POST["EdFunc_ContactDate"] || $_POST["EdFunc_ContactDate"] == "" || $_POST["EdFunc_ContactDate"] == undefined ) { echo json_encode(['Status'=>'err','msg'=>"initial date not set"]); return; } 

    if ( !$_POST["EdFunc_Setup"] || $_POST["EdFunc_Setup"] == "" || $_POST["EdFunc_Setup"] == undefined ) { echo json_encode(['Status'=>'err','msg'=>"setUp not defined"]); return; }

    if($_POST["EdFunc_Status"]== "" || $_POST["EdFunc_Status"] == undefined  || $_POST["EdFunc_Status"]== "Select Status")
    {
    echo json_encode(['Status'=>'err','msg'=>"Please Select Status"]); return; 
    }

    if (!$_POST["EdFunc_Exp"]) 
    {
    echo json_encode(['Status'=>'err','msg'=>'Exp Value not set']); return;
    } 

    if (!$_POST["EdFunc_Set"]) { echo json_encode(['Status'=>'err','msg'=>"Set Value not set"]); 
    return; } 

    if (!$_POST["EdFunc_Gtd"]) { echo json_encode(['Status'=>'err','msg'=>"Gtd Value not set"]); return; } if (!$_POST["EdFunc_SetupType"]) { echo json_encode(['Status'=>'err','msg'=>"SetupType not set"]); return; } 

    if (!$_POST["EdFunc_Salesperson"]) { echo json_encode(['Status'=>'err','msg'=>"SalesPerson not set"]); return; }

    if (!$_POST["EdFunc_Date"]) { echo json_encode(['Status'=>'err','msg'=>"Function date not set"]); return; } 

    if (!$_POST["EdFunc_Status"]) { echo json_encode(['Status'=>'err','msg'=>"Status not set"]); return; }

    if ($_POST["RoomList"] == 0) { 
    echo json_encode(['Status'=>'err','msg'=>"please select a Room"]); return; } 

    if (!$_POST["EdFunc_RentType"]) 
    { echo json_encode(['Status'=>'err','msg'=>"please Enter Rent type Value"]); return; } 

    if (!$_POST["NBMdls_Contactperson"]){ 
    echo json_encode(['Status'=>'err','msg'=>"please Enter Contact Person"]); 
    return; } 

    if (!$_POST["EdFunc_Salesperson"]){ 
    echo json_encode(['Status'=>'err','msg'=>"Select Salesperson"]); 
    return; } 


    ///////// validation ends ///////////

    $Save_Starttime = $_POST["#EdFunc_StartTime"];
    $Save_Endtime = $_POST["#EdFunc_EndTime"];
    $Timeval = $Save_Starttime.split(":");
    $hours = $Timeval[0];
    $minutes = $Timeval[1];
    $ampm = $hours >= 12 ? "pm" : "am";
    $valSave_Starttime = $Save_Starttime . $ampm;
    $valSave_Endtime = $Save_Endtime + $ampm;
  
    if ($valSave_Starttime == $valSave_Endtime) {
      
    echo json_encode(['Status'=>'err','msg'=>"Start time and End time can not be same"]); 
    return; 

    } else if ($valSave_Starttime > $valSave_Endtime) {
     
        echo json_encode(['Status'=>'err','msg'=>"End time should not smaller than start time"]); 
        return; 

    }
  
    $starttime = $_POST["EdFunc_StartTime"];
    $endtime = $_POST["EdFunc_EndTime"];
  
    $startmin = $starttime[3] . $starttime[4] < 30 ? ":00" : ":30";
    $endmin = $endtime[3] . $endtime[4] < 30 ? ":00" : ":30";
  
    $starttime = $starttime.split(":")[0];
    $endtime = $endtime.split(":")[0];
  
    $starttime = $starttime.$startmin + ":00";
    $endtime = $endtime.$endmin + ":00";


    //////////
    
  if(!$_POST["fn_FunctionID"])
  {
    $fn_Exists=false;

    if ($_POST["fn_evtid"])
      {

   for($j=0;$j<count($_POST["arrRoomList"]);$j++)
    {

    //////fnExist

    $fnExistQuery = "select starttime,endtime,exstStart, exstEnd from( select funct.functid ,convert(char(5), DATEADD(MINUTE, -(setuptime*60), CASE WHEN DATEPART(MINUTE,starttime)= 15 THEN DATEADD(MINUTE, -15, starttime) WHEN DATEPART(MINUTE,starttime)= 45 THEN DATEADD(MINUTE, -15, starttime) ELSE starttime END ) , 108) as exstStart,convert(char(5), DATEADD(MINUTE, -(setuptime*60), CASE WHEN DATEPART(MINUTE,endtime)= 15 THEN DATEADD(MINUTE, -15, endtime) WHEN DATEPART(MINUTE,endtime)= 45 THEN DATEADD(MINUTE, -15, endtime) ELSE endtime END ) , 108) as exstEnd ,CONVERT(VARCHAR(8),DATEADD(MINUTE, -((".$_POST["setup"].")*60), '".$_POST["starttime"]."'),108)  starttime ,CONVERT(VARCHAR(8),DATEADD(MINUTE, ((".$_POST["knowndwn"].")*60), '".$_POST["endtime"]."'),108)  endtime  from funct  left join TSLTT on TSLTT.FunctID = funct.functid where functname='".$_POST["functname"]. "' and startdate='".$_POST["startdate"]. "' and frid='".$_POST["frid"]."' ) x ";

    foreach($conn->query($fnExistQuery)->fetchAll(PDO::FETCH_OBJ) as $fnExistRow)
    {
      
    $starttime = new DateTime($fnExistRow->starttime);
    $endtime = new DateTime($fnExistRow->endtime);
    $exstStart = new DateTime($fnExistRow->exstStart);
    $exstEnd = new DateTime($fnExistRow->exstEnd); 

    if($exstStart>$exstEnd)
    {
        $exstEnd->modify("+750 minutes");
    }

    while ($exstStart <= $exstEnd) {

        if (($exstStart < $starttime  && $starttime < $exstEnd) ||($exstStart < $endtime  && $endtime < $exstEnd))
        {
           echo json_encode(['Status'=>'err','msg'=>"Function date not set"]);
           return ;
        }

        $exstStart->add(new DateInterval('PT30M'));

    }

    } 

    /////////////////// enExists ends ///////////
        
    }



//////////////////////



    // if(!$_POST["fn_Exists"])return;

    // /////insert fn /////////////

    // $fn_evtid=$_POST["fn_evtid"]

    // $insertFunctionQuery = "INSERT INTO funct(evtid,spid,functname,offsitelocation,functactnumppl,functgtdnumppl,functexpnumppl,setuptype,functinitdate,functcontactdate,functconfdate,timestat,startdate,starttime,endtime,startcol,endcol,renttype,contractsent,contractreceived,setuptime,knockdowntime,onsitecontact,numberset,actualized,unmovable,functionaltered,alteredby,alteredtimestamp,notesexist,roomnightcreated,billinggroup,postfunctas,exhibitcustid,expoparentid,isexpo,delivertime,pickuptime,functemailsent,isweb,sourcefunctid,rlsID) OUTPUT Inserted.FunctID VALUES(" . $fn_evtid . "," . $_POST["EdFunc_Salesperson"] . ",'" . $_POST["#EdFunc_Funtion :selected").text() . "','0'," . $_POST["EdFunc_Set"] . " ," . $_POST["EdFunc_Gtd"] . " ," . $_POST["EdFunc_Exp"] . "," . $_POST["EdFunc_Setup"] . ",'" . yyyymmdd($_POST["FunctInitDate"]) . "','" . yyyymmdd($_POST["EdFunc_ContactDate"]) . "','" . yyyymmdd($_POST["EdFunc_ConfirmDate"]) . "','0','" .  yyyymmdd($_POST["EdFunc_Date"]) . "','" . starttime . "','" . endtime . "','" . KVtime["" . starttime . ""] . "','" . KVtime["" . endtime . ""] . "','" . $_POST["EdFunc_RentType"] . "',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'" . $_POST["EdFunc_Setup"] . "','" . $_POST["EdFunc_KnckDwn"] . "','" . $_POST["EdFunc_SiteContact"] . "','0','0','0','0'," . $_POST["EdFunc_SiteContact"] . ",CAST(GETDATE() AS DATE),'0','0','0','" . $_POST["EdFunc_Post"] . "','0','0','0',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'0','0','0','0');";

    // var insertFunctionOut = CRUD(insertFunctionQuery); 
    // if (insertFunctionOut.includes("error"))
    // {
    //   return "error";
    // }
    
    // var functid = JSON.parse(insertFunctionOut)[0].FunctID; 
    // alloteRooms(functid)

    // return insertFunctionOut;


    // /////insert fn Ends/////////////

    //   $insertFunctionOut = insertFunction(fn_evtid,starttime,endtime) ;

    //   if (!insertFunctionOut.includes("error"))
    //   {
    //     var updateEventStatusQuery="update EVENT set EvtStatus = '" + $_POST["EdFunc_Status"] + "' where EvtID =" + fn_evtid + ";"
    //   }

    //   var updateEventStatusOut = CRUD(updateEventStatusQuery);

    //   if (!updateEventStatusOut.includes("error"))
    //       {
    //         var functid = JSON.parse(insertFunctionOut)[0].FunctID; 

    //         alloteRooms(functid)
            
    //       }

    //   } 
    //   else { 

    //   var mrktseg = $_POST["#EdFunc_Selection"] == "All" ? "1" : $_POST["#EdFunc_Selection"]; 
    //   var setuptime = $_POST["EdFunc_Setup"] == null ? "0" : $_POST["EdFunc_Setup"];
    //   var knockdowntime = $_POST["EdFunc_KnckDwn"] == null ? "0" : $_POST["EdFunc_KnckDwn"];

    //   var insertEventQuery = "INSERT INTO event([custid],[contactid],[reservationid] ,[spid],[evtname],[evtstart],[evtend],[evtstatus],[confdate],[evtpaymentmethod],[frequency],[referralsource],[mrktseg],[postas],[loudgroup],[donotpost],[notesexist],[cateringsalesid],[cateringcontact],[contractsent],[contractrecd],[contractdue],[billingcustid],[monitoroverride],[taxexempt],[yieldalias],[matterid],[eventemailsent],[sourceevtid],[taxexemptdetail],[EvtInitDate],[EvtCutoffDate]) values('" + sessionStorage.getItem("custmrId") + "','" + $_POST["#NBMdls_Contactperson :selected"] + "',0,'" + $_POST["EdFunc_Salesperson"] + "','" + $_POST["#NBMdls_Bookingname"] + "','" + yyyymmdd($_POST["#EdFunc_Date"]) + "','" + yyyymmdd($_POST["#EdFunc_Date"]) + "','" + $_POST["#EdFunc_Status"] + "',CAST(GETDATE() AS DATE),0,0,0,(select top 1 mrktid from mrkt),0,0,0,0,0,0,CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'" + sessionStorage.getItem("custmrId") + "',0,0,0,0,0,0,'" + sessionStorage.getItem("custmrId") + "',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE));"; 
            
    //   console.log(insertEventQuery)

    //   var insertEventOut = CRUD(insertEventQuery); 
      
    //   if (!insertEventOut.includes("error")) 
    //   {
    //     var evtId="(select max(evtid) from event)";

    //     var fn_Exists=false;
    //     $_POST["#EdFunc_RightList div").each(function() {

    //       var fnCount=fnExists($_POST["#EdFunc_Funtion :selected").text(),yyyymmdd($_POST["EdFunc_Date"]),starttime,endtime,$_POST[this).attr("id"),$_POST["EdFunc_Setup"],$_POST["EdFunc_KnckDwn"])
    //       console.log(fnCount)

    //         if(fnCount>0)
    //         {
    //           alert('fn exists in this slot')
    //           fn_Exists=true;
    //           return ;
    //         }
      
    //     })

    //     if(!fn_Exists) return; 

    //     var insertEventFunctOut = insertFunction(evtId,starttime,endtime); 

    //     if (!insertEventFunctOut.includes("error")) 
    //     {
    //       var functid = JSON.parse(insertEventFunctOut)[0].FunctID;
          
    //       alloteRooms(functid)

    //     }
    
    //   } 





////////////////////////////
////////////////////////////////

function validtionSlot()
{
  $("#EdFunc_RightList div").each(function() {

    frid = $(this).attr("id");

    var startDate = new Date($("[name=EdFunc_Date]").val()); //YYYY-MM-DD
    //var functenddate = new Date($("[name=functenddate]").val()); //YYYY-MM-DD
  
    /////////////////  validate in slot //////////////////
    var slotQuery = "select StartTime ,EndTime from FUNCT funct left join EVENT on EVENT.evtid = funct.evtid join TSLTT on TSLTT.FunctID = funct.functid join SFRDT on SFRDT.FrdID = TSLTT.FRID where startdate='" + $("#EdFunc_Date").val() + "' and SFRDT.FrdID=" + frid + "";

    var json = JSON.parse(CRUD(slotQuery));

    if (json.length >= 1) {
      $.each(json, function(index, value) {
        var start_time = moment .utc($("[name=EdFunc_StartTime]").val(), "hh:mm:ss") .add(-($("[name=EdFunc_Setup]").val() * 60), "minutes") .format("hh:mm:ss");
        var end_time = moment .utc($("[name=EdFunc_EndTime]").val(), "hh:mmss") .add($("[name=EdFunc_KnckDwn]").val() * 60, "minutes") .format("hh:mm:ss");
        var start_time = moment .utc(start_time, "hh:mm:ss") .add(-1, "minutes") .format("hh:mm:ss"); var end_time = moment .utc(end_time, "hh:mm:ss") .add(-1, "minutes") .format("hh:mm:ss");

        var start_time1 = moment(start_time, "hh:mm:ss");
        var end_time1 = moment(end_time, "hh:mm:ss");
        var StartTime1 = moment(value.StartTime, "hh:mm:ss");
        var EndTime1 = moment(value.EndTime, "hh:mm:ss");

        if (start_time1.isBetween(StartTime1, EndTime1) ||end_time1.isBetween(StartTime1, EndTime1)) {
          alert("Room already Boked in this slot ");
          return false;
        }
      });
    }
  });
  return true;
}

///////////////

  var fnExistQuery = "select  count(functid)  count,max(ipStart) ipStart,max(exstStart) exstStart,max(exstEnd) exstEnd,max(ipEnd) ipEnd from( select funct.functid ,convert(char(5), DATEADD(MINUTE, -(setuptime*60), CASE WHEN DATEPART(MINUTE,starttime)= 15 THEN DATEADD(MINUTE, -15, starttime) WHEN DATEPART(MINUTE,starttime)= 45 THEN DATEADD(MINUTE, -15, starttime) ELSE starttime END ) , 108) as exstStart,convert(char(5), DATEADD(MINUTE, -(setuptime*60), CASE WHEN DATEPART(MINUTE,endtime)= 15 THEN DATEADD(MINUTE, -15, endtime) WHEN DATEPART(MINUTE,endtime)= 45 THEN DATEADD(MINUTE, -15, endtime) ELSE endtime END ) , 108) as exstEnd,CONVERT(VARCHAR(8),DATEADD(MINUTE, -((.5)*60), '04:00:00'),108) as ipStart ,CONVERT(VARCHAR(8),DATEADD(MINUTE, ((.5)*60), '04:00:00'),108) as ipEnd  from funct  left join TSLTT on TSLTT.FunctID = funct.functid where functname='"+functname+ "' and startdate='"+startdate+ "' and frid='"+frid+"' ) x  where exstStart<=ipStart or exstEnd<= ipEnd";

  console.log(fnExistQuery);
  
  var fnExistnOut = CRUD(fnExistQuery); 
  if (fnExistnOut.includes("error"))
  {
    return "error";
  }
  
  return JSON.parse(fnExistnOut)[0]?JSON.parse(fnExistnOut)[0].count:0;



// $("#parent").prepend("<div id='page_number'> You are watching 5th object out of 100 </div>");

//$('#DateTextarea').text('<div>' + mmddyyyy(date) + '</div>');

// var text = <div class="item"><a class="as">q</a>test</div>;
// $('#DateTextarea').val(text);

// $('#DateTextarea').val($('#DateTextarea').val() + mmddyyyy(date) );
// $('#DateTextarea').val($('#DateTextarea').val() + '<br/>');

////////////

$fnQry="select distinct convert(varchar(10),startdate, 101) as startdate,RIGHT(starttime, LEN(starttime) - 12) as stime,RIGHT(endtime, LEN(starttime) - 12) as etime,functname,frname,case EvtStatus when 1 then 'Confirmed' when 2 then 'Tentative' end as EvtStatus,funct.functId as functId,functexpnumppl,functgtdnumppl,functactnumppl,setuptime,knockdowntime,renttype,convert(varchar(10),confDate, 101) as confDate,cnt.FirstName+' '+cnt.LastName as contactname ,slps.FirstName+' '+slps.LastName as slps,funct.evtid ,bkg.custid,case setuptype when .0 then convert(char(11),'none')   end as setuptype from FUNCT funct  left join EVENT bkg on  funct.evtid =bkg.EvtID  left join SALPT slps on funct.SPID=slps.SalesID left join SYS_STATDESC sts on sts.statusid=bkg.EvtStatus left join tsltt on tsltt.functid = FUNCT.functid left join SFRDT on tsltt.frid = SFRDT.FrdID left join contacts cnt on funct.onsitecontact=cnt.ContactID left join SERVDETSETUP sd on bkg.EvtID=sd.ServHdrID left join CUSTT cst on bkg.CustID=cst.CustID where  funct.functid =".$_POST['functid']."";

$fnRes= $conn->query($fnQry)->fetchAll(PDO::FETCH_OBJ)[0];



                // $insertFunctionQuery = "INSERT INTO funct(evtid,spid,functname,offsitelocation,functactnumppl,functgtdnumppl,functexpnumppl,setuptype,functinitdate,functcontactdate,functconfdate,timestat,startdate,starttime,endtime,startcol,endcol,renttype,contractsent,contractreceived,setuptime,knockdowntime,onsitecontact,numberset,actualized,unmovable,functionaltered,alteredby,alteredtimestamp,notesexist,roomnightcreated,billinggroup,postfunctas,exhibitcustid,expoparentid,isexpo,delivertime,pickuptime,functemailsent,isweb,sourcefunctid,rlsID) OUTPUT Inserted.FunctID VALUES(".$fnRes->evtId . ",".$fnRes->spid . ",'".$_POST['functname'][$i -1] . "','0',".$fnRes->functactnumppl . " ,".$fnRes->functgtdnumppl . " ,".$fnRes->functexpnumppl . ",".$fnRes->setuptype . ",'".$fnRes->functinitdate . "','".$fnRes->functcontactdate . "','".$fnRes->functconfdate . "','0','". $_POST['NewDate'][$i -1] . "','".$_POST['NewStartTime'][$i -1] . "','". $_POST['NewEndTime'][$i -1] . "','".$fnRes->startcol . "','".$fnRes->endcol  . "','".$fnRes->renttype . "','".$fnRes->startdate ."','".$fnRes->setuptime . "','".$fnRes->knockdowntime . "','".$fnRes->onsitecontact . "','0','0','0','0',".$fnRes->onsitecontact . ",CAST(GETDATE() AS DATE),'0','0','0','".$fnRes->postfunctas . "','0','0','0',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'0','0','0','0');";


            $_POST['functname'][$i -1] 
            $_POST['NewDate'][$i -1]
            $_POST['NewStartTime'][$i -1] 
            $_POST['NewEndTime'][$i -1]
              

            var query="select distinct headertypeid,si.servitemid ,si.servtimeid,si.servitemname ,si.itemsetupid,si.servitemqty ,cast(servitemchrg as decimal(12,2)) as d_price,cast((servitemchrg*servitemqty) as decimal(12,2)) as d_total from servitems si left join servtime st on  si.servtimeid = st.servtimeid left join servdesc sd on st.servdescid =sd.servdescid  where si.functid='"+fnId+"' and sd.servdescid='"+servdescid+"'"+query1;

            var query= "select ServItemID,ServItemName ,ServItemQty,CAST(ServItemChrg AS DECIMAL(12,2)) as D_price,CAST((ServItemChrg*ServItemQty) AS DECIMAL(12,2)) as D_Total from FUNCT fn left join SERVITEMS ss on fn.FunctID = ss.FunctID left join SERVTIME st on ss.ServTimeID = st.ServTimeID left join SERVDESC sd on st.servdescid =sd.servdescid where servtime='"+value.ServTime+"' and servendtime='"+value.ServEndTime+"' and ss.functid='"+fnId+"' and servitemid='"+value.ServItemID+"' order by ss.functid ";
            
            
            $servtimeQry ="insert INTO servtime(functid,headertype,servtime,servdescid,servendtime,servicenotes,numppl)VALUES(".$_POST['functid'][$i -1].","+$('#ES_Category').val()+",'"+$('#ES_ServiceStart').val()+"',"+$('#ES_ServiceTimes :selected').val()+",'"+$('#ES_ServiceEnd').val()+"','1',"+$('#ES_NumberPeople').val()+")";

            $updateservtime= $conn->query($servtimeQry)->fetchAll(PDO::FETCH_OBJ)[0];

            $servitemsQry ="insert INTO  servitems(functid,headertypeid,servtimeid,servitemname,servitemchrg,servitemcost,servitemqty,servitemactqty,displayidx,taxid,itemsetupid,inpackage,servtype,servtypedesc)VALUES(".$_POST['functid'][$i -1].","+$('#ES_Category :selected').val()+",(select MAX(servtimeid) from servtime),'"+$(this).find('.itemname').text()+"','"+$(this).find('.ES_Price').text()+"','"+$(this).find('.ES_Total').text()+"','"+$(this).find('.ES_Qty').text()+"','"+$(this).find('.ES_Qty').text()+"','1','1','"+$(this).attr('data-secondmenu').slice(0,-1)+"','1','"+$(this).attr('servtypeid')+"','"+servtypedesc+"')";

            
            ///

///////////////

$location="../CopyMoveBookingModal.php";

//header("Location: " . "https://" . $_SERVER['HTTP_HOST'] . $location);

die();

/////////

 <?php
include('../../common/connect.php');

function validate()
{
    if($_POST['chkFn'][$i -1]=="on")
    {
        //validation 
        if(!$_POST['NewDate'][$i -1])
        {
            echo '<script>alert("NewDate required")</script>';
            return ;
        }
        
        if(!$_POST['NewStartTime'][$i -1])
        {
            echo '<script>alert("NewStartTime required")</script>';
            return ;
        }

        if(!$_POST['NewEndTime'][$i -1])
        {
            echo '<script>alert("NewEndTime required")</script>';
            return ;
        }
    }

}

echo '1';
return;
exit();

if(isset($_POST["chkFn"]))
{
   
    $rowCount =  count($_POST['chkFn']); 
    $tble= "<table>";
    for($i=1; $i<=$rowCount; $i++)
        {
            validate();

            echo $_POST['chkMove'];
            if($_POST['chkMove']=="on")
            { 
                $updateFunctionQuery = "update FUNCT set FunctName = '" . $_POST['functname'][$i -1] . "',StartDate = '" . $_POST['NewDate'][$i -1] . "',StartTime = '" . $_POST['NewStartTime'][$i -1] . "',EndTime = '" . $_POST['NewEndTime'][$i -1] . "'  OUTPUT Inserted.FunctID where FunctID = '" . $_POST['functid'] . "';";

                echo $updateFunctionQuery;
                $updateFnRes= $conn->query($updateFunctionQuery)->fetchAll(PDO::FETCH_OBJ)[0];

                print_r($updateFnRes);
            }
             else
             {
                
            $fnQry="select distinct convert(varchar(10),startdate, 101) as startdate,RIGHT(starttime, LEN(starttime) - 12) as stime,RIGHT(endtime, LEN(starttime) - 12) as etime,functname,frname,case EvtStatus when 1 then 'Confirmed' when 2 then 'Tentative' end as EvtStatus,funct.functId as functId,functexpnumppl,functgtdnumppl,functactnumppl,setuptime,knockdowntime,renttype,convert(varchar(10),confDate, 101) as confDate,cnt.FirstName+' '+cnt.LastName as contactname ,slps.FirstName+' '+slps.LastName as slps,funct.evtid ,bkg.custid,case setuptype when .0 then convert(char(11),'none')   end as setuptype from FUNCT funct  left join EVENT bkg on  funct.evtid =bkg.EvtID  left join SALPT slps on funct.SPID=slps.SalesID left join SYS_STATDESC sts on sts.statusid=bkg.EvtStatus left join tsltt on tsltt.functid = FUNCT.functid left join SFRDT on tsltt.frid = SFRDT.FrdID left join contacts cnt on funct.onsitecontact=cnt.ContactID left join SERVDETSETUP sd on bkg.EvtID=sd.ServHdrID left join CUSTT cst on bkg.CustID=cst.CustID where  funct.functid =".$_POST['functid']."";

            $fnRes= $conn->query($fnQry)->fetchAll(PDO::FETCH_OBJ)[0];

            $insertFunctionQuery = "INSERT INTO funct(evtid,spid,functname,offsitelocation,functactnumppl,functgtdnumppl,functexpnumppl,setuptype,functinitdate,functcontactdate,functconfdate,timestat,startdate,starttime,endtime,startcol,endcol,renttype,contractsent,contractreceived,setuptime,knockdowntime,onsitecontact,numberset,actualized,unmovable,functionaltered,alteredby,alteredtimestamp,notesexist,roomnightcreated,billinggroup,postfunctas,exhibitcustid,expoparentid,isexpo,delivertime,pickuptime,functemailsent,isweb,sourcefunctid,rlsID) OUTPUT Inserted.FunctID VALUES(".$fnRes->evtId . ",".$fnRes->spid . ",'".$_POST['functname'][$i -1] . "','0',".$fnRes->functactnumppl . " ,".$fnRes->functgtdnumppl . " ,".$fnRes->functexpnumppl . ",".$fnRes->setuptype . ",'".$fnRes->functinitdate . "','".$fnRes->functcontactdate . "','".$fnRes->functconfdate . "','0','". $_POST['NewDate'][$i -1] . "','".$_POST['NewStartTime'][$i -1] . "','". $_POST['NewEndTime'][$i -1] . "','".$fnRes->startcol . "','".$fnRes->endcol  . "','".$fnRes->renttype . "','".$fnRes->startdate ."','".$fnRes->setuptime . "','".$fnRes->knockdowntime . "','".$fnRes->onsitecontact . "','0','0','0','0',".$fnRes->onsitecontact . ",CAST(GETDATE() AS DATE),'0','0','0','".$fnRes->postfunctas . "','0','0','0',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'0','0','0','0');";

            echo $insertFunctionQuery;

            $insertFnRes= $conn->query($insertFunctionQuery)->fetchAll(PDO::FETCH_OBJ)[0];

            print_r($insertFnRes);

             }   


        }

}

    // ,OffSitelocation = '',functactnumppl = '" . $("[name=EdFunc_Set]").val() . "',FunctGtdNumPpl = '" . $("[name=EdFunc_Gtd]").val() . "',SetupType = '" . parseInt($("[name=EdFunc_SetupType]").val()) . "',FunctInitDate = '" . yyyymmdd($("[name=FunctInitDate]").val()) . "',FunctConfDate = '" . yyyymmdd($("[name=EdFunc_ConfirmDate]").val()) . "',TimeStat = ''startcol='" . parseInt(KVtime["" . starttime . ""]) . "' ,endcol='" . KVtime["" . endtime . ""] . "' ,RentType = '" . $("[name=EdFunc_RentType]").val() . "',SetupTime = '" . ($("[name=EdFunc_Setup]").val() ? $("[name=EdFunc_Setup]").val() : 0) . "',KnockDownTime = '" . ($("[name=EdFunc_KnckDwn]").val() ? $("[name=EdFunc_KnckDwn]").val() : 0) . "',OnSiteContact = '" . $("[name=EdFunc_SiteContact]").val() . "',UnMovable = '',PostFunctAs = '" . $("[name=EdFunc_Post]").val() . "',alteredby=" . $("[name=EdFunc_SiteContact]").val() . "


?>






end

////////////

 
      //    var functid=$(this).parent('tr').attr('functid')
      //    var functname=$(this).parent('tr').find('.functname').html()
      //    var NewDate = moment($(this).parent('tr').find('.NewDate').html()).add(1, 'days');
      //    var NewStartTime	=$(this).parent('tr').find('.NewStartTime').html()
      //    var NewEndTime=$(this).parent('tr').find('.NewEndTime').html()

      // if($('#chkMove').is(':checked'))
      // {
      //    var query="select distinct convert(varchar(10),startdate, 101) as startdate,RIGHT(starttime, LEN(starttime) - 12) as stime,RIGHT(endtime, LEN(starttime) - 12) as etime,functname,frname,case EvtStatus when 1 then 'Confirmed' when 2 then 'Tentative' end as EvtStatus,funct.functId as functId,functexpnumppl,functgtdnumppl,functactnumppl,setuptime,knockdowntime,renttype,convert(varchar(10),confDate, 101) as confDate,cnt.FirstName+' '+cnt.LastName as contactname ,slps.FirstName+' '+slps.LastName as slps,funct.evtid ,bkg.custid,case setuptype when .0 then convert(char(11),'none')   end as setuptype from FUNCT funct  left join EVENT bkg on  funct.evtid =bkg.EvtID  left join SALPT slps on funct.SPID=slps.SalesID left join SYS_STATDESC sts on sts.statusid=bkg.EvtStatus left join tsltt on tsltt.functid = FUNCT.functid left join SFRDT on tsltt.frid = SFRDT.FrdID left join contacts cnt on funct.onsitecontact=cnt.ContactID left join SERVDETSETUP sd on bkg.EvtID=sd.ServHdrID left join CUSTT cst on bkg.CustID=cst.CustID where  funct.functid ="+functid+"";

      // var out = CRUD(query);
      // var selectedFn=JSON.parse(CRUD(query))[0];

      // html +="<tr functid="+selectedFn.functId,
      // selectedFn.frname
      // selectedFn.EvtStatus
      // selectedFn.slps
      // selectedFn.functexpnumppl
      // selectedFn.functgtdnumppl
      // selectedFn.functactnumppl
      // selectedFn.setuptype+"</td> <td >"+selectedFn.setuptime+"</td> <td >"+selectedFn.knockdowntime+"</td> <td >"+selectedFn.renttype+"</td> <td >"+selectedFn.renttype+"</td> <td>"+selectedFn.contactname+"</td> <td >"+selectedFn.confDate+"</td> <td >0</td> </tr>";

      //    updateFunctionQuery = "update FUNCT set FunctName = '" + functname + "', StartDate = '" + NewDate + "',StartTime = '" + NewStartTime + "',EndTime = '" + NewEndTime + "'  where FunctID = '" + functid + "';";

      //    return;

      //}

      // var insertFunctionQuery = "INSERT INTO funct(evtid,spid,functname,offsitelocation,functactnumppl,functgtdnumppl,functexpnumppl,setuptype,functinitdate,functcontactdate,functconfdate,timestat,startdate,starttime,endtime,startcol,endcol,renttype,contractsent,contractreceived,setuptime,knockdowntime,onsitecontact,numberset,actualized,unmovable,functionaltered,alteredby,alteredtimestamp,notesexist,roomnightcreated,billinggroup,postfunctas,exhibitcustid,expoparentid,isexpo,delivertime,pickuptime,functemailsent,isweb,sourcefunctid,rlsID) OUTPUT Inserted.FunctID VALUES(" + evtId + "," + $("[name=EdFunc_Salesperson]").val() + ",'" + $("#EdFunc_Funtion :selected").text() + "','0'," + $("[name=EdFunc_Set]").val() + " ," + $("[name=EdFunc_Gtd]").val() + " ," + $("[name=EdFunc_Exp]").val() + "," + $("[name=EdFunc_Setup]").val() + ",'" + yyyymmdd($("[name=FunctInitDate]").val()) + "','" + yyyymmdd($("[name=EdFunc_ContactDate]").val()) + "','" + yyyymmdd($("[name=EdFunc_ConfirmDate]").val()) + "','0','" +  yyyymmdd($("[name=EdFunc_Date]").val()) + "','" + starttime + "','" + endtime + "','" + KVtime["" + starttime + ""] + "','" + KVtime["" + endtime + ""] + "','" + $("[name=EdFunc_RentType]").val() + "',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'" + $("[name=EdFunc_Setup]").val() + "','" + $("[name=EdFunc_KnckDwn]").val() + "','" + $("[name=EdFunc_SiteContact]").val() + "','0','0','0','0'," + $("[name=EdFunc_SiteContact]").val() + ",CAST(GETDATE() AS DATE),'0','0','0','" + $("[name=EdFunc_Post]").val() + "','0','0','0',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'0','0','0','0');";


////////////////



   //Copy Services

   // updateFunctionQuery = "update FUNCT set FunctName = '" + functname + "',OffSitelocation = '',functactnumppl = '" + $("[name=EdFunc_Set]").val() + "',FunctGtdNumPpl = '" + $("[name=EdFunc_Gtd]").val() + "',SetupType = '" + parseInt($("[name=EdFunc_SetupType]").val()) + "',FunctInitDate = '" + yyyymmdd($("[name=FunctInitDate]").val()) + "',FunctConfDate = '" + yyyymmdd($("[name=EdFunc_ConfirmDate]").val()) + "',TimeStat = '',StartDate = '" + yyyymmdd($("[name=EdFunc_Date]").val()) + "',StartTime = '" + starttime + "',EndTime = '" + endtime + "' ,startcol='" + parseInt(KVtime["" + starttime + ""]) + "' ,endcol='" + KVtime["" + endtime + ""] + "' ,RentType = '" + $("[name=EdFunc_RentType]").val() + "',SetupTime = '" + ($("[name=EdFunc_Setup]").val() ? $("[name=EdFunc_Setup]").val() : 0) + "',KnockDownTime = '" + ($("[name=EdFunc_KnckDwn]").val() ? $("[name=EdFunc_KnckDwn]").val() : 0) + "',OnSiteContact = '" + $("[name=EdFunc_SiteContact]").val() + "',UnMovable = '',PostFunctAs = '" + $("[name=EdFunc_Post]").val() + "',alteredby=" + $("[name=EdFunc_SiteContact]").val() + " OUTPUT Inserted.FunctID where FunctID = '" + fn_FunctionID + "';";


///////////////////

echo '<script >alert(1)</script>';


$rowCount =  count($_POST['functname']); 
    $tble= "<table>";
    for($i=1; $i<=$rowCount; $i++)
        {
        $tble.="<tr>";
        $tble.= "<td>".$_POST['functname'][$i -1]."</td>";
        $tble.= "<td>".$_POST['chkFn'][$i -1]."</td>";
        $tble.= "<td>".$_POST['NewDate'][$i -1]."</td>";
        $tble.= "</tr>";
        }
        $tble.= "</table>";



<table>
<tr>
<td><input type="text" name="color_1[]" value='a'/></td>
<td><input type="text" name="color_2[]" value='b'/></td>
</tr>
<table>
         
////////////////         

 <table style="width:100%">

   <tr>

   <form  action="../ajax/function.php" method="post"  enctype="multipart/form-data" >
      <table>
      <tr>
         <td><input type="text" name="color_1[]" value='a'/></td>
         <td><input type="text" name="color_2[]" value='b'/></td>
      </tr>
      <table>
      <input type="submit" />
   </form>

      <td colspan=3 id="cpybkgFnTd">
         1
      </td>
   </tr>
   
  </table>

  //////////////////
if(isset($_POST['op']) && $_POST['op']=="insertFunction" )
{
    $insertFunctionQuery = "INSERT INTO funct(evtid,spid,functname,offsitelocation,functactnumppl,functgtdnumppl,functexpnumppl,setuptype,functinitdate,functcontactdate,functconfdate,timestat,startdate,starttime,endtime,startcol,endcol,renttype,contractsent,contractreceived,setuptime,knockdowntime,onsitecontact,numberset,actualized,unmovable,functionaltered,alteredby,alteredtimestamp,notesexist,roomnightcreated,billinggroup,postfunctas,exhibitcustid,expoparentid,isexpo,delivertime,pickuptime,functemailsent,isweb,sourcefunctid,rlsID) OUTPUT Inserted.FunctID VALUES(".evtId.",".$_POST["EdFunc_Salesperson]"].",'".$_POST["EdFunc_Funtion]"]."','0',".$_POST["EdFunc_Set]"]." ,".$_POST["EdFunc_Gtd]"]." ,".$_POST["EdFunc_Exp]"].",".$_POST["EdFunc_Setup]"].",'".yyyymmdd($_POST["FunctInitDate]"])."','".yyyymmdd($_POST["EdFunc_ContactDate]"])."','".yyyymmdd($_POST["EdFunc_ConfirmDate]"])."','0','".yyyymmdd($_POST["EdFunc_Date]"])."','".starttime."','".endtime."','".KVtime["".starttime.""]."','".KVtime["".endtime.""]."','".$_POST["EdFunc_RentType]"]."',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'".$_POST["EdFunc_Setup]"]."','".$_POST["EdFunc_KnckDwn]"]."','".$_POST["EdFunc_SiteContact]"]."','0','0','0','0',".$_POST["EdFunc_SiteContact]"].",CAST(GETDATE() AS DATE),'0','0','0','".$_POST["EdFunc_Post]"]."','0','0','0',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'0','0','0','0');";

    $res = $conn->query($insertFunctionQuery)->fetchAll(PDO::FETCH_OBJ);

    print_r($res);

    $functid = $res[0]->FunctID; 
    alloteRooms(functid);

    echo (json_encode(array($res[0])));

    exit();


    $insertFunctionOut = CRUD(insertFunctionQuery); 
    if (insertFunctionOut.includes("error"))
    {
    return "error";
    }
    $functid = JSON.parse(insertFunctionOut)[0].FunctID; 
    alloteRooms(functid);

    return insertFunctionOut;

}


if(isset($_POST['op']) && $_POST['op']=="updateFunction" )
{
//      $_POST["name"]; 


//     $updateFunctionQuery = "update FUNCT set SPID = '".$_POST["EdFunc_Salesperson]"]."',FunctName = '".$("#EdFunc_Funtion :selected").text()."',OffSitelocation = '',functactnumppl = '".$_POST["EdFunc_Set]"]."',FunctGtdNumPpl = '".$_POST["EdFunc_Gtd]"]."',SetupType = '".parseInt($_POST["EdFunc_SetupType]"])."',FunctInitDate = '".yyyymmdd($_POST["FunctInitDate]"])."',FunctConfDate = '".yyyymmdd($_POST["EdFunc_ConfirmDate]"])."',TimeStat = '',StartDate = '".yyyymmdd($_POST["EdFunc_Date]"])."',StartTime = '".starttime."',EndTime = '".endtime."' ,startcol='".parseInt(KVtime["".starttime.""])."' ,endcol='".KVtime["".endtime.""]."' ,RentType = '".$_POST["EdFunc_RentType]"]."',SetupTime = '".($_POST["EdFunc_Setup]"] ? $_POST["EdFunc_Setup]"] : 0)."',KnockDownTime = '".($_POST["EdFunc_KnckDwn]"] ? $_POST["EdFunc_KnckDwn]"] : 0)."',OnSiteContact = '".$_POST["EdFunc_SiteContact]"]."',UnMovable = '',PostFunctAs = '".$_POST["EdFunc_Post]"]."',alteredby=".$_POST["EdFunc_SiteContact]"]." OUTPUT Inserted.FunctID where FunctID = '".fn_FunctionID."';";

//     $res = $conn->query($insertFunctionQuery)->fetchAll(PDO::FETCH_OBJ);

//    // print_r($res);

//     $functid = $res[0]->FunctID; 
//     echo $functid ;
//     exit();
    // alloteRooms($functid)

    // echo (json_encode(array($res[0])));

    // exit();


    // var updateFunctionOut = CRUD(updateFunctionQuery);

    // if(updateFunctionOut)
    // {
    //     var updateEventQuery="update EVENT set EvtStatus = '".$_POST["EdFunc_Status]"]."' where EvtID =".fn_evtid.";"

    //     var updateEventOut = CRUD(updateEventQuery);

    //     if(updateEventOut)
    //     {
    //     alloteRooms(fn_FunctionID)
    //     }

    // }


}

// function alloteRooms($functId)
// {

//     $finalOut;
//     $deleteRoomsQuery = "delete from tsltt where functid=".functId."";

//   console.log(deleteRoomsQuery)
//   $deleteRoomsOut = CRUD(deleteRoomsQuery);

//     if (!deleteRoomsOut.includes("error"))
//     {
//       $("#EdFunc_RightList div").each(function() {

//         frid = $(this).attr("id");
//         $alloteRoomsQuery = "INSERT INTO [tsltt](frid,functid)VALUES(".frid.",".functId.")";
//         console.log(alloteRoomsQuery)
//         finalOut = CRUD(alloteRoomsQuery);
    
//         if (!finalOut.includes("error"))
//         {
//         return "error";
//         }
    
//       })

//     }

//   return finalOut;
// }


?>

///////////////////////

if(isset($_POST['op']) && $_POST['op']=="updateFunction" )
{
//      $_POST["name"]; 


//     $updateFunctionQuery = "update FUNCT set SPID = '".$_POST["EdFunc_Salesperson]"]."',FunctName = '".$("#EdFunc_Funtion :selected").text()."',OffSitelocation = '',functactnumppl = '".$_POST["EdFunc_Set]"]."',FunctGtdNumPpl = '".$_POST["EdFunc_Gtd]"]."',SetupType = '".parseInt($_POST["EdFunc_SetupType]"])."',FunctInitDate = '".yyyymmdd($_POST["FunctInitDate]"])."',FunctConfDate = '".yyyymmdd($_POST["EdFunc_ConfirmDate]"])."',TimeStat = '',StartDate = '".yyyymmdd($_POST["EdFunc_Date]"])."',StartTime = '".starttime."',EndTime = '".endtime."' ,startcol='".parseInt(KVtime["".starttime.""])."' ,endcol='".KVtime["".endtime.""]."' ,RentType = '".$_POST["EdFunc_RentType]"]."',SetupTime = '".($_POST["EdFunc_Setup]"] ? $_POST["EdFunc_Setup]"] : 0)."',KnockDownTime = '".($_POST["EdFunc_KnckDwn]"] ? $_POST["EdFunc_KnckDwn]"] : 0)."',OnSiteContact = '".$_POST["EdFunc_SiteContact]"]."',UnMovable = '',PostFunctAs = '".$_POST["EdFunc_Post]"]."',alteredby=".$_POST["EdFunc_SiteContact]"]." OUTPUT Inserted.FunctID where FunctID = '".fn_FunctionID."';";

//     $res = $conn->query($insertFunctionQuery)->fetchAll(PDO::FETCH_OBJ);

//    // print_r($res);

//     $functid = $res[0]->FunctID; 
//     echo $functid ;
//     exit();
    // alloteRooms($functid)

    // echo (json_encode(array($res[0])));

    // exit();


    // var updateFunctionOut = CRUD(updateFunctionQuery);

    // if(updateFunctionOut)
    // {
    //     var updateEventQuery="update EVENT set EvtStatus = '".$_POST["EdFunc_Status]"]."' where EvtID =".fn_evtid.";"

    //     var updateEventOut = CRUD(updateEventQuery);

    //     if(updateEventOut)
    //     {
    //     alloteRooms(fn_FunctionID)
    //     }

    // }


}

// function alloteRooms($functId)
// {

//     $finalOut;
//     $deleteRoomsQuery = "delete from tsltt where functid=".functId."";

//   console.log(deleteRoomsQuery)
//   $deleteRoomsOut = CRUD(deleteRoomsQuery);

//     if (!deleteRoomsOut.includes("error"))
//     {
//       $("#EdFunc_RightList div").each(function() {

//         frid = $(this).attr("id");
//         $alloteRoomsQuery = "INSERT INTO [tsltt](frid,functid)VALUES(".frid.",".functId.")";
//         console.log(alloteRoomsQuery)
//         finalOut = CRUD(alloteRoomsQuery);
    
//         if (!finalOut.includes("error"))
//         {
//         return "error";
//         }
    
//       })

//     }

//   return finalOut;
// }



//////////
      // $("#DateTextArea div").each(function(){
      //    console.log($(this).text().indexOf(mmddyyyy(date)))

      //    if($(this).text().indexOf(mmddyyyy(date)) > -1){
      //    return;
      //    }
      // });

      //    datesList+='<div>'+mmddyyyy(date)+'</div>';
      //    console.log(datesList)
      //    $("#DateTextArea").val(datesList)

///////////

   $("#NewDate").datepicker({format: 'mm/dd/yyyy'}).on('click', function()
   {
       $(this).datepicker('hide');
       list+='<div onselect="" >'+$(this).val()+'</div>';
       $("#DateTextArea").append(list)

   });

   //////////

         html +="<tr functid="+value.functId+" onclick='highlight(this)' > <td ><input  type='checkbox' style='opacity:1' > </td> <td><select  id='FunctionName_"+i+"' ><?php foreach($conn->query( 'select resid as id ,resdesc as value  from FUNCTNAMES')->fetchAll(PDO::FETCH_OBJ) as $row){
            
         $a=(?>++<?php);  
            
        //$sel = ($id ==  )? 'selected="selected"':'';
		
        echo '<option value="'.$listoption_item.'" '.$sel.'>'.$listoption_item.'</option>';  
        
        
         echo '<option value='.$row->id.' >' . $row->value . '</option>';}?> </select></td>  <td contenteditable >0</td> <td ><input type= 'text'   id='NewDate' class='form-control selectpicker' readonly  ></td> <td><input   type='time' class='form-control' id='NewStartTime' step='1800'></td> <td><input type='time' class='form-control' id='NewEndTime' step='1800'></td> <td ><input  type='checkbox' style='opacity:1' ></td> </tr>";
         
         console.log(value.functId)
         $("#FunctionName_"+i+"").val(value.functId).prop('selected',true);


///////////////////         



             #td1  div {
  display: inline-block;
  height: 150px;
  overflow: auto
}

#td1 table th {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
}

#td1 table {
  border-collapse: collapse;
}

#td1 th,
td {
  padding: 1em .5em;
}

////////


<!-- 
              <table border=1>
               <thead><th>Copy Function </th><th>Function Name </th><th>Days After Start Date</th><th>New Date </th><th>New Start Time </th><th>New End Time </th><th>Copy Services </th></thead>
               
               <tbody id="cpyMvBkgFnsDiv" >
               </tbody>
               </table> -->
               
               /////////////

  <div class="col-lg-12 col-md-12 col-sm-12 form-group no-padding">
                     <div class="col-lg-2 col-md-2 col-sm-2">
                        <button type="button" class="btn Booking-Btn Function-btn " id="EdFunc_Prev"><< Prev</button>
                     </div>
                     <div class="col-lg-6 col-md-6 col-sm-6">
                        <input  type="text" name="EdFunc_meeting" id="EdFunc_meeting" class="form-control selectpicker" readonly required >
                     </div>
                     <div class="col-lg-2 col-md-2 col-sm-2">
                        <button type="button" class="btn Booking-Btn Function-btn" id="EdFunc_Next">Next >></button>
                     </div>
                     <div class="col-sm-2">
                        <div class="col-sm-12 inputGroupContainer">
                           <button type="button" class="btn" id="Function_Filter" >Filter</button>
                        </div>
                     </div>
                  </div>
                  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 tab-pane" id="b_tab">
                     <!-- Nav tabs -->
                     <ul class="nav nav-tabs col-lg-12 col-md-12 col-sm-12 col-xs-12 no-padding">
                        <li class=" col-lg-6 col-md-6 col-sm-6 col-xs-6 text-center no-padding FA_Tab"><a href="#FA_DetailTab" data-toggle="tab" ><strong>Detail Function</strong></a></li>
                        <li class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-center no-padding FA_Tab"><a href="#FA_RoomSelectionTab" data-toggle="tab" ><strong>Room Selection</strong></a></li>
                     </ul>
                     <!-- Nav tabs content -->
                     <div class="tab-content">
                        <div id="FA_DetailTab" class="tab-pane active">
                           <div class="col-lg-12 col-md-12 col-sm-12 no-padding GreyBack" style="padding-top: 15px!important;">
                              <div class="col-lg-12 col-md-12 col-sm-12 form-group no-padding">
                                 <div class="col-lg-4 col-md-4 col-sm-4">
                                    <label>Function</label>
                                    <div class="input-group-addon">
                                       <select  id="EdFunc_Funtion" name="EdFunc_Funtion" class="form-control selectpicker" required   >
                                          <option selected="selected">Select Function</option>
                                          <?php 
                                             foreach($conn->query( "select resid as id ,resdesc as value  from FUNCTNAMES")->fetchAll(PDO::FETCH_OBJ) as $row){
                                             echo "<option value=".$row->id.">" . $row->value . "</option>";
                                             }
                                             ?>
                                       </select>
                                    </div>
                                 </div>
                                 <div class="col-lg-4 col-md-4 col-sm-4">
                                    <label>Post As</label>
                                    <input type="text" class="form-control" id="EdFunc_Post" name="EdFunc_Post" required  >
                                 </div>
                                 <div class="col-lg-4 col-md-4 col-sm-4">
                                    <label>Status</label>
                                    <div class="input-group-addon">
                                       <select   id="EdFunc_Status" name="EdFunc_Status" class="form-control selectpicker" required >
                                          <option selected="selected" val="">Select Status</option>
                                          <?php 
                                             foreach($conn->query( "select statusid as id ,statustype as value from SYS_STATDESC")->fetchAll(PDO::FETCH_OBJ) as $row){
                                             echo "<option value=".$row->id.">" . $row->value . "</option>";
                                             }
                                             ?>
                                       </select>
                                    </div>
                                 </div>
                              </div>
                              <div class="col-lg-12 col-md-12 col-sm-12 form-group no-padding">
                                 <div class="col-lg-4 col-md-4 col-sm-4">
                                    <label>Date</label>
                                    <div class="input-group-addon">
                                       <input required  type="text"  id="EdFunc_Date" name="EdFunc_Date" class="form-control" readonly>
                                    </div>
                                 </div>
                                 <div class="col-lg-4 col-md-4 col-sm-4">
                                    <label>Start Time</label>
                                    <input required  type="time" class="form-control" id="EdFunc_StartTime" name="EdFunc_StartTime" step="1800">
                                 </div>
                                 <div class="col-lg-4 col-md-4 col-sm-4">
                                    <label>End Time</label>
                                    <input required  type="time" class="form-control" id="EdFunc_EndTime" name="EdFunc_EndTime" step="1800">
                                 </div>
                              </div>
                              <div class="col-lg-12 col-md-12 col-sm-12 form-group no-padding">
                                 <div class="col-lg-4 col-md-4 col-sm-4">
                                    <label>Exp</label>
                                    <input required  type="number" class="form-control" id="EdFunc_Exp" name="EdFunc_Exp" onkeypress='return event.charCode >= 48 && event.charCode <= 57' min="0" value=0>
                                 </div>
                                 <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="col-lg-12 col-md-12 col-sm-12 no-padding">
                                       <label>Gtd/Set</label>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6" style="padding-left: 0px;">
                                       <input required  type="number" class="form-control" id="EdFunc_Gtd" name="EdFunc_Gtd" onkeypress='return event.charCode >= 48 && event.charCode <= 57' min="0" value=0>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6" style="padding-right: 0px;">
                                       <input required  type="number" class="form-control" id="EdFunc_Set" name="EdFunc_Set" onkeypress='return event.charCode >= 48 && event.charCode <= 57' min="0" value=0>
                                    </div>
                                 </div>
                                 <div class="col-lg-4 col-md-4 col-sm-4">
                                    <label>Salesperson</label>
                                    <div class="input-group-addon">
                                       <select  required  id="EdFunc_Salesperson" name="EdFunc_Salesperson" class="form-control selectpicker">
                                          <option selected="selected">Select Salesperson</option>
                                          <?php 
                                             foreach($conn->query( "select salesid as id ,firstname+lastname  as value from SALPT")->fetchAll(PDO::FETCH_OBJ) as $row){
                                             echo "<option value=".$row->id.">" . $row->value . "</option>";
                                             }
                                             ?>
                                       </select>
                                    </div>
                                 </div>
                              </div>
                              <div class="col-lg-12 col-md-12 col-sm-12 form-group no-padding">
                                 <div class="col-lg-3 col-md-3 col-sm-3">
                                    <label>On-Site Contact</label>
                                    <div class="input-group-addon">
                                       <select  required  id="EdFunc_SiteContact" name="EdFunc_SiteContact" class="form-control selectpicker">
                                          <option selected="selected" value="0">Select SiteContact</option>
                                          <?php 
                                             foreach($conn->query( "select salesid as id ,firstname+lastname  as value from SALPT")->fetchAll(PDO::FETCH_OBJ) as $row){
                                             echo "<option value=".$row->id.">" . $row->value . "</option>";
                                             }
                                             ?>
                                       </select>
                                    </div>
                                 </div>
                                 <div class="col-lg-3 col-md-3 col-sm-3">
                                    <label>Confirm Date</label>
                                    <input required  type="text" class="form-control" id="EdFunc_ConfirmDate" name="EdFunc_ConfirmDate" required readonly>
                                 </div>
                                 <div class="col-lg-3 col-md-3 col-sm-3">
                                    <label>Contact Date</label>
                                    <div class="input-group-addon">
                                       <input required  type="text" id="EdFunc_ContactDate" name="EdFunc_ContactDate" class="form-control " required readonly>
                                    </div>
                                 </div>
                                 <div class="col-lg-3 col-md-3 col-sm-3">
                                    <label>Init Date</label>
                                    <div class="input-group-addon">
                                       <input required  type="text" id="FunctInitDate" name="FunctInitDate" class="form-control " required readonly>
                                    </div>
                                 </div>
                              </div>
                              <div class="col-lg-12 col-md-12 col-sm-12">
                                 <div class="col-lg-3 col-md-3 col-sm-3">
                                    <label>Funct End Date</label>
                                    <div class="input-group-addon">
                                       <input required  type="text" id="functenddate" name="functenddate" class="form-control " required readonly>
                                    </div>
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div id="FA_RoomSelectionTab" class="tab-pane ">
                           <div class="col-lg-12 col-md-12 col-sm-12 no-padding GreyBack" style="padding-top: 15px!important;">
                              <div class="col-lg-12 col-md-12 col-sm-12 no-padding form-group">
                                 <div class="col-lg-6 col-md-6 col-sm-6">
                                    <label>Section</label>
                                    <div class="input-group-addon">
                                       <select  required  id="EdFunc_Selection" name="EdFunc_Selection" class="form-control selectpicker">
                                          <option value="All" selected>All</option>
                                          <?php 
                                             foreach($conn->query( "select sectionid as id,sectionname as value from sections where sectionid>0")->fetchAll(PDO::FETCH_OBJ) as $row){
                                             echo "<option value=".$row->id.">" . $row->value . "</option>";
                                             }
                                             ?>
                                       </select>
                                    </div>
                                 </div>
                                 <div class="col-lg-6 col-md-6 col-sm-6" style="padding-top: 25px;">
                                    <div class="col-lg-5 col-md-5 col-sm-5">
                                       <label>
                                       <input required  type="checkbox" id="EdFunc_Unmovable" name="EdFunc_Unmovable" >Unmovable
                                       </label>
                                    </div>
                                    <div class="col-lg-5 col-md-5 col-sm-5">
                                       <label>
                                       <input required  type="checkbox" id="EdFunc_OffSite" name="EdFunc_OffSite">Off Site
                                       </label>
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-2">
                                       <!-- <button type="button" class="btn pin-image" alt="pin" id="EdFunc_pin" ></button> -->
                                    </div>
                                 </div>
                              </div>
                              <div class="col-lg-12 col-md-12 col-sm-12 no-padding form-group">
                                 <div class="col-lg-6 col-md-6 col-sm-6 no-padding">
                                    <div class="col-lg-12 col-md-12 col-sm-12 ">
                                       <label>Function Room</label> 
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6">
                                       <button type="button" class="btn Booking-Btn" id="EdFunc_Find">Find</button>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6">
                                       <button type="button" class="btn Booking-Btn" id="EdFunc_All">All</button>
                                    </div>
                                 </div>
                                 <div class="col-lg-6 col-md-6 col-sm-6">
                                    <div class="col-lg-12 col-md-12 col-sm-12 " style="padding-top: 30px;padding-left: 70px;">
                                       <label>Rooms For This Function</label>
                                    </div>
                                 </div>
                              </div>
                              <div class="col-sm-12 col-md-12 col-lg-12  no-padding">
                                 <div class="col-sm-5 col-md-5 col-lg-5" id="EdFunc_LeftListdiv"
                                    style="overflow: auto;border: 1px solid grey;">
                                    <div class="col-sm-12 col-md-12 col-lg-12 form-group Room-selection-grid" id="EdFunc_LeftList">
                                       <?php 
                                          $query = "select distinct SFRDT.frdid,SFRDT.frname from SFRDT  join tsltt tsltt on SFRDT.frdid=tsltt.frid where  sectionid is not null  ";
                                          foreach($conn->query($query)->fetchAll(PDO::FETCH_OBJ) as $row){
                                          echo "<div  class='col-sm-12 col-md-12 col-lg-12 form-group func_pointer " .$row->frdid."' tabindex='-1' id='".$row->frdid."' onclick=selectFunctionRoom('" .$row->frdid."') disabled>" .$row->frname . "</div>";
                                          }
                                          ?>
                                    </div>
                                 </div>
                                 <div class="col-sm-2 col-md-2 col-lg-2 form-group no-padding">
                                    <div class="col-sm-12 col-md-12 col-lg-12 form-group no-padding">
                                    </div>
                                    <div class="col-sm-12 col-md-12 col-lg-12 form-group no-padding">
                                       <button type="button" class="btn Booking-Btn" id="EdFunc_RightShift"> >> </button>
                                    </div>
                                    <div class="col-sm-12 col-md-12 col-lg-12 form-group no-padding">
                                       <button type="button" class="btn Booking-Btn" id="EdFunc_LeftShift"> << </button>
                                    </div>
                                 </div>
                                 <div class="col-sm-5 col-md-5 col-lg-5 form-group" id="EdFunc_rightListdiv"
                                    style="overflow: auto;border: 1px solid grey;">
                                    <div class="col-sm-12 col-md-12 col-lg-12 form-group Room-selection-grid" id="EdFunc_RightList">
                                    </div>
                                 </div>
                              </div>
                              <div class="col-lg-12 col-md-12 col-sm-12 form-group no-padding">
                                 <div class="col-lg-4 col-md-4 col-sm-4">
                                    <label>Setup Type</label>
                                    <div class="input-group-addon">
                                       <select  required  id="EdFunc_SetupType" name="EdFunc_SetupType" class="form-control selectpicker">
                                          <option selected="selected">Select SetupType</option>
                                          <?php 
                                             foreach($conn->query( "select sutype as id ,sudesc as value  from SUTYPES")->fetchAll(PDO::FETCH_OBJ) as $row){
                                             echo "<option value=".$row->id.">" . $row->value . "</option>";
                                             }
                                             ?>
                                       </select>
                                    </div>
                                 </div>
                                 <div class="col-lg-4 col-md-4 col-sm-4 no-padding">
                                    <div class="col-sm-12 col-md-12 col-lg-12">
                                       <label>Setup/KnckDwn</label>
                                    </div>
                                    <div class="col-sm-12 col-md-12 col-lg-12 no-padding">
                                       <div class="col-lg-6 col-md-6 col-sm-6">
                                          <div class="input-group-addon">
                                             <select  required  id="EdFunc_Setup" name="EdFunc_Setup" class="form-control selectpicker">
                                                <option value="0">None</option>
                                                <option value=".5">0.5 hour(s)</option>
                                                <option value="1">1 hour(s)</option>
                                                <option value="1.5">1.5 hour(s)</option>
                                                <option value="2.0">2 hour(s)</option>
                                                <option value="2.5">2.5 hour(s)</option>
                                                <option value="3.0">3 hour(s)</option>
                                                <option value="3.5">3.5 hour(s)</option>
                                                <option value="4.0">4 hour(s)</option>
                                                <option value="4.5">4.5 hour(s)</option>
                                                <option value="5.0">5 hour(s)</option>
                                             </select>
                                          </div>
                                       </div>
                                       <div class="col-lg-6 col-md-6 col-sm-6">
                                          <select  required  id="EdFunc_KnckDwn" name="EdFunc_KnckDwn" class="form-control selectpicker">
                                             <option value="0">None</option>
                                             <option value=".5">0.5 hour(s)</option>
                                             <option value="1.0">1 hour(s)</option>
                                             <option value="1.5">1.5 hour(s)</option>
                                             <option value="2.0">2 hour(s)</option>
                                             <option value="2.5">2.5 hour(s)</option>
                                             <option value="3.0">3 hour(s)</option>
                                             <option value="3.5">3.5 hour(s)</option>
                                             <option value="4.0">4 hour(s)</option>
                                             <option value="4.5">4.5 hour(s)</option>
                                             <option value="5.0">5 hour(s)</option>
                                          </select>
                                       </div>
                                    </div>
                                 </div>
                                 <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="col-sm-12 col-md-12 col-lg-12 no-padding">
                                       <label>Rent Type/Revenue</label>
                                    </div>
                                    <div class="col-sm-12 col-md-12 col-lg-12 no-padding">
                                       <div class="col-lg-6 col-md-6 col-sm-6" style="padding-left: 0px;">
                                          <div class="input-group-addon">
                                             <select  required  id="EdFunc_RentType" name="EdFunc_RentType" class="form-control selectpicker">
                                                <option value="0">Hourly</option>
                                                <option value="1">Quarter Day</option>
                                                <option value="2">Half Day</option>
                                                <option value="3">Full Day</option>
                                                <option value="4">Over-ride</option>
                                                <option value="5">In Package</option>
                                             </select>
                                          </div>
                                       </div>
                                       <div class="col-lg-6 col-md-6 col-sm-6" style="padding-right: 0px;">
                                          <div class="input-group-addon">
                                             <input required  type="text" id="EdFunc_Revenue" name="EdFunc_Revenue" class="form-control selectpicker">
                                             </select>
                                          </div>
                                       </div>
                                    </div>
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="col-lg-12 col-md-12 col-sm-12">
                     <div class="col-lg-12 col-md-12 col-sm-12 no-padding GreyBack" style="padding-bottom: 15px !important;">
                        <div class="col-lg-12 col-md-12 col-sm-12 form-group no-padding">
                           <div class="col-lg-12 col-md-12 col-sm-12">
                              <label>Notes</label>
                              <textarea type="text" class="form-control" rows="5" id="EdFunc_Notes" name="EdFunc_Notes" style="resize: none; overflow-y: scroll;">
                              </textarea>
                           </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 form-group no-padding">
                           <div class="col-lg-3 col-md-3 col-sm-3">
                              <button type="button" class="btn Booking-Btn" id="EdFunc_Forecast" onclick="Forecast()" style="width:100%">Forecast</button>
                           </div>
                           <div class="col-lg-3 col-md-3 col-sm-3">
                              <button type="button" class="btn Booking-Btn" id="EdFunc_Summary" onclick="fn_functionSummary(fn_FunctionID);" style="width:100%">Summary</button>
                           </div>
                           <div class="col-lg-3 col-md-3 col-sm-3">
                              <button type="button" class="btn Booking-Btn" id="EdFunc_Deposits" onclick="Deposits()" style="width:100%">Deposits</button>
                           </div>
                           <div class="col-lg-3 col-md-3 col-sm-3">
                              <button type="button" class="btn Booking-Btn" id="EdFunc_Services" onclick="Services()" style="width:100%">Services</button>
                           </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12">
                           <div class="row">
                              <div class="col-lg-1 col-md-1 col-sm-1">
                              </div>
                              <div class="col-lg-10 col-md-10 col-sm-10">
                                 <div class="col-lg-4 col-md-4 col-sm-4">
                                    <button type="button" class="btn Booking-Btn" id="EdFunc_New" style="width:100%" onclick="Newdpst()">New</button>
                                 </div>
                                 <div class="col-lg-4 col-md-4 col-sm-4">
                                    <button type="button" class="btn Booking-Btn" id="EdFunc_Ok" onclick="Savefn();" style="width:100%">Save</button>
                                 </div>
                                 <div class="col-lg-4 col-md-4 col-sm-4">
                                    <button type="button" class="btn Booking-Btn" id="EdFunc_Cancel" data-dismiss="modal" style="width:100%" >Cancel</button>
                                 </div>
                              </div>
                              <div class="col-lg-1 col-md-1 col-sm-1">
                              </div>
                           </div>
                        </div>
                     </div>
                  </div>

//////////////////

php_pdo_72_ts_x64.dll
php_pdo_73_ts_x64.dll
php_pdo_74_ts_x64.dll
php_pdo_sqlsrv_72_ts_x64.dll
php_pdo_sqlsrv_73_ts_x64.dll
php_pdo_sqlsrv_74_ts_x64.dll


php_sqlsrv_72_ts_x64.dll
php_sqlsrv_73_ts_x64.dll
php_sqlsrv_74_ts_x64.dll
php_pdo_sqlsrv_72_ts_x64.dll
php_pdo_sqlsrv_73_ts_x64.dll
php_pdo_sqlsrv_74_ts_x64.dll

sudo kill $(sudo lsof -t -i:3001)
sudo /opt/lampp/lampp start
sudo nano /etc/hosts
/////

use e_056365a097
db.Users.remove({})

sudo ./xampp-linux-x64-7.4.1-1-installer.run

/////
use CentralDB
db.Users.remove({})
db.Master_Process.drop()
db.Accounts.remove({})

use e_056365a097
db.dropDatabase()

////////
Esp - gdxi4P5C! /  www.esp.systems   Camp Allen -paulv / djgelclffg
//////////
sudo rm -r directory
////////////


DB_CONNECTION=sqlsrv
DB_HOST=DESKTOP-FF2K6CN\SQLEXPRESS
DB_PORT=1433
DB_DATABASE=CampAllen
DB_USERNAME= sa
DB_PASSWORD= ndt2sx12


$connection->getDatabasePlatform()->registerDoctrineTypeMapping('phone_no', 'string');
		$connection->getDatabasePlatform()->registerDoctrineTypeMapping('small_notes', 'string');

		$connection->getDatabasePlatform()->registerDoctrineTypeMapping('addr_line1', 'string');
		$connection->getDatabasePlatform()->registerDoctrineTypeMapping('addr_line2', 'string');
		$connection->getDatabasePlatform()->registerDoctrineTypeMapping('city_field', 'string');
		$connection->getDatabasePlatform()->registerDoctrineTypeMapping('state_field', 'string');
		$connection->getDatabasePlatform()->registerDoctrineTypeMapping('post_code', 'string');
		$connection->getDatabasePlatform()->registerDoctrineTypeMapping('timestamp', 'string');
		
        

laravel to do :
 login /user roles via in auth middleware 
make view like view('user.profile')
 replace all ajax to   resource controller put , delete , post , edit
https://scotch.io/tutorials/simple-laravel-crud-with-resource-controllers
redirect back method 
View Composer - in nav bar dropdown 
@each  - show empty view if collection count =0 
https://www.sitepoint.com/laravel-blade-recursive-partials/

Contextual Binding -  use in reports
https://longka.info/blog/2016/04/29/contextual-binding-in-laravel-and-o-in-solid-principles/

authorization
//////////////////
laravel topic not clear
Implicit Controllers - def again

Route Caching
Service Injection
Extending Blade
service container -Binding 
Billing , cache , elixir , redis ,SSH Tasks , testing 
////////////

Start XAMPP -
sudo /etc/init.d/apache2 stop

sudo /opt/lampp/lampp stop
sudo /opt/lampp/lampp start
go to downloads- cd /home/neeraj/Downloads

//////////////////

remove all php
sudo apt-get purge 'php*'
 sudo rm -r /etc/php/7.4
sudo apt-get install php7.0
///////////////
open file manager  as root
sudo nautilus
///////////////
neeraj@abc:~$ locate php.ini
/etc/hhvm/php.ini
/opt/lampp/etc/php.ini
/opt/lampp/etc/php.ini-pre1.7.2
/var/tmp/php.ini.swp

//////////////
sudo pecl config-set php_ini /opt/lampp/etc/php.ini
sudo pecl install sqlsrv
sudo pecl install pdo_sqlsrv
sudo su
printf "; priority=20\nextension=sqlsrv.so\n" > /etc/php/7.4/mods-available/sqlsrv.ini
printf "; priority=30\nextension=pdo_sqlsrv.so\n" > /etc/php/7.4/mods-available/pdo_sqlsrv.ini
exit
sudo phpenmod -v 7.4 sqlsrv pdo_sqlsrv

sudo apt-get -y install php-pear php7.4-dev
sudo pecl install sqlsrv
sudo pecl install pdo_sqlsrv

sudo su
echo "extension=sqlsrv.so" > /etc/php/7.2/mods-available/sqlsrv.ini
echo "extension=pdo_sqlsrv.so" > /etc/php/7.2/mods-available/pdo_sqlsrv.ini

sudo ln -s /etc/php/7.4/mods-available/sqlsrv.ini /etc/php/7.4/cli/conf.d/20-sqlsrv.ini
sudo ln -s /etc/php/7.4/mods-available/pdo_sqlsrv.ini /etc/php/7.4/cli/conf.d/20-pdo_sqlsrv.ini

sudo ln -s /etc/php/7.4/mods-available/sqlsrv.ini /etc/php/7.4/fpm/conf.d/20-sqlsrv.ini
sudo ln -s /etc/php/7.4/mods-available/pdo_sqlsrv.ini /etc/php/7.4/fpm/conf.d/20-pdo_sqlsrv.ini

//////////////////////
open txt editor with root -- sudo gedit

sudo pecl config-set php_ini /etc/php/7.3/fpm/php.ini
sudo pecl install sqlsrv
sudo pecl install pdo_sqlsrv
sudo su
printf "; priority=20\nextension=sqlsrv.so\n" > /etc/php/7.4/mods-available/sqlsrv.ini
printf "; priority=30\nextension=pdo_sqlsrv.so\n" > /etc/php/7.4/mods-available/pdo_sqlsrv.ini
exit
sudo phpenmod -v 7.4 sqlsrv pdo_sqlsrv

sudo apt-get -y install php-pear php7.2-dev
sudo pecl install sqlsrv
sudo pecl install pdo_sqlsrv

sudo su
echo "extension=sqlsrv.so" > /etc/php/7.2/mods-available/sqlsrv.ini
echo "extension=pdo_sqlsrv.so" > /etc/php/7.2/mods-available/pdo_sqlsrv.ini

sudo ln -s /etc/php/7.4/mods-available/sqlsrv.ini /etc/php/7.4/cli/conf.d/20-sqlsrv.ini
sudo ln -s /etc/php/7.4/mods-available/pdo_sqlsrv.ini /etc/php/7.4/cli/conf.d/20-pdo_sqlsrv.ini

sudo ln -s /etc/php/7.4/mods-available/sqlsrv.ini /etc/php/7.4/fpm/conf.d/20-sqlsrv.ini
sudo ln -s /etc/php/7.4/mods-available/pdo_sqlsrv.ini /etc/php/7.4/fpm/conf.d/20-pdo_sqlsrv.ini

copy command 

sudo cp -r /home/neeraj/Downloads/esp_prod /opt/lampp/htdocs

install XAMPP
chmod 755 xampp-linux-x64-7.4.1-1-installer.run
ls -l xampp-linux-x64-7.4.1-1-installer.run
sudo ./xampp-linux-x64-7.4.1-1-installer.run

sudo cp -r /etc/php/7.4/cli/conf.d/pdo_sqlsrv.ini /etc/php/7.4/mods-available

sudo bash -c "echo extension=sqlsrv.so > /etc/php/7.4/apache2/conf.d/sqlsrv.ini"
sudo bash -c "echo extension=sqlsrv.so > /etc/php/7.4/cli/conf.d/sqlsrv.ini"

//////////
open vscode form root

sudo code --user-data-dir="~/.vscode-root"

xrandr

sudo xrandr --newmode "1920x1080_60.00"  173.00  1920 2048 2248 2576  1080 1083 1088 1120 -hsync +vsync
sudo xrandr --addmode VGA-1 "1920x1080_60.00"

///////
azure mssql 

azuredatastudio

https://www.sqlshack.com/how-to-install-sql-server-on-ubuntu/

---install sql sever ubuntu 
sudo apt-get update && sudo apt-get dist-upgrade
sudo apt-get install mysql-server

sudo curl -o /etc/apt/sources.list.d/mssql-server.list https://packages.microsoft.com/config/ubuntu/16.04/mssql-server-2017.list

curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -

sudo apt-get update
sudo apt install mssql-server

install SQL Server: sudo apt-get update sudo apt-get install -y mssql-server.

You should add "extension=pdo_sqlsrv.so" to php.ini

php.ini - sudo nano /etc/php/7.4/cli/php.ini

/etc/php/7.4/apache2

sudo bash -c "echo extension=sqlsrv.so > /etc/php/7.4/apache2/conf.d/sqlsrv.ini"
sudo bash -c "echo extension=sqlsrv.so > /etc/php/7.4/cli/conf.d/sqlsrv.ini"

sudo bash -c "echo extension=sqlsrv.so > /etc/php/7.4/cli/conf.d/pdo_sqlsrv.ini"
sudo bash -c "echo extension=pdo_sqlsrv.so > /etc/php/7.4/apache2/conf.d/pdo_sqlsrv.ini"

printf "; priority=20\nextension=sqlsrv.so\n" > /etc/php/7.4/mods-available/sqlsrv.ini

printf "; priority=30\nextension=pdo_sqlsrv.so\n" > /etc/php/7.4/mods-available/pdo_sqlsrv.ini

sudo su 
curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list > /etc/apt/sources.list.d/mssql-release.list
exit
sudo apt-get update
sudo ACCEPT_EULA=Y apt-get install -y msodbcsql mssql-tools unixodbc-dev
sudo pecl install sqlsrv
sudo pecl install pdo_sqlsrv
echo "extension=sqlsrv" >> `php --ini | grep "Loaded Configuration" | sed -e "s|.*:\s*||"`
echo "extension=pdo_sqlsrv" >> `php --ini | grep "Loaded Configuration" | sed -e "s|.*:\s*||"`

////////
pdo

sudo apt-get update
sudo apt-get install pdo-mssql php7-mssql
////

checklist
HTML-
1.1-Minimise Divs , ClassName ,bootstrap
CSS-
2.1 - every css file should import style.css(having common properties like
border-radius , colors ,msg  ,background image etc )
2.2 -every css rule should start with Page class
2.4 -font-size in vw , margin/padding in vh ,page containers width in %
2.5 -avoid multiple margin / padding in nested elements
JS-
3.1-add hardcorded value/messages in constant file
common -
-follow naming / casing through out all project
-code should not exceed 500 lines
-clean all browser warnings , extra space b/w coding
-First Test UI as Psd Resolution(if Given) with
-elements should not touch any boundries in any Resolution
-commit all your code on git daily
-sync code after completing one screen (edited) 


//////////

A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 Could not open a connection to SQL Server)

//////////
1.Minimise Divs , ClassName ,bootstrap
2.Test Screen from Psd-1920
3.Dont Touch any elements of another container
4.font-sizein vw , margin/padding in vh
5.every css rule should have maximum 3css class name starting with parent class 
6.move common  properties(border-radius , colors ,alert classes ,background image ) in style.css
7.every css file should import style.css

//////

$this->dm->createQueryBuilder(ClientUser::class)
->remove()
->field('email')
->notEqual('mail.nrj@gmail.com')
->getQuery()
->execute();

////////
1280 * 720

/home/neeraj/neeraj/laravel-mailapp/storage/app/e_056365a097/100Contacts(03Jan 17:00:50)

crontab -e
crontab -l

gnome-system-monitor

sudo mongodump --db CentralDB --out /backups
sudo mongodump --db e_056365a097 --out /backups

/////////
http://www.campaignpulse.com/resetpassword/056365a0973672cc83bfbfbcb67b8390

mail.nrj@gmail.com
password123

cd C:\\xampp\\htdocs\\esp

git config --global user.email "mail.nrj@gmail.com"
$ git config --global user.name "neeraj_bit"
git clone https://neeraj_Bit@bitbucket.org/diamondsaurabh/esp.git
git checkout -b "Branchname"
git checkout "Branchname"


Doctrine slack 
Workspace URL: doctrine.slack.com
Email: mail.nrj@gmail.com

////////////////////

max_execution_time = 3000
max_input_time = 6000

@extends('layouts.app')

@section('content')

<div class="d-flex" id="wrapper">

<!-- Sidebar -->asdasd

<div class="bg-light border-right" id="sidebar-wrapper">
<div class="list-group list-group-flush">
<a href="/#" class="list-group-item list-group-item-action bg-light">Dashboard</a>
<a href="/#" class="list-group-item list-group-item-action bg-light">Marketing</a>
</div>
</div>
<!-- /#sidebar-wrapper -->

<!-- Page Content -->
<div id="page-content-wrapper">

<nav class="navbar navbar-expand-lg navbar-light bg-light border-bottom">
<button class="btn btn-primary" id="menu-toggle">&#9776;</button>
<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
<span class="navbar-toggler-icon"></span>
</button>
</nav>

<div class="container-fluid">
Dashboard </div>
</div>
<!-- /#page-content-wrapper -->

</div>

@endsection


////////////////
<?php 

namespace App;

use Illuminate\Notifications\Notifiable;
use Jenssegers\Mongodb\Auth\User as Authenticatable ;
use Illuminate\Contracts\Auth\MustVerifyEmail as MustVerifyEmailContract; // this is an interface
use Illuminate\Auth\MustVerifyEmail; // this the trait


class User extends Authenticatable implements MustVerifyEmail
{

public function hasVerifiedEmail(){}
public function markEmailAsVerified(){}
public function sendEmailVerificationNotification(){}

public function getRememberToken()
{
return $this->remember_token;
}

public function setRememberToken($value)
{
$this->remember_token = $value;
}

public function getRememberTokenName()
{
return 'remember_token';
}


use Notifiable;

/**
* The attributes that are mass assignable.
*
* @var array
*/
protected $fillable = [
'name', 'email', 'password',
];

/**
* The attributes that should be hidden for arrays.
*
* @var array
*/
protected $hidden = [
'password', 'remember_token',
];
}


DB_CONNECTION=mongodb
DB_HOST=127.0.0.1
DB_PORT=27017
DB_DATABASE=mailapp
DB_USERNAME=
DB_PASSWORD=


/////
onLogin() {

fetch('http://jsonplaceholder.typicode.com/?users='+username+'&pwd='+password+'')
.then(res => res.json())
.then((data) => {
Alert.alert(JSON.stringify(data));

})
.catch(console.log)


}


$string="select loginid as name,firstname+lastname as username,passwd as password from salpt where  loginid = '".$_REQUEST["loginid"]."' and passwd='".$_REQUEST["passwd"]."'";


else
{	
$db=$_SESSION["db"];		
}


$_SESSION["conn"]=$db;	
if($_REQUEST["loginid"])
{
$string="select loginid as name,firstname+lastname as username,passwd as password from salpt where  loginid = '".$_REQUEST["loginid"]."' and passwd='".$_REQUEST["passwd"]."'";

$result = $conn->query($string)->fetchAll(PDO::FETCH_OBJ);

$arr[]=array();
if($result)
{

$arr=array();

foreach($result as $row)
{

$arr[] = $row;

}
$arr['conn']=$conn;
echo json_encode($arr);
exit();

}
else
{
$arr[] = 'invalid credentials';
echo json_encode($arr);
exit();	
}
}


C:\Program Files\Git\git-cmd.exe
C:\Users\Avik081117\AppData\Local\Android\Sdk

set ANDROID_HOME=C:\Users\Avik081117\AppData\Local\Android\Sdk
set PATH=%PATH%;%ANDROID_HOME%\tools;%ANDROID_HOME%\platform-tools

C:\Users\Avik081117\AppData\Roaming\npm to local path

npm install -g create-react-native-app
create-react-native-app MyReactNative
react-native run-android
npm run android



npm ERR! enoent ENOENT: no such file or directory, rename 'bowser' -> '.bowser.DELETE'


///////////

id-AT/IND/0015
Esp key - EC3-85B7-AED7-21AC-064A-000A
git clone https://neeraj_Bit@bitbucket.org/diamondsaurabh/esp-project.git
var query="";
var out = CRUD(query);
if(!out.includes('error'))
{
var html='';
$.each(JSON.parse(out), function( index, value ) {
html += '<option value='+value.periodid+'>' +value.periodname+ '</option>';
})
$("#FinancialPeriod").html(html);
}
160.153.77.227 /nrj@aviktechnosoft.com / gopal1SINGH@(password123)
//////////////


https://copycoding.com/d/your-first-machine-learning-project-in-python-with-step-by-step-instructions

https://copycoding.com/d/your-second-machine-learning-project-with-this-famous-iris-dataset-in-python-part-5-of-9-


https://copycoding.com/d/machine-learning-project-in-python-to-predict-loan-approval-prediction-part-6-of-6-
https://www.truiton.com/2013/03/android-pick-date-time-from-edittext-onclick-event/

https://www.youtube.com/watch?v=7OzWwQDJGAU

main.py:72: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stabl
e/user_guide/indexing.html#returning-a-view-versus-a-copy
valid['Predictions'] = 0
main.py:73: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stabl
e/user_guide/indexing.html#returning-a-view-versus-a-copy
valid['Predictions'] = preds



https://www.analyticsvidhya.com/blog/2018/10/predicting-stock-price-machine-learningnd-deep-learning-techniques-python/

https://www.analyticsvidhya.com/blog/2018/10/predicting-stock-price-machine-learningnd-deep-learning-techniques-python/#comment-156033


To register the converters:
>>> from pandas.plotting import register_matplotlib_converters
>>> register_matplotlib_converters()
warnings.warn(msg, FutureWarning)



C:\python\stock>python main.py
C:\Users\Avik081117\AppData\Roaming\Python\Python37\site-packages\pandas\plottin
g\_matplotlib\converter.py:102: FutureWarning: Using an implicitly registered da
tetime converter for a matplotlib plotting method. The converter was registered
by pandas on import. Future versions of pandas will require you to explicitly re
gister matplotlib converters.

To register the converters:
>>> from pandas.plotting import register_matplotlib_converters
>>> register_matplotlib_converters()
warnings.warn(msg, FutureWarning)




ERROR: Command errored out with exit status 1: python setup.py egg_info Check th
e logs for full command output.

ERROR: Command errored out with exit status 1:
command: 'c:\users\avik081117\appdata\local\programs\python\python37-32\pyt
hon.exe' -c 'import sys, setuptools, tokenize; sys.argv[0] = '"'"'C:\\Users\\AVI
K08~1\\AppData\\Local\\Temp\\pip-install-zwbzwnms\\matplotlib\\setup.py'"'"'; __
file__='"'"'C:\\Users\\AVIK08~1\\AppData\\Local\\Temp\\pip-install-zwbzwnms\\mat
plotlib\\setup.py'"'"';f=getattr(tokenize, '"'"'open'"'"', open)(__file__);code=
f.read().replace('"'"'\r\n'"'"', '"'"'\n'"'"');f.close();exec(compile(code, __fi
le__, '"'"'exec'"'"'))' egg_info --egg-base pip-egg-info
cwd: C:\Users\AVIK08~1\AppData\Local\Temp\pip-install-zwbzwnms\matplotl
ib\
Complete output (61 lines):
============================================================================

Edit setup.cfg to change the build options




https://machinelearningmastery.com/machine-learning-in-python-step-by-step/


from . import (constants, error, message, context,
ImportError: cannot import name 'constants' from 'zmq.backend.cython' (C:\Users\
Avik081117\AppData\Roaming\Python\Python37\site-packages\zmq\backend\cython\__in
it__.py)




C:\Users\Avik081117\AppData\Roaming\Composer\vendor\bin;C:\Users\Avik081117\AppData\Local\Programs\Python\Python37-32\python.exe;


import pandas as pd
url = "https://raw.githubusercontent.com/jbrownlee/Datasets/master/iris.csv"
names = ['sepal-length', 'sepal-width', 'petal-length', 'petal-width', 'class']
dataset = pandas.read_csv(url, names=names)


for(int i = -1; i < rows; i ++) {
InvoiceData row = null;
if (i > -1)
row = data[i];
else {
textSpacer = new TextView(this);
textSpacer.setText("");

}
// data columns
final TextView tv = new TextView(this);
tv.setLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.WRAP_CONTENT,
TableRow.LayoutParams.WRAP_CONTENT));

tv.setGravity(Gravity.LEFT);

tv.setPadding(5, 15, 0, 15);
if (i == -1) {
tv.setText("Inv.#");
tv.setBackgroundColor(Color.parseColor("#f0f0f0"));
tv.setTextSize(TypedValue.COMPLEX_UNIT_PX, smallTextSize);
} else {
tv.setBackgroundColor(Color.parseColor("#f8f8f8"));
tv.setText(String.valueOf(row.invoiceNumber));
tv.setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);
}

final TextView tv2 = new TextView(this);
if (i == -1) {
tv2.setLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.MATCH_PARENT,
TableRow.LayoutParams.WRAP_CONTENT));
tv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, smallTextSize);
} else {
tv2.setLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.WRAP_CONTENT,
TableRow.LayoutParams.MATCH_PARENT));
tv2.setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);
}

tv2.setGravity(Gravity.LEFT);

tv2.setPadding(5, 15, 0, 15);
if (i == -1) {
tv2.setText("Date");
tv2.setBackgroundColor(Color.parseColor("#f7f7f7"));
}else {
tv2.setBackgroundColor(Color.parseColor("#ffffff"));
tv2.setTextColor(Color.parseColor("#000000"));
tv2.setText(dateFormat.format(row.invoiceDate));
}


final LinearLayout layCustomer = new LinearLayout(this);
layCustomer.setOrientation(LinearLayout.VERTICAL);
layCustomer.setPadding(0, 10, 0, 10);
layCustomer.setBackgroundColor(Color.parseColor("#f8f8f8"));

final TextView tv3 = new TextView(this);
if (i == -1) {
tv3.setLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.MATCH_PARENT,
TableRow.LayoutParams.MATCH_PARENT));
tv3.setPadding(5, 5, 0, 5);
tv3.setTextSize(TypedValue.COMPLEX_UNIT_PX, smallTextSize);
} else {
tv3.setLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.MATCH_PARENT,
TableRow.LayoutParams.MATCH_PARENT));
tv3.setPadding(5, 0, 0, 5);
tv3.setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);
}

tv3.setGravity(Gravity.TOP);


if (i == -1) {
tv3.setText("Customer");
tv3.setBackgroundColor(Color.parseColor("#f0f0f0"));
} else {
tv3.setBackgroundColor(Color.parseColor("#f8f8f8"));
tv3.setTextColor(Color.parseColor("#000000"));
tv3.setTextSize(TypedValue.COMPLEX_UNIT_PX, smallTextSize);
tv3.setText(row.customerName);
}
layCustomer.addView(tv3);


if (i > -1) {
final TextView tv3b = new TextView(this);
tv3b.setLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.WRAP_CONTENT,
TableRow.LayoutParams.WRAP_CONTENT));

tv3b.setGravity(Gravity.RIGHT);
tv3b.setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);
tv3b.setPadding(5, 1, 0, 5);
tv3b.setTextColor(Color.parseColor("#aaaaaa"));
tv3b.setBackgroundColor(Color.parseColor("#f8f8f8"));
tv3b.setText(row.customerAddress);
layCustomer.addView(tv3b);
}

final LinearLayout layAmounts = new LinearLayout(this);
layAmounts.setOrientation(LinearLayout.VERTICAL);
layAmounts.setGravity(Gravity.RIGHT);
layAmounts.setPadding(0, 10, 0, 10);
layAmounts.setLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.MATCH_PARENT,
TableRow.LayoutParams.MATCH_PARENT));



final TextView tv4 = new TextView(this);
if (i == -1) {
tv4.setLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.MATCH_PARENT,
TableRow.LayoutParams.MATCH_PARENT));
tv4.setPadding(5, 5, 1, 5);
layAmounts.setBackgroundColor(Color.parseColor("#f7f7f7"));
} else {
tv4.setLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.MATCH_PARENT,
TableRow.LayoutParams.WRAP_CONTENT));
tv4.setPadding(5, 0, 1, 5);
layAmounts.setBackgroundColor(Color.parseColor("#ffffff"));
}

tv4.setGravity(Gravity.RIGHT);

if (i == -1) {
tv4.setText("Inv.Amount");
tv4.setBackgroundColor(Color.parseColor("#f7f7f7"));
tv4.setTextSize(TypedValue.COMPLEX_UNIT_PX, smallTextSize);
} else {
tv4.setBackgroundColor(Color.parseColor("#ffffff"));
tv4.setTextColor(Color.parseColor("#000000"));
tv4.setText(decimalFormat.format(row.invoiceAmount));
tv4.setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);
}

layAmounts.addView(tv4);


if (i > -1) {
final TextView tv4b = new TextView(this);
tv4b.setLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.MATCH_PARENT,
TableRow.LayoutParams.WRAP_CONTENT));

tv4b.setGravity(Gravity.RIGHT);
tv4b.setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);
tv4b.setPadding(2, 2, 1, 5);
tv4b.setTextColor(Color.parseColor("#00afff"));
tv4b.setBackgroundColor(Color.parseColor("#ffffff"));

String due = "";
if (row.amountDue.compareTo(new BigDecimal(0.01)) == 1) {
due = "Due:" + decimalFormat.format(row.amountDue);
due = due.trim();
}
tv4b.setText(due);
layAmounts.addView(tv4b);
}


// add table row
final TableRow tr = new TableRow(this);
tr.setId(i + 1);
TableLayout.LayoutParams trParams = new TableLayout.LayoutParams(TableLayout.LayoutParams.MATCH_PARENT,
TableLayout.LayoutParams.WRAP_CONTENT);
trParams.setMargins(leftRowMargin, topRowMargin, rightRowMargin, bottomRowMargin);
tr.setPadding(0,0,0,0);
tr.setLayoutParams(trParams);



tr.addView(tv);
tr.addView(tv2);
tr.addView(layCustomer);
tr.addView(layAmounts);

if (i > -1) {

tr.setOnClickListener(new View.OnClickListener() {
public void onClick(View v) {
TableRow tr = (TableRow) v;
//do whatever action is needed

}
});


}
mTableLayout.addView(tr, trParams);

if (i > -1) {

// add separator row
final TableRow trSep = new TableRow(this);
TableLayout.LayoutParams trParamsSep = new TableLayout.LayoutParams(TableLayout.LayoutParams.MATCH_PARENT,
TableLayout.LayoutParams.WRAP_CONTENT);
trParamsSep.setMargins(leftRowMargin, topRowMargin, rightRowMargin, bottomRowMargin);

trSep.setLayoutParams(trParamsSep);
TextView tvSep = new TextView(this);
TableRow.LayoutParams tvSepLay = new TableRow.LayoutParams(TableRow.LayoutParams.MATCH_PARENT,
TableRow.LayoutParams.WRAP_CONTENT);
tvSepLay.span = 4;
tvSep.setLayoutParams(tvSepLay);
tvSep.setBackgroundColor(Color.parseColor("#d9d9d9"));
tvSep.setHeight(1);

trSep.addView(tvSep);
mTableLayout.addView(trSep, trParamsSep);
}


}


/////////		

http://sunggukim.blogspot.com/2017/11/android-android-read-sqlite-database.html


package com.example.assetsdb;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.TextView;
import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {

TextView readTV;
SqlLiteDbHelper dbHelper;
ArrayList<Contact> contList;

@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);

readTV = (TextView) findViewById(R.id.readTV);
contList = new ArrayList<>();
contList.clear();
dbHelper = new SqlLiteDbHelper(this);
dbHelper.openDataBase();
contList = dbHelper.getDetails();
String msg ="";
for(int i=0;i<contList.size();i++){

Contact cont = contList.get(i);
msg = msg+cont.getId()+" "+cont.getName()+" "+cont.getHint()+"\n\n\n";
readTV.setText(msg);
}
}
}


///////////////////////////

package com.example.assetsdb;

public class Contact {

public String AccountName;
public String EntryDate = "";
public String TransType = "";
public String Amount;
public String DC = "";
public int VourchersID;

public Contact(String AccountName, String EntryDate, String TransType, String Amount, String DC, int VourchersID) {
this.AccountName = AccountName;
this.EntryDate = EntryDate;
this.TransType = TransType;
this.Amount = Amount;
this.DC = DC;
this.VourchersID = VourchersID;
}




public String getAmount() {
return Amount;
}
public void setAmount(String Amount) {
this.Amount = Amount;
}


public String getAccountName() {
return AccountName;
}
public void setAccountName(String id) {
this.AccountName = id;
}
public String getEntryDate() {
return EntryDate;
}
public void setEntryDate(String name) {
this.EntryDate = name;
}
public String getTransType() {
return TransType;
}
public void setTransType(String hint) {
this.TransType = hint;
}

public String getDC() {
return DC;
}
public void setDC(String DC) {
this.DC = DC;
}
public int getVourchersID() {
return VourchersID;
}
public void setVourchersID(int VourchersID) {
this.VourchersID = VourchersID;
}


}


/////////////
9891936996

var arr = new Array({PatientCode:PatientCode,PatientLastName:PatientLastName,PatientFirstName:PatientFirstName,AddressLine1:AddressLine1,AddressLine2:AddressLine2,City:City,State:State,ZipCode:ZipCode,Telephone:Telephone});

$.ajax({
method : "POST",
data : {AddNewDispatch:true,arr:arr},
success:function(data){

console.log('Added');
}

});


if(isset($_POST['AddNewDispatch']))
{

$arr=$_POST['AddNewDispatch'];

print_r($arr);
print_r($arr['PatientCode']);

$query="insert into  mytable( PatientCode=PatientCode,PatientLastName=PatientLastName,PatientFirstName=PatientFirstName,AddressLine1=AddressLine1,AddressLine2=AddressLine2,City=,State=State,ZipCode=ZipCode,Telephone=Telephone) ";

}



<?php  if()?>


14044730167					

if($search->fetch_object()->DeviceType=="ToughBook")
{
$table ="<center><table border=1 style='margin-top: 5em;width:100%; font-size:13px' ><tr><th><center>BMS Name</center></th>
<th><center>BMS Mac</center></th>
<th><center>Send To</center></th>
<th><center>Config Interval(Sec)</center></th><th><center>App Staus</center></th>	 
<th><center>Log Status</center></th>	
<th><center>Device Type</center></th>
<th><center>Edit</center></th>
</tr><tr>"; 

}

else
{
$table ="<center><table border=1 style='margin-top: 5em;width:100%; font-size:13px' ><tr><th><center>BMS Name</center></th>
<th><center>BMS Mac</center></th>
<th><center>Send To</center></th>
<th><center>Config Interval(Sec)</center></th><th><center>Log Request</center></th>	 
<th><center>Log Status</center></th>	
<th><center>Device Type</center></th>
<th><center>Edit</center></th>
</tr><tr>"; 
}



////////
php artisan serve

https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js
composer create-project laravel/esp –-prefer-dist

<div class="modal fade" id="autosearch" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-hidden="true">
<div class="modal-dialog modal-lg">
<div class="modal-content">
<div class="modal-header">
<button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">x</span><span class="sr-only">Close</span></button>
<h3 class="modal-title" id="lineModalLabel">Add Contact</h3>
</div>
<div class="modal-body" style="padding-bottom: 0px;">

</div>
<hr>
</div>
</div>
</div>

else
{
$arr=array();
while($row = mysql_fetch_assoc(mysql_query("select user_id from userinfo")))
{
$arr[] = $row;
}

print_r($arr);
$_SESSION['dispatchIDS']=$arr;

}

/////

$(document).ready(function(){

$("#suggesstion-box").hide();

$("#patid1").keyup(function(){

$("#suggesstion-box").html('');
$.ajax({
type: "POST",
data: {autosearch : true, val :$(this).val()},		
success: function(data){
console.log(data)
$("#suggesstion-box").show();
$("#suggesstion-box").append(data);
$("#patid").css("background","#FFF");
$("#suggesstion-box").css("background","#FFF");
}
});
});
});

//////////

grani@godaddy.com

* What data is actually converted?
*Will you have one copy or version of software and if the Harvard Medical school needs it, will we automatically receive that?

- in Esp web database data is in original  format as in client and integrated same as legacy Esp . database mangement system is sql server 2008 r2 . no database conversion is done 

*What is missing in the new version vs. old version in reporting .
*Is there still a report generator for us to customize our own reports? - almost all reports are mirrored as legacy esp 

in Esp web we have reports setup which can add , remove , sort , group reports columns and query designer module which can design any report's query  runtime and 


*Whose server would this be hosted on ? If ours, what are the requirements for Microsoft, data storage etc?

linux server , sql server 2008 r2 , office 365 are used 

*Do you see us needing any onsite help? - not now 

*If we have a list of unfullfilled needs, what do you see as a timeline and resolution?- depends on list , i implemented last list changes in 3 weeks 

Annual Spreadsheet
Backlog Report
Blocked Sleeping Rooms Change
Forecast Book
GRC Log
Sleeping Room Goal Report
Sleeping Rooms Distribution

ng new charts6
ng build --base-href=/ng/b/
ng build --prod --base-href=/esp-project/ng/b/
///////
include('../ContactUs/index.php');
include('../Setup/index.php');
include('../Reports/index.php');
include('../Activity/index.php');
include("../Booking/NewBookingModal.php");
include('../Availability/spaceHold.php');
include("../Booking/BM_CustomersearchModal.php");
include("../Booking/BM_EditcustomerModal.php");
include("../Customer/AddCustomerModal.php");
include('../Customer/AddContactCust.php');
include("../common/contactsearchmodal.php");
include("../Booking/EditFunction-FA.php");

///////
(111) 111-1111 Ext 1111
<script src="../Availability/assets/js/script.js"></script>
<script src="../Customer/assets/js/script.js"></script>
<script src="../Booking/assets/js/script.js"></script>
<script src="../Booking/assets/js/functionAgenda.js"></script>
<script src="../Booking/assets/js/EditBlock.js"></script>
<script src="../ContactUs/assets/js/script.js"></script>

//////////
$('#SubMenu_AddCustomer').click(function(){  
$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")
$("#AddCustomerModal").modal('show');
});

$('#reportProblem').click(function(){
$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")
$("#MDL_reportProblem").modal('show');
});

$('#space_hold').click(function(){    
$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")
$("#MDL_SpaceHold").modal('show');
});

$('#SideBar_setup').click(function(){    
$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")
$("#Modal_setUp").modal('show');
});


$("#availabilityDiary").click(function(){

$(".iframes").css("display","none");
$(".iframes").attr("src", "");

$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")

sessionStorage.removeItem("AvCustID");	
sessionStorage.removeItem("Avphone");

var iframeAvailibility = $("#IFrame_Availibility");
iframeAvailibility.css("display","inline");

iframeAvailibility.attr("src", iframeAvailibility.data("src"));

});

$("#Customer_Home").click(function()
{
$(".iframes").css("display","none");
$(".iframes").attr("src", "");

$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")

var iframeCustomer = $("#IFrame_Customer");
iframeCustomer.css("display","inline");
iframeCustomer.attr("src", iframeCustomer.data("src"));

});

$("#SideBar_Dashboard").click(function()
{


$(".iframes").css("display","none");
$(".iframes").attr("src", "");

$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")

var iframeHome = $("#IFrame_Home");
iframeHome.css("display","inline");
iframeHome.attr("src", iframeHome.data("src"));

});

$("#Booking_Home").click(function(){

$(".iframes").css("display","none");
$(".iframes").attr("src", "");

sessionStorage.removeItem("BkgCustname");	

$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")			
var iframeBooking = $("#IFrame_Booking");
iframeBooking.css("display","inline");
iframeBooking.attr("src", iframeBooking.data("src"));

});

$("#SubMenu_AddBooking").click(function(){

$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")
$("#NBMdls_NewBookingModal").modal('show');

});

$("#SideBar_contactUs").click(function()
{
$('.foo').animate({ scrollTop: $(document).height() }, 1000);
});

$("#Existing_Contacts").click(function()
{

$(".iframes").css("display","none");
$(".iframes").attr("src", "");

$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")

var iframeHome = $("#IFrame_Contacts");
iframeHome.css("display","inline");
iframeHome.attr("src", iframeHome.data("src"));

});

$("#ReportsInterface").click(function(){

$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")
$("#ReportsInterfaceModal").modal('show');

});

$("#QueryWizard").click(function(){

$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")
$("#QueryWizardModal").modal('show');

});

$("#CallReport").click(function(){

$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")
$("#CallReportModal").modal('show');

});

$("#SideBar_users").click(function(){
$(".iframes").css("display","none");
$(".iframes").attr("src", "");
var iframeHome = $("#IFrame_Users");
iframeHome.css("display","inline");
iframeHome.attr("src", iframeHome.data("src"));
});

/////////////


if(!sessionStorage.getItem("name"))	
{
$('.nv').hide()
}
else
{
$('.nv').show()	
}


132.148.86.127\SQLEXPRESS

https://www.esp.systems/esp-project/api/connect.php?login="select * from users where username='admin' and password='esp'"&db=DAC

if($_REQUEST['login'])
{	
print_r $_REQUEST;
exit();

$conn = sqlsrv_connect( $serverName, array( "Database"=>"".$_REQUEST['db']."", "UID"=>"sa", "PWD"=>"ndt2sx1@"));

$stmt = sqlsrv_query( $conn, "select CompanyName,DBname ,LocationId from tbl_company" );

if( $stmt === false) 
{	
if( ($errors = sqlsrv_errors() ) != null) {
foreach( $errors as $row ) {
$arr[] = $row['message'];
}
}
}
else
{

while($row = sqlsrv_fetch_array($stmt, SQLSRV_FETCH_ASSOC)) 
{	
$arr[] = $row;
}
}

}

if($_REQUEST['query'] and $conn!='')
{
$conn_admin = sqlsrv_connect( $serverName, $connInfo);
$stmt = sqlsrv_query( $conn, $_REQUEST['query'] );

while($row = sqlsrv_fetch_array($stmt, SQLSRV_FETCH_ASSOC)) 
{	
$arr[] = $row;
}

}


//////////////////////////////

<img style="background: url('../assets/login.png');background-position: center;background-repeat: no-repeat;  background-size:100% 100%;height: 108vh;"  class="fishes"/>
<img style="background: url('../assets/ESPHD.png');" class="fish"/>

///////

if( $stmt === false) {
if( ($errors = sqlsrv_errors() ) != null) {
print_r( $errors as $error ) {
//echo 'Error:'$error[ 'message'];
//echo json_encode('Error:'$error[ 'message']);
}
die( );
}
}

///////

if( $stmt === false ) {
if( ($errors = sqlsrv_errors() ) != null) {
print_r( $errors as $error ) {
echo 'Error:'$error[ 'message'];
}
}
}////

Array ( [0] => Array ( [0] => 42000 [SQLSTATE] => 42000 [1] => 156 [code] => 156 [2] => [Microsoft][ODBC Driver 11 for SQL Server][SQL Server]Incorrect syntax near the keyword 'from'. [message] => [Microsoft][ODBC Driver 11 for SQL Server][SQL Server]Incorrect syntax near the keyword 'from'. ) )

////////////////////

<div class="col-xs-12 col-md-12">
<div align="center" class="logoContainer">



<img class="image-responsive" src="../assets/ESPHD.png" alt="ESP LOGO" height="75%">
</div>
</div>

///////////////////

<img class="img-responsive" src="../assets/login.png">

////////////////
<?php  
header("Access-Control-Allow-Origin: *");

session_start();
ini_set('display_errors', '0');

$conn = new PDO("sqlsrv:Server=S132-148-86-127\SQLEXPRESS;Database=harvard","sa","ndt2sx1@");

if ($conn->connect_error) {
die("Connection failed: " . $conn->connect_error);
}

$arr=array();
if($_REQUEST['query'])
{
$result = $conn->query($_REQUEST['query']);
foreach($result->fetchAll(PDO::FETCH_OBJ) as $row)
{
$arr[] = $row;

}	
}

echo json_encode($arr);/
//////////////////

res.forEach(value=>{
if(value.status=200)
{
console.log(value.status)
}
else{
console.log('err')
}
});

////////
.subscribe(
res => {  this.countries=res;
console("status code--->"+res.status)
},
err=>{
console("status code--->"+err.status)
})
///
this.myservice.CRUD(query).subscribe(
res => { 
(console.log(res));
},
err=>{

if(err.status!=500)
{

}
else
{
console.log(err.status)
}
})

////////
[Error Message]
To continue, select a feature to install. If all features are already selected, these features are installed. You cannot add additional features.
================================================================================


return this.http.get<any>('https://www.esp.systems/api/connect.php?query='+query+'').pipe(
(data => console.log(data)), 
catchError(err => this.handleError(err))
);////////


//////

let x =null;
var query="select * from users";
let res =this.myservice.CRUD(query).subscribe(data =>{x=data})

///////
.subscribe(value=>{console.log(value) ;
}, error=>{return error.status });
return this.st;
//////////
CRUD(query) {

this.http.get<any>('https://www.esp.systems/api/connect.php?query='+query+'').subscribe(data => {
promiseResult = data;
console.log(this.promiseResult)
});


return this.promiseResult;
}
///////

Property 'map' does not exist on type 'Observable<Object>'.
.subscribe(data => {
let act = data;
return act;
})

.subscribe(data => {
console.log(data);
})

ERROR in src/app/login/login.component.ts(19,5): error TS2339: Property 'for
ach' does not exist on type 'Subscription'. 

///////
Property 'json' does not exist on type 'Object'.

ERROR in src/app/login/login.component.ts(19,5): error TS2339: Property 'for
ach' does not exist on type 'Subscription'.

Property 'json' does not exist on type 'Object'.

this.todaydate = this.myservice.showTodayDate();

// var query="select * from users";
// console.log(CRUD(query))

.subscribe( data => {

data.forEach(value=>console.log(value.id));
});


import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';


constructor(private http:HttpClient ) {
}


export function CRUD(query) {

this.http.get('https://www.esp.systems/api/connect.php?query='+query+'').subscribe( data => {

if(!data)return null;
else return data

});
}

import 'rxjs-compat';
Property 'json' does not exist on type 'Object'.


for(let o of res){
console.log(o);	
}


res.forEach(childres=> {
console.log(value);	
})

ERROR in src/app/login/login.component.ts(31,5): error TS2339: Property 'forEach
' does not exist on type 'string'.

//////
<?php  
header("Access-Control-Allow-Origin: *");

session_start();
ini_set('display_errors', '0');

$conn = new PDO("sqlsrv:Server=S132-148-86-127\SQLEXPRESS;Database=harvard","sa","ndt2sx1@");

if ($conn->connect_error) {
die("Connection failed: " . $conn->connect_error);
}

$query="select top 1 * from users";
$arr=array();
$result = $conn->query($query);
foreach($result->fetchAll(PDO::FETCH_OBJ) as $row)
{
$arr[] = $row;

}
echo json_encode($arr);

//////////////////

header('Access-Control-Allow-Origin: https://esp.systems/api/connect.php');
header('Access-Control-Allow-Credentials: true');

session_start();
ini_set('display_errors', '0');
$db_name = $_SESSION['nameData'];
$conn = new PDO("sqlsrv:Server=S132-148-86-127\SQLEXPRESS;Database=$db_name","sa","ndt2sx1@");

if ($conn->connect_error) {
die("Connection failed: " . $conn->connect_error);
}
$conn->query("set time_zone = '+00:00' ");
echo '1';
ini_set('display_errors', '1');

///////////

var express = require("express");
var app = express();

var bodyParser = require("body-parser");
var sql = require("mssql");

app.use(bodyParser.json()); 

app.use(function (req, res, next) {
res.header("Access-Control-Allow-Origin", "*");
res.header("Access-Control-Allow-Methods", "GET,HEAD,OPTIONS,POST,PUT");
res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, contentType,Content-Type, Accept, Authorization");
next();
});

app.listen(3000, () => {
console.log("Server running on port 3000");
});

var dbConfig = {
user:  "sa",
password: "ndt2sx1@",
server: "S132-148-86-127\SQLEXPRESS",
database:"harvard"
};

app.get("/url", (req, res, next) => {
res.json(["Tony","Lisa","Michael","Ginger","Food"]);


var  executeQuery = function(res, query){             
sql.connect(dbConfig, function (err) {
if (err) {   
console.log("Error while connecting database :- " + err);
res.send(err);
}
else {

console.log("connected ");

}
});           
}

});

////////////////////


// create Request object
var request = new sql.Request();
// query to the database
request.query(query, function (err, res) {
if (err) {
console.log("Error while querying database :- " + err);
res.send(err);
}
else {
res.send(res);
}
});





//http://esp.systems/ng/api/connect.php
//"https://reqres.in/api/users?page=2"


this.headers = new HttpHeaders()
.set('Access-Control-Allow-Origin', 'http://localhost:4200')
.set('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, DELETE')
.set('Access-Control-Max-Age', '3600')
.set('Access-Control-Allow-Credentials', 'true')
.set('Access-Control-Allow-Headers', 'Content-Type, authorization')
.set('Content-Type', 'application/json');
console.log(this.headers);


Access to XMLHttpRequest at '' from origin 'http://localhost:4200' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.

/////////

Access to XMLHttpRequest at '' from origin 's' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.


var qry_spbkgold="select bookingid,bookingsalespersonfirstname+bookingsalespersonlastname as Salesperson,max(BookingName) as BookingName,max(CustomerName) as CustomerName,max(COALESCE(BookingManager,'')) as BookingManager ,max(bookingmarketid) as bookingmarketid ,max(bookingsalespersonid) as bookingsalespersonid,max(bkgrevenuerpt.Market) as Market,max(BookingStart) as BookingStart,max(BookingEnd) as BookingEnd, max(Status) as Status,max(RoomRentalTotal) as RoomRentalTotal,sum([CC Food and Beverage]) as [CC_Food_and_Beverage],sum([CC Audio Visual]) as [CC_Audio_Visual],sum([HMS Campus Catering]) as [HMS_Campus_Catering],sum([CC Room Setup/Rates]) as [CC_Room_Setup] ,sum([service_total])+max(RoomRentalTotal) as 'subtotal'  from bkgrevenuerpt where BookingStart between '"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"' and bookingsalespersonfirstname+bookingsalespersonlastname ='"+val_sp.Salesperson.trim()+"' group by  bookingid,Market,bookingsalespersonfirstname+bookingsalespersonlastname union  select '' as bookingid,Market+' Total for '+max(bookingsalespersonfirstname+bookingsalespersonlastname) as Salesperson,'' as BookingName,'' as CustomerName,'' as BookingManager ,'' as bookingmarketid ,'' as bookingsalespersonid,Market+' Total' as Market,'' as BookingStart,'' as BookingEnd, '' as Status,'0' as 'RoomRentalTotal',sum([CC Food and Beverage]) as [CC_Food_and_Beverage],sum([CC Audio Visual]) as [CC_Audio_Visual],sum([HMS Campus Catering]) as [HMS_Campus_Catering],sum([CC Room Setup/Rates]) as [CC_Room_Setup] ,sum(0) as 'subtotal' from bkgrevenuerpt where BookingStart between '"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"' and bookingsalespersonfirstname+bookingsalespersonlastname ='"+val_sp.Salesperson.trim()+"' group by  Market  union  select '' as bookingid,'"+val_sp.Salesperson.trim()+"'+' Total' as Salesperson,'' as BookingName,'' as CustomerName,'' as BookingManager ,'' as bookingmarketid ,'' as bookingsalespersonid,'overall' as Market ,'' as BookingStart,'' as BookingEnd, '' as Status,'0' as 'RoomRentalTotal',sum([CC Food and Beverage]) as [CC_Food_and_Beverage],sum([CC Audio Visual]) as [CC_Audio_Visual],sum([HMS Campus Catering]) as [HMS_Campus_Catering],sum([CC Room Setup/Rates]) as [CC_Room_Setup] ,sum([service_total]) as 'subtotal' from bkgrevenuerpt where BookingStart between '"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"' and bookingsalespersonfirstname+bookingsalespersonlastname ='"+val_sp.Salesperson.trim()+"' order by 8 ";

//////////////////////

if(json.UnMovable == '1')
{

$("#b_tab-selector :input").attr("disabled", true);
$("#b_tab-selector :select").attr("disabled", true);

$('#EdFunc_LeftList').addClass('dimmed');
$('#EdFunc_LeftListdiv').append('<div class="col-sm-12 col-md-12 col-lg-12 form-group Room-selection-grid EdFunc_Leftdiv" id="EdFunc_Leftdiv"></div>');
$('#EdFunc_OffSitelist').addClass('func_right');
$('.func_pointer').css('cursor', 'none');
$('#EdFunc_rightListdiv').append('<div class="col-sm-12 col-md-12 col-lg-12 form-group Room-selection-grid EdFunc_Leftdiv" id="EdFunc_Rightdiv"></div>');
}

//////////////////
value is in dropdown
var contactexists = 0 != $('#NBMdls_Contactperson option[value='+$('#editHiddenContactId').val()+']').length;


$('#Act_CR_bookingSearch').click(function(){

$("#BM_CustomersearchModal").modal('show');
$("#BM_CustomersearchModal").css("z-index","1101");

})

$('#Act_CR_ContactSearch').click(function(){

$("#BM_CustomersearchModal").modal('show');
$("#BM_CustomersearchModal").css("z-index","1101");

})


var json='';
if(!CRUD(query).includes('error')){json=JSON.parse(CRUD(query))}

InvoiceArray.map(function (x) {

x.invoice_Functions.map(function (y) {

$("#tbl_FunctionsBilledToCustomer tbody tr:contains('"+y+"')").remove();
return y;

})

});



/////////////
if (typeof jQuery !== "undefined" && typeof saveAs !== "undefined") {
(function($) {
$.fn.wordExport = function(fileName) {

fileName = typeof fileName !== 'undefined' ? fileName : "jQuery-Word-Export";
var static = {
mhtml: {
top: "Mime-Version: 1.0\nContent-Base: " + location.href + "\nContent-Type: Multipart/related; boundary=\"NEXT.ITEM-BOUNDARY\";type=\"text/html\"\n\n--NEXT.ITEM-BOUNDARY\nContent-Type: text/html; charset=\"utf-8\"\nContent-Location: " + location.href + "\n\n<!DOCTYPE html>\n<html>\n_html_</html>",
head: "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<style>\n_styles_\n</style>\n</head>\n",
body: "<body>_body_</body>"
}
};
var options = {
maxWidth: 624
};
// Clone selected element before manipulating it
var markup = $(this).clone();

// Remove hidden elements from the output
markup.each(function() {
var self = $(this);
if (self.is(':hidden'))
self.remove();
});

// Embed all images using Data URLs
var images = Array();
var img = markup.find('img');
for (var i = 0; i < img.length; i++) {
// Calculate dimensions of output image
var w = Math.min(img[i].width, options.maxWidth);
var h = img[i].height * (w / img[i].width);
// Create canvas for converting image to data URL
var canvas = document.createElement("CANVAS");
canvas.width = w;
canvas.height = h;
// Draw image to canvas
var context = canvas.getContext('2d');
context.drawImage(img[i], 0, 0, w, h);
// Get data URL encoding of image
var uri = canvas.toDataURL("image/png");
$(img[i]).attr("src", img[i].src);
img[i].width = w;
img[i].height = h;
// Save encoded image to array
images[i] = {
type: uri.substring(uri.indexOf(":") + 1, uri.indexOf(";")),
encoding: uri.substring(uri.indexOf(";") + 1, uri.indexOf(",")),
location: $(img[i]).attr("src"),
data: uri.substring(uri.indexOf(",") + 1)
};
}

// Prepare bottom of mhtml file with image data
var mhtmlBottom = "\n";
for (var i = 0; i < images.length; i++) {
mhtmlBottom += "--NEXT.ITEM-BOUNDARY\n";
mhtmlBottom += "Content-Location: " + images[i].location + "\n";
mhtmlBottom += "Content-Type: " + images[i].type + "\n";
mhtmlBottom += "Content-Transfer-Encoding: " + images[i].encoding + "\n\n";
mhtmlBottom += images[i].data + "\n\n";
}
mhtmlBottom += "--NEXT.ITEM-BOUNDARY--";

//TODO: load css from included stylesheet
var styles = "";

// Aggregate parts of the file together
var fileContent = static.mhtml.top.replace("_html_", static.mhtml.head.replace("_styles_", styles) + static.mhtml.body.replace("_body_", markup.html())) + mhtmlBottom;

// Create a Blob with the file contents
var blob = new Blob([fileContent], {
type: "application/msword;charset=utf-8"
});
saveAs(blob, fileName + ".doc");
};
})(jQuery);
} else {
if (typeof jQuery === "undefined") {
console.error("jQuery Word Export: missing dependency (jQuery)");
}
if (typeof saveAs === "undefined") {
console.error("jQuery Word Export: missing dependency (FileSaver.js)");
}
}




var query="select '0' as id,'RoomRent' as Services,cast(COALESCE(sum(functroomrentrevenue), 0) as decimal(10,2))  as Charges, '0.00' as ServiceCharge,'0.00' as 	SubTotal,'0.00' as 	StateTax,'0.00' as 	MealTax	,cast(COALESCE(sum(functroomrentrevenue), 0) as decimal(10,2)) as Total from query_functionrevenue where bookingid ='"+objBooking.evtid+"' union all  select headertypeid as id,headerdesc as 'Services','0.00'   as Charges, '0.00' as ServiceCharge,'0.00' as  SubTotal,'0.00' as 	StateTax,'0.00' as 	MealTax	,'0.00' as Total  from HeaderTypes ";

var jsonData=JSON.parse(CRUD(query))

$('#tblFunctionSummery thead').html("<tr><td> Services</td><td>Charges</td><td>ServiceCharge</td><td>SubTotal</td><td>StateTax</td><td>MealTax</td><td>Total</td></tr>");

var row='';
$.each(jsonData, function(key, value){
row+="<tr id="+value.id+"><td>"+value.Services+"</td><td>"+value.Charges+"</td><td>"+value.ServiceCharge+"</td><td>"+value.SubTotal+"</td><td>"+value.StateTax+"</td><td>"+value.MealTax+"</td><td>"+value.Total+"</td></tr>"
});

$('#tblFunctionSummery tbody').html(row);

var chargetotal=0.00,Discounttotal=0.00,ServiceChargetotal=0.00,Othertotal=0.00,StateTaxtotal=0.00,MealTaxtotal=0.00;

$("#tblFunctionSummery tbody tr").each(function()
{

var query1="select COALESCE(max(servitems.headertypeid), 0) as id ,max(ht.HeaderDesc) as 'Category',cast(COALESCE(sum(servitemchrg*servitemqty), 0) as decimal(10,2)) as  Charges ,cast(sum(servitemchrg*servitemqty*taxmapdet.srvchgrate) as decimal(10,2)) as ServiceCharge ,cast(sum(servitemchrg*servitemqty*(1+taxmapdet.srvchgrate)) as decimal(10,2)) as 'SubTotal' , case when  max(taxmapdet.taxid)=1 then  cast(COALESCE(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)),0)  as decimal(10,2)) end  as  'StateTax',case when  max(taxmapdet.taxid)=7 then   cast(COALESCE(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)),0)  as decimal(10,2)) end  as 'MealTax',cast(sum(servitemchrg*servitemqty*(1+srvchgrate+taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) as 'Total'  from servitems left join  funct fn on fn.FunctID = servitems.FunctID  left join EVENT bkg on  fn.evtid =bkg.EvtID  left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid  where bkg.EvtID ='"+objBooking.evtid+"' and servitems.headertypeid="+$(this).attr('id')+"  and effdate=(select max(effdate) from taxmapdet)  group by servitems.headertypeid union all select COALESCE(max(servitems.headertypeid), 0) as id,'Total' as 'Category',cast(COALESCE(sum(servitemchrg*servitemqty), 0) as decimal(10,2)) as  Charges ,cast(sum(servitemchrg*servitemqty*taxmapdet.srvchgrate) as decimal(10,2)) as ServiceCharge ,cast(sum(servitemchrg*servitemqty*(1+taxmapdet.srvchgrate)) as decimal(10,2)) as 'SubTotal' , case when  max(taxmapdet.taxid)=1 then  cast(COALESCE(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)),0)  as decimal(10,2)) end  as  'StateTax',case when  max(taxmapdet.taxid)=7 then   cast(COALESCE(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)),0)  as decimal(10,2)) end  as 'MealTax',cast(sum(servitemchrg*servitemqty*(1+srvchgrate+taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) as 'Total'     from servitems left join  funct fn on fn.FunctID = servitems.FunctID  left join EVENT bkg on  fn.evtid =bkg.EvtID  left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid  where bkg.EvtID ='"+objBooking.evtid+"' and servitems.headertypeid="+$(this).attr('id')+"  and effdate=(select max(effdate) from taxmapdet)  group by servitems.headertypeid  ";



$.each(JSON.parse(CRUD(query1)), function(key, value){

var tr =$("#tblFunctionSummery tbody tr[id="+value.id+"]")

if(!value.MealTax){ value.MealTax="0.00"; }
if(!value.StateTax){ value.StateTax="0.00"; }

tr.children('td:eq(1)').html(value.Charges)
tr.children('td:eq(2)').html(value.ServiceCharge)	
tr.children('td:eq(3)').html(value.SubTotal)
tr.children('td:eq(4)').html(value.StateTax)
tr.children('td:eq(5)').html(value.MealTax)

tr.children('td:eq(6)').html( parseFloat(tr.children('td:eq(1)').html())+parseFloat(tr.children('td:eq(2)').html())+parseFloat(tr.children('td:eq(4)').html())+parseFloat(tr.children('td:eq(5)').html()))

});

chargetotal+=parseFloat($(this).children('td:eq(1)').html());Discounttotal+=parseFloat($(this).children('td:eq(2)').html());ServiceChargetotal+=parseFloat($(this).children('td:eq(3)').html());Othertotal+=parseFloat($(this).children('td:eq(4)').html());StateTaxtotal+=parseFloat($(this).children('td:eq(5)').html());MealTaxtotal+=parseFloat($(this).children('td:eq(6)').html())

});

$("#tblFunctionSummery tbody tr").last().each(function()
{
$(this).children('td:eq(0)').html('Total');$(this).children('td:eq(1)').html(chargetotal);
$(this).children('td:eq(2)').html(Discounttotal);$(this).children('td:eq(3)').html(ServiceChargetotal);$(this).children('td:eq(4)').html(Othertotal);$(this).children('td:eq(5)').html(StateTaxtotal);$(this).children('td:eq(6)').html(MealTaxtotal);		

$(this).children('td:eq(6)').html( parseFloat($(this).children('td:eq(3)').html())+parseFloat($(this).children('td:eq(4)').html())+parseFloat($(this).children('td:eq(5)').html()))

})

var depositquery="select '1' as id ,'Deposit' as 'Category','0.00' as  Charges ,'0.00' as ServiceCharge ,'0.00' as 'SubTotal' ,'0.00' as 'StateTax','0.00' as 'MealTax','0.00' as 'Total'    union all  select '2' as id ,'amtdue' as 'Category','0.00' as  Charges ,'0.00' as ServiceCharge ,'0.00' as 'SubTotal' ,'0.00' as 'StateTax','0.00' as 'MealTax','0.00' as 'Total'";

var jsonData=JSON.parse(CRUD(depositquery))

var row='';
$.each(jsonData, function(key, value){
row+="<tr id="+value.id+"><td style='width:26%;'>"+value.Category+"</td><td>"+value.Charges+"</td><td style='width:18%;' >"+value.ServiceCharge+"</td><td>"+value.SubTotal+"</td><td>"+value.StateTax+"</td><td>"+value.MealTax+"</td><td>"+value.Total+"</td></tr>"
});

$('#depositsmry tbody').html(row);

$("#depositsmry tbody tr").each(function()
{
var query1="select '1' as id ,'Deposit' as 'Category',cast(COALESCE(sum(amtrecvd), 0) as decimal(10,2)) as  Charges ,'0.00' as ServiceCharge ,'0.00' as 'SubTotal' ,'0.00' as 'StateTax','0.00' as 'MealTax',cast(COALESCE(sum(amtrecvd), 0) as decimal(10,2)) as 'Total'  from depositt where EvtID='"+objBooking.evtid+"' union all  select '2' as id ,'amtdue' as 'Category',cast(COALESCE(sum(amtdue), 0) as decimal(10,2)) as  Charges ,'0.00' as ServiceCharge ,'0.00' as 'SubTotal' ,'0.00' as 'StateTax','0.00' as 'MealTax',cast(COALESCE(sum(amtdue), 0) as decimal(10,2)) as 'Total'  from depositt where EvtID='"+objBooking.evtid+"' ";


// $('#BM_BillingServiceTbl tbody').append('<tr tabindex="-1" class="ServItem"><td class="itemname">'+value1.Item+'</td><td class="ServItem_Qty editable" >'+value1.Quantity+'</td><td id="ServItemAct" class="ServItemAct">0</td></tr>');



$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_ServiceSummary.php",
data : {GetServiceItemsForBilling:"GetServiceItemsForBilling",FunctionID:value.FunctID},
success:function(data){

getServiceItem_json = JSON.parse(data);

ServiceItems=new Array();
$.each(getServiceItem_json, function( index, value1 ) {

// $('#BM_BillingServiceTbl tbody').append('<tr tabindex="-1" class="ServItem"><td class="itemname">'+value1.Item+'</td><td class="ServItem_Qty editable" >'+value1.Quantity+'</td><td id="ServItemAct" class="ServItemAct">0</td></tr>');

if(value1.Item!="")
{
var ServiceItem= 
[
{ 
items: value1.Item, 
Qty: value1.Quantity,
Actual: 'NA'
}
];

ServiceItems.push(ServiceItem);

}

var rowCount = $('#BM_BillingServiceTbl tbody tr').length;

if(rowCount>0)
{

$("#BM_BillingServiceTbl tbody tr:first").attr("data-SelectedServItem", "true"); 
$("#BM_BillingServiceTbl tbody tr:first").css("background-color", 'rgb(173, 216, 230)'); 

}


});



$(document).ready(function(){

$(document).on('click', "#BM_BillingServiceTbl tr", function (evt) 
{

$(this).attr("data-selectedservitem", "true");
$(this).nextAll('tr').attr("data-SelectedServItem", "false");
$(this).prevAll('tr').attr("data-SelectedServItem", "false");
$(this).css("background-color", 'rgb(173, 216, 230)');
$(this).nextAll('tr').css("background-color", 'white');
$(this).prevAll('tr').css("background-color", 'white');

});


$(document).on('click', "#BM_BillingFunctionsTbl tr", function (evt) 
{

$(this).attr("data-selectedfunction", "true");
$(this).nextAll('tr').attr("data-selectedfunction", "false");
$(this).prevAll('tr').attr("data-selectedfunction", "false");
$(this).css("background-color", 'rgb(173, 216, 230)');
$(this).nextAll('tr').css("background-color", 'white');
$(this).prevAll('tr').css("background-color", 'white');

var functid = $(this).data('functid');

GetserviceItemsForFunction(functid);

});


});

function GetserviceItemsForFunction(functid)
{

$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_ServiceSummary.php",
data : {GetServiceItemsForBilling:"GetServiceItemsForBilling",FunctionID:functid},
success:function(data){

if(data)
{

getServiceItem_json = JSON.parse(data);
//(getServiceItem_json);
$("#BM_BillingServiceTbl tbody tr").remove();

$.each(getServiceItem_json, function( index, value1 ) {

$('#BM_BillingServiceTbl tbody').append('<tr tabindex="-1" class="ServItem"><td class="itemname">'+value1.Item+'</td><td class="ServItem_Qty editable" >'+value1.Quantity+'</td><td id="ServItemAct" class="ServItemAct">'+value1.Actual+'</td></tr>');




if(isFutureDate==true)
{
$('.FunctAct').attr('contenteditable','false');
}
else
{
$('#FunctAct').attr('contenteditable','true');
}
$('.ServItemAct').attr('contenteditable','true');

});

var rowCount = $('#BM_BillingServiceTbl tbody tr').length;

if(rowCount>0)
{

$("#BM_BillingServiceTbl tbody tr:first").attr("data-SelectedServItem", "true"); 
$("#BM_BillingServiceTbl tbody tr:first").css("background-color", 'rgb(173, 216, 230)'); 

}


}

}

});

}

/////////
if(value.ResDesc!="")
{
var Function= 
[
{ 
FunctionName: value.ResDesc, 
date: value.startDate,
Exp: value.FunctExpNumPpl, 
Gtd: value.FunctGtdNumPpl,
Actual: value.FunctActNumPpl, 
Status: value.status,
ServiceItems:ServiceItems
}
];
}

Functions.push(Function);

}
});





$.each(JSON.parse(CRUD(query1)), function(key, value){

var tr =$("#depositsmry tbody tr[id="+value.id+"]")

if(!value.MealTax){ value.MealTax="0.00"; }
if(!value.StateTax){ value.StateTax="0.00"; }

tr.children('td:eq(1)').html(value.Charges)
tr.children('td:eq(2)').html(value.ServiceCharge)	
tr.children('td:eq(3)').html(value.SubTotal)
tr.children('td:eq(4)').html(value.StateTax)
tr.children('td:eq(5)').html(value.MealTax)

tr.children('td:eq(6)').html( parseFloat(tr.children('td:eq(1)').html())+parseFloat(tr.children('td:eq(2)').html())+parseFloat(tr.children('td:eq(4)').html())+parseFloat(tr.children('td:eq(5)').html()))

});
});












function LoadFunctionBilling(BookingID)
{

$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_Deposit.php",
data : {LoadFunctionBilling :"LoadFunctionBilling",BookingID:BookingID},
success:function(data){
getDeposit_json = JSON.parse(data);
//(getDeposit_json);
$.each(getDeposit_json, function( index, value ) {

$('#BM_BillingFuncTbl tbody').append('<tr id='+value.ResID+'><td>'+value.ResDesc+' - '+value.startDate+' - '+value.StartTime+' - '+value.FunctID+'</td><td class="bookingCustName"></td></tr>');
blling_FunctionID=value.FunctID;

});

}
});

}

function GetBillingFunctionDeposits(functid)
{

var query= "select * , fname.ResDesc as ResDesc, fn.StartDate as StartDate,fn.StartTime as StartTime,fn.EndTime as EndTime from funct fn  join FUNCTNAMES fName on fn.functname=fName.resdesc  join  DEPOSITT  dp on dp.FunctID=fn.FunctID where fn.FunctID='"+functid+"'";

console.log(query)
var json =JSON.parse(CRUD(query));

if(json)
{
getDeposit_json=json;
$('#FuncDe_Table tbody tr').remove();
k=0;

$.each(json, function( index, value ) {

var Avail_tblFnDpst ='<tr data-depositid='+value.depositid+' id="blng_tr_'+k+'" tabindex="-1" ><td><input id="AmtDue_'+k+'" class="blng_AmtDue" class="decimal_val"  type="text" dir="rtl" placeholder="0.00" onkeypress="return event.charCode >= 48 && event.charCode <= 57" value="'+value.amtdue+'"/></td><td ><input type="text" id="DueDate_'+k+'" class="blng_DueDate datepick"  readonly></td><td><input id="AmtPaid_'+k+'" class="decimal_val blng_AmtPaid" type="text" dir="rtl" placeholder="0.00" onkeypress="return event.charCode >= 48 && event.charCode <= 57"  value="'+value.amtrecvd+'"  /></td><td> <input type="text" id="DuePaid_'+k+'" class="datepick maskedExt blng_DuePaid"  readonly></td><td  id="td_billFunction_'+k+'" ><select id="Function_'+k+'"></td><td id="Reciept_'+k+'"contenteditable></td></tr>';

$("#BM_BillingTbl tbody").append(Avail_tblFnDpst);

$("#DueDate_"+k+"").val(value.Duedate);
$("#DuePaid_"+k+"").val(value.Datercvd);

$.each(json, function( index, value1 ) {

$("#Function_"+k+"").append($("<option />").val(value1.FunctID).text(value1.ResDesc+' - '+value1.startDate+' - '+value1.StartTime+' - '+value1.FunctID));

});


$("#DueDate_"+k+"").datepicker({format: 'mm-dd-yyyy'}).on('changeDate', function(){
$(this).datepicker('hide');
});

$("#DuePaid_"+k+"").datepicker({format: 'mm-dd-yyyy'}).on('changeDate', function(){
$(this).datepicker('hide');
});	


var arr = ['0','0','.','0','0'];
$(document).on('keyup',"#AmtDue_"+k+"", function (evt)
{
var s1=$(this).val();
if(s1){
s1 = s1.replace(".","");
s1 = "000" + s1;
var position = s1.length - 2;
var output = [s1.slice(0, position), ".", s1.slice(position)].join('');
$(this).val(parseFloat(output).toFixed(2)); 
} else {
$(this).val("00.00");
}

});

var arr = ['0','0','.','0','0'];
$(document).on('keyup',"#AmtPaid_"+k+"", function (evt)
{
var s1=$(this).val();
if(s1){
s1 = s1.replace(".","");
s1 = "000" + s1;
var position = s1.length - 2;
var output = [s1.slice(0, position), ".", s1.slice(position)].join('');

$(this).val(parseFloat(output).toFixed(2)); 
} else {
$(this).val("00.00");
}

});

k++;
});

}

}

//////////////////////////

$('#EventSummary >td,span,strong,div,table,tbody,tr').css({"font-family":"Arial","font-size":"16px"});


<style> #BCT thead>div {font-family:"Times New Roman";font-size:14px;} </style>
<style> #BCT table center{font-family:"Times New Roman";font-size:14px;} </style>

////////////////////


BCTotalInvoice
BEO
CCInvoice
CourtesyHold
EventSummary
HMSInvoice
HMSSalesContract
HarvardAffiliateContract-billedtoHMSInstitution
InvoiceWithFood
InvoiceforAdvanceDeposit
PARTNERSHMSAffiliateContractwithePayables
RACCFoodInvoice
SalesContract
TotalInvoice



onkeypress="return event.charCode >= 48 && event.charCode <= 57" maxlength="14" 

top: 0; left: 0; bottom: 0; right: 0;

<style>
@page { mso-page-orientation: landscape;  size:29.7cm 21cm;    margin:1cm 1cm 1cm 1cm;}

@page Section1 { mso-header-margin:.5in; mso-footer-margin:.5in; mso-header: h1; mso-footer: f1; }

div.Section1 { page:Section1; }

table#hrdftrtbl
{margin:0in 0in 0in 0in;width:1px;height:1px;overflow:hidden;}

p.MsoFooter, li.MsoFooter, div.MsoFooter
{margin:0in;margin-bottom:.0001pt;mso-pagination:widow-orphan;tab-stops:center 3.0in right 6.0in;font-size:12.0pt;}

</style>

////////////////////////////

<html>
<head>
<style>
@page {   mso-page-orientation: landscape;  size:29.7cm 21cm;    margin:1cm 1cm 1cm 1cm;}

@page Section1 { mso-header-margin:.5in; mso-footer-margin:.5in; mso-header: h1; mso-footer: f1; }

div.Section1 { page:Section1; }

table#hrdftrtbl
{
margin:0in 0in 0in 900in;
width:1px;
height:1px;
overflow:hidden;
}
p.MsoFooter, li.MsoFooter, div.MsoFooter
{
margin:0in;
margin-bottom:.0001pt;
mso-pagination:widow-orphan;
tab-stops:center 3.0in right 6.0in;
font-size:12.0pt;
}
</style>

</head>

<body>
<div class="Section1">
<p>&nbsp;</p>
<br/>
<table id='hrdftrtbl' border='0' cellspacing='0' cellpadding='0'>
<tr><td>        

<div style='mso-element:header' id=h1 ><p class=MsoHeader > <p>&nbsp;</p> </p></div>
</td>
<td>
<div style='mso-element:footer' id=f1><span style='position:relative;z-index:-1'> 

<div class="footeraddress" >
<div><center>The Conference Center at Harvard Medical</center></div>
<div><center>phone: 617-432-8990 fax: 617-432-8991</center></div>
<div><center>www.theconfcenter.hms.harvard.edu/</center></div>
</div>

<span style='mso-no-proof:yes'></span>
<p class=MsoFooter>
<span style=mso-tab-count:2'></span>
Page <span style='mso-field-code: PAGE '><span style='mso-no-proof:yes'></span> from <span style='mso-field-code: NUMPAGES '></span>
</span>
</p>
</div>

</td></tr>
</table>
</div>

</body>
</html>

//////////////////////////////



<html id="BCT" class="contracts">

<!-- <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.7.1/jquery.contextMenu.min.css">-->

<style> #BCT div,strong,span {font-family:Arial;font-size:14px;} </style>
<style> #BCT thead>div {font-family:"Times New Roman";font-size:14px;} </style>
<style> #BCT table center{font-family:"Times New Roman";font-size:14px;} </style>

<div><center><img  style= "padding:2em;" src="../common/images/harvard/contractLogo.jpg" alt="Trulli" width="250" height="150"></center></div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div><strong>Bill to:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </strong><span class="CustomerName"></span></div>
<div><strong>Attention:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </strong><span class="BookingContactFirstName"></span> <span class="BookingContactLastName"></span></div>
<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="CustomerAddress1"></span> <span class="CustomerAddress2"></span></div>
<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="CustomerCity"></span>, <span class="CustomerState"></span> <span class="CustomerPostCode"></span></div>
<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
<div><strong>Event Date:</strong> <span class="bookingstartdate"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>Invoice #:</strong></div>
<div><strong>Invoice Date:</strong> <span class="BookingEndDate"></span></div>
<div>&nbsp;&nbsp;</div>
<hr/>
<div>&nbsp;&nbsp;</div>
<p style="padding:2em;"></p>
<table border=1 width="650" style="" > <tr style="background:#d3d3d3;"> <td colspan="7" width="600"> <div><strong><center style="font-family:'Times New Roman'"  >Est. Total Charges</center></strong></div> </td> </tr> <thead> <tr style="background:#d3d3d3;"> <td width="169"> <div><strong  style="font-family:'Times New Roman'">Category</strong></div> </td> <td width="113"> <div><strong  style="font-family:'Times New Roman'">Charges</strong></div> </td> <td width="113"> <div><strong  style="font-family:'Times New Roman'">Service Chrg</strong></div> </td> <td width="113"> <div><strong  style="font-family:'Times New Roman'">Sub Tot</strong></div> </td> <td width="113"> <div><strong  style="font-family:'Times New Roman'">State Tax </strong></div> </td> <td width="113"> <div><strong  style="font-family:'Times New Roman'">Meal Tax </strong></div> </td> <td width="113"> <div><strong  style="font-family:'Times New Roman'">Total</strong></div> </td> </tr> </thead> <tbody class="BEO_CategoryCharges"> </tbody> </table>
<div>&nbsp;&nbsp;</div> 
<div><strong  style="font-family:'Times New Roman'">&nbsp;</strong></div> 
<div>&nbsp;&nbsp;</div>
<table style="width: 462px;margin-left: 19em;" class="noborder"> <tbody> <tr> <td style="width: 266px;"> <div><strong>Room Rental Total:</strong></div> </td> <td style="width: 182px;"> <div><span class="Room_Rental_Total"></span></div> </td> </tr> <tr> <td style="width: 266px;"> <div><strong>Food And Beverage Total:</strong></div> </td> <td style="width: 182px;"> <div><span class="CC_Food_and_Beverage_Total"></span></div> </td> </tr> <tr> <td style="width: 266px;"> <div><strong>Audio Visual:</strong>&nbsp;&nbsp;</div> </td> <td style="width: 182px;"> <div><span class="CC_Audio_Visual_Total"></span></div> </td> </tr> <tr> <td style="width: 266px;"> <div><strong>HMS Catering:&nbsp; </strong></div> </td> <td style="width: 182px;"> <div><span class="HMSCateringTotal"></span></div> </td> </tr><tr> <td style="width: 266px;"> <div><strong>Parking and Security:&nbsp; </strong></div> </td> <td style="width: 182px;"> <div><span class="CC_Room_SetupRates_Total"></span></div> </td> </tr> <tr> <td style="width: 266px;"> <div><strong>Total Amount</strong></div> </td> <td style="width: 182px;"><div class="BEO_Total_Amount">0</div></div> </td> </tr> <tr> <td style="width: 266px;"> <div><strong>Deposits Paid</strong></div> </td> <td style="width: 182px;"> <div><strong><u><span class="DepositPaid"></span></u></strong></div> </td> </tr> <tr> <td style="width: 266px;"> <div><strong>Total Amount Due</strong></div> </td> <td style="width: 182px;"> <strong><div class="TotalAmountDue"></div></strong></div> </td> </tr> </tbody> </table> 
<p style="padding:2em;"></p>
<div>&nbsp;&nbsp;</div>
<div><strong>Conference Services including Rental, AV and Parking will be charged separately from Catering charges.</strong></div>
<div style="line-height:2em;"><strong>Billing Code:</strong></div>
<p style="line-height:2em;padding:2em;" ><strong><table border=1 style="border: 1px solid black;border-collapse: collapse;width: 48%;height: 5%;"><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></strong></p>
<div>&nbsp;&nbsp;</div>
<div style="line-height:2em;" ><strong>Conference Total:</strong></div>
<div><strong>Catering Total:</strong><span class="CateringOnly"></span></div>

<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div>&nbsp;&nbsp;</div>
<div class="footeraddress" >
<div><center>The Conference Center at Harvard Medical</center></div>
<div><center>phone: 617-432-8990 fax: 617-432-8991</center></div>
<div><center>www.theconfcenter.hms.harvard.edu/</center></div>
</div>

</html>

////////////////////////////////


style="border-collapse:collapse;border:1px solid black;border-spacing":'0'"


<div>&nbsp;&nbsp;</div>

function DACContracts(bookingID)
{

$("#my_image").attr("src","../common/Templates/logo.PNG");

$('table').css('width','100%');
$('thead tr td').css('border','1px solid');
$('thead tr td').css('border-collapse','collapse');
$('thead tr td').css('background','lightgray');

var row='';
var table2='';
var GrandTotal='';

///////// CustomerInfo //////////////

var CustomerInfoQuery="select distinct bkg.EvtID, bkg.EvtName,cst.CustName as CustomerName,cnt.FirstName+ cnt.LastName AS BookingContact ,cst.CustPhone,cst.CustAdd1+cst.CustAdd2 AS Address,cst.CustFax,cst.CustCity,cst.CustState, cnt.FirstName+cnt.LastName AS OnsiteContact ,cst.CustPostCode,slps.FirstName+slps.LastName as salesperson, slps.FirstName+slps.LastName as Manager from FUNCT fn left join EVENT bkg on bkg.EvtID = fn.evtid left join CUSTT cst on bkg.CustID=cst.CustID left join contacts cnt on cnt.ContactID=fn.onsitecontact left join SALPT slps on slps.SalesID=fn.spid where bkg.EvtID=34801";

////console.log(CustomerInfoQuery)

var jsonfnDetail=JSON.parse(CRUD(CustomerInfoQuery));

var CustomerInfo='';

$.each(jsonfnDetail, function(key, value){ CustomerInfo+="<tr>"+ "<td colspan='4' width='391'>"+ "<p><strong>Event Name:&nbsp; </strong>"+value.EvtName+"</p>"+ "</td>"+ "<td width='343'>"+ "<p>&nbsp;</p>"+ "</td>"+ "</tr>"+ "<tr>"+ "<td colspan='4' width='391'>"+ "<p><strong>Customer Name:&nbsp; </strong>"+value.CustomerName+"</p>"+ "</td>"+ "<td width='343'>"+ "<p><strong>Contact:&nbsp; "+value.BookingContact+"</strong></p>"+ "</td>"+ "</tr>"+ "<tr>"+ "<td colspan='2' width='223'>"+ "<p><strong>Telephone:&nbsp; </strong>"+value.CustPhone+"</p>"+ "</td>"+ "<td colspan='2' width='168'>"+ "<p><strong>Fax:&nbsp;"+value.CustFax+" </strong></p>"+ "</td>"+ "<td width='343'>"+ "<p><strong>Telephone:&nbsp; </strong>"+value.CustPhone+"</p>"+ "</td>"+ "</tr>"+ "<tr>"+ "<td colspan='4' width='391'>"+ "<p><strong>Address:&nbsp; </strong>"+value.Address+"&nbsp;&nbsp;</p>"+ "</td>"+ "</tr>"+ "<tr>"+ "<td width='157'>"+ "<p><strong>City:</strong>"+value.CustCity+"</p>"+ "</td>"+ "<td colspan='2' width='105'>"+ "<p><strong>State: </strong>"+value.CustState+"</p>"+ "</td>"+ "<td width='129'>"+ "<p><strong>Zip: </strong>"+value.CustPostCode+"</p>"+ "</td>"+ "<td width='343'>"+ "<p><strong>On Site Contact: </strong>"+value.OnsiteContact+"</p>"+ "</td>"+ "</tr>"+ "<tr>"+ "<td colspan='4' width='391'>"+ "<p><strong>Salesperson: </strong>"+value.salesperson+"</p>"+ "</td>"+ "</tr>"+ "<tr>"+ "<td width='157'>&nbsp;</td>"+ "<td width='66'>&nbsp;</td>"+ "<td width='39'>&nbsp;</td>"+ "<td width='129'>&nbsp;</td>"+ "<td width='343'>&nbsp;</td>"+ "</tr>";
$('#CustomerInfo tbody').html('');
$('#CustomerInfo tbody').append(CustomerInfo); }) 


////////////////////////////// Function Detail ////////////////////////////////////////

var FunctionDetailquery="select distinct top 10  *,fn.startdate as StartDate,StartTime, fn.FunctID as funID from FUNCT fn left join EVENT on fn.evtid = EVENT.EvtID left join SALPT on fn.SPID = SALPT.SalesID left join SYS_STATDESC on EVENT.EvtStatus = SYS_STATDESC.statusid left join  TSLTT on TSLTT.FunctID =fn.functid  left  join FUNCTNAMES functnames on functnames.ResID = TSLTT.frid left join contacts on contacts.ContactID = fn.OnSiteContact left join SERVDETSETUP on SERVDETSETUP.ServDetID = fn.SetupType where EVENT.EvtID ="+bookingID+"  and EVENT.EvtStatus != '4' order by fn.FunctID desc";

var jsonfnDetail=JSON.parse(CRUD(FunctionDetailquery));

var functiondetailrow='';
var EventSummaryrow='';

$.each(jsonfnDetail, function(key, value){

functiondetailrow+= '<tr><td width="97"><p><strong>Monday</strong></p><p><strong>'+value.startdate+'</strong></p></td>'+ '<td width="150"><p><strong>'+value.endtime+'</strong></p></td>'+ '<td width="114"><p><strong>'+value.EvtName+'</strong></p></td>'+ '<td width="84"><p>&nbsp;</p></td>'+ '<td width="84"><p><strong>'+value.functexpnumppl+'</strong><strong>/'+value.functgtdnumppl+'</strong></p></td>'+ '<td width="114"><p><strong>'+value.Room_Description+'</strong></p></td>'+ '<td width="89"><p><strong>'+'100.00'+'</strong></p></td>'+ '<td width="1"><p>&nbsp;</p></td>'+ '</tr>';

EventSummaryrow+= '<tr><td>'+value.startdate+'</strong></p></td><td width="150"><p><strong>'+value.starttime+' / '+value.endtime+'</strong></p></td><td width="114"><p><strong>'+value.resdesc+'</strong></p></td><td width="114"><p><strong>'+value.Room_Description+'</strong></p></td><td width="84"><p>&nbsp;</p></td><td width="84"><p><strong>'+value.functexpnumppl+'</strong><strong>/'+value.functgtdnumppl+'</strong></p></td></tr>';

})

$('#FunctionDetails tbody').html(functiondetailrow);
$('#EvtSummery').html(functiondetailrow);


///////////////////////////////// Different Services Data /////////////////////////////////

{
Servicesquery="select distinct *,fn.startdate as StartDate, StartTime, fn.FunctID as funID from FUNCT fn full join EVENT on fn.evtid = EVENT.EvtID full join SALPT on fn.SPID = SALPT.SalesID full join SYS_STATDESC on EVENT.EvtStatus = SYS_STATDESC.statusid full join TSLTT on TSLTT.FunctID =fn.functid full join FUNCTNAMES functnames on functnames.ResID = TSLTT.frid full join contacts on contacts.ContactID = fn.OnSiteContact full join SERVDETSETUP on SERVDETSETUP.ServDetID = fn.SetupType full join SERVDET on SERVDETSETUP.ServDetID=SERVDET.ServDetID full join SERVITEMS on SERVDET.ServItemID=SERVITEMS.ServItemID full join HeaderTypes on SERVITEMS.HeaderTypeID= HeaderTypes.HeaderTypeID where EVENT.EvtID = 34801 and EVENT .EvtStatus != '4' order by fn.FunctID desc";

var jsonData=JSON.parse(CRUD(Servicesquery));
var groupedData = _.groupBy(jsonData, function(d){
CategoryName=d.HeaderDesc;
return d.HeaderDesc});

$.each(groupedData, function(key, value1) {

var FoodnBevearges='';

if(key=="Food and Beverage")
{

$.each(value1, function(key, value2) {

var date= moment(value2.startdate).format('YYYY/MM/DD');

FoodnBevearges+=
'<tr><td width="91"><p><strong>'+date+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ServTime+'-'+value2.ServEndTime+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.HeaderDesc+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.ServItemName+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.ServItemQty+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.ServItemChrg+'</strong></p></td>'+
'<td width="1"><p>&nbsp;</p></td>'+
'</tr>';

})

$('#BEO_Snacks_and_Social tbody').html('');
$('#BEO_Snacks_and_Social tbody').html(FoodnBevearges);

}


var BarServices='';

if(key=="Bar Services")
{

$.each(value1, function(key, value2) {

var date= moment(value2.startdate).format('YYYY/MM/DD');

BarServices+=
'<tr><td width="91"><p><strong>'+date+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ServTime+'-'+value2.ServEndTime+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.HeaderDesc+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.ServItemName+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.ServItemQty+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.ServItemChrg+'</strong></p></td>'+
'<td width="1"><p>&nbsp;</p></td>'+
'</tr>';
})

$('#BEO_Bar_Services tbody').html('');
$('#BEO_Bar_Services tbody').html(BarServices);


}



var AudioVisual='';

if(key=="Audio Visual")
{

$.each(value1, function(key, value2) {

var startdate= moment(value2.startdate).format('YYYY/MM/DD');

AudioVisual+=
'<tr><td width="91"><p><strong>'+startdate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ServTime+'-'+value2.ServEndTime+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.HeaderDesc+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.ServItemName+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.ServItemQty+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.ServItemChrg+'</strong></p></td>'+
'<td width="1"><p>&nbsp;</p></td>'+
'</tr>';
})


$('#BEO_Audio_Visual tbody').html('');
$('#BEO_Audio_Visual tbody').html(AudioVisual);

}

var RoomSetup='';

if(key=="Room Setup")
{

$.each(value1, function(key, value2) {

var startdate= moment(value2.startdate).format('YYYY/MM/DD');

RoomSetup+=
'<tr><td width="91"><p><strong>'+startdate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ServTime+'-'+value2.ServEndTime+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.HeaderDesc+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.ServItemName+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.ServItemQty+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.ServItemChrg+'</strong></p></td>'+
'<td width="1"><p>&nbsp;</p></td>'+
'</tr>';
})


$('#BEO_Room_Setup tbody').html('');
$('#BEO_Room_Setup tbody').html(RoomSetup);

}


var Miscellaneous='';

if(key=="Miscellaneous")
{

$.each(value1, function(key, value2) {

var startdate= moment(value2.startdate).format('YYYY/MM/DD');

Miscellaneous+=
'<tr><td width="91"><p><strong>'+startdate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ServTime+'-'+value2.ServEndTime+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.HeaderDesc+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.ServItemName+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.ServItemQty+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.ServItemChrg+'</strong></p></td>'+
'<td width="1"><p>&nbsp;</p></td>'+
'</tr>';
})


$('#BEO_Miscellaneous tbody').html('');
$('#BEO_Miscellaneous tbody').html(Miscellaneous);

}

})

}

/////////// Summary ///////////////

var Summaryquery=" select 'Sleeping Rooms' as 'CategoryName' ,sum(RoomRate) as 'Charges','' as 'Discount' ,sum(RoomRate)*0.2 as 'SrvChrg' ,sum(RoomRate)*1.2 as 'SubTot' ,sum(RoomRate)*(0.088)as 'Tax1','' as 'Tax2',sum(RoomRate)*(1.288) as 'Total' from SlpRooms group by SRHdrID";

////console.log(Summaryquery);

var jsonData=JSON.parse(CRUD(Summaryquery));

////console.log(jsonData);
var Summary='';

$.each(jsonData, function(key, value2) {

Summary+=
'<tr><td width="91"><p><strong>'+value2.CategoryName+'</strong></p></td><td width="78"><p><strong>'+value2.Charges+'</strong></p></td><td width="102"><p><strong>'+value2.SrvChrg+'</strong></p></td><td width="294"><p><strong>'+value2.SubTot+'</strong></p></td><td width="72"><p><strong>'+value2.Tax1+'</strong></p></td><td width="96"><p><strong></strong></p></td><td width="96"><p><strong>$'+value2.Total+'</strong></p></td>'+
'</tr>';

GrandTotal=value2.Total;
})

$('#BEO_summary tbody').html('');
$('#BEO_summary tbody').html(Summary);

/////////// Deposit ///////////////


var Depositquery="select top 5 CASE WHEN(dp.Amtdue-dp.Amtrecvd)>0 THEN 'Deposit Due' ELSE 'Deposit Paid' END AS 'Description',dp.Amtdue,dp.Duedate,dp.Amtrecvd,dp.Datercvd ,(dp.Amtdue-dp.Amtrecvd) as 'Balance' from DEPOSITT dp join EVENT bkg on dp.EvtID = bkg.EvtID group by bkg.EvtID ,dp.Amtdue,dp.Duedate,dp.Amtrecvd,dp.Datercvd ";

var jsonData=JSON.parse(CRUD(Depositquery));
var Deposit='';

var LessDeposit='';

$.each(jsonData, function(key, value2) {
var Duedate= moment(value2.Duedate).format('YYYY/MM/DD');
var Datercvd= moment(value2.Datercvd).format('YYYY/MM/DD');

Deposit+=
'<tr><td width="91"><p><strong>'+value2.Description+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.Amtdue+'</strong></p></td>'+
'<td width="102"><p><strong>'+Duedate+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.Amtrecvd+'</strong></p></td>'+
'<td width="72"><p><strong>'+Datercvd+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.Balance+'</strong></p></td>'+
'</tr>';

LessDeposit+=value2.Amtrecvd;

})

$('#BEO_Deposits tbody').html('');
$('#BEO_Deposits tbody').html(Deposit);

$('#LessDeposit').html('');
$('#LessDeposit').html(LessDeposit);

var AmtDue=GrandTotal-LessDeposit;

$('#AmountDue').html('');
$('#AmountDue').html(AmountDue);


/////////// BEO_HOTEL_ROOMS ///////////////

var HOTEL_ROOMSquery="select  rbe.SRDate, rt.RoomType, rbe.Adult, rbe.RoomRate, rbe.SRBlckd  from SlpRooms rbe join RoomTypes rt on rbe.SRTypeID=rt.RoomtypeID where SRHdrID is not null ";

var jsonData=JSON.parse(CRUD(HOTEL_ROOMSquery));

var BEO_HOTEL_ROOMS='';

$.each(jsonData, function(key, value2) {

var date= moment(value2.SRDate).format('YYYY/MM/DD');

BEO_HOTEL_ROOMS+=
'<tr><td width="91"><p>'+date+'</p></td>'+
'<td width="78"><p>'+value2.RoomType+'</p></td>'+
'<td width="102"><p>'+value2.Adult+'</p></td>'+
'<td width="294"><p>'+value2.RoomRate+'</p></td>'+
'<td width="72"><p>'+value2.SRBlckd+'</p></td>'+
'</tr>';

})

$('#BEO_HOTEL_ROOMS tbody').html('');
$('#BEO_HOTEL_ROOMS tbody').html(BEO_HOTEL_ROOMS);

/////////// BEO_HOTEL_ROOMS(FOR DAC) ///////////////

{
var HOTEL_ROOMSquery="select  rbe.SRDate, rt.RoomType, rbe.Adult, rbe.RoomRate, rbe.SRBlckd  from SlpRooms rbe join RoomTypes rt on rbe.SRTypeID=rt.RoomtypeID where SRHdrID is not null ";

var jsonData=JSON.parse(CRUD(HOTEL_ROOMSquery));

var BEO_HOTEL_ROOMS='';

if(jsonData)
{
$.each(jsonData, function(key, value2) {

var date= moment(value2.SRDate).format('YYYY/MM/DD');

BEO_HOTEL_ROOMS+=
'<tr><td width="91"><p>'+date+'</p></td><td width="78"><p>'+value2.RoomType+'</p></td><td width="102"><p>'+value2.Adult+'</p></td><td width="294"><p>'+value2.RoomRate+'</p></td><td width="72"><p>'+value2.SRBlckd+'</p></td></tr>';

})

$('#BEO_HOTEL_ROOMS tbody').html('');
$('#BEO_HOTEL_ROOMS tbody').html(BEO_HOTEL_ROOMS);

}

}


}



$('p').css("font-size","14px");
$('p').css("line-height","0px !important");
$('td').css("font-size","14px");
$('tr').css("font-size","14px");


table filter

OUTPUT Inserted.contactid

$("#Cust_ContSearchInp").keyup(function () {
//split the current value of searchInput
var data = this.value.split(" ");
//create a jquery object of the rows

var jo = $("#Cust_ContTable tbody").find("tr");
if (this.value == "") {
jo.show();
return;
}
//hide all the rows
jo.hide();

//Recusively filter the jquery object to get results.
jo.filter(function (i, v) {
var $t = $(this);
for (var d = 0; d < data.length; ++d) {
if ($t.is(":contains('" + data[d] + "')")) {
return true;
}
}
return false;
})
//show the rows that match.
.show();
}).focus(function () {
this.value = "";
$(this).css({
"color": "black"
});
$(this).unbind('focus');
}).css({
"color": "#C0C0C0"
});


//////////////////////




$('#ECMdls_EditContactMOdal').find('inputtype=text]').val('');
$('#ECMdls_EditContactMOdal').find('inputtype=time]').val(''); 
$('#ECMdls_EditContactMOdal').find('inputtype=number]').val('');
$('#ECMdls_EditContactMOdal').find('selectid').val('');

/////////////////


<!-- Contact Search Modal -->
<div class="modal fade" id="BM_ContactsearchModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-hidden="true" style="z-index: 11111;">
<div class="modal-dialog">
<div class="modal-content">
<div class="modal-header">
<button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
<h3 class="modal-title" id="LineModalLabel">Contact Search</h3>
</div>
<div class="modal-body" style="padding-bottom: 0px;">
<!-- content goes here -->
<form>
<div class="row">
<div class="col-sm-12 col-md-12 col-lg-12  no-padding">
<div class="col-sm-6 col-md-6 col-lg-6 form-group">
<label>Customer Name</label>
<input type="text" class="form-control" id="BM_CustomerName" name="BM_CustomerName" placeholder="Customer Name">
</div>
<div class="col-sm-6 col-md-6 col-lg-6 form-group">
<label>Phone Number</label>
<input type="text" class="form-control" id="BM_CustomerPhoneNumber" name="BM_CustomerPhoneNumber" placeholder="Phone Number" onkeypress='return event.charCode >= 48 && event.charCode <= 57'>
</div>
<div class="col-sm-6 col-md-6 col-lg-6 form-group">
<label>Contact Last Name</label>
<input type="text" class="form-control" id="BM_ContactLastName" name="BM_ContactLastName" placeholder="Contact Last Name">
</div>
</div>
</div>
<div class="row">
<div class="col-sm-12 col-md-12 col-lg-12 checkbox">
<div class="col-sm-4 col-md-4 col-lg-4  form-group ">
<label>
<input type="radio" value="1" id="BM_CMSStartWith" name="BM_CMSFilter" checked>Starting With
</label>
</div>
<div class="col-sm-4 col-md-4 col-lg-4 form-group ">
<label>
<input type="radio" value="2" id="BM_CMSContaining" name="BM_CMSFilter">Containing
</label>
</div>
<div class="col-sm-4 col-md-4 col-lg-4 form-group ">
<label>
<input type="radio" value="3" id="BM_CMSSoundLike" name="BM_CMSFilter">Sounds Like
</label>
</div>
</div>
</div>
<div class="row">
<div class="col-sm-12 col-md-12 col-lg-12 form-group">
<button type="button" class="btn btn-default" onclick="CustomerSearch()">Search</button>
</div>
</div>

<div class="col-sm-12 col-md-12 col-lg-12 form-group Modaltable_Div">
<table class="table table-bordered " border=1 id="BM_Contactsearchtable">
<thead>
<tr>
<th>Contact Id</th>
<th>Contact Name</th>
<th>Customer Name</th>
<th>Email Address</th>
</tr>
</thead>
<tbody>
<tr>
<td> </td>
<td> </td>
<td> </td>
<td> </td>
</tr>
</tbody>
</table>
</div>

<div class="row">
<div class="col-sm-12 col-md-12 col-lg-12">
<div class="col-sm-4 col-md-4 col-lg-4 " >
<button type="button" class="btn btn-default" style="width: 100%;">New</button>
</div>
<div class="col-sm-4 col-md-4 col-lg-4" role="group">
<button type="button" class="btn btn-default" style="width: 100%;">Ok</button>
</div>
<div class="col-sm-4 col-md-4 col-lg-4" role="group">
<button type="button" class="btn btn-default" data-dismiss="modal" style="width: 100%;">Cancel</button>
</div>
</div>
</div>
</form>

</div>
<hr>
</div>
</div>
</div>




var i = 0;
while (i < 11) 
{ 
var PhoneDropContent = '<div class="col-sm-12 col-md-12 col-lg-12 no-padding"><div class="col-sm-6 col-md-6 col-lg-6 no-padding"><div class="col-sm-12 col-md-12 col-lg-12 form-control fg divsgrid" id="ECoMdl1_phndrp_'+i+'" ondblclick="phonenodropdown1('+i+')"></div></div><div class="col-sm-6 col-md-6 col-lg-6 no-padding" ><input type="text" class="form-control divsgrid" id="ECoMdl1_Txtid'+i+'" name="ECoMdl1_Txtid'+i+'" onkeypress="return event.charCode >= 48 && event.charCode <= 57" maxlength="10" ></div></div>';  
$("#ICntMdl_EditContactPhoneNumber").append(PhoneDropContent);

var PhoneDropContent2 = '<div class="col-sm-12 col-md-12 col-lg-12 no-padding"><div class="col-sm-6 col-md-6 col-lg-6 no-padding"><div class="col-sm-12 col-md-12 col-lg-12 form-control fg divsgrid" id="EDMdls_phndrp_'+i+'" ondblclick="EDMdls_phonenodropdown('+i+')"></div></div><div class="col-sm-6 col-md-6 col-lg-6 no-padding" ><input type="text" class="form-control divsgrid" id="EDMdls_Txtid'+i+'" name="EDMdls_Txtid'+i+'" onkeypress="return event.charCode >= 48 && event.charCode <= 57" maxlength="10"></div></div>';  

$("#EDMdls_EditContactPhnNo").append(PhoneDropContent2);

var PhoneDropContent3 = '<div class="col-sm-12 col-md-12 col-lg-12 no-padding"><div class="col-sm-6 col-md-6 col-lg-6 no-padding"><div class="col-sm-12 col-md-12 col-lg-12 form-control fg divsgrid" id="ACMdls_phndrp_'+i+'" ondblclick="ACMdls_phonenodropdown('+i+')"></div></div><div class="col-sm-6 col-md-6 col-lg-6 no-padding" ><input type="text" class="form-control divsgrid" id="ACMdls_Txtid'+i+'" name="ACMdls_Txtid'+i+'" onkeypress="return event.charCode >= 48 && event.charCode <= 57" maxlength="10"></div></div>';  

$("#ACMdls_EditContactPhnNo").append(PhoneDropContent3);

i++;
}



///////////////////////


$('#CR_SpList').html(html)


$i = 1;
foreach($searchValue->fetchAll(PDO::FETCH_OBJ) as $row_searchValue )
{
if( $row_searchValue->ISActive == "1")
{
$active = "Active";
}
else
{
$active = "Inactive";
}

$table =  "<tr>
<td><center><input type='checkbox' name='rowSelect' class='checkbox_contact' value='".$row_searchValue->contactid."'></center></td>
<td onclick=showRow('tr".$i."')>+</td>
<td onclick=openModal(".$row_searchValue->contactid.")>".$row_searchValue->firstname.' '.$row_searchValue->lastname."</td>
<td onclick=openModal(".$row_searchValue->contactid.")>".$row_searchValue->Title."</td>
<td onclick=openModal(".$row_searchValue->contactid.")></td>
<td onclick=openModal(".$row_searchValue->contactid.")>".$row_searchValue->Phone."</td>
<td onclick=openModal(".$row_searchValue->contactid.")>".$row_searchValue->EmailAddress."</td>
<td onclick=openModal(".$row_searchValue->contactid.")>".$row_searchValue->ContactType."</td>
<td onclick=openModal(".$row_searchValue->contactid.")>".$active."</td>
</tr>";
$getPhoneNumber = $conn->query("select * from  contactphones as contPhone left join tbl_phoneType as phont on phont.id = contPhone.PhoneType where ContactID = '".$row_searchValue->contactid."' ");

foreach($getPhoneNumber->fetchAll(PDO::FETCH_OBJ) as $row_getPhoneNumber)
{
$table = $table."<tr class='tr".$i."' style='display:none;'>
<td colspan='4'></td>
<td>".$row_getPhoneNumber->PhoneType."</td>
<td>".$row_getPhoneNumber->PhoneNum."</td>
<td colspan='3'></td>
</tr>";
}
echo $table;
$i++;
}




$.ajax({
method : "POST",
url : "../Customer/assets/ajax/ajax_searchContact.php",
data : {searchVal : searchInput},
success:function(data)
{
$('#Cust_ContTable tbody').html(data);
}
});



var spid=$('div[style*="background: lightblue"]').attr('spid')


// trcid	spidto	salesfirstname	loginid	saleslastname	evtid	evtname	evtstart	type	functid	spidfrom	trcompleted	trdate	trentdate	trstarttime	trendtime	category	trcategory	custid	custname	trdesc	auto	trcompdate	trprivate	emailfromaddress	emailtoaddress	priority	contactid	contactfirstname	contactlastname	subject
// 11582	15	Lesly	Lesly S	Serigny - Russo	4700	Water delivery	2007-01-22	1	8814	15	0	2007-01-15	2007-01-22	1899-12-30	1899-12-30	Catering	3	745	HMS Office of the Dean   ***** PPX********	Call for Menu Choices	6	NULL	0			0	684	Stacey	Beacher	

// Act_CR_Categories


// id="Act_CR_RptDetail" id="Act_CR_TA_BOD"   id="Act_CR_LinkTo" id="Act_CR_Customer" id="Act_CR_CustomerSearch" id="Act_CR_Contact" id="Act_CR_ContactSearch" id="Act_CR_Booking" id="Act_CR_bookingSearch"  id="Act_CR_Function"  id="Act_CR_TaskDate"   id="Act_CR_New" id="Act_CR_OK"  id="Act_CR_CustID"   id="Act_CR_ReportsBookingID" 


to do 

insert  , edit fn for multilple room
customer modal , conatct name 
inventory dropdowns

Euro , USA

sub total in all reports
----------------

html=DynamicRowsCols(query);

$.each(JSON.parse(CRUD(qry_sp)), function(key, sp){})

where functdate between '"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"'   ";


var query="select bookingsalespersonfirstname+bookingsalespersonlastname as SalesPerson,functoneroomname as Room,functdate as Start,bookingstatus as Status,bookingconfirmdate as Booked,functexpectedpeople as Ppl ,rentsum as SlpRm_Chrg,serviceitemcharge as Serv_Chrg ,servsub as Room_Revenue from query_services join functionroomrental on query_services.functid=functionroomrental.functid join roomrentsummary on query_services.bookingid=roomrentsummary.evtid where functdate between '"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"' ";

var jsonData = JSON.parse(CRUD(query));

if(jsonData)
{

objBookingReports.FunctionList(jsonData);
}




-----------------------
var cname = $('#BM_SearchCustomerName').val().trim();


$("#SI_SERVSETUP tbody tr").each(function()
{

$(this).children('td:eq(7)').find('select').val($(this).children('td:eq(7)').attr('defqty')).prop('selected',true);
$(this).find('td:eq(8) input[type=checkbox]').prop('checked',$(this).find('td:eq(8)').attr('webitem')==1?true:false);

})

----------------------------

$(".pdfouter .tblitems tbody").append(_status);

$(".pdfouter .tblitems th,.pdfouter .tblitems td").css({ 'border' : '1px solid black', 'border-collapse' : 'collapse' }); 



----------------------------------



$('#btn_run').click(function() {

event.preventDefault();

$.ajax({
method : "GET",
url : "../Reports/template.php",
async:false,
success:function(data){

if(data)
{

$(".pdftemplate #tbl_FD2").remove();

$(".pdftemplate .tblitems thead").html('');
$(".pdftemplate .tblitems tbody").html('');
$(".pdftemplate .footertable thead").html('');
$(".pdftemplate .footertable tbody").html('');
$(".pdfouter .ReportTitle").html('');
$('#html_hdn').val('');
$(".pdfouter .ReportTitle").html(objReportsInterface.reportType);

if($('#ReportCategories').val()==1)
{

objBookingReports.CreateReports(objReportsInterface.reportType,$('#dateTo').val(),$('#dateFrom').val());
return;
}

if($('#ReportCategories').val()==2)
{
objCateringReports.CreateReports(objReportsInterface.reportType);
return;
}

if($('#ReportCategories').val()==3)
{
objTracesReports.CreateReports(objReportsInterface.reportType);
return;
}

if($('#ReportCategories').val()==5)
{
objGroupRooms.CreateReports(objReportsInterface.reportType);
return;
}

if($('#ReportCategories').val()==7)
{
objTracesReports.CreateReports(objReportsInterface.reportType);
return;
}

var ValidationArray={

reportType:objReportsInterface.reportType,
Start_date: $('#dateFrom').val(),
End_date: $('#dateTo').val()
};

if(objReportsInterface.reportType == "Master Services List")
{
objSetupInterface.MasterServiceList(objReportsInterface.reportType);
return false;
}

if(objClass_CRUD.validation(ValidationArray) == false)
{
return false;
}

if(objReportsInterface.reportType == "Cancellation Event Report")
{

objLostBusinessInterface.CancelltionEventReport(objReportsInterface.reportType,$('#dateTo').val(),$('#dateFrom').val());
}

else
{
objReportsInterface.pdf(objReportsInterface.reportType,$('#dateTo').val(),$('#dateFrom').val());
}

}
else
{
alert('pdf template not loading')
}

}

});

});



<tbody>
<tr>
<td valign="TOP" width="10%">
<font face="Times New Roman" size="2" color="#000000">
<p>&nbsp;</p>
</font>
</td>
<td valign="TOP" width="6%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">&nbsp;</p>
</font>
</td>
<td valign="TOP" width="6%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">&nbsp;</p>
</font>
</td>
<td valign="TOP" width="10%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">GROUP
</p>
</font>
</td>
<td valign="TOP" width="7%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">&nbsp;</p>
</font>
</td>
<td valign="TOP" width="6%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">&nbsp;</p>
</font>
</td>
<td valign="TOP" width="6%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">&nbsp;</p>
</font>
</td>
<td valign="TOP" width="10%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">LOCAL
</p>
</font>
</td>
<td valign="TOP" width="7%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">&nbsp;</p>
</font>
</td>
<td valign="TOP" width="6%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">&nbsp;</p>
</font>
</td>
<td valign="TOP" width="6%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">&nbsp;</p>
</font>
</td>
<td valign="TOP" width="10%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">TOTAL
</p>
</font>
</td>
<td valign="TOP" width="7%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">&nbsp;</p>
</font>
</td>
</tr>
<tr>
<td valign="TOP" width="10%">
<font face="Times New Roman" size="2" color="#000000">
<p>&nbsp;</p>
</font>
</td>
<td valign="TOP" width="6%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT"># functs
</p>
</font>
</td>
<td valign="TOP" width="6%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">Covers
</p>
</font>
</td>
<td valign="TOP" width="10%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">Sales
</p>
</font>
</td>
<td valign="TOP" width="7%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">Avg Check
</p>
</font>
</td>
<td valign="TOP" width="6%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT"># functs
</p>
</font>
</td>
<td valign="TOP" width="6%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">Covers
</p>
</font>
</td>
<td valign="TOP" width="10%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">Sales
</p>
</font>
</td>
<td valign="TOP" width="7%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">Avg Check
</p>
</font>
</td>
<td valign="TOP" width="6%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT"># functs
</p>
</font>
</td>
<td valign="TOP" width="6%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">Covers
</p>
</font>
</td>
<td valign="TOP" width="10%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">Sales
</p>
</font>
</td>
<td valign="TOP" width="7%">
<font face="Times New Roman" size="2" color="#000000">
<p align="RIGHT">Avg Check
</p>
</font>
</td>
</tr>

</tbody>



select servicedescription,'' as 'LedgerNumber',0.00 as 'GroupTotals',COALESCE(cast(sum(itemtot)+sum(itemtot)*(select sum(srvchgrate) as srvchgrate from taxmapdet where effdate=(select max(effdate) from taxmapdet))) as decimal(10,2)),0) as   'LocalTotals' from query_services where functdate between '2019-1-1' and '2019-2-28' group by servicedescription

/*----------JS for service list in Booking->Booking Pace->Setup---------*/
$('#ReportsSetupModal').on('shown.bs.modal', function(){
$.ajax({
method : "POST",
url : "../Availability/assets/ajax/get_Category.php",
data : {bookingPaceCheck : "1"},
async : false,
success:function(data){
$('#RS_catCatering').html(data);
}
});

var count = 1;
$('#RS_catCatering').find('div').each(function(){
if(count < 8)
{
$(this).find('input[type=checkbox]').val(count).prop('checked',true);
count++;
}
});
});

/*----JS for Catering Checkbox functionality in Booking->Booking Pace->Setup---*/
$('#Cntrl_Catering').on('click', function(){
if(!$(this).is(':checked'))
{
$('#RS_catCateringhidden').show();
$('#Cntrl_CateringShow').prop('checked',false);
$('#Cntrl_CateringShow').prop('disabled','disabled');
}
else
{
$('#RS_catCateringhidden').hide();	
$('#Cntrl_CateringShow').prop('disabled', false);
}
});

/*------------------JS for Financial Period Drop Down-------------------------*/
$.ajax({
method : "POST",
url : "../Reports/assets/ajax/ajax_getFinancialPeriod.php",
async : false,
success : function(data){
$("#FinancialPeriod").html(data);
}
});

$("#FinancialPeriod").on('change',function(){
$("#dateFrom").val($('option:selected', this).attr('startdate'));
$("#dateTo").val($('option:selected', this).attr('enddate'));	
});

$("#Rpt_Contact").on('click',function(){
$("#FinancialPeriod").val('');
});

///////////////////////////////////	


function not adding , customer not adding 
rports function distribution y date ui
inventory complete



function get()
{

$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_ServiceSummary.php",
data : {Get:"Get",FunctionID:objServices.FunctionID},
success:function(data){

if(data=='' || data==null)
{
('no data');
}
else
{
$('#tbl_ServiceSummary tbody').html('');
$('#tbl_ServiceSummary tbody').html(data);
}

}
});

}



function CategoryChange_saveServiceItems()
{
if($('#ES_ServiceTimes :selected').text()==""){ return ; }
if($('#ES_ServiceStart').val()==''){ alert('please select service End Time'); return ;}
if($('#ES_ServiceEnd').val()=='') { alert('please select service End Time');return ; } 

$("#EditService_Table tr.ES_Price").each(function()
{

var itemname = $(this).find('.itemname').val();
var Price = $(this).find('.ES_Price').val();
var Qty = $(this).find('.ES_Qty').val();
var Total = $(this).find('.ES_Total').val();


if($(this).attr('data-secondmenu'))
{}
else
{

}

$myArray = $_POST['values1'];

$SERVITEMSquery = $conn->query("delete from servitems where servtimeid in (select servtimeid from servtime where servdescid='".$_POST["ES_ServiceTimes"]."') and  headertypeid='".$_POST['ES_Category']."' and  functid='".$_POST['FunctionID']."'");

if($SERVITEMSquery)
{

$SERVTIMEquery=$conn->query("delete from servtime where functid='".$_POST['FunctionID']."' AND servdescid='".$_POST['ES_ServiceTimes']."' AND servendtime='".$_POST['ES_ServiceEnd']."'");

if($SERVTIMEquery)
{
foreach($myArray as $item)
{

if($item[1]!='')
{

$string ="insert INTO servtime(functid,headertype,servtime,servdescid,servendtime,servicenotes,numppl)VALUES('".$_POST['FunctionID']."','".$_POST['ES_Category']."','".$_POST['ES_ServiceStart']."','".$_POST['ES_ServiceTimes']."','".$_POST['ES_ServiceEnd']."','1','1')";

echo $string;

$InsertServTime = $conn->query($string);
if($InsertServTime)
{
$string ="insert INTO  servitems(functid,headertypeid,servtimeid,servitemname,servitemchrg,servitemcost,servitemqty,servitemactqty,displayidx,taxid,itemsetupid,inpackage,servtype,servtypedesc)VALUES('".$_POST['FunctionID']."','".$_POST['ES_Category']."',(select MAX(servtimeid) from servtime),'$item[0]','$item[1]','$item[3]','$item[2]','$item[2]','1','1','1','1','1','$item[0]')";
echo $string;
$InsertSERVITEMS = $conn->query($string);	
}

if($InsertSERVITEMS)
{
echo 'inserted';
}

else
{
echo 'not inserted';
}
}

}

}

}
else
{
echo 'not deleted';
}


});

{

var ES_ServiceTimes=$('#ES_ServiceTimes :selected').text();
var ES_ServiceStart=$('#ES_ServiceStart').val();
var ES_ServiceEnd=$('#ES_ServiceEnd').val();
var ES_Category=previous;

var EdFunc_Date=$('#EdFunc_Date').val();

var d = new Date();

var month = d.getMonth()+1;
var day = d.getDate();

var CurrentDate = d.getFullYear() + '/' +
(month<10 ? '0' : '') + month + '/' +
(day<10 ? '0' : '') + day;

if(new Date(EdFunc_Date) >= new Date(CurrentDate))
{

$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_ServiceSummary.php",
data : {Add:"Add",values1 :values1,ES_ServiceTimes:ES_ServiceTimes,ES_ServiceStart:ES_ServiceStart,ES_ServiceEnd:ES_ServiceEnd,FunctionID:objServices.FunctionID,ES_Category:ES_Category},
success:function(data){
//alert('data '+data);

if(data=='inserted')
{
//$('#EditServiceModal').modal('hide');

}
else
{

//alert('data not inserted');
}

}
});

}
else
{
//$('#EditServiceModal').modal('hide');
return false;
}

}

}

/////////////////////////



https://www.esp.systems/esp-project/Booking/assets/ajax/ajax_ServiceSummary.php


1313
1347
1427
1478
1479
1481


---------------------------
Inventory Control
---------------------------
There are no more Avocado Stuffed Tomato available on 8/19/2015 from 6:00:00 PM to 8:00:00 PM.

Do you wish to alter the quantity anyway?
---------------------------
Yes   No   
---------------------------

---------------------------
Save Service Item(s)
---------------------------
Could not save item.

There are no more Avocado Stuffed Tomato available on 8/19/2015 from 6:00:00 PM to 8:00:00 PM.
---------------------------
OK   
---------------------------

//////////////
issues - inventory count 

contracts - footer , colors , signature fotn size , hms catering blank 
room wise rental

////////


$(".pdfouter .tblitems tbody center:contains('" + null + "')").text(0.00);
$(".pdfouter .tblitems tbody center:contains('" + undefined + "')").text(0.00);
$(".pdfouter .tblitems tbody center:contains('" + NaN + "')").text(0.00);
//$(".pdfouter .tblitems tbody center:contains('overall')").text('');	

var rent=parseFloat($(this).find('.rent').text()).toFixed(1);
var subtotal=parseFloat($(this).find('.subtotal').text()).toFixed(1);
var srvchgrate=parseFloat($(this).find('.srvchgrate').text()).toFixed(1);
var total=parseFloat($(this).find('.total').text()).toFixed(2);
var depositpaid=parseFloat($(this).find('.depositpaid').text()).toFixed(2);

$(this).find('.total').text((parseFloat(subtotal)+parseFloat(srvchgrate)).toFixed(1))
$(this).find('.depositpaid').text(parseFloat(depositpaid).toFixed(2))

console.log(subtotal)
console.log(srvchgrate)
console.log((parseFloat(subtotal)+parseFloat(srvchgrate)).toFixed(1))
console.log($(this).find('.total').text())

$(this).find('.balancedue').text((parseFloat(total)-parseFloat(depositpaid)).toFixed(1))



//replace all null in table 

$(".pdfouter .tblitems tbody center:contains('" + null + "')").text(0.00);
$(".pdfouter .tblitems tbody center:contains('" + undefined + "')").text(0.00);
$(".pdfouter .tblitems tbody center:contains('" + NaN + "')").text(0.00);
$(".pdfouter .tblitems tbody center:contains('overall')").text('');



{

var HMSInvTotal=0.00; 
var HMSInvQuery_old="select max(fn.startdate) as 'Date' ,max(fn.functname) as 'FunctionName' , max(servitemname) as 'ItemName' ,COALESCE(cast(sum(servitemchrg) as decimal(10,2)),0)  as  'Charge'  from servitems left join  funct fn on fn.FunctID = servitems.FunctID  left join EVENT bkg on  fn.evtid =bkg.EvtID  left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid  where  effdate=(select max(effdate) from taxmapdet) and bkg.EvtID="+bookingID+" and ht.headertypeid =3";

var HMSInvQuery="select (fn.startdate) as 'Date' ,max(fn.functname) as 'FunctionName' , max(servitemname) as 'ItemName' ,COALESCE(cast(max(servitemchrg) as decimal(10,2)),0)  as  'Charge'  from servitems left join  funct fn on fn.FunctID = servitems.FunctID  left join EVENT bkg on  fn.evtid =bkg.EvtID  left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid  where  effdate=(select max(effdate) from taxmapdet) and bkg.EvtID="+bookingID+" and ht.headertypeid =3 group by fn.startdate";

var HMSInvrow='<tr>';$.each(JSON.parse(CRUD(HMSInvQuery)), function(key, value){HMSInvrow=HMSInvrow+'<tr>';$.each(value, function(key1, value1){
if(key1=='Charge')
{
HMSInvTotal+=value1;
console.log(value1)
console.log(HMSInvTotal)	
}
HMSInvrow=HMSInvrow+'<td><center>'+value1+'</center></td>';

});HMSInvrow=HMSInvrow+'</tr>';});

$('.HMSInv').html(HMSInvrow);
console.log(HMSInvTotal)	
$('.HMSInv_CateringTotal').html(HMSInvTotal);


var HMSInv2Query="select bookingid,service_total,cast(COALESCE(service_total*(select srvchgrate from taxmapdet where taxid =1 and effdate=(select max(effdate) from taxmapdet)),0)  as decimal(10,2)) as 'StateTax',cast(COALESCE(service_total*(select srvchgrate from taxmapdet where taxid =7 and effdate=(select max(effdate) from taxmapdet)),0)  as decimal(10,2)) as 'MealTax',cast(COALESCE(service_total*(CASE taxid WHEN 1 THEN (select srvchgrate from taxmapdet where taxid =1 and effdate=(select max(effdate) from taxmapdet)) WHEN 4 THEN (select srvchgrate from taxmapdet where taxid =4 and effdate=(select max(effdate) from taxmapdet)) END),0)  as decimal(10,2)) as srvchgrate from bkgrevenuerpt where  bookingid="+bookingID+"";

var HMSInv_StateTax=0.00;
var HMSInv_MealTax=0.00;
var HMSInv_srvchgrate=0.00;

$.each(JSON.parse(CRUD(HMSInv2Query)), function(key, value){$.each(value, function(key1, value1){
if(key1=='StateTax')
{
HMSInv_StateTax+=value1;	
}
if(key1=='MealTax')
{
HMSInv_MealTax+=value1;	
}
if(key1=='srvchgrate')
{
HMSInv_srvchgrate+=value1;	
}

})

});

$('.HMSInv_ServiceCharge').html(HMSInv_srvchgrate);
$('.HMSInv_StateTax').html(HMSInv_StateTax);
$('.HMSInv_MealTax').html(HMSInv_MealTax);

$('.HMSInv_TotalAmount').html(parseFloat(HMSInvTotal)+parseFloat(HMSInv_srvchgrate)+parseFloat(HMSInv_StateTax)+parseFloat(HMSInv_MealTax))

//HMSInv_CateringTotal,HMSInv_ServiceCharge,HMSInv_StateTax,HMSInv_MealTax,HMSInv_TotalAmount

}




var EventSummaryqueryold="select distinct fn.FunctID,fn.startdate,CONVERT(varchar(15),CAST(fn.starttime AS TIME),100) as starttime,CAST(fn.endtime AS TIME),100) as endtime,resdesc,functexpnumppl,functgtdnumppl from FUNCT fn left join EVENT on fn.evtid = EVENT.EvtID left join SALPT on fn.SPID = SALPT.SalesID left join SYS_STATDESC on EVENT.EvtStatus = SYS_STATDESC.statusid left join  TSLTT on TSLTT.FunctID =fn.functid  left  join FUNCTNAMES functnames on functnames.ResID = TSLTT.frid left join contacts on contacts.ContactID = fn.OnSiteContact left join SERVDETSETUP on SERVDETSETUP.ServDetID = fn.SetupType where EVENT.EvtID ="+bookingID+"  and EVENT.EvtStatus != '4' order by fn.FunctID desc";



var EventSummaryrow='';

$.each(JSON.parse(CRUD(EventSummaryquery)), function(key, value){

EventSummaryrow+= '<tr><td>'+value.startdate+'</p></td><td><p>'+value.starttime+' / '+value.endtime+'</p></td><td><p>'+value.resdesc+'</p></td><td><p>'+value.resdesc+'</p></td><td>'+value.functexpnumppl+'</td><td>'+value.functgtdnumppl+'</td></tr>';

})

$('.EvtSummery').html(EventSummaryrow);




https://www.esp.systems/esp-project/Home/'../common/js/moment.js'
moment.js


var BEO_CategoryChargesQuery="select max(ht.HeaderDesc) as 'Category',cast(COALESCE(sum(servitemchrg*servitemqty), 0) as decimal(10,2)) as  Charges ,cast(sum(servitemchrg*servitemqty*taxmapdet.srvchgrate) as decimal(10,2)) as ServiceCharge ,cast(sum(servitemchrg*servitemqty*(1+taxmapdet.srvchgrate)) as decimal(10,2)) as 'SubTotal' ,(select  cast(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) where taxmapdet.taxid=1)  as 'StateTax',COALESCE((select  cast(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) where taxmapdet.taxid=7),0)  as 'MealTax',cast(sum(servitemchrg*servitemqty*(1+srvchgrate+taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) as 'Total'  from servitems left join  funct fn on fn.FunctID = servitems.FunctID  left join EVENT bkg on  fn.evtid =bkg.EvtID  left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid  where  effdate=(select max(effdate) from taxmapdet) and bkg.EvtID="+bookingID+" group by servitems.headertypeid,taxmapdet.taxid";

if(JSON.parse(CRUD(BEO_CategoryChargesQuery))[0])
{
var BEO_CategoryChargesrow='';$.each(JSON.parse(CRUD(BEO_CategoryChargesQuery)), function(key, value){BEO_CategoryChargesrow=BEO_CategoryChargesrow+'<tr>';$.each(value, function(key1, value1){BEO_CategoryChargesrow=BEO_CategoryChargesrow+'<td><center>'+value1+'</center></td>';});BEO_CategoryChargesrow=BEO_CategoryChargesrow+'</tr>';});

$('.BEO_CategoryCharges').append(BEO_CategoryChargesrow);
}























else
{
fnbrow+='<tr>';
$.each(value, function(key1, value1){

if(key1=="FBNotes")
{
$('.FBNotes').html(value1)
}
else
{	
fnbrow=fnbrow+'<td><center>'+value1+'</center></td>';

if(key1=="Total")
{
fnbTotal+=value1;
}
}
}); 
fnbrow=fnbrow+'</tr>';});













var BEO_CategoryChargesQueryold="select max(ht.HeaderDesc) as 'Category',cast(COALESCE(sum(servitemchrg*servitemqty), 0) as decimal(10,2)) as  Charges ,cast(sum(servitemchrg*servitemqty*taxmapdet.srvchgrate) as decimal(10,2)) as ServiceCharge ,cast(sum(servitemchrg*servitemqty*(1+taxmapdet.srvchgrate)) as decimal(10,2)) as 'SubTotal' ,cast(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) as 'Tax',cast(sum(servitemchrg*servitemqty*(1+srvchgrate+taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) as 'Total'  from servitems left join  funct fn on fn.FunctID = servitems.FunctID  left join EVENT bkg on  fn.evtid =bkg.EvtID  left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid  where  effdate=(select max(effdate) from taxmapdet) and bkg.EvtID="+bookingID+" group by servitems.headertypeid union all select 'Total' as 'Category',cast(COALESCE(sum(servitemchrg*servitemqty), 0) as decimal(10,2)) as  Charges ,cast(sum(servitemchrg*servitemqty*taxmapdet.srvchgrate) as decimal(10,2)) as ServiceCharge ,cast(sum(servitemchrg*servitemqty*(1+taxmapdet.srvchgrate)) as decimal(10,2)) as 'SubTotal' ,cast(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) as 'Tax',cast(sum(servitemchrg*servitemqty*(1+srvchgrate+taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) as 'Total'  from servitems left join  funct fn on fn.FunctID = servitems.FunctID  left join EVENT bkg on  fn.evtid =bkg.EvtID  left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid  where  effdate=(select max(effdate) from taxmapdet) and bkg.EvtID="+bookingID+"";


<tr style="background:#d3d3d3;"> - lightgrey
<tr style="background:#808080;"> - grey

function contactTable(CustID)
{

var contactquery="select * from contacts where CustID = '"+CustID+"' ";

$.each(JSON.parse(CRUD(contactquery)), function( index, value ) {

var phcontquery="select *,phont.TypeDesc ,contPhone.PhoneNum from contacts as cont left join ContactPhones as contPhone on cont.ContactID = contPhone.ContactID left join SYS_PhoneTypeDesc as phont on phont.TypeID = contPhone.PhoneType left join SALUTATIONS as tsal on tsal.salutid = cont.Salutation where cont.ContactID = '".$row_getContactInfo->contactid."'  order by phont.TypeDesc";

JSON.parse(CRUD(phcontquery))

var table = "<tr> <td><center><input type='checkbox' name='rowSelect' class='checkbox_contact' value='".$row_getContactInfo->contactid."'></center></td> <td onclick=showRow('tr".$i."')>+</td> <td onclick=openModal(".$row_getContactInfo->contactid.")>".$row_getContactInfo->firstname.' '.$row_getContactInfo->lastname."</td> <td onclick=openModal(".$row_getContactInfo->contactid.")>".$row_getContactInfo->Title."</td> <td onclick=openModal(".$row_getContactInfo->contactid.")>".$getContactDetail->PhoneType."</td> <td onclick=openModal(".$row_getContactInfo->contactid.")>".$getContactDetail->PhoneNum."</td> <td onclick=openModal(".$row_getContactInfo->contactid.")>".$row_getContactInfo->EmailAddress."</td> <td onclick=openModal(".$row_getContactInfo->contactid.")>".$row_getContactInfo->ContactType."</td> <td onclick=openModal(".$row_getContactInfo->contactid.")>".$active."</td> </tr>"; 


$getPhoneNumber = $conn->query("select * from  ContactPhones as contPhone left join SYS_PhoneTypeDesc as phont on phont.TypeID = contPhone.PhoneType where ContactID = '".$row_getContactInfo->contactid."' ");

foreach( $getPhoneNumber->fetchAll(PDO::FETCH_OBJ) as $row_getPhoneNumber)
{
$table = $table."<tr class='tr".$i."' style='display:none;'> <td colspan='4'></td> <td>".$row_getPhoneNumber->PhoneType."</td> <td>".$row_getPhoneNumber->PhoneNum."</td> <td colspan='3'></td> </tr>";
}
echo $table;


})

$.ajax({
method : "POST",
async: false,
data : {CustID: CustID},
async:false,
url : "../Customer/assets/ajax/ajax_getContactInfo.php",
success: function (data) { 

$('#Cust_ContTable tbody').html(data);
}
});
}




<button id="QW_Report" type="button" class="btn toggle " style="width: 8em;" >Report</button>
<div id="link-box">
<ul id="menu">
<li href="/#" class="folder">			
Export
<ul>
<li><a href="/#"> Excel </a></li>
<li><a href="/#"> Word </a></li>
<li><a href="/#"> Text </a></li>
</ul>
</li>
<li><a href="/#" id="QW_Save" > Save </a></li>	
<li><a href="/#"> Delete </a></li>
<li><a href="/#"> Print </a></li>
</ul>

</div>





////////////////////////////////


$(document).click(function() {
$('#link-box').css("display","none");
});

$('#QW_Report').click(function(){ 

$('#link-box').css("display","block");

})



$('#QW_Report').click(function(){ 

$('#menu').css("display",$('.QW_Report ul').css("display")=="block"?"none":"block");

})


$("#QW_Report,#link-box").on({
mouseenter: function () {
$("#menu").css("display","block")
},
mouseleave: function () {
$("#menu").css("display","none")
}
});



$("#QW_Report").on({
mouseenter: function () {
$("#menu").css("display","block")
},
mouseleave: function () {
$("#menu").css("display","none")
}
});




<style>

#link-box {
width: 150px;
height: 200px;
float: right;
border: 1px solid #000000;
position: absolute;
display:none;
top: -17em;
left: 9em;
}

#Export-box {
width: 65px;
height: 118px;
display:none;
float: right;
border: 1px solid #000000;
position: absolute;
top: -5em;
left: 13em;
}

.toggle1:focus~#Export-box {
display: block;
}

.toggle:focus~#link-box {
display: block;
}

#link-box > ul > li {
list-style: none;
padding: 10px;
}

#link-box > ul > li > a {
text-decoration: none;
color: #000000;
}

#Export-box > ul > li {
list-style: none;
padding: 10px;
}

#Export-box > ul > li > a {
text-decoration: none;
color: #000000;
}
</style>














<ul>
<li><a href="/#" class="toggle1" >Export</a></li>
<li><a href="/#">Save</a></li>
<li><a href="/#">Delete</a></li>
<li><a href="/#">Print</a></li>
</ul>

function functionListchange(val)
{

var html2='';
var html4='';

switch(val)
{

case "1":

html2="<option value='fName.ResDesc'>Function Name</option><option value='slps.FirstName+slps.LastName as Salesperson'>Salesperson</option><option value='fn.starttime AS StartTime'>Start Time</option><option value='fn.endtime AS EndTime'>End Time</option><option value='functionRoom'>Function Room </option><option value='fn.functexpnumppl'>Expected</option><option value='fn.functgtdnumppl'>Gaurenteed</option><option value='sd.Descrip'>Service Description</option> <option value='st.ServTime'>Service Time</option>";

html4="<option value='fn.StartDate'>Function Date</option><option value='custname'>Customer Name</option>";

break;


case "2":
html2="<option value='slps.FirstName+slps.LastName as Salesperson'>Salesperson</option><option value='sd.Descrip'>Service Description</option> <option value='st.ServTime'>Service Time</option>";

html4="<option value='fn.StartDate'>Function Date</option><option value='functionRoom'>Function Room </option>";

break;


case "3":
html2="<option value='fn.StartDate'>Function Date</option><option value='custname'>Customer Name</option><option value='fName.ResDesc'>Function Name </option><option value='fn.onsitecontact'>On Site Contact</option><option value='slps.FirstName+slps.LastName as Salesperson'>Salesperson</option><option value='fn.starttime AS StartTime'>Start Time</option><option value='fn.endtime AS EndTime'>End Time</option><option value='functionRoom'>Function Room </option><option value='fn.functexpnumppl'>Expected</option><option value='fn.functgtdnumppl'>Gaurenteed</option><option value='sd.Descrip'>Service Description</option><option value='st.ServTime'>Service Time</option>";

html4="<option value='fn.StartDate'>Function Date</option><option value='functionRoom'>Function Room</option><option value='custname'>Customer Name</option>";

break;

case "4":
html2="<option value='fName.ResDesc'>Function Name </option><option value='fn.onsitecontact'>On Site Contact</option><option value='slps.FirstName+slps.LastName as Salesperson'>Salesperson</option><option value='fn.starttime AS StartTime'>Start Time</option><option value='fn.endtime AS EndTime'>End Time</option><option value='functionRoom'>Function Room </option><option value='fn.functexpnumppl'>Expected</option><option value='bkg.PostAs'>booking postAs</option>";

html4="<option value='fn.StartDate'>Function Date</option><option value='functionRoom'>Function Room</option><option value='custname'>Customer Name</option>";

break;

case "5":

html2="<option value='fName.ResDesc'>Function Name </option><option value='slps.FirstName+slps.LastName as Salesperson'>Salesperson</option><option value='fn.starttime AS StartTime'>Start Time</option><option value='fn.endtime AS EndTime'>End Time</option><option value='functionRoom'>Function Room </option><option value='fn.functexpnumppl'>Expected</option><option value='sd.Descrip'>Service Description</option><option value='st.ServTime'>Service Time</option>";

html4="<option value='fn.StartDate'>Function Date</option><option value='functionRoom'>Function Room</option><option value='custname'>Customer Name</option>";

break;


case "6":

html2="<option value='fn.StartDate'>Function Date</option><option value='functionRoom'>Function Room</option><option value='custname'>Customer Name</option><option value='fName.ResDesc'>Function Name </option><option value='slps.FirstName+slps.LastName as Salesperson'>Salesperson</option><option value='fn.starttime AS StartTime'>Start Time</option><option value='fn.endtime AS EndTime'>End Time</option><option value='functionRoom'>Function Room </option><option value='fn.functexpnumppl+' / '+fn.functexpnumppl'>Expected/Gaurenteed</option><option value='sd.Descrip'>Setup Type</option>";

html4="<option value='fn.StartDate'>Function Date</option><option value='functionRoom'>Function Room</option><option value='custname'>Customer Name</option>";

break;


case "7":
html2="<option value='slps.FirstName+slps.LastName as Salesperson'>Salesperson</option><option value='fn.functexpnumppl>Expected </option><option value='custname'>Customer Name</option><option value='functionRoom'>Function Room</option><option value='fName.ResDesc'>Function Name </option><option value='fn.starttime+fn.endtime AS StartTime_EndTime'>StartTime-EndTime</option><option value='sd.Descrip'>Setup Type</option>";

html4="<option value='fn.StartDate'>Function Date</option>";

break;


$('#RS_FN_DisplayOnFunctionList').html(html2)
$('#RS_FN_SortedBy').html(html4);

}

}



////////////////////////

blob = new Blob(['\ufeff', element], {  type: 'application/msword'  });


<option value="1">Function List(Regular)</option>
<option value="2">Function List by Room Index</option>
<option value="3">Function List with Post as Name </option>
<option value="4">Function List with Room Rental </option>
<option value="5">Function List with Status </option>
<option value="6">Function List without Revenue</option>
<option value="7">Function List without Service Time</option>



// 32: <option value="cnt.FirstName+cnt.LastName as CustomerName">BookingContact</option>  33: <option value="cst.CustPhone">ContactPhone</option>  34: <option value="bkg.evtid">bookingId</option>  35: <option value="EvtName">bookingName</option>  36: <option value="bkg.PostAs">postAs</option>  37: <option value="cst.custname">Customer Name</option>  38: <option value="cst.CustPhone">Customer Phone</option>  39: <option value="fn.starttime AS StartTime">Start Time</option>  40: <option value="fn.endtime AS EndTime">End Time</option>  41: <option value="fn.StartDate">Function Date </option>  42: <option value="fn.functexpnumppl">Expected</option>  43: <option value="fn.FunctID">FunctID</option>  44: <option value="fName.ResDesc">Function Name </option>  45: <option value="SFRDT.FRName as functionRoom">Function Room </option>  46: <option value="fn.functgtdnumppl">Gaurenteed</option>  47: <option value="slps.FirstName+slps.LastName as Salesperson ">Manager</option>  48: <option value="fn.onsitecontact">On Site Contact</option>  49: <option value="rmblk.RoomRate">Room Rental</option>  80: <option value="slps.FirstName+slps.LastName as Salesperson">Salesperson</option>  81: <option value="sd.Descrip">Service Description</option>  82: <option value="st.ServTime">Service Time</option>  83: <option value="st.ServEndTime">Status</option>  84: <option value="rmblk.RoomRate">Total Revenue</option>  109: <option value="evtid">bookingId</option>  110: <option value="custname">Customer Name</option>  111: <option value="fn.StartDate" >Function Date </option>  112: <option value="functionRoom">Function Room </option>  113: <option value="slps.FirstName+slps.LastName as Salesperson" >Salesperson</option>  145: <option value="fn.StartDate" >Function Date </option>  146: <option value="Starttime">Start Time</option> 180: <option value="Landscape">Landscape</option>  181: <option value="Portrait">Portrait</option>



Setup Type
Start Time
Start Time- End Time
Status
Total Revenue

serviceitemid	serviceitemname	serviceitemcharge	serviceitemcost	itemquantity	actualitemquantity	itemtot	itemacttot	servicetime	serviceendtime	servicepeople	servicenotes	servicedescription	servicecategory	inpackage	servicetypeid	servicetypedescription 

<option value='fn.service time as service time'>service time</option><option value='fn.starttime AS StartTime'>Setup Start Time</option> <option value='fn.endtime AS EndTime'>End Time</option> <option value='fn.starttime+''+fn.endtime AS EndTime'>End Time</option> <option value='fn.functexpnumppl'>Expected</option> <option value='fn.FunctID'>FunctID</option> <option value='fName.ResDesc'>Function Name </option> <option value='SFRDT.FRName as functionRoom'>Function Room </option> <option    value='fn.functgtdnumppl'>Gaurenteed</option> <option value='slps.FirstName+slps.LastName as Salesperson '>Manager</option> <option value='fn.onsitecontact'>On Site Contact</option> <option value='rmblk.RoomRate'>Room Rental</option>


///////////////////

<div class="col-xs-3 col-lg-3 col-md-3 col-sm-3 form-group no-padding">
<button id="btnSetup_close" type="button" class="btn" style="width: 8em;" data-dismiss="modal">Close</button>
</div>


/////////////////////


row_sp+='<tr bookingid='+val_spbkg.bookingid+' bookingsalespersonid="'+val_spbkg.bookingsalespersonid+'" bookingmarketid="'+val_spbkg.bookingmarketid+'"><td><center >'+val_spbkg.bookingid.replace(0,' ')+'</center></td><td><center > '+val_spbkg.BookingName+'</center></td><td><center >'+val_spbkg.CustomerName+' </center></td><td><center >'+val_spbkg.Salesperson+'</center></td><td><center >'+val_spbkg.BookingManager+'</center></td><td ><center >'+val_spbkg.Market+'</center></td><td><center >'+val_spbkg.BookingStart.replace('1900-01-01',' ')+'</center></td><td ><center >'+val_spbkg.BookingEnd.replace('1900-01-01',' ')+'</center></td><td ><center >'+val_spbkg.Status+'</center></td><td ><center class="rent" >'+val_spbkg.RoomRentalTotal+'</center></td><td><center >'+val_spbkg.CC_Food_and_Beverage+'</center></td><td ><center >'+val_spbkg.CC_Audio_Visual+'</center></td><td ><center >'+val_spbkg.HMS_Campus_Catering+'</center></td><td ><center >'+val_spbkg.CC_Room_Setup+'</center></td><td class="subtotal"><center >'+val_spbkg.subtotal+'</center></td><td><center class="srvchgrate" ></center></td><td><center class="tax" >0.00</center></td><td><center class="total" ></center></td><td><center class="depositpaid" >'+val_spbkg.Despoit+'</center></td><td><center class="balancedue" ></center></td></tr>';




find and replace text in all table


$(".pdfouter .tblitems tbody center:contains('" + null + "')").text(0.00);
$(".pdfouter .tblitems tbody center:contains('" + undefined + "')").text(0.00);
$(".pdfouter .tblitems tbody center:contains('" + NaN + "')").text(0.00);


///////////////


console.log(qry_tx)

$.each(JSON.parse(CRUD(qry_tx)), function(key, val_tax)
{

console.log(val_tax.taxids);

var qry_charges="select (select srvchgrate from taxmapdet where taxid="+val_tax.taxid+" and effdate=(select max(effdate) from taxmapdet)) as 'srvchgrate',([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])*(select srvchgrate from taxmapdet where taxid="+val_tax.taxid+" and effdate=(select max(effdate) from taxmapdet))  as 'ServiceCharge' ,0.00 as 'Tax',([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates]) +([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])*(select srvchgrate from taxmapdet where taxid="+val_tax.taxid+" and effdate=(select max(effdate) from taxmapdet))+(select otherrate from taxmapdet where taxid="+val_tax.taxid+" and effdate=(select max(effdate) from taxmapdet))  as 'Total' ,(select COALESCE(sum(amtrecvd),0) from depositt where depositt.evtid=bkgrevenuerpt.bookingid)  as 'Despoit',([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])+([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])*(select srvchgrate from taxmapdet where taxid="+val_tax.taxid+" and effdate=(select max(effdate) from taxmapdet))+(select otherrate from taxmapdet where taxid="+val_tax.taxid+" and effdate=(select max(effdate) from taxmapdet)) -(select COALESCE(sum(amtrecvd),0) from depositt where depositt.evtid=bkgrevenuerpt.bookingid) as 'BalanceDue' from bkgrevenuerpt where bookingstartdate between '01/04/2019' and '01/10/2019' order by bookingid,BookingStart";

console.log(qry_charges)

$.each(JSON.parse(CRUD(qry_charges)), function(key, val_charges)
{
console.log(val_charges)
})

})



//////////////s








if(val_spbkg.bookingsalespersonid!='0')
{

row_sp+='<tr><td><center><p style="margin-top:3em;margin-bottom:3em;"></p></center></td><td><center> </center></td><td><center></center></td><td><center></center></td><td><center></center></td><td><center></center></td><td ><center></center></td><td><center></center></td><td ><center></center></td><td ><center></center></td><td ><center></center></td><td ><center></center></td></tr>';

}



var prev=$(this).prev();
console.log(prev)
console.log(prev.attr('bookingmarketid'))

var qry_rent="select max(RoomRentalTotal) as RoomRentalTotal from bkgrevenuerpt where BookingStart between '01/04/2019' and '01/10/2019' and bookingsalespersonid ='"+prev.attr('bookingsalespersonid')+"' and bookingmarketid='"+prev.attr('bookingmarketid')+"' group by Market,bookingsalespersonfirstname+bookingsalespersonlastname";

var rent=0.00;

if(JSON.parse(CRUD(qry_rent).length>=0)
{
$.each(JSON.parse(CRUD(qry_rent)), function(key, val_rent){

console.log(val_rent.RoomRentalTotal)
rent+=parseFloat(val_rent.RoomRentalTotal);
console.log(rent)

})

}
console.log(rent)
$(this).find('.rent').text(rent)

//////////////////	


var qry_sp2="select distinct bookingsalespersonfirstname+bookingsalespersonlastname as Salesperson  from bkgrevenuerpt where BookingStart between '01/04/2019' and '01/10/2019' "+ServiceHeadersquery+salesPersonquery+sectionsquery+MarketSegmentquery+" ";

var qry_sp="select distinct bookingsalespersonfirstname+bookingsalespersonlastname as Salesperson  from bkgrevenuerpt where BookingStart between '01/04/2019' and '01/10/2019'  and bookingsalespersonid in(12,14,36) " ;



if($(this).attr('salesperson').includes('Total'))
{

var Salesperson = $(this).attr('Salesperson').split("for").pop().trim();

var market =$(this).attr('market').substring(0, $(this).attr('market').indexOf(":"))
console.log(market)

var qry_rent="select max(RoomRentalTotal) as RoomRentalTotal from bkgrevenuerpt where BookingStart between '01/04/2019' and '01/10/2019' and bookingsalespersonfirstname+bookingsalespersonlastname ='"+Salesperson+"' and market="+market+" group by  Market,bookingsalespersonfirstname+bookingsalespersonlastname";

console.log(qry_rent)
var rent=0.00;
$.each(JSON.parse(CRUD(qry_rent)), function(key, val_rent){

console.log(val_rent.RoomRentalTotal)
rent+=parseFloat(val_rent.RoomRentalTotal);
console.log(rent)

})
console.log(rent)
$(this).find('.rent').text(rent)

}


///////////////////

var query_old="select bookingid,BookingName,CustomerName,bookingsalespersonfirstname+bookingsalespersonlastname as Salesperson,COALESCE(BookingManager,'') as BookingManager ,Market,BookingStart,BookingEnd, Status,(select rentsum from roomrentsummary where evtid=(bookingid)) as 'RoomRentalTotal',([CC Food and Beverage]) as [CC_Food_and_Beverage],([CC Audio Visual]) as [CC_Audio_Visual],([HMS Campus Catering]) as [HMS_Campus_Catering],([CC Room Setup/Rates]) as [CC_Room_Setup],([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates]) as 'subtotal',(select srvchgrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet)) as 'srvchgrate',([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])*(select srvchgrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet))  as 'ServiceCharge' ,0.00 as 'Tax',([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates]) +([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])*(select srvchgrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet))+(select otherrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet))  as 'Total' ,(select COALESCE(sum(amtrecvd),0) from depositt where depositt.evtid=bkgrevenuerpt.bookingid)  as 'Despoit',([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])+([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])*(select srvchgrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet))+(select otherrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet)) -(select COALESCE(sum(amtrecvd),0) from depositt where depositt.evtid=bkgrevenuerpt.bookingid)  as 'BalanceDue' from bkgrevenuerpt where bookingstartdate  between '01/04/2019' and '01/10/2019'  "+ServiceHeadersquery+salesPersonquery+sectionsquery+MarketSegmentquery+"  order by bookingid,BookingStart ";

//'"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"'


////////////////////
var qry_spbkg_o="select max(bookingid) as bookingid,max(BookingName) as BookingName,max(CustomerName) as CustomerName,max(COALESCE(BookingManager,'')) as BookingManager ,max(Market) as Market,max(BookingStart) as BookingStart,max(BookingEnd) as BookingEnd, max(Status) as Status,(select rentsum from roomrentsummary where evtid=(bookingid)) as 'RoomRentalTotal',sum([CC Food and Beverage]) as [CC_Food_and_Beverage],sum([CC Audio Visual]) as [CC_Audio_Visual],sum([HMS Campus Catering]) as [HMS_Campus_Catering],sum([CC Room Setup/Rates]) as [CC_Room_Setup],sum([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])+(select rentsum from roomrentsummary where evtid=(bookingid)) as 'subtotal' from bkgrevenuerpt where BookingStart between '01/04/2019' and '01/10/2019' and  bookingsalespersonfirstname+bookingsalespersonlastname ='"+val_sp.Salesperson+"' group by bookingid ";


var qry_spbkg2="select bookingid,Market,bookingsalespersonfirstname+bookingsalespersonlastname as Salesperson,max(BookingName) as BookingName,max(CustomerName) as CustomerName,max(COALESCE(BookingManager,'')) as BookingManager ,max(bkgrevenuerpt.Market) as Market,max(BookingStart) as BookingStart,max(BookingEnd) as BookingEnd, max(Status) as Status,(select rentsum from roomrentsummary where evtid=(bookingid)) as 'RoomRentalTotal',sum([CC Food and Beverage]) as [CC_Food_and_Beverage],sum([CC Audio Visual]) as [CC_Audio_Visual],sum([HMS Campus Catering]) as [HMS_Campus_Catering],sum([CC Room Setup/Rates]) as [CC_Room_Setup]  from bkgrevenuerpt where BookingStart between '01/04/2019' and '01/10/2019' and bookingsalespersonfirstname+bookingsalespersonlastname ='"+val_sp.Salesperson+"' group by  bookingid,Market,bookingsalespersonfirstname+bookingsalespersonlastname  union  select '1' as bookingid,Market+' Total for '+max(bookingsalespersonfirstname+bookingsalespersonlastname) as Salesperson,'' as Market,'' as BookingName,'' as CustomerName,'' as BookingManager ,'' as Market,'' as BookingStart,'' as BookingEnd, '' as Status,'' as 'RoomRentalTotal',sum([CC Food and Beverage]) as [CC_Food_and_Beverage],sum([CC Audio Visual]) as [CC_Audio_Visual],sum([HMS Campus Catering]) as [HMS_Campus_Catering],sum([CC Room Setup/Rates]) as [CC_Room_Setup] from bkgrevenuerpt where BookingStart between '01/04/2019' and '01/10/2019' and bookingsalespersonfirstname+bookingsalespersonlastname ='"+val_sp.Salesperson.trim()+"' group by  Market order by 2,1";

/////////////////////////




select max(BookingName) as BookingName,max(CustomerName) as CustomerName,max(COALESCE(BookingManager,'')) as BookingManager ,max(Market) as Market,max(BookingStart) as BookingStart,max(BookingEnd) as BookingEnd, max(Status) as Status,sum(select rentsum from roomrentsummary where evtid=(bookingid)) as 'RoomRentalTotal',sum([CC Food and Beverage]) as [CC_Food_and_Beverage],sum(([CC Audio Visual])) as [CC_Audio_Visual],sum(([HMS Campus Catering]) as [HMS_Campus_Catering],sum([CC Room Setup/Rates]) as [CC_Room_Setup],sum([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])) as 'subtotal',sum(select srvchgrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet)) as 'srvchgrate',sum(([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])*(select srvchgrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet)))  as 'ServiceCharge' ,sum(0.00) as 'Tax',sum(([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates]) +([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])*(select srvchgrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet))+(select otherrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet)))  as 'Total' ,sum(select COALESCE(sum(amtrecvd),0) from depositt where depositt.evtid=bkgrevenuerpt.bookingid)  as 'Despoit',sum(([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])+([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])*(select srvchgrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet))+(select otherrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet)) -(select COALESCE(sum(amtrecvd),0) from depositt where depositt.evtid=bkgrevenuerpt.bookingid))  as 'BalanceDue' from bkgrevenuerpt where BookingStart between '01/04/2019' and '01/10/2019' and  bookingsalespersonfirstname+bookingsalespersonlastname ='ChristianPanasuk' group by bookingid



var Grand_RoomRentalTotal=0.00;
var Grand_CCFoodandBeverage=0.00;
var Grand_CCAudioVisual=0.00;
var Grand_HMS_Campus_Catering=0.00;
var Grand_Setup=0.00;
var Grand_Subtotal=0.00;
var Grand_ServiceCharge=0.00;
var Grand_Tax=0.00;
var Grand_Deposit=0.00;
var Grand_Balance=0.00;

$.each(groupbySalesperson, function(key, value){

var groupbyMarket= _.groupBy(value, function(d){return d.Market});

var Sp='';

var sp_RoomRentalTotal=0.00;
var sp_CCFoodandBeverage=0.00;
var sp_CCAudioVisual=0.00;
var sp_HMS_Campus_Catering=0.00;
var sp_Setup=0.00;
var sp_Subtotal=0.00;
var sp_ServiceCharge=0.00;
var sp_Tax=0.00;
var sp_Deposit=0.00;
var sp_Balance=0.00;

$.each(groupbyMarket, function(key1, value1){

var CC_Food_and_Beverage=0.00;
var CC_Audio_Visual=0.00;
var HMS_Campus_Catering=0.00;
var CC_Room_Setup=0.00;
var subtotal=0.00;
var ServiceCharge=0.00;
var Tax=0.00;
var Total=0.00;
var Despoit=0.00;
var BalanceDue=0.00;

var bookingstartdate=0.00;
var BookingEnd=0.00;
var Status=0.00;
var RoomRentalTotal=0.00;

var BookingName='';
var CustomerName='';
var Salesperson='';
var BookingManager='';
var Market='';
var bookingid='';

var query1 = query.replace("ms.MrktID", "bookingmarketid").replace("slps.SalesID", "bookingsalespersonid");

$.each(value1, function(key2, value2){

CustomerName=value2.CustomerName.replace(",", " ");
BookingName=value2.BookingName;
BookingManager=value2.BookingManager;
Market=value2.Market;
bookingid=value2.bookingid;

Salesperson=value2.Salesperson;
bookingstartdate=value2.BookingStart;
BookingEnd=value2.BookingEnd;
Status=value2.Status;

RoomRentalTotal=parseFloat(value2.RoomRentalTotal);

//srvchgrate
CC_Food_and_Beverage+=parseFloat(value2.CC_Food_and_Beverage);
CC_Audio_Visual+=parseFloat(value2.CC_Audio_Visual);
HMS_Campus_Catering+=parseFloat(value2.HMS_Campus_Catering);
CC_Room_Setup+=parseFloat(value2.CC_Room_Setup);

subtotal+=parseFloat(value2.subtotal);
ServiceCharge+=parseFloat(value2.ServiceCharge);
Tax+=parseFloat(value2.Tax);
Total+=parseFloat(value2.Total);

Despoit+=parseFloat(value2.Despoit);
BalanceDue+=parseFloat(value2.BalanceDue);

var sp_RoomRentalTotal=0.00;
var sp_CCFoodandBeverage=0.00;
var sp_CCAudioVisual=0.00;
var sp_HMS_Campus_Catering=0.00;
var sp_Setup=0.00;
var sp_Subtotal=0.00;
var sp_ServiceCharge=0.00;
var sp_Tax=0.00;
var sp_Deposit=0.00;
var sp_Balance=0.00;

})

row+='<tr><td ><center>'+bookingid+'</center></td><td><center>'+BookingName+'</center></td><td ><center>'+CustomerName+'</center></td><td ><center>'+Salesperson+'</center></td><td><center>'+BookingManager+'</center></td><td><center>'+Market+'</center></td><td ><center>'+bookingstartdate+'</center></td><td ><center>'+BookingEnd+'</center></td><td ><center>'+Status+'</center></td><td ><center>'+RoomRentalTotal+'</center></td><td ><center>'+CC_Food_and_Beverage+'</center></td><td ><center>'+CC_Audio_Visual+'</center></td><td ><center>'+HMS_Campus_Catering+'</center></td><td ><center>'+CC_Room_Setup+'</center></td><td ><center>'+parseFloat(parseFloat(RoomRentalTotal)+parseFloat(subtotal))+'</center></td><td ><center>'+ServiceCharge.toFixed(2)+'</center></td><td ><center>'+Tax+'</center></td><td ><center>'+parseFloat(parseFloat(RoomRentalTotal)+parseFloat(subtotal)+parseFloat(ServiceCharge))+'</center></td><td ><center>'+Despoit+'</center></td><td ><center>'+parseFloat(parseFloat(RoomRentalTotal)+parseFloat(subtotal)+parseFloat(ServiceCharge)-parseFloat(Despoit))+'</center></td></tr>';

row+='<tr><td><center ><p style="margin-top:2em;" ></p></center></td><td ><center></center></td><td ><center></center></td><td>'+Market+' Total for '+Salesperson+' :</td><td><center></center></td><td ></td><td></td><td ><center></center></td><td ><center></center></td><td><center>'+RoomRentalTotal+'</center></td><td ><center>'+CC_Food_and_Beverage+'</center></td><td ><center>'+CC_Audio_Visual+'</center></td><td ><center>'+HMS_Campus_Catering+'</center></td><td ><center>'+CC_Room_Setup+'</center></td><td ><center>'+parseFloat(parseFloat(RoomRentalTotal)+parseFloat(subtotal))+'</center></td><td ><center>'+ServiceCharge.toFixed(2)+'</center></td><td ><center>'+Tax+'</center></td><td ><center>'+parseFloat(parseFloat(RoomRentalTotal)+parseFloat(subtotal)+parseFloat(ServiceCharge))+'</center></td><td ><center>'+Despoit+'</center></td><td ><center>'+parseFloat(parseFloat(RoomRentalTotal)+parseFloat(subtotal)+parseFloat(ServiceCharge)-parseFloat(Despoit))+'</center></td></tr>';

sp_RoomRentalTotal+=parseFloat(RoomRentalTotal);
sp_CCFoodandBeverage+=CC_Food_and_Beverage;
sp_CCAudioVisual+=CC_Audio_Visual;
sp_HMS_Campus_Catering+=HMS_Campus_Catering;
sp_Setup+=CC_Room_Setup;
sp_Subtotal+=parseFloat(parseFloat(RoomRentalTotal)+parseFloat(subtotal));
sp_ServiceCharge+=parseFloat(ServiceCharge.toFixed(2));
sp_Tax+=0.00;
sp_Deposit+=Despoit;
sp_Balance+=parseFloat(parseFloat(RoomRentalTotal)+parseFloat(subtotal)+parseFloat(ServiceCharge)-parseFloat(Despoit));

Grand_RoomRentalTotal+=parseFloat(RoomRentalTotal);
Grand_CCFoodandBeverage+=CC_Food_and_Beverage;
Grand_CCAudioVisual+=CC_Audio_Visual;
Grand_HMS_Campus_Catering+=HMS_Campus_Catering;
Grand_Setup+=CC_Room_Setup;
Grand_Subtotal+=parseFloat(parseFloat(RoomRentalTotal)+parseFloat(subtotal));
Grand_ServiceCharge+=parseFloat(ServiceCharge.toFixed(2));
Grand_Tax+=0.00;
Grand_Deposit+=Despoit;
Grand_Balance+=parseFloat(parseFloat(RoomRentalTotal)+parseFloat(subtotal)+parseFloat(ServiceCharge)-parseFloat(Despoit));

Sp=Salesperson

})

row+='<tr><td><center ><p style="margin-top:3em;" ></p></center></td><td ><center></center></td><td ><center></center></td><td>'+Sp+' Total:</td><td><center></center></td><td ></td><td></td><td ><center></center></td><td ><center></center></td><td><center>'+sp_RoomRentalTotal+'</center></td><td ><center>'+sp_CCFoodandBeverage+'</center></td><td ><center>'+sp_CCAudioVisual+'</center></td><td ><center>'+sp_HMS_Campus_Catering+'</center></td><td ><center>'+sp_Setup+'</center></td><td ><center>'+sp_Subtotal+'</center></td><td ><center>'+sp_ServiceCharge+'</center></td><td ><center>'+sp_Tax+'</center></td><td ><center>'+0+'</center></td><td ><center>'+sp_Deposit+'</center></td><td ><center>'+sp_Balance+'</center></td></tr>';

})


row+='<tr><td><center ><p style="margin-top:2em;margin-bottom:2em;" ></p></center></td><td ><center></center></td><td ><center>Grand Total </center></td><td></td><td><center></center></td><td ></td><td></td><td ><center></center></td><td ><center></center></td><td><center>'+Grand_RoomRentalTotal+'</center></td><td ><center>'+Grand_CCFoodandBeverage+'</center></td><td ><center>'+Grand_CCAudioVisual+'</center></td><td ><center>'+Grand_HMS_Campus_Catering+'</center></td><td ><center>'+Grand_Setup+'</center></td><td ><center>'+Grand_Subtotal+'</center></td><td ><center>'+Grand_ServiceCharge+'</center></td><td ><center>'+Grand_Tax+'</center></td><td ><center>'+0+'</center></td><td ><center>'+Grand_Deposit+'</center></td><td ><center>'+Grand_Balance+'</center></td></tr>';


///////////////////////////////



var query_old="select max(Salesperson) as Salesperson,max(bookingmarketsegment) as Market,max(bookingstartdate) as bookingstartdate,max(BookingEnd) as BookingEnd ,max(Status) as Status,(select rentsum from roomrentsummary where evtid=max(bookingid)) as 'RoomRentalTotal',sum([CC Food and Beverage]) as [CC Food and Beverage],sum([CC Audio Visual]) as [CC Audio Visual],sum([HMS Campus Catering]) as [HMS Campus Catering],sum([CC Room Setup/Rates]) as [CC Room Setup/Rates],sum([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])+(select rentsum from roomrentsummary where evtid=max(bookingid)) as subtotal  from bkgrevenuerpt  where bookingstartdate between '"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"' "+ServiceHeadersquery+salesPersonquery+sectionsquery+MarketSegmentquery+" group by  bookingstartdate "+groupby+"";



//////////////////////////

/////////////////  multi booking /////////////////////////////////

var prevday = new Date(objAv.CalenderDate);
prevday.setDate(prevday.getDate() - 1);

$('#AV_Infotbl tbody tr').each(function() {

var query="select funct.functid,functenddate,CONVERT(VARCHAR(5), EndTime, 108) as EndTime , funct.evtid as eventid, SFRDT.FrdID as functionRoomId, SFRDT.FRName as functionRoom, funct.functname as functionName,cst.CustID from FUNCT funct  left join TSLTT on TSLTT.FunctID = funct.functid left join SFRDT on SFRDT.FrdID = TSLTT.FRID left join EVENT bkg on bkg.EvtID = funct.evtid left join CUSTT cst on bkg.CustID=cst.CustID left join contacts cnt on cnt.ContactID=funct.onsitecontact left join SALPT slps on slps.SalesID=FUNCT.spid left join functnotes on functnotes.functid= funct.functid  left join slphdrt on bkg.evtid= slphdrt.evtid where startdate='"+yyyymmdd(prevday)+"' and SFRDT.FrdID="+$(this).attr('frdid')+" and functenddate>='"+objAv.CalenderDate+"'  ";

if(JSON.parse(CRUD(query)).length>=0)
{
if(JSON.parse(CRUD(query))[0])
{	
var functenddate = moment(JSON.parse(CRUD(query))[0].functenddate).format('YYYY-MM-DD')
var now = moment(objAv.CalenderDate).format('YYYY-MM-DD');

if (functenddate > now) {

$(this).find('.grid_back').addClass("blueColor");
$(this).attr('funcid',JSON.parse(CRUD(query))[0].functid);
$(this).attr('custmrid',JSON.parse(CRUD(query))[0].CustID);
$(this).attr('functionname',JSON.parse(CRUD(query))[0].functionName);
$(this).attr('functionroom',JSON.parse(CRUD(query))[0].functionroom);

} else if (functenddate == now) {

$(this).find('.grid_back').each(function() {

$(this).addClass("blueColor");
$(this).attr('funcid',JSON.parse(CRUD(query))[0].functid);
$(this).attr('custmrid',JSON.parse(CRUD(query))[0].CustID);
$(this).attr('functionname',JSON.parse(CRUD(query))[0].functionName);
$(this).attr('functionroom',JSON.parse(CRUD(query))[0].functionroom);

// <div class="Av_grid grid_back 1-3 lightblueColor" id="1-3" slot="06:00" funcid="147383" custname="$$$$Ottaway, III John Palmer" custphone="" startdate="2019-04-10" functionname="Breakfast" functionroom="Main Dining Room" functiontime="07:30:00 09:30:00" custmrid="33074"></div>

//funcid="147383"

var slot=$(this).attr('slot')
var EndTime=JSON.parse(CRUD(query))[0].EndTime

if(slot==EndTime)
{

console.log(slot)
console.log(EndTime)
console.log(slot==EndTime)

return false;
}
})

}


}
}

// select functenddate,EndTime from FUNCT funct join TSLTT on TSLTT.FunctID = funct.functid join SFRDT on SFRDT.FrdID = TSLTT.FRID where startdate='2019-4-8' and SFRDT.FrdID=1

// 2019-04-08

})

/////////////////////  multi booking end///////////////////////////





var query_old="select max(functid) as functid ,max(bookingid) as bookingid,max(bookingpostas) as bookingpostas ,max(functpostas) as functpostas,max(bookingconfirmdate) as bookingconfirmdate,max(bookingname) as bookingname  ,max(contactlastname+contactfirstname) as Contact    ,max(contactlastname+contactfirstname)  as OnSiteContact  ,max(bookingsalespersonfirstname+bookingsalespersonlastname) as Salesperson , max(functname) as functname ,COALESCE(max(bookingstartdate),'')  as bookingstartdate ,max(bookingstatus) as bookingstatus, max(custname) as custname,	max(custphone)as custphone, max(contactfax) as contactfax, max(contactfirstname+contactlastname) as contactperson ,max(contactphonenumber) as contactphonenumber , max(functguaranteedpeople) as functguaranteedpeople ,max(functexpectedpeople) as functexpectedpeople, max(functoneroomname) as 	functionroom,max(servicetypedescription) as   servicedescription ,max(custaddressline1+custaddressline2) as Address ,max(contactemailaddress)  as EMail,max(bookingsalespersonfirstname+bookingsalespersonlastname) as BookingMgr ,max(functstarttime) as functstarttime,max(functendtime) as functendtime,max(functroomsetuptype) as functroomsetuptype from query_services where functdate  between '"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"' group by functid ";


////////////////////////



console.log(time.add(30, 'minutes').format("HH:MM"))


77568

//console.log(objBooking.evtid)

save(bookingID)
{

//valiation
if(!$('#customerName').val()){alert('customer Name not set'); return;}
if(!$('#bookingName').val()){alert('booking Name not set') ; return;}
if(!$('#startDAte').val()){alert('start date not set') ; return;}
if(!$('#endDate').val()){alert('end date not set'); return;}
if(!$('#bookingStatus').val()){alert('bookingStatus not set');  return;}
if(!$('#contractSent').val()){alert('contract sent date not set');  return;}
if(!$('#contractRecieved').val()){alert('contract recd date not set');  return;}
if(!$('#contractDue').val()){alert('contract due date not set') ; return;}

if($('#contractRecieved').val()==undefined){alert('contractRecieved date not set');  return;}
if($('#contractDue').val()==undefined){alert('contractRecieved date not set');  return;}
if($('#contractSent').val()==undefined){alert('contractRecieved date not set');  return;}
if($('#cutoffDate').val()==undefined){alert('EvtCutoffDate date not set') ; return;}


if($('#bookingcontactDropdown :selected').val()==undefined){alert('please select contact')
return;}

var query='';
console.log(objBooking.evtid)
if(bookingID)
{

query="update event set [custid]='"+$('#NBMdls_HideCustomerID').val()+"',[contactid]='"+$('#bookingcontactDropdown :selected').val()+"',[reservationid]=0,[spid]='"+$('#salesPerson :selected').val()+"',[evtname]='"+$('#bookingName').val()+"',[evtstart]='"+yyyymmdd($('#startDAte').val())+"',[evtend]='"+yyyymmdd($('#endDate').val())+"',[evtstatus]='"+$('#bookingStatus').val()+"',[confdate]= CAST(GETDATE() AS DATE),[evtpaymentmethod]=0,[frequency]=0,[referralsource]=0,[mrktseg]='"+$('#bookingSegment :selected').val()+"',[postas]=0,[loudgroup]=0,[donotpost]=0,[notesexist]=0,[cateringsalesid]=0,[cateringcontact]=0,[contractsent]='"+yyyymmdd($('#contractSent').val())+"',[contractrecd]='"+yyyymmdd($('#contractRecieved').val())+"',[contractdue]='"+yyyymmdd($('#contractDue').val())+"',[billingcustid]='"+$('#NBMdls_HideCustomerID').val()+"',[monitoroverride]=0,[taxexempt]=0,[yieldalias]=0,[matterid]=0,[eventemailsent]=0,[sourceevtid]=0,[taxexemptdetail]=0,[EvtInitDate]='"+yyyymmdd($('#startDAte').val())+"',[EvtCutoffDate]='"+yyyymmdd($('#cutoffDate').val())+"',[fundid]=0  where evtid="+objBooking.evtid+" ";
;
var out = CRUD(query);

}
else
{
query="INSERT INTO event([custid],[contactid],[reservationid] ,[spid],[evtname],[evtstart],[evtend],[evtstatus],[confdate],[evtpaymentmethod],[frequency],[referralsource],[mrktseg],[postas],[loudgroup],[donotpost],[notesexist],[cateringsalesid],[cateringcontact],[contractsent],[contractrecd],[contractdue],[billingcustid],[monitoroverride],[taxexempt],[yieldalias],[matterid],[eventemailsent],[sourceevtid],[taxexemptdetail],[EvtInitDate],[EvtCutoffDate],[fundid])values('"+$('#NBMdls_HideCustomerID').val()+"','"+$('#bookingcontactDropdown :selected').val()+"',0,'"+$('#salesPerson :selected').val()+"','"+$('#bookingName').val()+"','"+yyyymmdd($('#startDAte').val())+"','"+yyyymmdd($('#endDate').val())+"','"+$('#bookingStatus').val()+"',CAST(GETDATE() AS DATE),0,0,0,'"+$('#bookingSegment :selected').val()+"',0,0,0,0,0,0,'"+yyyymmdd($('#contractSent').val())+"','"+yyyymmdd($('#contractRecieved').val())+"','"+yyyymmdd($('#contractDue').val())+"','"+$('#NBMdls_HideCustomerID').val()+"',0,0,0,0,0,0,'"+$('#NBMdls_HideCustomerID').val()+"','"+yyyymmdd($('#startDAte').val())+"','"+yyyymmdd($('#cutoffDate').val())+"',0);";
;
var out = CRUD(query);
}

objBooking.evtid = JSON.parse(CRUD("select top 1 * from event order by (evtid) desc"))[0].evtid;


}


///////////////////////


update event set [custid]='6157',[contactid]='19673',[reservationid]=0,[spid]='72',[evtname]='MARGI SCHOLTES & DAVE WHITTINGHAM WEDDING RECEPTION',[evtstart]='2015-5-23',[evtend]='2015-5-23',[evtstatus]='1',[confdate]= CAST(GETDATE() AS DATE),[evtpaymentmethod]=0,[frequency]=0,[referralsource]=0,[mrktseg]='56',[postas]=0,[loudgroup]=0,[donotpost]=0,[notesexist]=0,[cateringsalesid]=0,[cateringcontact]=0,[contractsent]='1899-12-30',[contractrecd]='1899-12-30',[contractdue]='1899-12-30',[billingcustid]='6157',[monitoroverride]=0,[taxexempt]=0,[yieldalias]=0,[matterid]=0,[eventemailsent]=0,[sourceevtid]=0,[taxexemptdetail]=0,[EvtInitDate]='2015-5-23',[EvtCutoffDate]='2014-3-10',[fundid]=0  where evtid=99690 

$('.redColor').each(function(index, el) {

if( $(this).eq(0).children('p').html()==undefined)
{
return;	
}

if($(this).eq(0).children('p').html()=='@')
{
$(this).eq(0).children('p').html('<img src="../Availability/assets/images/servpictkey/PlanetEarth.png" >')
}

if($(this).eq(0).children('p').html()=='#')
{
$(this).eq(0).children('p').html('<img src="../Availability/assets/images/servpictkey/Cherries.png" >')
}

if($(this).eq(0).children('p').html()=='$')
{
$(this).eq(0).children('p').html('<img src="../Availability/assets/images/servpictkey/movie projector 1.png" >')
}

if($(this).eq(0).children('p').html()=='%')
{
$(this).eq(0).children('p').html('<img src="../Availability/assets/images/servpictkey/PlanetEarth.png" >')
}


});




if(startDate <functenddate)
{

while (startDate<=functenddate) {

var starttime1,endtime1;
if(yyyymmdd(startDate)==yyyymmdd($('[name=EdFunc_Date]').val()))
{
starttime1=starttime;
endtime1="23:30:00";	
}
else if(yyyymmdd(startDate)==yyyymmdd(functenddate))
{
starttime1="04:00:00";
endtime1=endtime;
}

else 
{
starttime1="04:00:00";
endtime1="23:30:00";
}

var query ="INSERT INTO funct(evtid,spid,functname,offsitelocation,functactnumppl,functgtdnumppl,functexpnumppl,setuptype,functinitdate,functcontactdate,functconfdate,timestat,startdate,starttime,endtime,startcol,endcol,renttype,contractsent,contractreceived,setuptime,knockdowntime,onsitecontact,numberset,actualized,unmovable,functionaltered,alteredby,alteredtimestamp,notesexist,roomnightcreated,billinggroup,postfunctas,exhibitcustid,expoparentid,isexpo,delivertime,pickuptime,functemailsent,isweb,sourcefunctid,rlsID,functenddate)VALUES("+objFunction.evtid+","+$('[name=EdFunc_Salesperson]').val()+",'"+$('#EdFunc_Funtion :selected').text()+"','0',"+$('[name=EdFunc_Set]').val()+" ,"+$('[name=EdFunc_Gtd]').val()+" ,"+$('[name=EdFunc_Exp]').val()+","+$('[name=EdFunc_Setup]').val()+",'"+yyyymmdd($('[name=FunctInitDate]').val())+ "','"+yyyymmdd($('[name=EdFunc_ContactDate]').val())+ "','"+yyyymmdd($('[name=EdFunc_ConfirmDate]').val())+ "','0','"+yyyymmdd(startDate)+"','"+starttime1+"','"+endtime1+"','"+KVtime[""+starttime1+""]+"','"+KVtime[""+endtime1+""]+"','"+$('[name=EdFunc_RentType]').val()+"',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'"+$('[name=EdFunc_Setup]').val()+"','"+$('[name=EdFunc_KnckDwn]').val()+"','"+$('[name=EdFunc_SiteContact]').val()+"','0','0','0','0',"+$('[name=EdFunc_SiteContact]').val()+",CAST(GETDATE() AS DATE),'0','0','0','"+$('[name=EdFunc_Post]').val()+"','0','0','0',CAST(GETDATE() AS DATE),CAST(GETDATE() AS DATE),'0','0','0','0','"+yyyymmdd($('[name=functenddate]').val())+ "'); INSERT INTO [tsltt](frid,functid)VALUES('"+frid+"',(select max(functid) as functid from funct));";

startDate.setDate(startDate.getDate() + 1);

var out=CRUD(query);
console.log(out)
}	

}

else
{

/////////////////	


$('input[id$=txtPayScale]').keyup(function () {

alert($('input[id$=txtPayScale]').val())
});



if($('[name=EdFunc_Set]').val()!='')
{
$('[name=EdFunc_Gtd]').val($('[name=EdFunc_Set]').val())
$('[name=EdFunc_Exp]').val($('[name=EdFunc_Set]').val())	
}

else if($('[name=EdFunc_Gtd]').val()!='')
{
$('[name=EdFunc_Set]').val($('[name=EdFunc_Gtd]').val())
$('[name=EdFunc_Exp]').val($('[name=EdFunc_Gtd]').val())	
}

else if($('[name=EdFunc_Exp]').val()!='')
{
$('[name=EdFunc_Gtd]').val($('[name=EdFunc_Exp]').val())
$('[name=EdFunc_Set]').val($('[name=EdFunc_Exp]').val())	
}

////////////////////////////


$('#customerSearch_old').on('click',function(){

var cname = $('#customerName').val().trim();

$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_getCustomerDetails.php",
data : {newCustomerDetail:'1',cname : cname},
success:function(data){ //////////console.log(data)

var json = JSON.parse(data);
json=json[1];

$('#hiddenSpaceHoldCustomerId').val(json.custid);
$('#spaceHold_customer').val(json.custname);
$('#hideCustomerId').val(json.custid);
$('#NBMdls_HideCustomerID').val(json.custid);
$('#customerName').val(json.custname);
$('#NBM_Customer').val(json.custname);
$('#bookingcontactDropdown').html(getContacts(json.custid))	
$('#bookingcontactDropdown').val(json.contactid).prop('selected',true);
$("#BM_Customersearchtable tbody tr").remove();
$("#BM_Customersearchtable tbody").append("<tr><td></td>td></td>td></td><td></td>td></td>td></td></tr>");

}
});

})



var query="select max(evtid) as evtid,sum(amtdue) as amtdue,sum(amtrecvd) as amtrecvd,((sum(amtdue)-sum(amtrecvd))/sum(amtdue))*100 as 'Remaining'  from depositt where  evtid="+eventid+" group by evtid having sum(amtdue)<>0";

var json = JSON.parse(CRUD(query));

if(json.length>=0)
{
if(json[0])
{
console.log(json[0].Remaining)
if(json[0].Remaining>=50.00)
{	
statusColor = "orangeColor";
setupcolor = "lightorangeColor";
}}
}







console.log(yyyymmdd(startDate)==yyyymmdd($('[name=EdFunc_Date]').val()))
console.log(yyyymmdd(startDate)==yyyymmdd(functenddate))

console.log(starttime1)
console.log(endtime1)




$.getScript('https://momentjs.com/downloads/moment-with-locales.js', function(){
$.getScript('https://cdnjs.cloudflare.com/ajax/libs/moment-range/4.0.2/moment-range.js', function(){


var startDate = new Date(2013, 1, 12)
, endDate   = new Date(2013, 1, 15)
, range = moment().range(startDate, endDate);

console.log(range)

var startDate = yyyymmdd($('[name=EdFunc_Date]').val())
, endDate   = yyyymmdd($('[name=functenddate]').val())
, range1 = moment().range(startDate, endDate);

console.log(range1)


})})








var enumerateDaysBetweenDates = function(startDate, endDate) {
var dates = [];

var currDate = moment(startDate).startOf('day');
var lastDate = moment(endDate).startOf('day');

while(currDate.add(1, 'days').diff(lastDate) < 0) {
console.log(currDate.toDate());
dates.push(currDate.clone().toDate());
}

return dates;
};



$previousday =date('Y-m-d', strtotime('-1 day', strtotime($row_getFunction->StartDate)));

$previousdayquery ="select SFRDT.FrdID,EndTime from FUNCT funct join TSLTT on TSLTT.FunctID = funct.functid join SFRDT on SFRDT.FrdID = TSLTT.FRID where startdate='".$previousday."' and functenddate is not null";

//$x=$previousdayquery->fetchAll(PDO::FETCH_OBJ);

//if amplitheater then start from 0
// if($x->FrdID==1)
// {
// $startPoint=1;
// $endPoint=$x->EndTime;
// }

$startPoint=1;


//if booking coming from previous date -- start from initial



// $previousdayQuery=$conn->query("select functenddate, CASE WHEN DATEPART(MINUTE,FUNCT.endtime)= 15 THEN DATEADD(MINUTE, 15, FUNCT.endtime) WHEN DATEPART(MINUTE,FUNCT.endtime)= 45 THEN DATEADD(MINUTE, 15, FUNCT.endtime) ELSE FUNCT.endtime END as EndTime from FUNCT  where startdate = ".$previousday." and functenddate is not null");

// $x=$previousdayQuery->fetchAll(PDO::FETCH_OBJ);

// if($row_getFunction->StartDate=($x->functenddate))
// {
// $startPoint=1;
// $endPoint=$x->EndTime;

// }

// $previousday ="select StartTime ,EndTime  from FUNCT funct join TSLTT on TSLTT.FunctID = funct.functid join SFRDT on SFRDT.FrdID = TSLTT.FRID where startdate='"+$('#EdFunc_Date').val()+"' and SFRDT.FrdID="+frid+"";

$previousday =date('Y-m-d', strtotime('-1 day', strtotime($row_getFunction->StartDate)));

$previousdayquery ="select SFRDT.FrdID,EndTime from FUNCT funct join TSLTT on TSLTT.FunctID = funct.functid join SFRDT on SFRDT.FrdID = TSLTT.FRID where startdate=".$previousday." and functenddate is not null";

$x=$previousdayquery->fetchAll(PDO::FETCH_OBJ);

//if amplitheater then start from 0
// if($x->FrdID==1)
// {
// $startPoint=1;
// $endPoint=$x->EndTime;
// }












//, CASE WHEN DATEPART(MINUTE,FUNCT.endtime)= 15 THEN DATEADD(MINUTE, 15, FUNCT.endtime) WHEN DATEPART(MINUTE,FUNCT.endtime)= 45 THEN DATEADD(MINUTE, 15, FUNCT.endtime) ELSE FUNCT.endtime END as EndTime

console.log(starttime1)
console.log(endtime1)
console.log(StartTime1)
console.log(EndTime1)



$('#EdFunc_Ok').on('click', function() 
{	

var functid=$("#functionagendaTable tbody tr.select").attr('funid');

objFunction.Save(functid,objBooking.evtid)

});


if(Iframe != "Availability" && $('#FA_New').attr('moduleCheck') == "0")
{
$('#EdFunc_RightList').find('div').each(function() {
var funRoom = $(this).attr('id');
$('#functionRoom').val(funRoom);
if(validateSave(funRoom))
{
var formData = '';
if($('#FunctionUpdateFunctionId').val() == '')
{
formData = $('#EditFunction_form').serialize();
}
else
{
var myform = $('#EditFunction_form');
var disabled = myform.find('.form-control').removeAttr('disabled');
formData = myform.serialize();
}
$.ajax({
method: "POST",
url: "../Booking/assets/ajax/ajax_insertBooking.php",
data: formData ,
success: function(data) {
if(data == "1")
{
alert("Technical Error! Something went wrong");
}
else
{
sessionStorage.setItem("bookingData",data);
sessionStorage.setItem("bookingName",$('#NBMdls_Bookingname').val());
$('#FA_EditFunctionmodal').modal('hide');
$('#FA_EditFunctionmodal .close').click();
$('#NBMdls_NewBookingModal').modal('hide');
$('#NBMdls_NewBookingModal .close').click();
$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")			
$("#IFrame_Home").css("display","none");
$("#IFrame_Customer").css("display","none");
$("#IFrame_Contacts").css("display","none");
$("#IFrame_Report").css("display","none");
$("#IFrame_Activity").css("display","none");
var iframeBooking = $("#IFrame_Booking");
iframeBooking.css("display","inline");
iframeBooking.attr("src", iframeBooking.data("src"));
}
}
});
}
});
}





var starttime1 = moment(starttime,'hh:mm:ss');
var endtime1 = moment(endtime,'hh:mm:ss');
var StartTime1 = moment(value.StartTime,'hh:mm:ss');
var EndTime1 = moment(value.EndTime,'hh:mm:ss');

console.log(starttime1)
console.log(endtime1)
console.log(StartTime1)
console.log(EndTime1)
$.getScript('https://momentjs.com/downloads/moment-with-locales.js', function(){

var starttime=moment.utc($('[name=EdFunc_StartTime]').val(),'hh:mm:ss').add((-($('[name=EdFunc_Setup]').val()*60)),'minutes').format('hh:mm:ss');

var endtime =moment.utc($('[name=EdFunc_EndTime]').val(),'hh:mm:ss').add(($('[name=EdFunc_KnckDwn]').val()*60),'minutes').format('hh:mm:ss');

console.log(starttime)
console.log(endtime)
console.log(value.StartTime)
console.log(value.EndTime)

if(starttime>=value.StartTime || starttime<=value.EndTime || endtime>=value.StartTime || endtime<=value.EndTime)
{
console.log('isBetween')
alert('Room already Boked in this slot ')
return false;
}
else
{
console.log(' not isBetween')	
}

})


$.getScript('https://momentjs.com/downloads/moment-with-locales.js', function(){

var starttime=moment.utc($('[name=EdFunc_StartTime]').val(),'hh:mm:ss').add((-($('[name=EdFunc_Setup]').val()*60)),'minutes').format('hh:mm:ss');
var endtime =moment.utc($('[name=EdFunc_EndTime]').val(),'hh:mmss').add(($('[name=EdFunc_KnckDwn]').val()*60),'minutes').format('hh:mm:ss');

var starttime=moment.utc(starttime,'hh:mm:ss').add((-1),'minutes').format('hh:mm:ss');
var endtime=moment.utc(endtime,'hh:mm:ss').add((-1),'minutes').format('hh:mm:ss');

var starttime1 = moment(starttime,'hh:mm:ss');
var endtime1 = moment(endtime,'hh:mm:ss');
var StartTime1 = moment(value.StartTime,'hh:mm:ss');
var EndTime1 = moment(value.EndTime,'hh:mm:ss');

if(starttime1.isBetween(StartTime1, EndTime1) || endtime1.isBetween(StartTime1, EndTime1)) 
{
console.log('isBetween')
alert('Room already Boked in this slot ')
return false;
}
else 
{
console.log(' not isBetween')
return true;
}

})
















starttime1.diff(yourMoment) >= 0

starttime1.isBefore(StartTime1);
starttime1.isAfter(StartTime1);

endtime1.isBefore(EndTime1);
endtime1.isAfter(StartTime1);


starttime1.isBefore(StartTime1, 'minute'); 
starttime1.isBefore(StartTime1, 'hour');
starttime1.isBefore(StartTime1, 'second');


functenddate

var check = '0';
$.ajax({
method : "POST",
data : $('#EditFunction_form').serialize(),
url : "../Availability/assets/ajax/ajax_checkBooking.php",
async : false,
success : function(data){

for(var i = 0; i < data.length; i++)
{
if(data[i] == '1')
{
check = '1';
return check;
}
if(data[i] == '2')
{
check = '1';
return check;
}
}
}
});
if(check != '0')
{
alert("You can not Set this Setup/Knockdown time.");
return false;
}
else
{
return true;
}








var today = new Date();
var dd = today.getDate();
var mm = today.getMonth()+1; //January is 0!

var yyyy = today.getFullYear();
if(dd<10){
dd='0'+dd;
} 
if(mm<10){
mm='0'+mm;
} 
var today = mm+'-'+dd+'-'+yyyy;
$('#cutoffDate').val(today);

if($('#customerName').val().trim() == '' || $('#customerName').val().trim() == null )
{
$('#errorCustomer').html("A Customer must be loaded before creating booking... ");
}
else
{
$('#errorCustomer').hide();
if($('#bookingStatus').val().trim() == '' || $('#bookingStatus').val().trim() == null)
{
$('#bookingStatus').val('2').prop('selected',true);
}
if($('#salesPerson').val().trim() == '' || $('#salesPerson').val().trim() == null)
{
$('#salesPerson').val('1').prop('selected',true);	
}

//////////console.log($('#detail_form').serialize());
var BookingCustomerID = $('#NBMdls_HideCustomerID').val().trim();
var BookingInName	= $('#bookingName').val().trim();
var BookingContact = $('#bookingcontactDropdown').val().trim();
var BookingIDUpdate  = $('#hiddenBookingIDUpdate').val().trim();
var CustomerIDUpdate = $('#hiddenCustomerIDUpdate').val().trim();

var formdata = $('#detail_form').serializeArray();
formdata.push({name : "BCN", value : BookingCustomerID});
formdata.push({name : "BIN",value : BookingInName});
formdata.push({name : "BC",value : BookingContact});
formdata.push({name : "BIU",value : BookingIDUpdate});
formdata.push({name : "CIU",value : CustomerIDUpdate});

$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_updateBooking.php",
data : formdata,	
success:function(data){
$.alert(data);
location.reload();
}
});
return true;
}		



////////////////////////












var query="select evtid from FUNCT funct left join EVENT on EVENT.EvtID = funct.evtid  where funct.FunctID="+funcid+" ";
//////

var evtid='';

var jsonData = JSON.parse(CRUD(query)); 


<div class="col-sm-12 col-md-12 col-lg-12">
<div class="col-sm-4 col-md-4 col-lg-4  form-group">
<button type="button" class="btn btn-default Booking-Btn" id="_Clearinventory" name="_Clearinventory">Clear</button>
</div>
<div class="col-sm-4 col-md-4 col-lg-4 form-group">
<button type="button" class="btn btn-default Booking-Btn" id="_inventoryOk" name="_inventoryOk">Ok</button>
</div>
<div class="col-sm-4 col-md-4 col-lg-4  form-group">
<button type="button" class="btn btn-default Booking-Btn" data-dismiss="modal">Cancel</button>
</div>
</div>



<div class="col-sm-6 col-md-6 col-lg-6 ">
<div class="col-sm-12 col-md-12 col-lg-12 form-group">
<label>inventory</label>
<div class="input-group-addon">
<select id="_inventoryDropdown" name="_inventoryDropdown" class="form-control selectpicker">
<option value=" "></option>
</select>
</div>
</div>
<div class="col-sm-12 col-md-12 col-lg-12 form-group">
<label>Commission Rate</label>
<input type="text" class="form-control" id="_CommissionRate" name="_CommissionRate" placeholder="" onkeypress='return event.charCode >= 48 && event.charCode <= 57'> 
</div>
</div>
<div class="col-sm-6 col-md-6 col-lg-6 form-group">
<div class="col-sm-12 col-md-12 col-lg-12">
<label>Address</label>
<textarea type="text" class="form-control" rows="5" id="_inventoryAddress" name="_inventoryAddress" placeholder="Address" style="resize: none; overflow-y: scroll;">

</textarea>
</div>
</div>      






// [{"evtid":"99690","univeventid":"0","custid":"24440","contactid":"21535","reservationid":"","spid":"10","evtname":"MARGI SCHOLTES & DAVE WHITTINGHAM WEDDING RECEPTION","evtstart":"2015-05-23","evtend":"2015-05-23","evtstatus":"1","confdate":"2014-03-22","evtpaymentmethod":"0","frequency":"0","referralsource":"0","mrktseg":"56","postas":"MARGI SCHOLTES & DAVE WHITTINGHAM WEDDING RECEPTION","loudgroup":"0","donotpost":"0","notesexist":"1","cateringsalesid":"0","cateringcontact":"21132","contractsent":"1899-12-30","contractrecd":"1899-12-30","billingcustid":"24440","monitoroverride":"0","taxexempt":"0","yieldalias":null,"matterid":"0","eventemailsent":null,"contractdue":"1899-12-30","sourceevtid":"0","taxexemptdetail":"","evtinitdate":"2014-03-10","evtcutoffdate":"2014-03-10","fundid":null,"univcustid":"0","custsrchid":"S846","custname":"Scholtes, John L","soundexname":"S432","custphone":"313-317-2300","custadd1":"280 Touraine Road","custadd2":"","custcity":"Grosse Pointe Farms","custstate":"MI","custpostcode":"48236","custcntry":"1","custbadd1":"280 Touraine Road","custbadd2":"South Africa PD","custbcity":"Grosse Pointe Farms","custbstate":"MI","custbpostcode":"48236","custbcntry":"1","fedid":"","nprofit":"0","custpmtmthd":"0","custmarket":"56","custreferral":"0","custfax":"","chngd":"2018-10-15","isactive":null,"groupid":"0","isagency":null,"costcentercode":null,"mngr_email":null,"webedit":null,"nohtemails":null,"custemailaddress":"jscholte@ford.com","custinitdate":"2009-11-05","custwebsite":"","univcontactid":null,"firstname":null,"lastname":null,"soundexlast":null,"salutation":null,"title":null,"addr1":null,"addr2":null,"city":null,"state":null,"postcode":null,"cntry":null,"emailaddress":null,"contacttype":null,"webusername":null,"webpassword":null,"sourcecontid":null,"eventnotes":null,"SalesID":"72"}]



//////////////////////////

<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p>Guaranteed  : '+value.functguaranteedpeople+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p></p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p>Style :'+value.functroomsetuptype+'</p></td></tr>


<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p>E-mail :'+value.EMail+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p>Salesperson :'+value.Salesperson+' </p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;" ><p> </p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p>Address :'+value.Address+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;" ><p> </p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p>On-Site Contact :'+value.contactperson+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p>contactphone :'+value.contactphonenumber+' </p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;" ><p> </p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p>Booking Mgr :'+value.BookingMgr+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p>Start Time :'+value.functstarttime+' </p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;" ><p> </p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p>Setup Style :'+value.functroomsetuptype+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p>End Time :'+value.functendtime+' </p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;" ><p> </p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:white;border-bottom-color: black;"><p>Guaranteed :'+value.functguaranteedpeople+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: black"></td><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:white;border-bottom-color: black;" ><p>functionroom :'+value.functionroom+'</p></td><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:white;border-bottom-color: black;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:black;border-bottom-color: black;" ><p> </p></td></tr>';









bookingName : 	BookingId :KIWANIS 
postas :KIWANIS 
bookingid :135757 
FunctionName :Lunch
Status :KIWANIS 	FunctionName :Lunch
Status :KIWANIS 	Function Post As :Kiwanis
Confirm Date :null 	Function ID :148030



// Martin Conference Center at Harvard      Booking Name: 2019 Program for  										in Health Professions
// Post As/Readerboard: 2019 Program for Educators in Health Professions
// Booking ID: 30074
// Friday, January 18, 2019					Function Name: Speakers Room
// Status: Confirmed						Function Post As: 
// Confirm Date: 09/18/2018					Function ID: 75220




<tr><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;"><p><center>functionid :'+value.bookingid+'</center></p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p>Status :'+value.bookingpostas+' </p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;" ><p> </p></td></tr>


<tr><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:white;border-bottom-color: black;"><p>functionid :'+value.bookingstartdate+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: black"></td><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:white;border-bottom-color: black;" ><p>FunctionName :'+value.functname+'</p></td><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:white;border-bottom-color: black;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:black;border-bottom-color: black;" ><p> </p></td></tr>';









FunctionDistribution_old(jsonData)
{
var row3='<tr>';
var row4='';

$.each(jsonData[0], function(key, value){

row3=row3+'<th><center>'+key.replace(/_/g, '<br>')+'</center></th>';

});

row3=row3+'</tr>';

$.each(jsonData, function(key, value){

row4=row4+'<tr class="item-row" style="font-size:'+objReportsInterface.fontSize+'px;">';
$.each(value, function(key1, value1){

row4=row4+'<td style="font-size:'+objReportsInterface.fontSize+'px;"><center>'+value1+'</center></td>';

});

row4=row4+'</tr>';

var query="select servicetime,serviceendtime ,max(serviceitemname) as item ,max(itemquantity) as Qty,cast(sum(itemtot) as decimal(10,2))  as price from  query_services where functid="+value.functionId+" group by servicetime,serviceendtime order by servicetime,serviceendtime ";
//////;
var jsonData1=JSON.parse(CRUD(query));



});

$(".pdfouter .tblitems tbody").append(row3+row4);
$('#html_hdn').val($(".pdfouter").html())
word($('#html_hdn').val());

}


///////////////////////////



<?php 

error_reporting(-1);
ini_set('display_errors', 'On');
set_error_handler("var_dump");


if(mail("mail.nrj@gmail.com","My subject","abc"))
{
echo "Mail Sent Successfully";
}else{
echo "Mail Not Sent";
}


?>

//////////////////


if(mail("mail.nrj@gmail.com","My subject","abc"))
{
echo "Mail Sent Successfully";
}else{
echo "Mail Not Sent";
}






$filename = '1.pdf';
$path = '../Booking/docs';
$file = '../Booking/docs/1.pdf';

$mailto = 'mail.nrj@gmail.com';
$subject = 'Subject';
$message = 'My message';

$content = file_get_contents($file);
$content = chunk_split(base64_encode($content));

// a random hash will be necessary to send mixed content
$separator = md5(time());

// carriage return type (RFC)
$eol = "\r\n";

// main header (multipart mandatory)
$headers = "From: neeraj <mail.nrj@gmail.com>" . $eol;
$headers .= "MIME-Version: 1.0" . $eol;
$headers .= "Content-Type: multipart/mixed; boundary=\"" . $separator . "\"" . $eol;
$headers .= "Content-Transfer-Encoding: 7bit" . $eol;
$headers .= "This is a MIME encoded message." . $eol;

// message
$body = "--" . $separator . $eol;
$body .= "Content-Type: text/plain; charset=\"iso-8859-1\"" . $eol;
$body .= "Content-Transfer-Encoding: 8bit" . $eol;
$body .= $message . $eol;

// attachment
$body .= "--" . $separator . $eol;
$body .= "Content-Type: application/octet-stream; " . $eol;
$body .= "Content-Transfer-Encoding: base64" . $eol;
$body .= "Content-Disposition: attachment" . $eol;
//$body .= $content . $eol;
$body .= "--" . $separator . "--";

//SEND Mail
if (mail($mailto, $subject, $body, $headers)) {
echo "mail send ... OK"; // or use booleans here
} else {
echo "mail send ... ERROR!";
print_r( error_get_last() );
}



//////////////////////



require_once('../common/PHPMailer/src/PHPMailer.php');


use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;



$email = new PHPMailer();
$email->SetFrom('mail.nrj@gmail.com', 'nrj'); 
$email->Subject   = 'Subject';
$email->Body      = 'text';
$email->AddAddress( 'mail.nrj@gmail.com' );

$file_to_attach = '../Booking/docs/1.pdf';

$email->AddAttachment( $file_to_attach , '1.pdf' );

print_r($email->Send())  ;



////////////////////




/////////////////	
remove between space in string 

preg_replace('/\s+/', '', $file_name)

/////////////////


// success: function (response) {
// if( response.status === true ) {
// $('#BkgDocsContainer option:selected').remove();
// alert('File Deleted!');
// }
// else alert('Something Went Wrong!');
// }


////////////

// $.ajax({
// method : "POST",
// url : "../Booking/assets/contracts/getfilename.php",
// data:{file:"BkgDocs"},
// async : false,
// success : function(output)
// {
// ////console.log(output)
// $('#BkgDocsContainer').html('')
// $('#BkgDocsContainer').html(output)

// }
// });


$.ajax({ cache: false,
url: '../Booking/docs/',
data:
async:false,
success: function (data)
{
$('#BkgDocsContainer').html('')
$('#BkgDocsContainer').html(data);

})

<form id="upForm" name="file" enctype="multipart/form-data">
<input type="file" name="file" accept="application/pdf" id="file_1">
<button id="uploadButton">Upload</button>
</form>

<br><br><p>This script is bare bones. Don't forget to validate your inputs to make sure no one is trying to hack you.</p>




header('Content-type: application/json');

$tmp_name = $_FILES["file_1"]["tmp_name"];
$name = $_FILES["file_1"]["name"];
move_uploaded_file($tmp_name, "./test/" . $name);









[name] => ESP User List.docx
[type] => application/vnd.openxmlformats-officedocument.wordprocessingml.document
[tmp_name] => C:\Windows\Temp\phpF58F.tmp
[error] => 0
[size] => 13991


[name] => image004.jpg
[type] => image/jpeg
[tmp_name] => C:\Windows\Temp\php18BF.tmp
[error] => 0
[size] => 97246	


////console.log(formData)


// var data = new FormData();
// $.each($('#file')[0].files, function(i, file) {
// data.append('file-'+i, file);
// });
// ////console.log(data)


$('#BkgDocUpload').on('click', function(e) {
e.preventDefault();

var fd = new FormData();    
fd.append( 'file', input.files[0] );

////console.log(fd);

var form = new FormData($("#BkgDocForm")[0]);
////console.log(form)


$.ajax({
url : "upload.php",
method: "POST",
dataType: 'json',
data: form,
processData: false,
contentType: false,
success: function(result){

////console.log(result)
},
error: function(er){}
});



});











<?php 
print_r('1');
print_r($_POST);
print_r($_FILES);

if(isset($_FILES['image'])){
$errors= array();
$file_name = $_FILES['image']['name'];
$file_size =$_FILES['image']['size'];
$file_tmp =$_FILES['image']['tmp_name'];
$file_type=$_FILES['image']['type'];
$file_ext=strtolower(end(explode('.',$_FILES['image']['name'])));

$expensions= array("jpeg","jpg","png");

if(in_array($file_ext,$expensions)=== false){
$errors[]="extension not allowed, please choose a JPEG or PNG file.";
}

if($file_size > 2097152){
$errors[]='File size must be excately 2 MB';
}

if(empty($errors)==true){
move_uploaded_file($file_tmp,"images/".$file_name);
echo "Success";
}else{
print_r($errors);
}
}
?>





// var data = new FormData();
// $.each($('#uploadfile')[0].files, function(i, file) {
// data.append('file-'+i, file);
// });

// ////console.log(data)

//Rest of the logic
// $.ajax({









<style>
.btn-file-upload{
width: 187px;
position:relative;
}

.btn-file-upload:after{
content:  attr(value);
position: absolute;
top: 0;
left: 0;
bottom: 0;    
width: 48%;
background: #795548;
color: white;
border-radius: 2px;
text-align: center;
font-size: 12px;
line-height: 2;
}
</style>



<div id="BookingProfileColumns1" style="display: block;">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input type='checkbox' style='margin-left:6px;'>Month/Year</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input type="checkbox"  name="BookingProfileColumn[]" value="DATENAME(month, CA.EvtStart) +'/'+CAST(year(CA.EvtStart) AS varchar) as [Month_Year]" >Month/Year</div>
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input type="checkbox"  name="BookingProfileColumn[]" value="CA.evtstart as [StartDate]" />Start Date</div>
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input type="checkbox"  name="BookingProfileColumn[]" value="CA.evtend as [EndDate]"/>End Date</div>
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input type="checkbox"  name="BookingProfileColumn[]" value="CA.bookingname as BookingName"/>Booking Name</div>
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input type="checkbox"  name="BookingProfileColumn[]" value="CA.evtstatus as Booking_Status"/>Booking Status</div>
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input type="checkbox"  name="BookingProfileColumn[]" value="servicesum as Services_Revenue"/>Services Revenue</div>
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input type="checkbox"  name="BookingProfileColumn[]" value="rentsum as Slp_Rm_Revenue"/>Slp Rm Revenue</div>
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input type="checkbox"  name="BookingProfileColumn[]" value="rentsum as Room_Rental"/>Room Rental</div>

</div>



<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
<div class="col-sm-6  col-md-6  col-lg-6 checkbox">
<div class="col-sm-12  col-md-12  col-lg-12 form-group">
<label>
<input type="checkbox" id="ECsMdl_chkTaxExepmt" name="ECsMdl_chkTaxExepmt" value="active" disabled >Tax Exepmt
</label>
</div>
<div class="col-sm-12  col-md-12  col-lg-12 form-group">
<label>
<input type="checkbox" id="ECsMdl_chkActive" name="ECsMdl_chkActive" checked value="active">Active
</label>
</div>
<div class="col-sm-12  col-md-12  col-lg-12 form-group">
<label>
<input type="checkbox" id="ECsMdl_chkSendEmail" name="ECsMdl_chkSendEmail" value="active" disabled  disabled >Send Emails
</label>
</div>
</div>
</div>

Function PostAs 
Status

Date 

Start Time 

End Time 

Exp 

Gtd/Set

Salesperson 
On-Site Contact
Confirm Date 

Contact Date 

Init Date

Setup Type 
Setup/KnckDwn 
Rent Type/Revenue


remaining dropdowns 



// $('#NBM_NCountry1,#BM_Country,#BM_EditCountry,#EDMdls_Country,#ACMdls_Country,#ICntMdl_Country').html(getCountry());
// $('#getTaskCategory,#CustAct_TskCat').html(getTaskCategory());
// $('#EditCustMdlSalesPerson').html(getSalesGroup());
// $('#ReferralSource').html(getReferral());
// $('#EDMdls_CntctType,#ACMdls_CntctType,#ICntMdl_ContactType').html(getContactType());
// $('#EDMdls_salutation,#ACMdls_salutation,#ICntMdl_editcontactSal').html(getSalutation());
// $('#Customer-Activity-Contact').html(getContacts());
// $('#Cust_Bkng_Status').html(getStatus());

// $('#BM_Country').val("1").prop("selected",true);
// $('#NBM_Country').val("1").prop("selected",true);
// $('#BM_EditCountry').val("1").prop("selected",true);
// $('#ddlSiteCountry').val("1").prop("selected",true);
// $('#ECsMdl_ddlSiteCountry').val("1").prop("selected",true);
// $('#BillCountry').val("1").prop("selected",true);
// $('#EDMdls_Country').val("1").prop("selected",true);
// $('#ACMdls_Country').val("1").prop("selected",true);
// $('#ICntMdl_Country').val("1").prop("selected",true);






case "Breakfast":
$('#addSercDesc_StartTime').val('08:00');
$('#addSercDesc_EndTime').val('09:00');
break;

case "Lunch":
$('#addSercDesc_StartTime').val('13:00');
$('#addSercDesc_EndTime').val('14:00');
break;

case "Dinner":
$('#addSercDesc_StartTime').val('18:00');
$('#addSercDesc_EndTime').val('19:00');
break;
}

////////////

We are a multiday event location. So most of our guests start in the same room on the day of
arrival and stay multiple days in the same function room. It would be nice for ESP to recognize
multi day events.  -- How to recognise 

///////////
Prospective Customer lists would be great. - where , how and which  details to show 





















///////////////////




<!--          <div id="Booking_Profile_inner" class="tab-pane">
<div class="container">
<div id="Booking-Profile-upper-cntr" class="col-sm-12">
<div class="col-sm-12">
<div class="col-sm-12 form-group">
<div class="col-sm-2">
<label class="radio-inline"><input type="radio" name="optradio">All</label>
</div>
<div class="col-sm-2">
<label class="radio-inline"><input type="radio" name="optradio">Future</label>
</div>
<div class="col-sm-3">
<label class="radio-inline"><input type="radio" name="optradio">Past</label>
</div>
</div>
</div>
<div class="col-sm-12 form-group">

<div class="col-sm-2">
<div class="form-group">
<div class="col-sm-12 inputGroupContainer">
<label class="radio-inline"><input type="radio" name="optradio">Date Range</label>
</div>
</div>
</div>
<div class="col-sm-3">
<div class="form-group">
<div class="col-sm-12 inputGroupContainer">
<div >
<select name="Customer-Activity-Contact" class="form-control" type="text">
<option>All</option>
<option>1</option>
<option>2</option>
</select>
</div>
</div>
</div>
</div>
<div class="col-sm-3">
<div class="form-group">
<label class="col-sm-1 control-label">to</label> 
<div class="col-sm-10 inputGroupContainer">
<div >
<select name="Customer-Activity-Contact" class="form-control" type="text">
<option>All</option>
<option>1</option>
<option>2</option>
</select>
</div>
</div>
</div>
</div>
<div class="col-sm-3">
<div class="form-group">
<label class="col-sm-3 control-label">Status</label> 
<div class="col-sm-9 inputGroupContainer">
<div >
<select name="Customer-Activity-Contact" class="form-control" type="text">
<option>All</option>
<option>1</option>
<option>2</option>
</select>
</div>
</div>
</div>
</div>
<div class="col-sm-1">
<div class="form-group">
<div class="col-sm-12 inputGroupContainer">
<button type="submit" class="btn" >Refresh</button>
</div>
</div>
</div>

</div>
</div>
<div id="Booking-Profile-modal-dialog" class="modal-dialog">
<div id="Booking-Profile-modal-content" class="modal-content">
<div class="modal-body" style="height:32em;">
<div class="panel panel-default" style="height:30em;">
<div id="Booking-Profile-table-responsive" class="panel-body table-responsive">
<table class="table table-bordered" border=1>
<thead>
<tr>
<th>ContactName</th>
<th>Title</th>
<th>Phone Type</th>
<th>Number</th>
<th>Email Address</th>
<th>Contact Type</th>
<th>Active</th>
</tr>
</thead>
<tbody>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
</div> -->

/////////////////////

<tr><td ><center>ChristianPanasuk</center></td><td ><center>Affiliate</center></td><td ><center>94621.35</center></td><td ><center>NaN</center></td><td ><center>0</center></td><td ><center>NaN</center></td><td ><center>External</center></td><td ><center>1253.75</center></td><td ><center>NaN</center></td><td ><center>0</center></td><td ><center>NaN</center></td><td ><center>Harvard</center></td><td ><center>6948.25</center></td><td ><center>NaN</center></td><td ><center>145</center></td><td ><center>NaN</center></td></tr><tr><td ><center>HeatherCullen</center></td><td ><center>Harvard</center></td><td ><center>0</center></td><td ><center>NaN</center></td><td ><center>3159.4500000000003</center></td><td ><center>NaN</center></td><td ><center>External</center></td><td ><center>0</center></td><td ><center>NaN</center></td><td ><center>783.25</center></td><td ><center>NaN</center></td><td ><center>Affiliate</center></td><td ><center>0</center></td><td ><center>NaN</center></td><td ><center>6275.849999999999</center></td><td ><center>NaN</center></td></tr><tr><td ><center>AndreaJones</center></td><td ><center>Harvard</center></td><td ><center>0</center></td><td ><center>NaN</center></td><td ><center>1993.65</center></td><td ><center>NaN</center></td><td ><center>Affiliate</center></td><td ><center>0</center></td><td ><center>NaN</center></td><td ><center>694.5</center></td><td ><center>NaN</center></td></tr><tr><td ><center>CateringIntern</center></td><td ><center>Harvard</center></td><td ><center>0</center></td><td ><center>NaN</center></td><td ><center>1724.05</center></td><td ><center>NaN</center></td><td ><center>Affiliate</center></td><td ><center>0</center></td><td ><center>NaN</center></td><td ><center>2528.75</center></td><td ><center>NaN</center></td></tr><tr><td ><center>JenKeating</center></td><td ><center>Harvard</center></td><td ><center>0</center></td><td ><center>NaN</center></td><td ><center>162.25</center></td><td ><center>NaN</center></td></tr><tr><td ><center>WebAdministrator</center></td><td ><center>Harvard</center></td><td ><center>0</center></td><td ><center>NaN</center></td><td ><center>815.3</center></td><td ><center>NaN</center></td></tr>






var rows=DynamicRowsCols(query1)

var RoomRental_Total=0.00;var CCFoodNB_Total=0.00;var CCAV_Total=0.00;var 

Catering_Total=0.00;var RoomSetup_Rates_Total=0.00;var subtotal_Total=0.00;var ServiceCharge_Total=0.00;var Tax_Total=0.00;var Total_Total=0.00;var Despoit_Total=0.00;var BalanceDue_Total=0.00;

$.each(jsonData, function(key, value){

RoomRental_Total+=parseFloat(value["RoomRentalTotal"]);	CCFoodNB_Total+=parseFloat(value["CC Food and Beverage"]);	CCAV_Total+=parseFloat(value["CC Audio Visual"]);	Catering_Total+=parseFloat(value["HMS Campus Catering"]);		subtotal_Total+=parseFloat(value["subtotal"]);	ServiceCharge_Total+=parseFloat(value["ServiceCharge"]);	Tax_Total+=parseFloat(value["Tax"]); Total_Total+=parseFloat(value["Total"]);	Despoit_Total+=parseFloat(value["Despoit"]); BalanceDue_Total+=parseFloat(value["BalanceDue"]);

})

rows+='<tr><td>Total</td><td ></td><td ></td><td ></td><td ></td><td >'+RoomRental_Total+'</td><td >'+CCFoodNB_Total+'</td><td >'+CCAV_Total+'</td><td >'+Catering_Total+'</td><td >'+RoomSetup_Rates_Total+'</td><td>'+subtotal_Total+'</td><td>'+ServiceCharge_Total+'</td><td>'+Tax_Total+'</td><td>'+Total_Total+'</td><td>'+Despoit_Total+'</td><td>'+BalanceDue_Total+'</td></tr>';


////////////////


var bySalesperson = _.map(jsonData, function(item){        
return {Salesperson: item.Salesperson, CC_Food_and_Beverage: item.CC_Food_and_Beverage}; 
});

var grouped = _.reduce(bySalesperson, function(memo, item) {
memo[item.Salesperson] = (memo[item.Salesperson] || 0) + parseFloat(item.CC_Food_and_Beverage);
return memo;
}, {});
//////console.log(grouped)


/////////////////////

var groupbySalesperson = _.groupBy(jsonData, function(d){return d.Salesperson});

var groupby_sp_Market = _.chain(jsonData)
.groupBy('Salesperson')
.mapObject( Salesperson => _.groupBy(Salesperson, 'Market'))
.value();
//////console.log(groupbySalesperson)//////console.log(groupbyMarket)

$.each(groupby_sp_Market, function(key, value){


})


// rows+='<tr><td></td><td ></td><td ></td><td ></td><td ></td><td >'+RoomRental_Total+'</td><td >'+CCFoodNB_Total+'</td><td >'+CCAV_Total+'</td><td >'+Catering_Total+'</td><td >'+RoomSetup_Rates_Total+'</td><td>'+subtotal_Total+'</td><td >'+ServiceCharge_Total+'</td><td >'+Tax_Total+'</td><td>'+Total_Total+'</td><td>'+Despoit_Total+'</td><td >'+BalanceDue_Total+'</td></tr>';



select (Salesperson) as Salesperson,(bookingmarketsegment) as Market,(bookingstartdate) as bookingstartdate,(BookingEnd) as BookingEnd ,(Status) as Status,(select rentsum from roomrentsummary where evtid=(bookingid)) as 'RoomRentalTotal',([CC Food and Beverage]) as [CC Food and Beverage],([CC Audio Visual]) as [CC Audio Visual],([HMS Campus Catering]) as [HMS Campus Catering],([CC Room Setup/Rates]) as [CC Room Setup/Rates],([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates]) as 'subtotal',([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])*(select srvchgrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet))  as 'ServiceCharge' ,(select otherrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet)) as 'Tax',([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates]) +([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])*(select srvchgrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet))+(select otherrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet))  as 'Total' ,(select COALESCE(sum(amtrecvd),0) from depositt where depositt.evtid=bkgrevenuerpt.bookingid)  as 'Despoit',([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])+([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])*(select srvchgrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet))+(select otherrate from taxmapdet where taxid=bkgrevenuerpt.taxid and effdate=(select max(effdate) from taxmapdet)) -(select COALESCE(sum(amtrecvd),0) from depositt where depositt.evtid=bkgrevenuerpt.bookingid)  as 'BalanceDue' from bkgrevenuerpt   where bookingstartdate between '03/01/2019' and '03/28/2019'


////////////////////

json get column  by name 

$.each(jsonData, function(key, value){

RoomRental_Total+=parseFloat(value["RoomRentalTotal"]);	CCFoodNB_Total+=parseFloat(value["CC Food and Beverage"]);	CCAV_Total+=parseFloat(value["CC Audio Visual"]);	Catering_Total+=parseFloat(value["HMS Campus Catering"]);		subtotal_Total+=parseFloat(value["subtotal"]);	ServiceCharge_Total+=parseFloat(value["ServiceCharge"]);	Tax_Total+=parseFloat(value["Tax"]); Total_Total+=parseFloat(value["Total"]);	Despoit_Total+=parseFloat(value["Despoit"]); BalanceDue_Total+=parseFloat(value["Balance Due"]);

})


////////////////////
Booking revenue in excel

var query_old="select max(Salesperson) as Salesperson,max(bookingmarketsegment) as Market,max(bookingstartdate) as bookingstartdate,max(BookingEnd) as BookingEnd ,max(Status) as Status,(select rentsum from roomrentsummary where evtid=max(bookingid)) as 'RoomRentalTotal',sum([CC Food and Beverage]) as [CC Food and Beverage],sum([CC Audio Visual]) as [CC Audio Visual],sum([HMS Campus Catering]) as [HMS Campus Catering],sum([CC Room Setup/Rates]) as [CC Room Setup/Rates],sum([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])+(select rentsum from roomrentsummary where evtid=max(bookingid)) as subtotal,cast(sum(srvccost)*(select top 1 srvchgrate from taxmapdet where taxid=max(bkgrevenuerpt.taxid)) as decimal(10,2)) as 'ServiceCharge' , cast(COALESCE(sum(srvccost)*(select top 1 taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other from taxmapdet where taxid=max(bkgrevenuerpt.taxid) ),0)  as decimal(10,2)) as 'Tax',sum([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])+(select rentsum from roomrentsummary where evtid=max(bookingid)) +cast(sum(srvccost)*(select sum(srvchgrate)  from taxmapdet where taxid=max(bkgrevenuerpt.taxid)) as decimal(10,2)) as 'Total', (select COALESCE(sum(amtrecvd),0) from depositt where depositt.evtid=max(bookingid))  as 'Despoit',sum([CC Food and Beverage]+[CC Audio Visual]+[HMS Campus Catering]+[CC Room Setup/Rates])+(select rentsum from roomrentsummary where evtid=max(bookingid)) +cast(sum(srvccost)*(select sum(srvchgrate)  from taxmapdet where taxid=max(bkgrevenuerpt.taxid)) as decimal(10,2))- (select COALESCE(sum(amtrecvd),0) from depositt where depositt.evtid=max(bookingid))  as 'Balance Due' from bkgrevenuerpt  where bookingstartdate between '"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"' "+ServiceHeadersquery+salesPersonquery+sectionsquery+MarketSegmentquery+" group by  bookingstartdate "+groupby+"";



/////////////

/* .gldp-default div:nth-child(0){ */
/* display: none; */
/* } */

/* .gldp-default div:nth-child(1){ */
/* width: 100%; */
/* } */

/* .gldp-default div:nth-child(2){ */
/* display: none; */
/* } */


///////////////

//calender

// $('.gldp-default').children('div:eq(0)').css("display","none")
// $('.gldp-default').children('div:eq(1)').css("width","100%")
// $('.gldp-default').children('div:eq(2)').css("display","none")


/*Coloring for Grid*/ 
.greenColor: #008000 
.yellowColor: #ffff00 
.blueColor: #0000ff  
.redColor: #ff0000  
.lightgreenColor { : #008000a6; }
.lightyellowColor { : #ffff003d; } 
.lightblueColor { : #2a2afdcc; } 
.lightredColor { : #ff000096; }

style="line-height: 1px;"

margin-top: 10px;

Parking and Security:	
«CC_Room_SetupRates_Total»

if(!sessionStorage.getItem("cname"))

All documents are placed in Booking - create Document - Contract section – we’re going to need to edit the format of these, they’re not acceptable to send to clients in their current state, is it possible for them to mirror the current formats?

Missing are comp after hours contract,
Joslin contract 
and addendum.

Also 1 I use weekly called just Invoice is missing but I’m seeing that that doesn’t appear to have been sent to you so ill search my files now and come back to you on that.

<p>&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;</p>
<p><center>The Conference Center at Harvard Medical</center></p>
<p><center>phone: 617-432-8990 fax: 617-432-8991</center></p>
<p><center>www.theconfcenter.hms.harvard.edu/</center></p>


font-family: Lucida Handwriting;

<thead><tr style="background:#808080;" >
<td>
<p><strong>Start Date</strong></p>
</td>
<td>
<p><strong>Event Start</strong></p>
</td>
<td>
<p><strong>Event End</strong></p>
</td>
<td>
<p><strong>Room Name</strong></p>
</td>
<td>
<p><strong>Event Type</strong></p>
</td>

<td>
<p><strong>Setup</strong></p>
</td>
<td>
<p><strong>Charge</strong></p>
</td>
</tr>
</thead>

$('.Total_Amount').html(parseFloat($('.CC_Food_and_Beverage_Total').html())+parseFloat($('.CC_Audio_Visual_Total').html())+parseFloat($('.CC_Room_SetupRates_Total').html())+parseFloat($('.Room_Rental_Total').html()));



$(".BookingContactBusinessPhone").html(value.);$(".GrandTotal").html(value.);$(".PropertyName").html(value.);$(".PropertyAddress").html(value.);$(".BookingID").html(value.);$(".PropertyPhone").html(value.);$(".PropertyFax").html(value.);$(".BookingName").html(value.);$(".CustomerFederalID").html(value.);$(".GrandTotal").html(value.);$(".BookingContactAddress2").html(value.);




select cast(sum(srvccost*(select srvchgrate from taxmapdet where taxid=(select taxid from servitems join funct on servitems.functid=funct.functid join event on funct.evtid=event.evtid where evtstart between '01/11/2019' and '01/17/2019'  ) ))  as decimal(10,2)) as '1' from bkgrevenuerpt  group by  bookingstartdate




// $("#chkcontractSent").on("change", function(){
// //////console.log('3')
// this.checked? $('#contractsent').prop('disabled',false):$('#contractsent').prop('disabled',true);
// })
// $("#chkcontractRecieved").on("change", function(){
// //////console.log('2')
// this.checked? $('#contractrecd').prop('disabled',false):$('#contractrecd').prop('disabled',true);
// })
// $("#chkcontractDue").on("change", function(){
// //////console.log('3')
// this.checked? $('#contractdue').prop('disabled',false):$('#contractdue').prop('disabled',true);
// })

//////////


if(sessionStorage.getItem("bookingData"))
{
$('#bookingName').val(sessionStorage.getItem("bookingName"));
var json = JSON.parse(sessionStorage.getItem("bookingData"));
//$('#hiddenBookingIDUpdate').val(json.FunctID);
$('#hiddenCustomerIDUpdate').val(json.CustID);
$('#NBMdls_HideCustomerID').val(json.CustID);
$('#customerName').val(json.CustName);
// $('#bookingName').val(json.bookingName);	
$('#bookingcontactDropdown').val(json.ContactID).prop('selected',true);
$('#startDAte').val(json.StartDate);	
$('#endDate').val(json.StartDate);
$('#dateBooked').val(json.FunctConfDate);
$('#bookingStatus').val(json.statusId).prop('selected',true);
$('#salesPerson').val(json.SPID).prop('selected',true);
$('#bookingManager').val(json.SPID).prop('selected',true);
$('#postAs').val(json.PostFunctAs);
$('#bookingSegment').val("1").prop('selected',true);
sessionStorage.removeItem("bookingData");
sessionStorage.removeItem("bookingName");
}




////////////


value["Balance Due"]
value["BookingEnd"]
value["CC Audio Visual"]
value["CC Food and Beverage"]
value["CC Room Setup/Rates"]

value["Despoit"]
value["HMS Campus Catering"]
value["Market"]
value["RoomRentalTotal"]
value["Salesperson"]

value["ServiceCharge"]
value["Status"]
value["Tax"]
value["Total"]
value["bookingstartdate"]
subtotal



Balance Due: "345.25"
BookingEnd: "2019-03-19"
CC Audio Visual: ".00"
CC Food and Beverage: ".00"
CC Room Setup/Rates: ".00"
Despoit: ".0000"
HMS Campus Catering: "345.25"
Market: "Harvard"
RoomRentalTotal: ".0000"
Salesperson: "HeatherCullen"
ServiceCharge: ".00"
Status: "Confirmed"
Tax: "24.17"
Total: "345.25"
bookingstartdate: "2019-03-19"
subtotal: "345.25"


value=value.trim();

// value.BalanceDue:"345.25"
// value.BookingEnd:"2019-03-19"
// value.CCAudioVisual:".00"
// value.CCFoodandBeverage:".00"
// value.CCRoomSetup/Rates:".00"
// value.Despoit:".0000"
// value.HMSCampusCatering:"345.25"
// value.Market:"Harvard"
// value.RoomRentalTotal:".0000"
// value.Salesperson:"HeatherCullen"
// value.ServiceCharge:".00"
// value.Status:"Confirmed"
// value.Tax:"24.17"
// value.Total:"345.25"
// value.bookingstartdate:"2019-03-19"
// value.subtotal:"345.25"



// var header='<tr>Salesperson	Market	<tr>bookingstartdate	<tr>BookingEnd	<tr>Status	RoomRentalTotal	<tr>CC Food and Beverage	<tr>CC Audio Visual	<tr>HMS Campus Catering	<tr>CC Room Setup/Rates	<tr>subtotal	<tr>ServiceCharge	<tr>Tax	<tr>Total	<tr>Despoit	<tr>Balance Due
// HeatherCullen	Harvard	2019-01-15	2019-01-29	Confirmed	0.00	650.00	420.00	7371.15	150.00	8591.15	0.00	601.38	8591.15	0.00	8591.15'

// RoomRental_Total+=value[4]	CCFoodNB_Total+=value[5]	CCAV_Total+=value[6]	Catering_Total+=value[7]	RoomSetup_Rates_Total+=value[8]	subtotal_Total+=value[9]	ServiceCharge+=value[10]	Tax_Total+=value[11]	Total_Total+=value[12]	Despoit_Total+=value[13]	BalanceDue_Total+=value[14]



var header='<tr>Salesperson	Market	<tr>bookingstartdate	<tr>BookingEnd	<tr>Status	RoomRentalTotal	<tr>CC Food and Beverage	<tr>CC Audio Visual	<tr>HMS Campus Catering	<tr>CC Room Setup/Rates	<tr>subtotal	<tr>ServiceCharge	<tr>Tax	<tr>Total	<tr>Despoit	<tr>Balance Due
HeatherCullen	Harvard	2019-01-15	2019-01-29	Confirmed	0.00	650.00	420.00	7371.15	150.00	8591.15	0.00	601.38	8591.15	0.00	8591.15'


a.export,
a.export:visited {
display: inline-block;
text-decoration: none;
color: #000;
background-color: #ddd;
border: 1px solid #ccc;
padding: 8px;
}
/////

if(groupby)
{
orderby = ' order by '+groupby.replace(/^,/, '');
}


weekdayname , month , date , year

// var query="select max(functid) as functid ,max(bookingid) as bookingid,max(bookingname) as bookingname  , max(functname) as functname ,max(bookingstartdate) as bookingstartdate ,max(bookingstatus) as bookingstatus, max(custname) as custname,	max(custphone)as custphone, max(contactfax) as contactfax, max(contactfirstname+contactlastname) as contactperson ,max(contactphonenumber) as contactphonenumber , max(functguaranteedpeople) as functguaranteedpeople ,max(functexpectedpeople) as functexpectedpeople, max(functoneroomname) as 	functionroom,max(servicetypedescription) as   servicedescription ,max(custaddressline1+custaddressline2) as Address ,max(contactemailaddress)  as EMail,max(bookingsalespersonfirstname+bookingsalespersonlastname) as BookingMgr ,max(functstarttime) as functstarttime,max(functendtime) as functendtime,max(functroomsetuptype) as functroomsetuptype from query_services where functdate  between '"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"' group by functid ";

// SLSP , Customer Name ,Booking Name , Time , Exp/GTD ,Set , Function Room   
// Dates



/////////////


var row=DynamicRows(query1);

var query="select max(functdate) as functdate ,max(bookingsalespersonfirstname+bookingsalespersonlastname) as SLSP ,max(custname) as custname,max(bookingname) as bookingname  ,max(functstarttime) as functstarttime,max(functendtime) as functendtime,max(functguaranteedpeople) as functguaranteedpeople ,max(functexpectedpeople) as functexpectedpeople,max(functoneroomname) as 	functionroom from query_services where functdate between '"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"' group by functdate ";
//////

/////////////

$('#table_CommonSetup tbody').html(DynamicRows(query));


var jsonData = JSON.parse(CRUD(query));
if(!jsonData){return;}

var row='<tr>',row2='',customerrow='', row3='',row4='';

var row1='';
$.each(jsonData[0], function(key, value){
row1=row1+'<th>'+key+'</th>';
});


$.each(jsonData, function(key, value){
row4='';
customerrow='';

row2+='<tr><td colspan=4 style="font-size:14px;border:1px solid black;"><p style="text-align:center;background-color:gray;">Function Data</p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p>bookingName : '+value.bookingname+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p>BookingId :'+value.bookingid+' </p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p></p></td><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;" ><p></p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;"><p><center>functionid :'+value.functid+'</center></p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p>Status :'+value.bookingstatus+' </p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;" ><p> </p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:white;border-bottom-color: black;"><p>functionid :'+value.bookingstartdate+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: black"></td><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:white;border-bottom-color: black;" ><p>FunctionName :'+value.functname+'</p></td><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:white;border-bottom-color: black;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:black;border-bottom-color: black;" ><p> </p></td></tr>';


customerrow+='<tr><td colspan=4 style="font-size:14px;border:1px solid black;"><p style="text-align:center;background-color:gray;">Customer  Data</p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p>Customer  : '+value.custname+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p>custphone  :'+value.custphone+' </p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p></p></td><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;" ><p></p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p>E-mail :'+value.EMail+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p>Salesperson :'+value.BookingMgr+' </p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;" ><p> </p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p>Address :'+value.Address+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;" ><p> </p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p>On-Site Contact :'+value.contactperson+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p>contactphone :'+value.contactphonenumber+' </p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;" ><p> </p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p>Booking Mgr :'+value.BookingMgr+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p>Start Time :'+value.functstarttime+' </p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;" ><p> </p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"><p>Setup Style :'+value.functroomsetuptype+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p>End Time :'+value.functendtime+' </p></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-right-color:black;border-bottom-color: white;" ><p> </p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:white;border-bottom-color: black;"><p>Guaranteed :'+value.functguaranteedpeople+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: black"></td><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:white;border-bottom-color: black;" ><p>functionroom :'+value.functionroom+'</p></td><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:white;border-bottom-color: black;" ><p> </p></td><td style="font-size:14px;border:1px solid black;border-top-color:white;border-right-color:black;border-bottom-color: black;" ><p> </p></td></tr>';




var query1="select servicetime,serviceendtime ,max(serviceitemname) as item ,max(itemquantity) as Qty,cast(sum(itemtot) as decimal(10,2))  as price from  query_services where functid="+value.functid+" group by servicetime,serviceendtime order by servicetime,serviceendtime ";

var jsonData1=JSON.parse(CRUD(query1));

row3='<tr><td><p>Service time</p></td><td><p >item</p></td><td><p>Qty</p></td><td><p>price</p></td></tr>';

$.each(jsonData1, function(key, value){
row4='<tr><td><p>'+value.servicetime+' - '+value.serviceendtime+'</p></td><td><p >'+value.item+'</p></td><td><p>'+value.Qty+'</p></td><td><p>'+value.price+'</p></td></tr>';
})


row2+=customerrow+row3+row4;

});




/////////////


SLSP , Customer Name ,Booking Name , Time , Exp/GTD ,Set , Function Room   
Dates

HMS Office of External Education Hosts Innovations in Digital Healthy

HMS Office of External Education Hosts Innovations in Digital Health
// Booking ID	Booking Name	Customer Name	Salesperson	Booking Manager	Market	Booking Start	Booking End	Status	Room Rental Total	CC Food and Beverage	CC Audio Visual	CC Room Setup/Rates	Subtotal	Service Charge,	Tax,	Total	Deposit Paid	Balance Due	

//////////////////
cast(sum(ss.servitemchrg*ss.servitemqty*(1+taxmapdet.srvchgrate))+sum(ss.servitemchrg*ss.servitemqty*taxmapdet.srvchgrate)+sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) as 'Total'


// function DynamicRows(query)
// {
// json=JSON.parse(CRUD(query));

// var row='';row+='';$.each(json, function(key, value){

// if(value.id){row=row+'<tr id='+value.id+'>';}else{row=row+'<tr>';}
// $.each(value, function(key1, value1){row=row+'<td><center>'+value1+'</center></td>';});row=row+'</tr>';
// });

// return row;
// }

// function DynamicRows(query)
// {
// json=JSON.parse(CRUD(query));

// var row='';row+='';$.each(json, function(key, value){

// if(value.id){row=row+'<tr id='+value.id+'>';}else{row=row+'<tr>';}

// $.each(value, function(key1, value1){row=row+'<td><center>'+value1+'</center></td>';});row=row+'</tr>';
// });

// return row;
// }





/////////////

function GetCRHistory(CR_TaxName)
{
var query="select headertypes.taxid as id , effdate from headertypes left join dbo.taxmapdet on headertypes.taxid=taxmapdet.taxid where headertypeid="+CR_TaxName+"";
//////
var html='';
$.each(JSON.parse(CRUD(query)), function( index, value ) {
html += '<option value='+value.id+'>' +value.effdate+ '</option>';
})

$('#CR_History').html(html);

var query="select srvchgrate,otherrate,tax1rate from headertypes  join dbo.taxmapdet on headertypes.taxid=taxmapdet.taxid where headertypeid="+$(this).val()+" and effdate="+$('#CR_History').val()+"";

var json=JSON.parse(CRUD(query));

$('#table_CalRates tbody tr.ServCharge').children('td:eq(2)').text(json[0].srvchgrate)
$('#table_CalRates tbody tr.OtherCharge').children('td:eq(2)').text(json[0].otherrate)
$('#table_CalRates tbody tr.Tax1').children('td:eq(2)').text(json[0].tax1rate)

}




///////////////

$('#table_funcRoomSet tbody tr').click(function(){

SetupTypes($(this).attr('id'))
})

function SetupTypes(frdid)
{

var query="select available,sudesc,mincapacity,capacity as maxcapacity,sutime,kdtime,dfltsetup  from  SFRDT  join sufrt on SFRDT.frdid = sufrt.frdid join sutypes  on sufrt.setupid=sutypes.sutype  where SFRDT.frdid="+frdid+" ";
//////

var json=JSON.parse(CRUD(query));
var row='';$.each(json, function(key, value){
if(value.id){row+='<tr id='+value.id+'>';}else{row+='<tr>';}
$.each(value, function(key1, value1)
{
if(key1=="available")
{
row+="<td><input type='checkbox' class='available' name='available' style='margin-left:6px;'></td>";
}
else if(key1=="dfltsetup")
{
row+="<td><input type='checkbox' class='dfltsetup' name='dfltsetup' style='margin-left:6px;'></td>";
}	
else
{
row+='<td contenteditable><center>'+value1+'</center></td>';
}
});
row+='</tr>';
});
$('#table_funcRoomSetupTypes tbody').html(row);

}




///////////////////	
//=== Listing Function Room

// $.ajax({
// method : "POST",
// url : "../Setup/assets/ajax/ajax_selectFunctionRoom.php",
// data:
// {
// set_funcRoom : 1
// },
// async : false,
// success:function(data)
// {
// $('#table_funcRoomSet tbody').html(data);
// var changesec = $("#funcRoomSet_section").val();
// var funcR = $('#table_funcRoomSet tbody tr').attr('funcRid');
// $('#fR_RoomCharge1').prop('checked',false);
// $('#fR_RoomCharge2').prop('checked',false);
// $('#fR_RoomCharge3').prop('checked',false);
// $('#fR_RoomCharge4').prop('checked',false);

== Listing Setup according to selected Function Room 
// list_setup(funcR,changesec);

// }
// });




////////////////

NewRows(menu)
{
////console.log(menu)
switch (menu) 
{		
case "Service Descriptions":(new ServiceDescriptions()).New(objCommonSetup.tableName); break;

case "Service Categories":(new ServiceCategories()).New(objCommonSetup.tableName); break;

case "Packages":(new Packages()).New(objCommonSetup.tableName); break;

case "Group Room Sections":(new GRCSections()).New(objCommonSetup.tableName); break;

case "Revenue Goals":(new RevenueGoals()).New(objCommonSetup.tableName); break;

case "Daily Codes":(new DailyCodes()).New(objCommonSetup.tableName); break;

case "Restriction Codes":(new RestrictionCodes()).New(objCommonSetup.tableName); break;

case "Need Dates":(new NeedDates()).New(objCommonSetup.tableName); break;

case "Market Rates":(new MarketRates()).New(objCommonSetup.tableName); break;

case "Agencies":objAgencies.New(objCommonSetup.tableName); break;

case "Country Codes":objCountryCodes.New(objCommonSetup.tableName); break;

case "Rolling Screens":objRollingScreens.New(objCommonSetup.tableName); break;

case "General Ledgers":objGeneralLedgers.New(objCommonSetup.tableName); break;

case "Holidays & Spec. Days":objHolidays.New(objCommonSetup.tableName); break;

case "Auto Traces":objAutoTrace.New(objCommonSetup.tableName); break;

case "Trace Categories":objTraceCategories.New(objCommonSetup.tableName); break;

case "Web Payment":objWebPayment.New(objCommonSetup.tableName); break;

}

}

SaveRows(menu)
{
switch (menu) 
{		
case "Service Descriptions":(new ServiceDescriptions()).Save(objCommonSetup.tableName); break;

case "Service Categories":(new ServiceCategories()).Save(objCommonSetup.tableName); break;

case "Packages":(new Packages()).Save(objCommonSetup.tableName); break;

case "Group Room Sections":(new GRCSections()).Save(objCommonSetup.tableName); break;

case "Revenue Goals":(new RevenueGoals()).Save(objCommonSetup.tableName); break;

case "Daily Codes":(new DailyCodes()).Save(objCommonSetup.tableName); break;

case "Restriction Codes":(new RestrictionCodes()).Save(objCommonSetup.tableName); break;

case "Need Dates":(new NeedDates()).Save(objCommonSetup.tableName); break;

case "Market Rates":(new MarketRates()).Save(objCommonSetup.tableName); break;

case "Property Information":objPropertyInfo.Save(objCommonSetup.tableName); break;

case "Agencies":objAgencies.Save(objCommonSetup.tableName); break;

case "Country Codes":objCountryCodes.Save(objCommonSetup.tableName); break;

case "Rolling Screens":objRollingScreens.Save(objCommonSetup.tableName); break;

case "General Ledgers":objGeneralLedgers.Save(objCommonSetup.tableName); break;

case "Holidays & Spec. Days":objHolidays.Save(objCommonSetup.tableName); break;

case "Auto Traces":objAutoTrace.Save(objCommonSetup.tableName); break;

case "Trace Categories":objTraceCategories.Save(objCommonSetup.tableName); break;

case "Web Payment":objWebPayment.Save(objCommonSetup.tableName); break;


}

objCommonSetup.GetRows(menu);

}


////////////////////
if($(this).attr('id'))
{
switch (menu) 
{

case "Customer Groups":
query="update CustGroups set groupname='"+$(this).children('td:eq(1) input').html()+"'  where groupid ='"+$(this).attr('id')+"'";  
break;

case "Payment Methods":
query="update paymethods set methoddesc='"+$(this).children('td:eq(1) input').html()+"',paymenttype='"+$(this).children('td:eq(2) input').html()+"'  where groupid ='"+$(this).attr('id')+"'"; 
break;


case "Referral Types":
query="update paymethods set methoddesc='"+$(this).children('td:eq(1) input').html()+"',paymenttype='"+$(this).children('td:eq(2) input').html()+"'  where methodid ='"+$(this).attr('id')+"'";  

break;

case "Referral Sources":

query="update refsource set reftype='"+$(this).children('td:eq(1) input').html()+"',custid='"+$(this).children('td:eq(2) input').html()+"',refname='"+$(this).children('td:eq(3) input').html()+"' ,refaddress='"+$(this).children('td:eq(4) input').html()+"'   where refid ='"+$(this).attr('id')+"'"; 
break;

case "Lost Business Competition":
query="update competition set compdesc='"+$(this).children('td:eq(1) input').html()+"'    where compid ='"+$(this).attr('id')+"'";  

break;

case "Lost Business Reasons":
query="update lbrt set lbreasondesc='"+$(this).children('td:eq(1) input').html()+"'    where lbreasonid ='"+$(this).attr('id')+"'";  
break;

case "Salutations":
query="update salutations set salutdesc='"+$(this).children('td:eq(1) input').html()+"'    where salutid ='"+$(this).attr('id')+"'";  
break;

case "Phone Types":
query="update sys_phonetypedesc set typedesc='"+$(this).children('td:eq(1) input').html()+"' where typeid ='"+$(this).attr('id')+"'";  
break;

}

}
else
{
switch (menu) 
{

case "Customer Groups":
query="insert into CustGroups (groupname) values('"+$(this).children('td:eq(1) input').html()+"') "; 
break;

case "Payment Methods":
query="insert into paymethods (methoddesc,paymenttype) values('"+$(this).children('td:eq(1) input').html()+"','"+$(this).children('td:eq(2) input').html()+"') ";  
break;

case "Referral Types":
query="insert into paymethods (methoddesc,paymenttype) values('"+$(this).children('td:eq(1) input').html()+"','"+$(this).children('td:eq(2) input').html()+"') "; 

break;

case "Referral Sources":
//Line 55: query="SELECT refid as id ,reftype ,custid ,refname ,refaddress ,refaddress2 FROM refsource";
query="insert into refsource (reftype ,custid ,refname ,refaddress) values('"+$(this).children('td:eq(1) input').html()+"','"+$(this).children('td:eq(2) input').html()+"','"+$(this).children('td:eq(3) input').html()+"','"+$(this).children('td:eq(4) input').html()+"') ";  
break;

case "Lost Business Competition":
query="insert into refsource (reftype ,custid ,refname ,refaddress) values('"+$(this).children('td:eq(1) input').html()+"','"+$(this).children('td:eq(2) input').html()+"','"+$(this).children('td:eq(3) input').html()+"','"+$(this).children('td:eq(4) input').html()+"') "; 
break;

case "Lost Business Reasons":
//Line 70: query="SELECT lbreasonid as id ,lbreasondesc FROM lbrt";
query="insert into lbrt (lbreasondesc) values('"+$(this).children('td:eq(1) input').html() )+""; 
break;

case "Salutations":
//Line 76: query="SELECT salutid as id ,salutdesc FROM salutations";
query="insert salutations lbrt (salutdesc) values('"+$(this).children('td:eq(1) input').html() ) +""; 
break;

case "Phone Types":
//Line 82: query="SELECT typeid as id,typedesc as Type FROM sys_phonetypedesc";
query="insert sys_phonetypedesc lbrt (typedesc) values('"+$(this).children('td:eq(1) input').html() ) +""; 
break;

}	

}

//////////////////



switch (menu) 
{		

case "Service Descriptions":(new ServiceDescriptions()).Save(objCommonSetup.tableName); break;

case "Service Categories":(new ServiceCategories()).Save(objCommonSetup.tableName); break;

case "Packages":(new Packages()).Save(objCommonSetup.tableName); break;

case "Group Room Sections":(new GRCSections()).Save(objCommonSetup.tableName); break;

case "Revenue Goals":(new RevenueGoals()).Save(objCommonSetup.tableName); break;

case "Daily Codes":(new DailyCodes()).Save(objCommonSetup.tableName); break;

case "Restriction Codes":(new RestrictionCodes()).Save(objCommonSetup.tableName); break;

case "Need Dates":(new NeedDates()).Save(objCommonSetup.tableName); break;

case "Market Rates":(new MarketRates()).Save(objCommonSetup.tableName); break;

case "Property Information":objPropertyInfo.Save(objCommonSetup.tableName); break;

case "Agencies":objAgencies.Save(objCommonSetup.tableName); break;

case "Country Codes":objCountryCodes.Save(objCommonSetup.tableName); break;

case "Rolling Screens":objRollingScreens.Save(objCommonSetup.tableName); break;

case "General Ledgers":objGeneralLedgers.Save(objCommonSetup.tableName); break;

case "Holidays & Spec. Days":objHolidays.Save(objCommonSetup.tableName); break;

case "Auto Traces":objAutoTrace.Save(objCommonSetup.tableName); break;

case "Trace Categories":objTraceCategories.Save(objCommonSetup.tableName); break;

case "Web Payment":objWebPayment.Save(objCommonSetup.tableName); break;

}

Line 90: query="SELECT sectionid as id,sectionname,weblocurl,webshowavail,webdfltevtstatus as Type FROM sys_phonetypedesc";
Line 97: // query="SELECT sectionid as id,sectionname,weblocurl,webshowavail,webdfltevtstatus as Type FROM sys_phonetypedesc";
Line 101: query="SELECT resid as id,resdesc as FunctionTypes,webitem  FROM functnames";
Line 119: query="SELECT packageid as id  ,pkgname ,rate ,active ,new ,webavail FROM packages";
Line 126: query="SELECT grcsectionid as id  ,grcsectionname ,restdesc ,grcsectid FROM grcsections"; 
Line 159: query="SELECT restid as id  ,code ,restdesc ,grcsectid FROM restriction";
Line 165: query="SELECT needid as id ,code ,needdesc ,grcsectid FROM needdates";
Line 171: query="SELECT marketid as id,roomtype ,weekdaytargetsing ,weekdaytargetdbl ,weekdaytargettrip ,weekdaytargetquad ,weekdaytargetchild ,weekendtargetsing ,weekendtargetdbl ,weekendtargettrip ,weekendtargetquad ,weekendtargetchild ,transweekdaytargetsing ,transweekdaytargetdbl ,transweekdaytargettrip ,transweekdaytargetquad ,transweekdaytargetchild ,transweekendtargetsing ,transweekendtargetdbl ,transweekendtargettrip ,transweekendtargetquad ,transweekendtargetchild FROM marketrates";
Line 187: query="SELECT agencyid as id,agencyname,iata,commrate,custid,pmsalias,yieldalias from agency";
Line 193:  query="SELECT cntrycode as id,country,phoneformat,faxformat,postcodeformat,statelabel,postcodelabel,exchangerate,currencychar,decimalchar,separatorchar,decimalpositions,pmsalias,yieldalias,currencydescription,conversiontobase,conversiontoeuro,euroindicator,stateformat sys_countrycodes";
Line 201: query="SELECT RlsID as id,RlsName,RlsColor FROM  RollingScreen";
Line 207: query="SELECT ledgerid as id,ledgerdesc,ledgernumber FROM  ledger";
Line 233: query="select userdefwebpayment_id as id,table_name,field_name,display_name,available,paymethodid from userdef_webpayment";

query="SELECT  groupid as id,groupname from CustGroups";


switch (menu) 
{		

case "Customer Groups":
$('#table_CommonSetup tbody').html("<tr><td></td><td contenteditable></td><td contenteditable></td><td contenteditable></td><td contenteditable></td></tr>");

break;

case "Payment Methods":
$('#table_CommonSetup tbody').html("<tr><td></td><td contenteditable></td><td contenteditable></td><td contenteditable></td><td contenteditable></td></tr>");
break;

case "Referral Types":
$('#table_CommonSetup tbody').html("<tr><td></td><td contenteditable></td></tr>");

break;

case "Referral Sources":
$('#table_CommonSetup tbody').html("<tr><td></td><td class='custsearch' ></td><td contenteditable></td><td ><select class='RefSrcTypes' /></td><td contenteditable></td></tr>");

break;

case "Lost Business Competition":
$('#table_CommonSetup tbody').html("<tr><td></td><td contenteditable></td></tr>");
break;

case "Lost Business Reasons":
$('#table_CommonSetup tbody').html("<tr><td></td><td contenteditable></td></tr>");
break;

case "Salutations":
$('#table_CommonSetup tbody').html("<tr><td></td><td contenteditable></td></tr>");
break;

case "Phone Types":
$('#table_CommonSetup tbody').html("<tr><td></td><td contenteditable></td></tr>");
break;

///////Customise fields


case "Service Descriptions":(new ServiceDescriptions()).Save(objCommonSetup.tableName); break;

case "Service Categories":(new ServiceCategories()).Save(objCommonSetup.tableName); break;

case "Packages":(new Packages()).Save(objCommonSetup.tableName); break;

case "Group Room Sections":(new GRCSections()).Save(objCommonSetup.tableName); break;

case "Revenue Goals":(new RevenueGoals()).Save(objCommonSetup.tableName); break;

case "Daily Codes":(new DailyCodes()).Save(objCommonSetup.tableName); break;

case "Restriction Codes":(new RestrictionCodes()).Save(objCommonSetup.tableName); break;

case "Need Dates":(new NeedDates()).Save(objCommonSetup.tableName); break;

case "Market Rates":(new MarketRates()).Save(objCommonSetup.tableName); break;

case "Property Information":objPropertyInfo.Save(objCommonSetup.tableName); break;

case "Agencies":objAgencies.Save(objCommonSetup.tableName); break;

case "Country Codes":objCountryCodes.Save(objCommonSetup.tableName); break;

case "Rolling Screens":objRollingScreens.Save(objCommonSetup.tableName); break;

case "General Ledgers":objGeneralLedgers.Save(objCommonSetup.tableName); break;

case "Holidays & Spec. Days":objHolidays.Save(objCommonSetup.tableName); break;

case "Auto Traces":objAutoTrace.Save(objCommonSetup.tableName); break;

case "Trace Categories":objTraceCategories.Save(objCommonSetup.tableName); break;

case "Web Payment":objWebPayment.Save(objCommonSetup.tableName); break;

}



///////////////////////

// GetRows(menu)
// {
// $('.CommonSetup_UpperSection').html('')
// $('.CommonSetup_Bottom').html('')
// objCommonSetup.showNewDelete();

// switch (menu) {	
// case "Service Descriptions":
// objCommonSetup.tableName="sutypes";
// (new ServiceDescriptions()).Get(objCommonSetup.tableName);

// break;

// case "Service Categories":
// objCommonSetup.tableName="headertypes";
// (new ServiceCategories()).Get(objCommonSetup.tableName);
// break;

// case "Packages":
// objCommonSetup.tableName="packages";
// (new Packages()).Get(objCommonSetup.tableName);
// break;

// case "Group Room Sections":
// objCommonSetup.tableName="grcsections";
// (new GRCSections()).Get(objCommonSetup.tableName);
// break;

// case "Revenue Goals":

// $('#CommonSetup_new').css('display','none')
// $('#CommonSetup_delete').css('display','none')

// objCommonSetup.UpperPeriod();

// objCommonSetup.tableName="salesgoals";
// (new RevenueGoals()).Get(objCommonSetup.tableName);
// break;

// case "Daily Codes":

// objCommonSetup.GRCnDates();
// objCommonSetup.tableName="dailycodes";
// (new DailyCodes()).Get(objCommonSetup.tableName);
// break;

// case "Restriction Codes":	
// objCommonSetup.GRC();
// objCommonSetup.tableName="restriction";
// (new RestrictionCodes()).Get(objCommonSetup.tableName);
// break;

// case "Need Dates":	
// objCommonSetup.GRC();
// objCommonSetup.tableName="needdates";
// (new NeedDates()).Get(objCommonSetup.tableName);
// break;

// case "Market Rates":	
// objCommonSetup.MarketRates();
// objMarketRates=new MarketRates();
// objCommonSetup.tableName="marketrates";
// objMarketRates.Get(objCommonSetup.tableName);
// break;

// case "Property Information":
// objPropertyInfo=new PropertyInfo();
// objCommonSetup.tableName="sys_propt";
// objPropertyInfo.Get(objCommonSetup.tableName);
// break;

// case "Agencies":
// objAgencies=new Agencies();
// objCommonSetup.tableName="agency";
// objAgencies.Get(objCommonSetup.tableName);
// break;

// case "Country Codes":
// objCountryCodes=new CountryCodes();
// objCommonSetup.tableName="sys_countrycodes";
// objCountryCodes.Get(objCommonSetup.tableName);
// break;

// case "Rolling Screens":
// objRollingScreens=new RollingScreens();
// objCommonSetup.tableName="RollingScreens";
// objRollingScreens.Get(objCommonSetup.tableName);
// break;

// case "General Ledgers":
// objGeneralLedgers=new GeneralLedgers();
// objCommonSetup.tableName="ledger";
// objGeneralLedgers.Get(objCommonSetup.tableName);
// break;

// case "General Ledgers":
// objGeneralLedgers=new GeneralLedgers();
// objCommonSetup.tableName="ledger";
// objGeneralLedgers.Get(objCommonSetup.tableName);
// break;

// case "Holidays & Spec. Days":
// objHolidays=new Holidays();
// objCommonSetup.tableName="holidays";
// objHolidays.Get(objCommonSetup.tableName);
// break;

// case "Auto Traces":
// objAutoTrace=new AutoTrace();
// objCommonSetup.tableName="autotrace";
// objAutoTrace.Get(objCommonSetup.tableName);
// break;

// case "Trace Categories":
// objTraceCategories=new TraceCategories();
// objCommonSetup.tableName="trccat";
// objTraceCategories.Get(objCommonSetup.tableName);
// break;

// case "Web Payment":
// objWebPayment=new WebPayment();
// objCommonSetup.tableName="userdef_webpayment";
// objWebPayment.Get(objCommonSetup.tableName);
// break;

// }
// }

///////////////


SELECT     dbo.query_bookingallstat.bookingid, dbo.query_bookingallstat.bookingcustomerid, dbo.query_bookingallstat.bookingcontactid, dbo.query_bookingallstat.pmsnumber, 
dbo.query_bookingallstat.bookingsalespersonid, dbo.query_bookingallstat.bookingname, dbo.query_bookingallstat.bookingstartdate, dbo.query_bookingallstat.bookingstartmonth, 
dbo.query_bookingallstat.bookingstartyear, dbo.query_bookingallstat.bookingenddate, dbo.query_bookingallstat.bookingendmonth, dbo.query_bookingallstat.bookingendyear, 
dbo.query_bookingallstat.bookingstatusid, dbo.query_bookingallstat.bookingconfirmdate, dbo.query_bookingallstat.bookingconfmonth, dbo.query_bookingallstat.bookingconfyear, 
dbo.query_bookingallstat.bookingpaymentmethodid, dbo.query_bookingallstat.bookingfrequencyid, dbo.query_bookingallstat.bookingreferralsourceid, dbo.query_bookingallstat.bookingmarketid, 
dbo.query_bookingallstat.bookingpostas, dbo.query_bookingallstat.bookingloudgroup, dbo.query_bookingallstat.bookingdonotpost, dbo.query_bookingallstat.bookingmanager, 
dbo.query_bookingallstat.bookingdefaultcateringcontactid, dbo.query_bookingallstat.bookingcontractsent, dbo.query_bookingallstat.bookingcontsentmonth, 
dbo.query_bookingallstat.bookingcontsentyear, dbo.query_bookingallstat.bookingcontractreceived, dbo.query_bookingallstat.bookingcontrcvdmonth, dbo.query_bookingallstat.bookingcontrcvdyear, 
dbo.query_bookingallstat.bookingcontractdue, dbo.query_bookingallstat.bookingcontduemonth, dbo.query_bookingallstat.bookingcontdueyear, dbo.query_bookingallstat.billingcustomerid, 
dbo.query_bookingallstat.bookingprofitibilityoverridden, dbo.query_bookingallstat.bookingtaxexempt, dbo.query_bookingallstat.bookingstatus, dbo.query_bookingallstat.userdefevent_id, 
dbo.query_bookingallstat.bookingsalespersongroupid, dbo.query_bookingallstat.bookingsalespersonfirstname, dbo.query_bookingallstat.bookingsalespersonlastname, 
dbo.query_bookingallstat.bookingsalespersonaddr1, dbo.query_bookingallstat.bookingsalespersonaddr2, dbo.query_bookingallstat.bookingsalespersoncity, 
dbo.query_bookingallstat.bookingsalespersonstate, dbo.query_bookingallstat.bookingsalespersonpostcode, dbo.query_bookingallstat.bookingsalespersonphone, 
dbo.query_bookingallstat.bookingsalespersonfax, dbo.query_bookingallstat.bookingsalespersioncountryid, dbo.query_bookingallstat.bookingsalespersonreachatlocation, 
dbo.query_bookingallstat.bookingsalespersonreachataddr1, dbo.query_bookingallstat.bookingsalespersonreachataddr2, dbo.query_bookingallstat.bookingsalespersonreachatcity, 
dbo.query_bookingallstat.bookingsalespersonreachatstate, dbo.query_bookingallstat.bookingsalespersonreachatpostcode, dbo.query_bookingallstat.bookingsalespersonreachatphone, 
dbo.query_bookingallstat.bookingsalespersonreachatfax, dbo.query_bookingallstat.bookingsalespersonreachatcountryid, dbo.query_bookingallstat.bookingsalespersontitle, 
dbo.query_bookingallstat.bookingsalespersonactive, dbo.query_bookingallstat.bookingsalespersonemail, dbo.query_bookingallstat.bookingsalespersonpartnerid, 
dbo.query_bookingallstat.bookingmarketsegment, dbo.query_bookingallstat.bookingmarketnotes, dbo.query_bookingallstat.bookingmarketdefaultindicator, 
dbo.query_bookingallstat.bookingmarketconsolidationcode, dbo.query_bookingallstat.bookingbookeddate, dbo.query_bookingallstat.bookingbookedmonth, 
dbo.query_bookingallstat.bookingbookedyear, dbo.query_bookingallstat.arrivaldate, dbo.query_bookingallstat.arrivalmonth, dbo.query_bookingallstat.arrivalyear, 
dbo.query_bookingallstat.departuredate, dbo.query_bookingallstat.departuremonth, dbo.query_bookingallstat.departureyear, dbo.query_bookingallstat.roomblockcutoffdate, 
dbo.query_bookingallstat.pmsactualroomnights, dbo.query_bookingallstat.pmsactualadults, dbo.query_bookingallstat.pmsactualrevenue, dbo.query_bookingallstat.contactid, 
dbo.query_bookingallstat.contactcustomerid, dbo.query_bookingallstat.contactfirstname, dbo.query_bookingallstat.contactlastname, dbo.query_bookingallstat.contactlastnamesoundslike, 
dbo.query_bookingallstat.contactsalutation, dbo.query_bookingallstat.contacttitle, dbo.query_bookingallstat.contactaddressline1, dbo.query_bookingallstat.contactaddressline2, 
dbo.query_bookingallstat.contactcity, dbo.query_bookingallstat.contactstate, dbo.query_bookingallstat.contactpostalcode, dbo.query_bookingallstat.contactcountryid, 
dbo.query_bookingallstat.contactemailaddress, dbo.query_bookingallstat.contacttypeid, dbo.query_bookingallstat.contactactive, dbo.query_bookingallstat.userdefcont_id, 
dbo.query_bookingallstat.contactcountry, dbo.query_bookingallstat.contacttype, dbo.query_bookingallstat.contactphonenumber, dbo.query_bookingallstat.contactfax, 
dbo.query_bookingallstat.custslsprsnid, dbo.query_bookingallstat.custid, dbo.query_bookingallstat.custsearchid, dbo.query_bookingallstat.custname, dbo.query_bookingallstat.custphone, 
dbo.query_bookingallstat.custaddressline1, dbo.query_bookingallstat.custaddressline2, dbo.query_bookingallstat.custcity, dbo.query_bookingallstat.custstate, 
dbo.query_bookingallstat.custpostalcode, dbo.query_bookingallstat.custcountryid, dbo.query_bookingallstat.custbilladdressline1, dbo.query_bookingallstat.custbilladdressline2, 
dbo.query_bookingallstat.custbillcity, dbo.query_bookingallstat.custbillstate, dbo.query_bookingallstat.custbillpostalcode, dbo.query_bookingallstat.custbillcountryid, 
dbo.query_bookingallstat.custfederalid, dbo.query_bookingallstat.custtaxexempt, dbo.query_bookingallstat.custpaymentmethodid, dbo.query_bookingallstat.custmarketsegmentid, 
dbo.query_bookingallstat.custreferralsourceid, dbo.query_bookingallstat.custfax, dbo.query_bookingallstat.custactive, dbo.query_bookingallstat.custgroupid, dbo.query_bookingallstat.custisagency,
dbo.query_bookingallstat.custdateentered, dbo.query_bookingallstat.userdefcust_id, dbo.query_bookingallstat.custslsprsngroupid, dbo.query_bookingallstat.custslsprsnfirstname, 
dbo.query_bookingallstat.custslsprsnlastname, dbo.query_bookingallstat.custslsprsnaddr1, dbo.query_bookingallstat.custslsprsnaddr2, dbo.query_bookingallstat.custslsprsncity, 
dbo.query_bookingallstat.custslsprsnstate, dbo.query_bookingallstat.custslsprsnpostalcode, dbo.query_bookingallstat.custslsprsnphone, dbo.query_bookingallstat.custslsprsnfax, 
dbo.query_bookingallstat.custslsprsncntryid, dbo.query_bookingallstat.custslsprsnreachatlocation, dbo.query_bookingallstat.custslsprsnreachataddr1, 
dbo.query_bookingallstat.custslsprsnreachataddr2, dbo.query_bookingallstat.custslsprsnreachatcity, dbo.query_bookingallstat.custslsprsnreachatstate, 
dbo.query_bookingallstat.custslsprsnreachatpostalcode, dbo.query_bookingallstat.custslsprsnreachatphone, dbo.query_bookingallstat.custslsprsnreachatfax, 
dbo.query_bookingallstat.custslsprsnreachatcntryid, dbo.query_bookingallstat.custslsprsntitle, dbo.query_bookingallstat.custslsprsnactive, dbo.query_bookingallstat.custslsprsnbookingpartnerid, 
dbo.query_bookingallstat.custslsprsnemail, dbo.query_bookingallstat.custcountry, dbo.query_bookingallstat.custbillcountry, dbo.query_bookingallstat.custmarketsegment, 
dbo.query_bookingallstat.custmarketnotes, dbo.query_bookingallstat.custconsolidationcode, dbo.query_bookingallstat.custreferralsource, dbo.query_bookingallstat.custpaymentmethod, 
dbo.query_bookingallstat.custgroup, dbo.query_bookingallstat.custslsprsngroup, dbo.query_bookingallstat.custslsprsncntry, dbo.query_bookingallstat.custslsprsnreachatcntry, 
dbo.query_bookingallstat.custslsprsnpartnergroupid, dbo.query_bookingallstat.custslsprsnpartnerfirstname, dbo.query_bookingallstat.custslsprsnpartnerlastname, 
dbo.query_bookingallstat.custslsprsnpartneraddr1, dbo.query_bookingallstat.custslsprsnpartneraddr2, dbo.query_bookingallstat.custslsprsnpartnercity, 
dbo.query_bookingallstat.custslsprsnpartnerstate, dbo.query_bookingallstat.custslsprsnpartnerpostalcode, dbo.query_bookingallstat.custslsprsnpartnerphone, 
dbo.query_bookingallstat.custslsprsnpartnerfax, dbo.query_bookingallstat.custslsprsnpartnercntryid, dbo.query_bookingallstat.custslsprsnpartnerreachatlocation, 
dbo.query_bookingallstat.custslsprsnpartnerreachataddr1, dbo.query_bookingallstat.custslsprsnpartnerreachataddr2, dbo.query_bookingallstat.custslsprsnpartnerreachatcity, 
dbo.query_bookingallstat.custslsprsnpartnerreachatstate, dbo.query_bookingallstat.custslsprsnpartnerreachatpostalcode, dbo.query_bookingallstat.custslsprsnpartnerreachatphone, 
dbo.query_bookingallstat.custslsprsnpartnerreachatfax, dbo.query_bookingallstat.custslsprsnpartnerreachatcntryid, dbo.query_bookingallstat.custslsprsnpartnertitle, 
dbo.query_bookingallstat.custslsprsnpartneractive, dbo.query_bookingallstat.custslsprsnpartneremail, dbo.query_bookingallstat.custslsprsnpartnercntry, 
dbo.query_bookingallstat.custslsprsnpartnerreachatcntry, dbo.query_bookingallstat.customernotes, dbo.query_bookingallstat.bookingnotes, dbo.query_bookingallstat.mattercode, 
dbo.query_bookingallstat.mattername, dbo.query_bookingallstat.clientcode, dbo.query_bookingallstat.clientname, dbo.query_bookinglostrevenue.booking_lost_revenue AS totallostrevenue, 
dbo.lostheader.lbtype AS losttypeid, dbo.lbrt.lbreasondesc AS lostreason, dbo.lostheader.lbnotes AS lostnotes, dbo.competition.compdesc AS lostcompetition, 
salpt2.firstname AS deletedbyfirstname, salpt2.lastname AS deletedbylastname, dbo.lostheader.lbdeletedate AS deletedate
FROM         dbo.query_bookingallstat LEFT OUTER JOIN
dbo.query_bookinglostrevenue ON dbo.query_bookinglostrevenue.evtid = dbo.query_bookingallstat.bookingid LEFT OUTER JOIN
dbo.lostheader ON dbo.query_bookingallstat.bookingid = dbo.lostheader.evtid LEFT OUTER JOIN
dbo.lbrt ON dbo.lbrt.lbreasonid = dbo.lostheader.lbreason LEFT OUTER JOIN
dbo.competition ON dbo.competition.compid = dbo.lostheader.lbcompetition LEFT OUTER JOIN
dbo.salpt AS salpt2 ON salpt2.salesid = dbo.lostheader.lbdeleteby
WHERE     (dbo.query_bookingallstat.bookingstatusid = 4) AND (dbo.lostheader.functid = 0)


Customer Groups
Market Segments


Customer Groups
Market Segments
Payment Methods
Referral Types
Referral Sources
Lost Business Competition
Lost Business Reasons
Salutations
Phone Types



GetRows(menu)
{
$('.CommonSetup_UpperSection').html('')
$('.CommonSetup_Bottom').html('')
objCommonSetup.showNewDelete();

switch (menu) {	
case "Service Descriptions":
objCommonSetup.tableName="sutypes";
(new ServiceDescriptions()).Get(objCommonSetup.tableName);

break;

case "Service Categories":
objCommonSetup.tableName="headertypes";
(new ServiceCategories()).Get(objCommonSetup.tableName);
break;

case "Packages":
query="SELECT packageid as id  ,pkgname ,rate ,active ,new ,webavail FROM packages";
$('#table_CommonSetup tbody').html(DynamicRows(query));
break;

case "Group Room Sections":

query="SELECT grcsectionid as id  ,grcsectionname ,restdesc ,grcsectid FROM grcsections";  
$('#table_CommonSetup tbody').html(DynamicRows(query));
break;

case "Revenue Goals":

$('#CommonSetup_new').css('display','none')
$('#CommonSetup_delete').css('display','none')

objCommonSetup.UpperPeriod();

objCommonSetup.tableName="salesgoals";
(new RevenueGoals()).Get(objCommonSetup.tableName);
break;

case "Daily Codes":

objCommonSetup.GRCnDates();
objCommonSetup.tableName="dailycodes";
(new DailyCodes()).Get(objCommonSetup.tableName);
break;


case "Restriction Codes":	
query="SELECT restid as id  ,code ,restdesc ,grcsectid FROM restriction";
$('#table_CommonSetup tbody').html(DynamicRows(query));
break;

case "Need Dates":	
query="SELECT needid as id ,code ,needdesc ,grcsectid FROM needdates";
$('#table_CommonSetup tbody').html(DynamicRows(query));
break;

case "Market Rates":	
query="SELECT marketid as id,roomtype ,weekdaytargetsing ,weekdaytargetdbl ,weekdaytargettrip ,weekdaytargetquad ,weekdaytargetchild ,weekendtargetsing ,weekendtargetdbl ,weekendtargettrip ,weekendtargetquad ,weekendtargetchild ,transweekdaytargetsing ,transweekdaytargetdbl ,transweekdaytargettrip ,transweekdaytargetquad ,transweekdaytargetchild ,transweekendtargetsing ,transweekendtargetdbl ,transweekendtargettrip ,transweekendtargetquad ,transweekendtargetchild FROM marketrates";
$('#table_CommonSetup tbody').html(DynamicRows(query));
break;

case "Property Information":
objPropertyInfo=new PropertyInfo();
objCommonSetup.tableName="sys_propt";
objPropertyInfo.Get(objCommonSetup.tableName);
break;

case "Agencies":

query="SELECT agencyid as id,agencyname,iata,commrate,custid,pmsalias,yieldalias from agency";
$('#table_CommonSetup tbody').html(DynamicRows(query));
break;

case "Country Codes":
query="SELECT cntrycode as id,country,phoneformat,faxformat,postcodeformat,statelabel,postcodelabel,exchangerate,currencychar,decimalchar,separatorchar,decimalpositions,pmsalias,yieldalias,currencydescription,conversiontobase,conversiontoeuro,euroindicator,stateformat sys_countrycodes";
$('#table_CommonSetup tbody').html(DynamicRows(query));
break;

case "Rolling Screens":
query="SELECT RlsID as id,RlsName,RlsColor FROM  RollingScreen";
$('#table_CommonSetup tbody').html(DynamicRows(query));
break;

case "General Ledgers":
query="SELECT ledgerid as id,ledgerdesc,ledgernumber FROM  ledger";
$('#table_CommonSetup tbody').html(DynamicRows(query));
break;

case "Holidays & Spec. Days":
objHolidays=new Holidays();
objCommonSetup.tableName="holidays";
objHolidays.Get(objCommonSetup.tableName);
break;

case "Auto Traces":
objAutoTrace=new AutoTrace();
objCommonSetup.tableName="autotrace";
objAutoTrace.Get(objCommonSetup.tableName);
break;

case "Trace Categories":
objTraceCategories=new TraceCategories();
objCommonSetup.tableName="trccat";
objTraceCategories.Get(objCommonSetup.tableName);
break;

case "Web Payment":
query="select userdefwebpayment_id as id,table_name,field_name,display_name,available,paymethodid from userdef_webpayment";
break;

$('#table_CommonSetup tbody').html(DynamicRows(query));
$('.Setup_Common').show();

// case "Default Options":
// HideNewDelete();
// objDefaultOptions=new DefaultOptions();
// objCommonSetup.tableName="SYS_CountryCodes";
// objDefaultOptions.Get(objCommonSetup.tableName);
// break;


}
}



///////////////////

$('.Setup_Common').show(function(){

objCommonSetup.showNewDelete();

var query='';

switch ($(this).text()) {	
case "Service Descriptions":
objCommonSetup.tableName="sutypes";
(new ServiceDescriptions()).Get(objCommonSetup.tableName);

break;

case "Service Categories":
objCommonSetup.tableName="headertypes";
(new ServiceCategories()).Get(objCommonSetup.tableName);
break;

case "Packages":
objCommonSetup.tableName="packages";
(new Packages()).Get(objCommonSetup.tableName);
break;

case "Group Room Sections":
objCommonSetup.tableName="grcsections";
(new GRCSections()).Get(objCommonSetup.tableName);
break;

case "Revenue Goals":

$('#CommonSetup_new').css('display','none')
$('#CommonSetup_delete').css('display','none')

objCommonSetup.UpperPeriod();

objCommonSetup.tableName="salesgoals";
(new RevenueGoals()).Get(objCommonSetup.tableName);
break;

case "Daily Codes":

objCommonSetup.GRCnDates();
objCommonSetup.tableName="dailycodes";
(new DailyCodes()).Get(objCommonSetup.tableName);
break;


case "Restriction Codes":	
objCommonSetup.GRC();
objCommonSetup.tableName="restriction";
(new RestrictionCodes()).Get(objCommonSetup.tableName);
break;

case "Need Dates":	
objCommonSetup.GRC();
objCommonSetup.tableName="needdates";
(new NeedDates()).Get(objCommonSetup.tableName);
break;

case "Market Rates":	
objCommonSetup.MarketRates();
objMarketRates=new MarketRates();
objCommonSetup.tableName="marketrates";
objMarketRates.Get(objCommonSetup.tableName);
break;

case "Property Information":
objPropertyInfo=new PropertyInfo();
objCommonSetup.tableName="sys_propt";
objPropertyInfo.Get(objCommonSetup.tableName);
break;

case "Agencies":
objAgencies=new Agencies();
objCommonSetup.tableName="agency";
objAgencies.Get(objCommonSetup.tableName);
break;

case "Country Codes":
objCountryCodes=new CountryCodes();
objCommonSetup.tableName="sys_countrycodes";
objCountryCodes.Get(objCommonSetup.tableName);
break;

case "Rolling Screens":
objRollingScreens=new RollingScreens();
objCommonSetup.tableName="RollingScreens";
objRollingScreens.Get(objCommonSetup.tableName);
break;

case "General Ledgers":
objGeneralLedgers=new GeneralLedgers();
objCommonSetup.tableName="ledger";
objGeneralLedgers.Get(objCommonSetup.tableName);
break;

case "General Ledgers":
objGeneralLedgers=new GeneralLedgers();
objCommonSetup.tableName="ledger";
objGeneralLedgers.Get(objCommonSetup.tableName);
break;

case "Holidays & Spec. Days":
objHolidays=new Holidays();
objCommonSetup.tableName="holidays";
objHolidays.Get(objCommonSetup.tableName);
break;

case "Auto Traces":
objAutoTrace=new AutoTrace();
objCommonSetup.tableName="autotrace";
objAutoTrace.Get(objCommonSetup.tableName);
break;

case "Trace Categories":
objTraceCategories=new TraceCategories();
objCommonSetup.tableName="trccat";
objTraceCategories.Get(objCommonSetup.tableName);
break;

case "Web Payment":

var query="select userdefwebpayment_id as id,table_name,field_name,display_name,available,paymethodid from userdef_webpayment";

break;


}

$('#table_CommonSetup tbody').html(DynamicRows(query));


});


////////////////////////////////
var jsonData=JSON.parse(outputData);

$('#table_CommonSetup tbody tr').remove();
var row='<tr><th style="width:23%" >Category</center></th><th style="width:23%"><center>Field</center></th><th style="width:23%"><center>Display_Name</center></th><th style="width:23%"><center>Type</center></th><th style="width:23%"><center>PaymentMethod</center></th></tr>';
var row2='';

$.each(jsonData, function( index, value ) {

//UserDefWebPayment_ID, Table_Name, Field_Name, Display_Name, 
//Available, PayMethodID 



row2 =row2+'<tr tabindex="-1" UserDefWebPayment_ID='+value.userdefwebpayment_id+' >'+
'<td contenteditable style="width:23%">'+value.table_name+'</td>'+
'<td contenteditable style="width:23%">'+value.field_name+'</td>'+
'<td contenteditable style="width:23%">'+value.display_name+'</td>'+
'<td contenteditable style="width:23%">'+value.available+'</td>'+
'<td contenteditable style="width:23%">'+value.paymethodid+'</td>'+
'</tr>';

})

$("#table_CommonSetup thead").html('');		
$("#table_CommonSetup tbody").html('');

$("#table_CommonSetup thead").append(row);		
$("#table_CommonSetup tbody").append(row2);

///////////////
function showText(count)
{
var value = $('#packageName_'+count).html();
var text = '<input type="text" id="textId_'+count+'" name="textId_'+count+'" data-c="'+count+'" class="form-control no-padding packageChange" value="'+value+'">';
$('#packageName_'+count).html(text);	
$('#packageName_'+count+' input').focus();
$('#packageName_'+count).removeAttr('ondblclick');
}
$(document).on('focusout','.packageChange',function(){
var value = $(this).val();
var id = $(this).data("c");
$('#packageName_'+id).html('');
$('#packageName_'+id).attr('ondblclick','showText('+id+')');
$('#packageName_'+id).html(value);
});


function showSlpRoom(noDay)
{
var roomRate = $('#slpRoomRate_'+noDay).html();
var RateText = '<input type="text" id="rateText_'+noDay+'" name="rateText_'+noDay+'" data-c="'+noDay+'" class="form-control no-padding roomRateChange" value="'+roomRate+'" onkeypress="return event.charCode >= 48 && event.charCode <= 57" style="text-align:right">';
$('#slpRoomRate_'+noDay).html(RateText);	
$('#slpRoomRate_'+noDay+' input').focus();
$('#slpRoomRate_'+noDay).removeAttr('ondblclick');
}
$(document).on('focusout','.roomRateChange',function(){
var value = $(this).val();
var id = $(this).data("c");
$('#slpRoomRate_'+id).html('');
$('#slpRoomRate_'+id).attr('ondblclick','showSlpRoom('+id+')');
$('#slpRoomRate_'+id).html('$'+value);
});

var arr = '0','0','.','0','0'];
$(document).on('keyup',".roomRateChange", function (evt){
var s1=$(this).val();
if(s1)
{
s1 = s1.replace(".","");
s1 = "000" + s1;
var position = s1.length - 2;
var output = s1.slice(0, position), ".", s1.slice(position)].join('');
$(this).val(parseFloat(output).toFixed(2));
} 
else 
{
$(this).val("00.00");
}
});

function pkgDayRate(noDay)
{
var pkgDay = $('#pkgDayRate_'+noDay).html();
var pkgRateText = '<input type="text" id="pkgRateText_'+noDay+'" name="pkgRateText_'+noDay+'" data-c="'+noDay+'" class="form-control no-padding pkgDayRateChange" value="'+pkgDay+'" onkeypress="return event.charCode >= 48 && event.charCode <= 57" style="text-align:right">';
$('#pkgDayRate_'+noDay).html(pkgRateText);
$('#pkgDayRate_'+noDay+' input').focus();
$('#pkgDayRate_'+noDay).removeAttr('ondblclick');
}
$(document).on('change','.pkgDayRateChange',function(){
var value = $(this).val();
var id = $(this).data("c");
$('#pkgDayRate_'+id).html('');
$('#pkgDayRate_'+id).attr('ondblclick','pkgDayRate('+id+')');
$('#pkgDayRate_'+id).html('$'+value);
});
var arr = '0','0','.','0','0'];
$(document).on('keyup',".pkgDayRateChange", function (evt){
var s1=$(this).val();
if(s1)
{
s1 = s1.replace(".","");
s1 = "000" + s1;
var position = s1.length - 2;
var output = s1.slice(0, position), ".", s1.slice(position)].join('');
$(this).val(parseFloat(output).toFixed(2));
} 
else 
{
$(this).val("00.00");
}
});


function showFunction(functionDay)
{
// var functonRoom = $('#functionRoom_'+functionDay).html();
var functonRoomText = '<select id="functonRoomText_'+functionDay+'" name="functonRoomText_'+functionDay+'" data-c="'+functionDay+'" class="form-control no-padding functionRoomChange" style="font-size:12px; width: 78%; height: 20px;"></select>';
$.ajax({
method : "POST",
url : "../Availability/assets/ajax/ajax_getFunction.php",
success : function(data){ ////console.log(data); 
$("#functonRoomText_"+functionDay).html(data);
}
});
$('#functionRoom_'+functionDay).html(functonRoomText);
$('#functionRoom_'+functionDay).removeAttr('ondblclick');
}
$(document).on('focusout','.functionRoomChange',function(){
var value = $(this).val();
var val = $(this).find("option:selected").text();
var id = $(this).data("c");
$('#functionRoom_'+id).html('');
$('#functionRoom_'+id).attr('ondblclick','showFunction('+id+')');
$('#functionRoom_'+id).html(val);
});

function showStartTime(functionDay)
{
var startTime = $('#startTime_'+functionDay).html();
var startTimeText = '<input type="time" id="startTimeText_'+functionDay+'" name="startTimeText_'+functionDay+'" data-c="'+functionDay+'" class="form-control no-padding startTimeChange" value="'+startTime+'" step="1800">';
$('#startTime_'+functionDay).html(startTimeText);
$('#startTime_'+functionDay+' input').focus();
$('#startTime_'+functionDay).removeAttr('ondblclick');
}
$(document).on('focusout','.startTimeChange',function(){
var value = $(this).val();
var id = $(this).data("c");
$('#startTime_'+id).html('');
var time = tConvert(value);    
$('#startTime_'+id).html(time);
$('#startTime_'+id).attr('ondblclick','showStartTime('+id+')');
});

function showEndTime(functionDay)
{
var endTime = $('#endTime_'+functionDay).html();
var endTimeText = '<input type="time" id="endTimeText_'+functionDay+'" name="endTimeText_'+functionDay+'" data-c="'+functionDay+'" class="form-control no-padding endTimeChange" value="'+endTime+'" step="1800">';
$('#endTime_'+functionDay).html(endTimeText);
$('#endTime_'+functionDay+' input').focus();
$('#endTime_'+functionDay).removeAttr('ondblclick');
}
$(document).on('focusout','.endTimeChange',function(){
var value = $(this).val();
var id = $(this).data("c");
$('#endTime_'+id).html('');
var time = tConvert(value);
$('#endTime_'+id).html(time);
$('#endTime_'+id).attr('ondblclick','showEndTime('+id+')');
});

function tConvert (time) 
{
// Check correct time format and split into components
time = time.toString ().match (/^(01]\d|20-3])(:)(0-5]\d)(:0-5]\d)?$/) || time];

if (time.length > 1)  // If time format correct
{ 
time = time.slice (1);  // Remove full string match value
time5] = +time0] < 12 ? ' AM' : ' PM'; // Set AM/PM
time0] = +time0] % 12 || 12; // Adjust hours
}
return time.join (''); // return adjusted time or original string
}

function showRmRate(functionDay)
{
var rmRate = $('#rmRate_'+functionDay).html();
var rmRateText = '<input type="text" id="rmRateText_'+functionDay+'" name="rmRateText_'+functionDay+'" data-c="'+functionDay+'" class="form-control no-padding rmRateChange" value="'+rmRate+'" onkeypress="return event.charCode >= 48 && event.charCode <= 57" style="text-align:right;">';
$('#rmRate_'+functionDay).html(rmRateText);
$('#rmRate_'+functionDay+' input').focus();
$('#rmRate_'+functionDay).removeAttr('ondblclick');
}
$(document).on('focusout','.rmRateChange',function(){
var value = $(this).val();
var id = $(this).data("c");
$('#rmRate_'+id).html('');
$('#rmRate_'+id).html('$'+value);
$('#rmRate_'+id).attr('ondblclick','showRmRate('+id+')');
});
var arr = '0','0','.','0','0'];
$(document).on('keyup',".rmRateChange", function (evt){
var s1=$(this).val();
if(s1)
{
s1 = s1.replace(".","");
s1 = "000" + s1;
var position = s1.length - 2;
var output = s1.slice(0, position), ".", s1.slice(position)].join('');
$(this).val(parseFloat(output).toFixed(2));
} 
else 
{
$(this).val("00.00");
}
});


function insertPackage()
{
if($('.selectedPackages td:eq(1)').html() == '')
{
alert("The filed Package name cannot contain null value.");
$('.selectedPackages td:eq(2)').html('');
return false;
}
else
{
var functionRmRate = 0.00;
var sleepRoomRate = 0.00;
if($('#table_noOfDays tbody').find('tr').hasClass('selectedNoDay'))
{
$('#table_functionForDay tbody').find('tr').each(function(i,j){
functionRmRate = functionRmRate + parseFloat($(this).find('td:eq(4)').html().replace('$',''));
});
functionRmRate = functionRmRate + parseFloat($('.selectedNoDay td:eq(3)').html().replace('$',''));
var dot = functionRmRate.toString().indexOf(".");
if(dot !== -1)
{
$('.selectedNoDay td:eq(5)').html('$'+functionRmRate.toFixed(2));
}
else
{
functionRmRate = functionRmRate.toString()+".00";
functionRmRate = parseFloat(functionRmRate);
$('.selectedNoDay td:eq(5)').html('$'+functionRmRate.toFixed(2));
}
}
$('#table_noOfDays tbody').find('tr').each(function(i,j){
sleepRoomRate = sleepRoomRate + parseFloat($(this).find('td:eq(5)').html().replace('$',''));
});
var d = sleepRoomRate.toString().indexOf(".");
if(d !== -1)
{
$('.selectedPackages td:eq(2)').html('$'+sleepRoomRate.toFixed(2));
}
else
{
sleepRoomRate = sleepRoomRate.toString()+".00";
sleepRoomRate = parseFloat(sleepRoomRate);
$('.selectedPackages td:eq(2)').html('$'+sleepRoomRate.toFixed(2));
}
var packageArray = ];
if( $('#hiddenPackageId').val() == '' || $('#hiddenPackageId').val() == null )
{
packageArray.push({name : "packageName", value : ($('.selectedPackages td:eq(1)').html() == '' || $('.selectedPackages td:eq(1)').html() == undefined)?$('.selectedPackages td:eq(1)').html():$('.selectedPackages td:eq(1)').html().replace('$','')});
packageArray.push({name : "packageRate", value : ($('.selectedPackages td:eq(2)').html()=='' || $('.selectedPackages td:eq(2)').html()== undefined)?$('.selectedPackages td:eq(2)').html():$('.selectedPackages td:eq(2)').html().replace('$','')});
}
else
{
packageArray.push({name : "packageId", value : $('#hiddenPackageId').val() });
packageArray.push({name : "packageName", value : ($('.selectedPackages td:eq(1)').html() == '' || $('.selectedPackages td:eq(1)').html() == undefined)?$('.selectedPackages td:eq(1)').html():$('.selectedPackages td:eq(1)').html().replace('$','')});
packageArray.push({name : "packageRate", value : ($('.selectedPackages td:eq(2)').html() == '' || $('.selectedPackages td:eq(2)').html()== undefined)?$('.selectedPackages td:eq(2)').html():$('.selectedPackages td:eq(2)').html().replace('$','')});
}
$.ajax({
method : "POST",
url : "../Setup/assets/ajax/ajax_insertPackage.php",
async : false,
data : packageArray,
success : function(data){ ////console.log(data); 
$('#hiddenPackageId').val(data);
$(".selectedPackages").attr("packageId",data);
flagPackage = 0;
return flagPackage;
}
});
}
}


function insertDay()
{
var dayArray = ];
if( $('#hiddenDayId').val() == '' || $('#hiddenDayId').val() == null )
{
dayArray.push({name : "packageId", value : $('#hiddenPackageId').val()});
dayArray.push({name : "day", value : $('.selectedNoDay td:eq(1)').html()});
dayArray.push({name : "sleepcheck", value : $('.selectedNoDay td:eq(2)').find('inputtype=checkbox]').val()});
dayArray.push({name : "slpRoomRate", value : ($('.selectedNoDay td:eq(3)').html() == '' || $('.selectedNoDay td:eq(3)').html() == undefined)?$('.selectedNoDay td:eq(3)').html():$('.selectedNoDay td:eq(3)').html().replace('$','')});
dayArray.push({name : "noDayRemCheck", value : $('.selectedNoDay td:eq(4)').find('inputtype=checkbox]').val()});
dayArray.push({name : "pkgDayRate", value : ($('.selectedNoDay td:eq(5)').html() == '' || $('.selectedNoDay td:eq(3)').html() == undefined)?$('.selectedNoDay td:eq(5)').html():$('.selectedNoDay td:eq(5)').html().replace('$','')});
}
else
{
dayArray.push({name : "dayId", value : $('#hiddenDayId').val()});
dayArray.push({name : "packageId", value : $('#hiddenPackageId').val()});
dayArray.push({name : "day", value : $('.selectedNoDay td:eq(1)').html()});
dayArray.push({name : "sleepcheck", value : $('.selectedNoDay td:eq(2)').find('inputtype=checkbox]').val()});
dayArray.push({name : "slpRoomRate", value : ($('.selectedNoDay td:eq(3)').html() == ''|| $('.selectedNoDay td:eq(3)').html() == undefined)?$('.selectedNoDay td:eq(3)').html():$('.selectedNoDay td:eq(3)').html().replace('$','')});
dayArray.push({name : "noDayRemCheck", value : $('.selectedNoDay td:eq(4)').find('inputtype=checkbox]').val()});
dayArray.push({name : "pkgDayRate", value : ($('.selectedNoDay td:eq(5)').html() == '' || $('.selectedNoDay td:eq(3)').html() == undefined)?$('.selectedNoDay td:eq(5)').html():$('.selectedNoDay td:eq(5)').html().replace('$','')});
}
$.ajax({
method : "POST",
url : "../Setup/assets/ajax/ajax_insertDay.php",
async : false,
data : dayArray,
success : function(data){ ////console.log(data); 
$('#hiddenDayId').val(data);
$(".selectedNoDay").attr("dayId",data);
flagDay = 0;
return flagDay;
}
});
}


function insertFunction()
{
var functionArray = ];
if($('.selectedfunctionForDay td:eq(1)').html() == '')
{
alert("The filed Function name cannot contain null value.");
return false;
}
if($('.selectedfunctionForDay td:eq(2)').html() == '' || $('.selectedfunctionForDay td:eq(3)').html() == '')
{
alert("Start Time and End Time must be set.");
return false;
}
if( $('#hiddenFunctionId').val() == '' || $('#hiddenFunctionId').val() == null )
{
functionArray.push({name : "dayId", value : $('#hiddenDayId').val()});
functionArray.push({name : "packageId", value : $('#hiddenPackageId').val()});
functionArray.push({name : "function", value : $('.selectedfunctionForDay td:eq(1)').html()});
functionArray.push({name : "startTime", value : $('.selectedfunctionForDay td:eq(2)').html()});
functionArray.push({name : "endTime", value : $('.selectedfunctionForDay td:eq(3)').html()});
functionArray.push({name : "rmrate", value : ($('.selectedfunctionForDay td:eq(4)').html() == '' || $('.selectedfunctionForDay td:eq(4)').html() == undefined)?$('.selectedfunctionForDay td:eq(4)').html():$('.selectedfunctionForDay td:eq(4)').html().replace('$','')});
functionArray.push({name : "functionRemainder", value : $('.selectedfunctionForDay td:eq(5)').find('inputtype=checkbox]').val()});
functionArray.push({name : "setUpType", value : $('#package_setupType').val()});
functionArray.push({name : "setUpTime", value : $('#package_setupTime').val()});
functionArray.push({name : "knockTime", value : $('#package_knckDwn').val()});
}
else
{
functionArray.push({name : "dayId", value : $('#hiddenDayId').val()});
functionArray.push({name : "packageId", value : $('#hiddenPackageId').val()});
functionArray.push({name : "functionId", value : $('#hiddenFunctionId').val()});
functionArray.push({name : "function", value : $('.selectedfunctionForDay td:eq(1)').html()});
functionArray.push({name : "startTime", value : $('.selectedfunctionForDay td:eq(2)').html()});
functionArray.push({name : "endTime", value : $('.selectedfunctionForDay td:eq(3)').html()});
functionArray.push({name : "rmrate", value : ($('.selectedfunctionForDay td:eq(4)').html() == '' || $('.selectedfunctionForDay td:eq(4)').html() == undefined) ?$('.selectedfunctionForDay td:eq(4)').html():$('.selectedfunctionForDay td:eq(4)').html().replace('$','')});
functionArray.push({name : "functionRemainder", value : $('.selectedfunctionForDay td:eq(5)').find('inputtype=checkbox]').val()});
functionArray.push({name : "setUpType", value : $('#package_setupType').val()});
functionArray.push({name : "setUpTime", value : $('#package_setupTime').val()});
functionArray.push({name : "knockTime", value : $('#package_knckDwn').val()});
}
$.ajax({
method : "POST",
url : "../Setup/assets/ajax/ajax_insertfunction.php",
async : false,
data : functionArray,
success : function(data){ ////console.log(data); 
$('#hiddenFunctionId').val(data);
$(".selectedfunctionForDay").attr("functionId",data);
flagFunction = 0;
return flagFunction;
}
});
}


$(document).on('click', 'inputtype=checkbox]name=sleepCheck]', function(){
var cheksleep =  $(this).is(":checked");
if(!cheksleep)
{
$(this).closest('tr').find('td:eq(4)').find('inputtype=checkbox]').prop("checked",false);	
}
});

$(document).on('click', 'inputtype=checkbox]name=remainderCheckDay]', function(event){
var cheksleep =  $(this).is(":checked");
if(cheksleep)
{
var slpCheck = $(this).closest('tr').find('td:eq(2)').find('inputtype=checkbox]').is(":checked");
if(!slpCheck)
{
alert("The Sleeping Rooms must be checked before setting Sleeping Rooms to be the remainder for the day.");
return false;
}
var functionCheck = $('.selectedfunctionForDay').find('td:eq(5)').find('inputtype=checkbox]').is(":checked");
if(functionCheck)
{
alert("There is already a remainder assigned to Sleeping Rooms. Remainder on the Room Rental will be reset.");
$('.selectedfunctionForDay').find('td:eq(5)').find('inputtype=checkbox]').prop('checked',false);
$('.selectedNoDay').find('td:eq(4) inputtype=checkbox]').prop('checked',true);
}
}
});

$(document).on('click', 'inputtype=checkbox]name=remainderCheck]', function(){
var cheksleep = $(this).is(":checked");
if(cheksleep)
{
var checkDayRem = $('.selectedNoDay').find('td:eq(4) inputtype=checkbox]').is(":checked");
if(checkDayRem)
{
$(this).prop("checked",false);
alert("There is already a remainder assigned to Sleeping Rooms. Remainder on the Room Rental will be reset.");
return false;
}
}
});



////////////////////////////




















$('#package_save').on('click',function(){

if($('.selectedPackages td:eq(1)').html() == '')
{
alert("The filed Package name cannot contain null value.");
$('.selectedPackages td:eq(2)').html('');
return false;
}
else
{
var functionRmRate = 0.00;
var sleepRoomRate = 0.00;
if($('#table_noOfDays tbody').find('tr').hasClass('selectedNoDay'))
{
$('#table_functionForDay tbody').find('tr').each(function(i,j){
functionRmRate = functionRmRate + parseFloat($(this).find('td:eq(4)').html().replace('$',''));
});
functionRmRate = functionRmRate + parseFloat($('.selectedNoDay td:eq(3)').html().replace('$',''));
var dot = functionRmRate.toString().indexOf(".");
if(dot !== -1)
{
$('.selectedNoDay td:eq(5)').html('$'+functionRmRate.toFixed(2));
}
else
{
functionRmRate = functionRmRate.toString()+".00";
functionRmRate = parseFloat(functionRmRate);
$('.selectedNoDay td:eq(5)').html('$'+functionRmRate.toFixed(2));
}
}
$('#table_noOfDays tbody').find('tr').each(function(i,j){
sleepRoomRate = sleepRoomRate + parseFloat($(this).find('td:eq(5)').html().replace('$',''));
});
var d = sleepRoomRate.toString().indexOf(".");
if(d !== -1)
{
$('.selectedPackages td:eq(2)').html('$'+sleepRoomRate.toFixed(2));
}
else
{
sleepRoomRate = sleepRoomRate.toString()+".00";
sleepRoomRate = parseFloat(sleepRoomRate);
$('.selectedPackages td:eq(2)').html('$'+sleepRoomRate.toFixed(2));
}

//SELECT packageid ,pkgname ,rate ,active ,new ,webavail FROM packages 
var query="";

if($('#hiddenPackageId').val())
{ 
query="update packages set pkgname = '"+$('.selectedPackages td:eq(1)').html()+"', rate = '"+$('.selectedPackages td:eq(2)').html()+"' where packageid ='"+$('#hiddenPackageId').val()+"'";  
}
else
{
query="insert into packages(pkgname ,rate ,active ,new) values('"+$('.selectedPackages td:eq(1)').html()+"', '"+$('.selectedPackages td:eq(2)').html()+"' ,'1' ,'1')";
}	
////
var out = CRUD(query) ;


$("#table_noOfDays tbody tr").each(function()
{

//Days	Sleep	SleepRoom Rate	Remainder	Pkg Day Rate
var query='';

if($(this).attr('dayId'))
{ 
query="update evt_packagedays set pkgday = '"+$(this).attr('pkgday')+"',sleeprooms= '"+$(this).children('td:eq(2) input').html()+"' ,slproomrate= '"+$(this).children('td:eq(3)').html()+"' ,remainder= '"+$(this).children('td:eq(4) input').html()+"' ,pkgdayamt= '"+$(this).children('td:eq(5)').html()+"', rate = '"+$(this).children('td:eq(6)').html()+"' where pkgdayid ='"+$(this).attr('dayId')+"'";  
}
else
{

query="insert into evt_packagedays(pkgday ,sleeprooms ,slproomrate ,remainder ,pkgdayamt,rate) values('"+$(this).attr('pkgday')+"','"+$(this).children('td:eq(2) input').find('.sleepCheck').val()+"' ,'"+$(this).children('td:eq(3)').html()+"' ,'"+$(this).children('td:eq(4) ').find('.remainderCheckDay').val()+"' ,'"+$(this).children('td:eq(5)').html()+"','"+$(this).children('td:eq(5)').html()+"')";

// query="insert into evt_packagedays(pkgday ,sleeprooms ,slproomrate ,remainder ,pkgdayamt,rate) values('"+$(this).attr('pkgday')+"','"+$(this).children('td:eq(2) input').html()+"' ,'"+$(this).children('td:eq(3)').html()+"' ,'"+$(this).children('td:eq(4) input').html()+"' ,'"+$(this).children('td:eq(5)').html()+"','"+$(this).children('td:eq(6)').html()+"')";
}	
////
var out = CRUD(query) ;

})


$("#table_noOfDays tbody tr").each(function()
{
//SELECT pkgfunctid ,functid ,pkgdayid ,pfunctid ,rate FROM evt_packagefuncts  
//Function	Start Time	End Time	RM Rate	Remainder

var query='';

if($(this).attr('pkgfunctid'))
{ 
query="update evt_packagefuncts set functid = '"+$(this).children('td:eq(0)').html()+"',pkgdayid= '1' ,pfunctid= '"+$(this).children('td:eq(0)').html()+"' ,rate= '"+$(this).children('td:eq(3)').html()+"' where pkgfunctid ='"+$(this).attr('pkgfunctid')+"'";  
}
else
{
query="insert into evt_packagefuncts(functid ,pkgdayid ,pfunctid ,rate) values('"+$(this).children('td:eq(0)').html()+"','"+$(this).children('td:eq(2)').html()+"' ,'"+$(this).children('td:eq(3)').html()+"' ,'"+$(this).children('td:eq(4)').html()+"')";
}	
////
var out = CRUD(query) ;

})

getPackages()
}


/////////////////Old //////////////////
// var functionRmRate = 0.00;
// var sleepRoomRate = 0.00;
// var checkSlppRoom  = $('.selectedNoDay td:eq(2)').find('inputtype=checkbox]').is(":checked");
// if(!checkSlppRoom)
// {
// $('.selectedNoDay td:eq(3)').html("0.00");
// }
// var dayLength = $('#table_noOfDays tbody').find('tr').length;
// var functionLength = $('#table_functionForDay tbody').find('tr').length;
// var completePackageArray = ];
// if($('.selectedPackages').attr('packageId'))
// {
// completePackageArray.push({name : "packageId", value : $('#hiddenPackageId').val() });
// completePackageArray.push({name : "nodayId", value : $('#hiddenDayId').val() });
// }
// if(dayLength == 0)
// {
// insertPackage();
// }
// else if(functionLength == 0)
// {
// insertPackage();
// insertDay();
// }
// else
// {
// if($('.selectedfunctionForDay td:eq(1)').html() == '')
// {
// alert("The filed Function name cannot contain null value.");
// return false;
// }
// if($('.selectedfunctionForDay td:eq(2)').html() == '' || $('.selectedfunctionForDay td:eq(3)').html() == '')
// {
// alert("Start Time and End Time must be set.");
// return false;
// }

// if($('#table_noOfDays tbody').find('tr').hasClass('selectedNoDay'))
// {
// $('#table_functionForDay tbody').find('tr').each(function(i,j){
// functionRmRate = functionRmRate + parseFloat($(this).find('td:eq(4)').html().replace('$',''));
// });
// functionRmRate = functionRmRate + parseFloat($('.selectedNoDay td:eq(3)').html().replace('$',''));
// var dot = functionRmRate.toString().indexOf(".");
// if(dot !== -1)
// {
// $('.selectedNoDay td:eq(5)').html('$'+functionRmRate.toFixed(2));
// }
// else
// {
// functionRmRate = functionRmRate.toString()+".00";
// functionRmRate = parseFloat(functionRmRate);
// $('.selectedNoDay td:eq(5)').html('$'+functionRmRate.toFixed(2));
// }
// }
// $('#table_noOfDays tbody').find('tr').each(function(i,j){
// sleepRoomRate = sleepRoomRate + parseFloat($(this).find('td:eq(5)').html().replace('$',''));
// });
// var d = sleepRoomRate.toString().indexOf(".");
// if(d !== -1)
// {
// $('.selectedPackages td:eq(2)').html('$'+sleepRoomRate.toFixed(2));
// }
// else
// {
// sleepRoomRate = sleepRoomRate.toString()+".00";
// sleepRoomRate = parseFloat(sleepRoomRate);
// $('.selectedPackages td:eq(2)').html('$'+sleepRoomRate.toFixed(2));
// }
// completePackageArray.push({name : "packageName", value : $('.selectedPackages td:eq(1)').html()});
// completePackageArray.push({name : "packageRate", value : ($('.selectedPackages td:eq(2)').html()=='' || $('.selectedPackages td:eq(2)').html()==undefined)?$('.selectedPackages td:eq(2)').html():$('.selectedPackages td:eq(2)').html().replace('$','')});
// completePackageArray.push({name : "day", value : $('.selectedNoDay td:eq(1)').html()});
// completePackageArray.push({name : "sleepcheck", value : $('.selectedNoDay td:eq(2)').find('inputtype=checkbox]').val()});
// completePackageArray.push({name : "slpRoomRate", value : ($('.selectedNoDay td:eq(3)').html()==''|| $('.selectedNoDay td:eq(3)').html()==undefined)?$('.selectedNoDay td:eq(3)').html():$('.selectedNoDay td:eq(3)').html().replace('$','')});
// completePackageArray.push({name : "noDayRemCheck", value : $('.selectedNoDay td:eq(4)').find('inputtype=checkbox]').val()});
// completePackageArray.push({name : "pkgDayRate", value : ($('.selectedNoDay td:eq(5)').html()==''||$('.selectedNoDay td:eq(5)').html()==undefined)?$('.selectedNoDay td:eq(5)').html():$('.selectedNoDay td:eq(5)').html().replace('$','')});
// completePackageArray.push({name : "setUpType", value : $('#package_setupType').val()});
// completePackageArray.push({name : "setUpTime", value : $('#package_setupTime').val()});
// completePackageArray.push({name : "knockTime", value : $('#package_knckDwn').val()});
// $('#table_functionForDay tbody').find('tr').each(function(i,j){
// var id = $(this);
// completePackageArray.push({name : "functionForDayId", value : $(this).attr('functionid') });
// completePackageArray.push({name : "function", value : $(this).find('td:eq(1)').html()});
// completePackageArray.push({name : "startTime", value : $(this).find('td:eq(2)').html()});
// completePackageArray.push({name : "endTime", value : $(this).find('td:eq(3)').html()});
// completePackageArray.push({name : "rmrate", value : ($(this).find('td:eq(4)').html()==''||$(this).find('td:eq(4)').html()==undefined)?$(this).find('td:eq(4)').html():$(this).find('td:eq(4)').html().replace('$','')});
// completePackageArray.push({name : "functionRemainder", value : $(this).find('td:eq(5)').find('inputtype=checkbox]').is(":checked")});
// $.ajax({
// method : "POST",
// url : "../Setup/assets/ajax/ajax_insertCompletePackage.php",
// async : false,
// data : completePackageArray,
// success : function(data){ ////console.log(data); 
// var json = JSON.parse(data);

// $(".selectedPackages").attr("packageId",json.packageId);
// $(".selectedNoDay").attr("dayId",json.noDayId);
// id.attr("functionId",json.FunctionDayID);

// $('#hiddenPackageId').val(json.packageId);
// $('#hiddenDayId').val(json.noDayId);
// $('#hiddenFunctionId').val(json.FunctionDayID);
// }
// });
// });
// }
// flagPackage = 0;
// flagDay = 0;
// flagFunction = 0;
// return flagPackage, flagDay, flagFunction;


});


////////////////



// insert into evt_packagedays(pkgday ,sleeprooms ,slproomrate ,remainder ,pkgdayamt,rate) values('1','undefined' ,'12' ,'undefined' ,'$12.01','undefined')


query="insert into evt_packagedays(pkgday ,sleeprooms ,slproomrate ,remainder ,pkgdayamt,rate) values('"+$(this).attr('pkgday')+"','"+$(this).children('td:eq(2) input').html()+"' ,'"+$(this).children('td:eq(3)').html()+"' ,'"+$(this).children('td:eq(4) ').find('.remainderCheckDay').val()+"' ,'"+$(this).children('td:eq(5)').html()+"','"+$(this).children('td:eq(6)').html()+"')";


html+="<tr onclick=showFunctionForDay("+value.pkgdayid+"') dayId="+value.pkgdayid+"'><td ></td><td  >"+value.pkgday+"</td><td><input type='checkbox' class='sleepCheck' name='sleepCheck' style='margin-left:6px;' "+ checked+"></td><td  >$"+value.slproomrate+"</td><td><input type='checkbox' class='remainderCheckDay'  name='remainderCheckDay' style='margin-left:20px;' "+checkRemainder+"></td><td  >$"+value.pkgdayamt+"</td></tr>";

//////////////////

if($('.selectedPackages td:eq(1)').html() == '')
{
alert("The filed Package name cannot contain null value.");
$('.selectedPackages td:eq(2)').html('');
return false;
}
else
{
var functionRmRate = 0.00;
var sleepRoomRate = 0.00;
if($('#table_noOfDays tbody').find('tr').hasClass('selectedNoDay'))
{
$('#table_functionForDay tbody').find('tr').each(function(i,j){
functionRmRate = functionRmRate + parseFloat($(this).find('td:eq(4)').html().replace('$',''));
});
functionRmRate = functionRmRate + parseFloat($('.selectedNoDay td:eq(3)').html().replace('$',''));
var dot = functionRmRate.toString().indexOf(".");
if(dot !== -1)
{
$('.selectedNoDay td:eq(5)').html('$'+functionRmRate.toFixed(2));
}
else
{
functionRmRate = functionRmRate.toString()+".00";
functionRmRate = parseFloat(functionRmRate);
$('.selectedNoDay td:eq(5)').html('$'+functionRmRate.toFixed(2));
}
}
$('#table_noOfDays tbody').find('tr').each(function(i,j){
sleepRoomRate = sleepRoomRate + parseFloat($(this).find('td:eq(5)').html().replace('$',''));
});
var d = sleepRoomRate.toString().indexOf(".");
if(d !== -1)
{
$('.selectedPackages td:eq(2)').html('$'+sleepRoomRate.toFixed(2));
}
else
{
sleepRoomRate = sleepRoomRate.toString()+".00";
sleepRoomRate = parseFloat(sleepRoomRate);
$('.selectedPackages td:eq(2)').html('$'+sleepRoomRate.toFixed(2));
}

/////////////////////////////

$('#Package_save').on('click',function(){

if($('.selectedPackages td:eq(1)').html() == '')
{
alert("The filed Package name cannot contain null value.");
$('.selectedPackages td:eq(2)').html('');
return false;
}
else
{
var functionRmRate = 0.00;
var sleepRoomRate = 0.00;
if($('#table_noOfDays tbody').find('tr').hasClass('selectedNoDay'))
{
$('#table_functionForDay tbody').find('tr').each(function(i,j){
functionRmRate = functionRmRate + parseFloat($(this).find('td:eq(4)').html().replace('$',''));
});
functionRmRate = functionRmRate + parseFloat($('.selectedNoDay td:eq(3)').html().replace('$',''));
var dot = functionRmRate.toString().indexOf(".");
if(dot !== -1)
{
$('.selectedNoDay td:eq(5)').html('$'+functionRmRate.toFixed(2));
}
else
{
functionRmRate = functionRmRate.toString()+".00";
functionRmRate = parseFloat(functionRmRate);
$('.selectedNoDay td:eq(5)').html('$'+functionRmRate.toFixed(2));
}
}
$('#table_noOfDays tbody').find('tr').each(function(i,j){
sleepRoomRate = sleepRoomRate + parseFloat($(this).find('td:eq(5)').html().replace('$',''));
});
var d = sleepRoomRate.toString().indexOf(".");
if(d !== -1)
{
$('.selectedPackages td:eq(2)').html('$'+sleepRoomRate.toFixed(2));
}
else
{
sleepRoomRate = sleepRoomRate.toString()+".00";
sleepRoomRate = parseFloat(sleepRoomRate);
$('.selectedPackages td:eq(2)').html('$'+sleepRoomRate.toFixed(2));
}

//SELECT packageid ,pkgname ,rate ,active ,new ,webavail FROM packages 
var query="";

if($('#hiddenPackageId').val())
{ 
query="update packages set pkgname = '"+$('.selectedPackages td:eq(1)').html()+"', rate = '"+$('.selectedPackages td:eq(2)').html()+"' where packageid ='"+$('#hiddenPackageId').val()+"'";  
}
else
{
query="insert into packages(pkgname ,rate ,active ,new) values('"+$('.selectedPackages td:eq(1)').html()+"', '"+$('.selectedPackages td:eq(2)').html()+"' ,'1' ,'1')";
}	
////
var out = CRUD(query) ;


$("#table_noOfDays tbody tr").each(function()
{

//Days	Sleep	SleepRoom Rate	Remainder	Pkg Day Rate
var query='';

if($(this).attr('dayId'))
{ 
query="update evt_packagedays set pkgday = '"+$(this).children('td:eq(1)').html()+"',sleeprooms= '"+$(this).children('td:eq(2)').html()+"' ,slproomrate= '"+$(this).children('td:eq(3)').html()+"' ,remainder= '"+$(this).children('td:eq(4)').html()+"' ,pkgdayamt= '"+$(this).children('td:eq(5)').html()+"', rate = '"+$(this).children('td:eq(6)').html()+"' where pkgdayid ='"+$(this).attr('dayId')+"'";  
}
else
{
query="insert into evt_packagedays(pkgday ,sleeprooms ,slproomrate ,remainder ,pkgdayamt) values('"+$(this).children('td:eq(1)').html()+"','"+$(this).children('td:eq(2)').html()+"' ,'"+$(this).children('td:eq(3)').html()+"' ,'"+$(this).children('td:eq(4)').html()+"' ,'"+$(this).children('td:eq(5)').html()+"','"+$(this).children('td:eq(6)').html()+"')";
}	
////
var out = CRUD(query) ;

})


$("#table_noOfDays tbody tr").each(function()
{
//SELECT pkgfunctid ,functid ,pkgdayid ,pfunctid ,rate FROM evt_packagefuncts  
//Function	Start Time	End Time	RM Rate	Remainder

var query='';

if($(this).attr('pkgfunctid'))
{ 
query="update evt_packagefuncts set functid = '"+$(this).children('td:eq(0)').html()+"',pkgdayid= '1' ,pfunctid= '"+$(this).children('td:eq(0)').html()+"' ,rate= '"+$(this).children('td:eq(3)').html()+"' where pkgfunctid ='"+$(this).attr('pkgfunctid')+"'";  
}
else
{
query="insert into evt_packagefuncts(functid ,pkgdayid ,pfunctid ,rate) values('"+$(this).children('td:eq(0)').html()+"','"+$(this).children('td:eq(2)').html()+"' ,'"+$(this).children('td:eq(3)').html()+"' ,'"+$(this).children('td:eq(4)').html()+"' ,'"+$(this).children('td:eq(5)').html()+"','"+$(this).children('td:eq(6)').html()+"')";
}	
////
var out = CRUD(query) ;

})

getPackages()
}

})	


/*JS for table row selection*/
$("#table_noOfDays tbody").on('click','tr',function(){
getpkgFuncts($(this).attr('pkgdayid'));
});

function getpkgFuncts(pkgdayid)
{
var query ="SELECT pkgfunctid ,functid ,pkgdayid ,pfunctid ,rate FROM evt_packagefuncts where pkgdayid = '"+pkgdayid+"' " ;

var html='';
$.each(JSON.parse(CRUD(query)), function( index, value ) {

var checked = '';
var checkRemainder = 'checked'; 

html+="<tr onclick=showFunctionForDay("+value.pkgdayid+"') dayId="+value.pkgdayid+"'><td ></td><td  >"+value.pkgday+"</td><td><input type='checkbox' name='sleepCheck' style='margin-left:6px;' "+ checked+"></td><td  >$"+value.slproomrate."</td><td><input type='checkbox' name='remainderCheckDay' style='margin-left:20px;' "+checkRemainder+"></td><td  >$"+value.pkgdayamt+"</td></tr>";

})

$('#table_noOfDays tbody').html(html);
$('#table_functionForDay tbody').html('');
$("#table_noOfDays tbody").find('tr').each(function(i,j){
$(this).find('td:eq(3)').attr('id','slpRoomRate_'+i);
$(this).find('td:eq(3)').attr('ondblclick','showSlpRoom('+i+')');
$(this).find('td:eq(5)').attr('id','pkgDayRate_'+i);
$(this).find('td:eq(5)').attr('ondblclick','pkgDayRate('+i+')');

}
}); 




SELECT evtpackageid ,eventid ,packageid ,rate ,attendees ,actattendees ,actualized ,new FROM  eventpackage 
SELECT packageid ,pkgname ,rate ,active ,new ,webavail FROM packages  
SELECT pkgdayid ,eventid ,evtpkgid ,pkgday ,sleeprooms ,slproomrate ,remainder ,pkgdayamt ,pkgdaydate FROM evt_packagedays 
SELECT pkgfunctid ,functid ,pkgdayid ,pfunctid ,rate FROM evt_packagefuncts  
SELECT pkgsrvdescid ,pkgfunctid ,servdescid ,servtimeid ,pservdescid ,rate FROM evt_packageservdesc  



union all  select '-2' as id ,'Deposit' as 'Category','0.00' as  Charges ,'0.00' as ServiceCharge ,'0.00' as 'SubTotal' ,'0.00' as 'StateTax','0.00' as 'MealTax','0.00' as 'Total'    union all  select '-3' as id ,'amtdue' as 'Category','0.00' as  Charges ,'0.00' as ServiceCharge ,'0.00' as 'SubTotal' ,'0.00' as 'StateTax','0.00' as 'MealTax','0.00' as 'Total' 


union all  select '-2' as id ,'Deposit' as 'Category',cast(COALESCE(sum(amtrecvd), 0) as decimal(10,2)) as  Charges ,'0.00' as ServiceCharge ,'0.00' as 'SubTotal' ,'0.00' as 'StateTax','0.00' as 'MealTax',cast(COALESCE(sum(amtrecvd), 0) as decimal(10,2)) as 'Total'  from depositt where EvtID='"+objBooking.evtid+"' union all  select '-3' as id ,'amtdue' as 'Category',cast(COALESCE(sum(amtdue), 0) as decimal(10,2)) as  Charges ,'0.00' as ServiceCharge ,'0.00' as 'SubTotal' ,'0.00' as 'StateTax','0.00' as 'MealTax',cast(COALESCE(sum(amtdue), 0) as decimal(10,2)) as 'Total'  from depositt where EvtID='"+objBooking.evtid+"'





var allcolumnquery="select COALESCE(max(servitems.headertypeid), 0)   as id ,cast(COALESCE(sum(servitemchrg*servitemqty), 0) as decimal(10,2)) as  Charges ,cast(sum(servitemchrg*servitemqty*taxmapdet.srvchgrate) as decimal(10,2)) as ServiceCharge ,cast(COALESCE( sum(servitemchrg*servitemqty*taxmapdet.discrate), 0) as decimal(10,2)) as 'Discount' ,cast(sum(servitemchrg*servitemqty*taxmapdet.other) as decimal(10,2)) as 'Other',0.00 as 'StateTax',0.00 as 'MealTax' from  servitems left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid join funct fn on fn.FunctID = servitems.FunctID where fn.evtid ='"+objBooking.evtid+"' and servitems.headertypeid="+$(this).attr('id')+"  and effdate=(select max(effdate) from taxmapdet)  group by servitems.headertypeid";



$('#bookingSummary').on('click',function()
{
//////console.log(objBooking.evtid)
if((objBooking.evtid=='') || (objBooking.evtid==null))
{
alert('Please Load Booking First');
return;
}


$('#lineModalLabel').html('Booking Charges');

var query1 ="select 'Sleeping Rooms' as Services, sum(functroomrentrevenue) as Charges from query_functionrevenue where bookingid ='"+objBooking.evtid+"' union all select  max(headerdesc) as Services,cast(sum(servitemchrg*servitemqty) as decimal(10,2)) as Charges from servitems left join funct fn on  fn.functid =servitems.functid left join  headertypes ht on servitems.headertypeid=ht.headertypeid left join roomrentsummary rr on fn.evtid = rr.evtid where fn.evtid ='"+objBooking.evtid+"' group by headerdesc union all select  'Total' as Services,cast(sum(servitemchrg*servitemqty) as decimal(10,2))+min(rr.rentsum) as Charges from servitems left join funct fn on  fn.functid =servitems.functid left join  headertypes ht on servitems.headertypeid=ht.headertypeid left join roomrentsummary rr on fn.evtid = rr.evtid where fn.evtid ='"+objBooking.evtid+"'  union all select 'Deposit' as Services ,case when sum(0) is null then 0 else sum(0) end as Charges  from dbo.depositt where evtid='"+objBooking.evtid+"' union all select 'Amount Due' as Services ,case when sum(0) is null then 0 else sum(0) end as Charges  from dbo.depositt where evtid='"+objBooking.evtid+"' ";


var query2 ="select cast(sum(0) as decimal(10,2))  as  'Discount',cast(sum(0) as decimal(10,2))  as ServiceCharge ,cast(sum(0) as decimal(10,2))  as 'StateTax',cast(sum(0) as decimal(10,2))  as 'Other',cast(sum(0) as decimal(10,2))  as 'MealTax'  union all select cast(sum(servitemchrg*discrate) as decimal(10,2))  as  'Discount',cast(sum(servitemchrg*taxmapdet.srvchgrate) as decimal(10,2))  as ServiceCharge ,0.00 as 'StateTax',0.00 as 'Other',0.00 as 'MealTax' from servitems left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid left join funct fn on  fn.functid =servitems.functid	where fn.evtid ='"+objBooking.evtid+"' group by headerdesc union all select cast(sum(servitemchrg*discrate) as decimal(10,2))  as  'Discount',cast(sum(servitemchrg*taxmapdet.srvchgrate) as decimal(10,2)) as ServiceCharge ,0.00 as 'StateTax',0.00 as 'Other',0.00 as 'MealTax' from servitems left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid join funct fn on  fn.functid =servitems.functid where fn.evtid ='"+objBooking.evtid+"'  union all select case when sum(discount.amount) is null then 0 else sum(discount.amount) end as Discount ,case when sum(0) is null then 0 else sum(0) end as  ServiceCharge,case when sum(0) is null then 0 else sum(0) end as ServDetQty,case when sum(0) is null then 0 else sum(0) end as StateTax ,case when sum(0) is null then 0 else sum(0) end as Other  from dbo.depositt join discount on depositt.evtid=discount.evtid where depositt.evtid='"+objBooking.evtid+"' ";
//////console.log(query1)//////console.log(query2)

var html1="";
var Total=0.00;
$.each(JSON.parse(CRUD(query1)), function( index, value ) {
html1+="<tr><td>"+value.Services+"</td><td>"+value.Charges+"</td></tr>"
})

var html2="";
$.each(JSON.parse(CRUD(query2)), function( index, value ) {
html2+="<tr><td>"+value.Discount+"</td><td>"+value.ServiceCharge+"</td><td>"+value.Other+"</td><td>"+value.StateTax+"</td><td>"+value.MealTax+"</td><td></td></tr>"
})


$('#tblFunctionSummery1 tbody').html(html1);
$('#tblFunctionSummery2 tbody').html(html2);

var sum=0;

$("#tblFunctionSummery2 tbody tr").each(function()
{

var index = $('tr', $(this).closest("table")).index(this)-1;

var tr1=$("#tblFunctionSummery1 tbody tr:eq("+index+")");

var a=parseFloat(tr1.children('td:eq(1)').html()) ,b=parseFloat($(this).children('td:eq(0)').html()) ,c=parseFloat($(this).children('td:eq(1)').html()) ,d=parseFloat($(this).children('td:eq(2)').html()) ,e=parseFloat($(this).children('td:eq(3)').html()),f=parseFloat($(this).children('td:eq(4)').html());

$(this).children('td:eq(5)').html(a+b+c+d+e+f);

sum+=parseFloat($(this).children('td:eq(5)').html());

})
$("#tblFunctionSummery2 tbody tr").last().children('td:eq(5)').html('');
$("#tblFunctionSummery2 tbody tr").last().children('td:eq(5)').html(sum/2);

var query="select max(ht.HeaderDesc) as 'Category',cast(COALESCE(sum(servitemchrg*servitemqty), 0) as decimal(10,2)) as  Charges ,cast(sum(servitemchrg*servitemqty*taxmapdet.srvchgrate) as decimal(10,2)) as StaffingCharge ,cast(sum(servitemchrg*servitemqty*(1+taxmapdet.srvchgrate)) as decimal(10,2)) as 'SubTotal' ,case when  max(taxmapdet.taxid)=1 then  cast(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) end  as 'StateTax',case when  max(taxmapdet.taxid)=7 then  cast(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) end  as 'MealTax',cast(sum(servitemchrg*servitemqty*(1+srvchgrate+taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) as 'Total'  from servitems left join  funct fn on fn.FunctID = servitems.FunctID  left join EVENT bkg on  fn.evtid =bkg.EvtID  left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid  where  effdate=(select max(effdate) from taxmapdet) and bkg.EvtID="+objBooking.evtid+" group by servitems.headertypeid  union all select 'Total' as 'Category',cast(COALESCE(sum(servitemchrg*servitemqty), 0) as decimal(10,2)) as  Charges ,cast(sum(servitemchrg*servitemqty*taxmapdet.srvchgrate) as decimal(10,2)) as ServiceCharge ,cast(sum(servitemchrg*servitemqty*(1+taxmapdet.srvchgrate)) as decimal(10,2)) as 'SubTotal' , case when  max(taxmapdet.taxid)=1 then  cast(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) end  as 'StateTax',case when  max(taxmapdet.taxid)=7 then  cast(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) end  as 'MealTax',cast(sum(servitemchrg*servitemqty*(1+srvchgrate+taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) as 'Total'     from servitems left join  funct fn on fn.FunctID = servitems.FunctID  left join EVENT bkg on  fn.evtid =bkg.EvtID  left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid  where  effdate=(select max(effdate) from taxmapdet) and bkg.EvtID="+objBooking.evtid+"";


//$('#tblFunctionSummery tbody').append(DynamicRows(query));

$('#FunctionSummaryModal').modal('show');

});


/////////////

<!--<script type="text/javascript" src="../Booking/assets/js/CustomDocument.js"></script> -->



case when  max(taxmapdet.taxid)=1 then  cast(COALESCE(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other))) as decimal(10,2)) end  as 'StateTax'

var query="select max(ht.HeaderDesc) as 'Category',cast(COALESCE(sum(servitemchrg*servitemqty), 0) as decimal(10,2)) as  Charges ,cast(sum(servitemchrg*servitemqty*taxmapdet.srvchgrate) as decimal(10,2)) as ServiceCharge ,cast(sum(servitemchrg*servitemqty*(1+taxmapdet.srvchgrate)) as decimal(10,2)) as 'SubTotal' ,cast(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) as 'Tax',cast(sum(servitemchrg*servitemqty*(1+srvchgrate+taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) as 'Total'  from servitems left join  funct fn on fn.FunctID = servitems.FunctID  left join EVENT bkg on  fn.evtid =bkg.EvtID  left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid  where  effdate=(select max(effdate) from taxmapdet) and bkg.EvtID='"+evtid+"' group by servitems.headertypeid  union all select max(ht.HeaderDesc) as 'Total',cast(COALESCE(sum(servitemchrg*servitemqty), 0) as decimal(10,2)) as  Charges ,cast(sum(servitemchrg*servitemqty*taxmapdet.srvchgrate) as decimal(10,2)) as ServiceCharge ,cast(sum(servitemchrg*servitemqty*(1+taxmapdet.srvchgrate)) as decimal(10,2)) as 'SubTotal' ,cast(sum(servitemchrg*servitemqty*(taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) as 'Tax',cast(sum(servitemchrg*servitemqty*(1+srvchgrate+taxmapdet.tax1rate+taxmapdet.tax2rate+taxmapdet.tax3rate+taxmapdet.tax4rate+taxmapdet.tax5rate+taxmapdet.other)) as decimal(10,2)) as 'Total'  from servitems left join  funct fn on fn.FunctID = servitems.FunctID  left join EVENT bkg on  fn.evtid =bkg.EvtID  left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid  where  effdate=(select max(effdate) from taxmapdet) and bkg.EvtID='"+evtid+"'";





TotalAmount
Room_Rental_Total
CC_Food_and_Beverage_Total
CC_Audio_Visual_Total
CC_Room_SetupRates_Total



BookingSalesPersonName,CustomerName,BookingContactFirstName,BookingContactLastName,BookingContactTitle,BookingContactCity,BookingContactPostCode,BookingContactState,,bookingcontactCellularPhone,BookingContactFaxPhone,BookingContactEmailAddress,


/////////

BookingSalesPersonName,CustomerName,BookingContactFirstName,BookingContactLastName,BookingContactTitle,BookingContactAddress1,BookingContactAddress2,BookingContactCity,BookingContactPostCode,BookingContactState,bookingcontactBusinessPhone,bookingcontactCellularPhone,BookingContactFaxPhone,BookingContactEmailAddress,BookingName

Billing Code:
Conference Total:
Catering Total:

//////////////
({&lt;MergeMark6&gt;})] 
//////////

PropertyName,PropertyAddress,PropertyPhone,PropertyFax

////////////	
Start Date Event Start  Event End  Room Name Event Type Setup Charge</h5>
({<MergeMark5>})]
Event Start Date	EventStart Time	EventEnd Time	EventType	Setup	Attendees
({<MergeMark5>})]
({<MergeMark6>})], - deposit 
Balance Due	 Upon Receipt				  ({<MergeMark7>})]
Est. Total Charges
Category	Charges	 Staffing Chrg	Sub Total	State Tax	Meal Tax	Total
({<MergeMark3>})]
Food & Beverage Charges:
Date	Function Name	Item Name	Charge
({<MergeMark31>})]
({<MergeMark2>})]
Deposits Paid:	$1,000.00
Total Amount Due:	
////////////////////

EVENT INFORMATION
Date	Item	Qty.	Charge	Total
({<MergeMark30>})]({<MergeMark31>})]





CustomerName,BookingContactFirstName,BookingContactLastName,CustomerAddress1,CustomerAddress2,CustomerCity,CustomerState,bookingstartdate,BookingEndDate,CustomerPhone,BookingContactFaxPhone,BookingSalesPersonName,bookingsalespersonlastname,BookingPaymentMethod,BookingSalesPersonTitle,BookingContactTitle,BookingContactCity,BookingContactState,BookingContactPostCode,bookingcontactCellularPhone,BookingContactEmailAddress,bookingcontractdue,BookingContactSalutation,CustomerPostCode




// $(".BookingEndDate").html(value.BookingEndDate);$(".Room_Rental_Total").html(value.Room_Rental_Total);$(".CC_Food_and_Beverage_Total").html(value.CC_Food_and_Beverage_Total);$(".CC_Audio_Visual_Total").html(value.CC_Audio_Visual_Total);$(".CC_Room_SetupRates_Total").html(value.CC_Room_SetupRates_Total);$(".DepositPaid").html(value.DepositPaid);$(".CustomerPhone").html(value.custphone);$(".BookingContactFaxPhone").html(value.contactfax);$(".BookingSalesPersonName").html(value.bookingsalespersonfirstname+value.bookingsalespersonlastname);$(".BookingNotes").html(value.bookingnotes);$(".BookingPaymentMethod").html(value.bookingpaymentmethodid);$(".BookingSalesPersonTitle").html(value.bookingsalespersontitle);$(".BookingContactTitle").html(value.contacttitle);$(".BookingContactCity").html(value.contactcity);$(".BookingContactState").html(value.contactstate);$(".BookingContactPostCode").html(value.contactpostalcode);$(".bookingcontactCellularPhone").html(value.contactphonenumber);$(".BookingContactEmailAddress").html(value.contactemailaddress);$(".bookingcontractdue").html(value.bookingcontractdue);$(".BookingContactSalutation").html(value.contactsalutation); $(".CustomerPostCode").html(value.custpostalcode);
//$(".BookingContactBusinessPhone").html(value.);$(".BookingContactAddress1").html(value.);$(".GrandTotal").html(value.);$(".PropertyName").html(value.);$(".PropertyAddress").html(value.);$(".BookingID").html(value.);$(".PropertyPhone").html(value.);$(".PropertyFax").html(value.);$(".BookingName").html(value.);$(".CustomerFederalID").html(value.);$(".GrandTotal").html(value.);$(".BookingContactAddress2").html(value.);


/////////////////


// CC_Food_and_Beverage_Total;CC_Audio_Visual_Total;CC_Room_SetupRates_Total

var query2="select max(bookingid) as bookingid,max(bookingname) as bookingname,max(bookingstatus) as Status, sum(case when c.HeaderTypeID=1 then ss.ServItemChrg else 0 end) as CC_Food_and_Beverage_Total ,sum(case when c.HeaderTypeID=1 then ss.ServItemCost else 0 end) as CC Food and BeverageCost ] , sum(case when c.HeaderTypeID=2 then ss.ServItemChrg else 0 end) as CC_Audio_Visual_Total ,sum(case when c.HeaderTypeID=2 then ss.ServItemCost else 0 end) as CC Audio VisualCost ] , sum(case when c.HeaderTypeID=3 then ss.ServItemChrg else 0 end) as HMS Campus Catering] ,sum(case when c.HeaderTypeID=3 then ss.ServItemCost else 0 end) as HMS Campus CateringCost ] , sum(case when c.HeaderTypeID=4 then ss.ServItemChrg else 0 end) as CC_Room_SetupRates_Total ,sum(case when c.HeaderTypeID=4 then ss.ServItemCost else 0 end) as CC Room Setup/RatesCost ] ,max(bookingstartdate) as BookingStart,max(bookingenddate) as BookingEnd,max(bookingsalespersonfirstname+bookingsalespersonlastname) as Salesperson,max(contactfirstname+contactlastname)   as BookingManager,max(custname) as CustomerName,max(bookingmarketsegment) as BookingMarket ,max(custmarketsegment) as CustomerMarket ,max(rentsum) as bookingrent,max(totalrevenue) as totalrevenue from query_bookingrevenue join roomrentsummary on query_bookingrevenue.bookingid=roomrentsummary.evtid left join funct fn on  query_bookingrevenue.bookingid =fn.EvtID  left join SERVITEMS ss on fn.FunctID = ss.FunctID left join HeaderTypes c on ss.HeaderTypeID=c.HeaderTypeID left join TSLTT on TSLTT.FunctID = fn.functid left join SFRDT on SFRDT.FrdID = TSLTT.FRID left join sections sc on SFRDT.sectionid=sc.sectionid where bookingid="+bookingID+" group by  ss.HeaderTypeID ";


$.each(JSON.parse(CRUD(query2)), function(key, value){

CC_Food_and_Beverage_Total=value.CC_Food_and_Beverage_Total;CC_Audio_Visual_Total=value.CC_Audio_Visual_Total;CC_Room_SetupRates_Total=value.CC_Room_SetupRates_Total;

// BookingContactLastName=value.HMS Campus Catering];
})

var Rentsum=JSON.parse(CRUD("select rentsum from  roomrentsummary where evtid="+bookingID+" "))0].rentsum;


////////////////////

if($('#CD_Documents option:selected').text()=="BCTotalInvoice")
{
$('p:contains("CustomerName")').html($('p:contains("CustomerName")').html().replace('CustomerName',''+CustomerName+''));
$('p:contains("BookingContactFirstName")').html($('p:contains("BookingContactFirstName")').html().replace('BookingContactFirstName',''+BookingContactFirstName+''));
$('p:contains("BookingContactLastName")').html($('p:contains("BookingContactLastName")').html().replace('BookingContactLastName',''+BookingContactLastName+''));
$('p:contains("CustomerAddress1")').html($('p:contains("CustomerAddress1")').html().replace('CustomerAddress1',''+CustomerAddress1+''));
$('p:contains("CustomerAddress2")').html($('p:contains("CustomerAddress2")').html().replace('CustomerAddress2',''+CustomerAddress2+''));
$('p:contains("CustomerCity")').html($('p:contains("CustomerCity")').html().replace('CustomerCity',''+CustomerCity+''));
$('p:contains("CustomerState")').html($('p:contains("CustomerState")').html().replace('CustomerState',''+CustomerState+''));
$('p:contains("CustomerPostCode")').html($('p:contains("CustomerPostCode")').html().replace('CustomerPostCode',''+CustomerPostCode+''));
$('p:contains("bookingstartdate")').html($('p:contains("bookingstartdate")').html().replace('bookingstartdate',''+bookingstartdate+''));
$('p:contains("BookingEndDate")').html($('p:contains("BookingEndDate")').html().replace('BookingEndDate',''+BookingEndDate+''));
$('p:contains("Room_Rental_Total")').html($('p:contains("Room_Rental_Total")').html().replace('Room_Rental_Total',''+parseFloat(Rentsum)+''));

$('#CC_Food_and_Beverage_Total').html(parseFloat(CC_Food_and_Beverage_Total));
$('#CC_Audio_Visual_Total').html(parseFloat(CC_Audio_Visual_Total));
$('#CC_Room_SetupRates_Total').html(parseFloat(CC_Room_SetupRates_Total));
$('#Total_Amount').html(parseFloat(CC_Food_and_Beverage_Total) +parseFloat(CC_Audio_Visual_Total) +parseFloat(CC_Room_SetupRates_Total));

contractfunctionSummary(bookingID,"fnsummary")

}


if($('#CD_Documents option:selected').text()=="BEO")
{

}



////////////////

// «Room_Rental_Total»
// «CC_Food_and_Beverage_Total»
// «CC_Audio_Visual_Total»
// «CC_Room_SetupRates_Total»
//////console.log(CC_Food_and_Beverage_Total)//////console.log(CC_Audio_Visual_Total)//////console.log(CC_Room_SetupRates_Total)//////console.log(Total_Amount)

// «Room_Rental_Total»
// «CC_Food_and_Beverage_Total»
// «CC_Audio_Visual_Total»
// «CC_Room_SetupRates_Total»
//////console.log(CC_Food_and_Beverage_Total)//////console.log(CC_Audio_Visual_Total)//////console.log(CC_Room_SetupRates_Total)//////console.log(Total_Amount)






$('p:contains("CustomerName")').html($('p:contains("CustomerName")').html().replace('CustomerName','kutta'));

/////////////


$.ajax({ cache: false,
url: '../common/Templates/'+selected+'.html',
async:false,
success: function (data) {

$('#DocumentContainer').html('');	
$('#DocumentContainer').html(data);	

$('table').css('width','100%');
$('thead tr td').css('border','1px solid');
$('thead tr td').css('border-collapse','collapse');
$('thead tr td').css('background','lightgray');

var row='';
var table2='';
var bookingID;
var CategoryName ;
///////// CustomerInfo //////////////

var customer="select distinct top 1 bkg.EvtID, bkg.EvtName,cst.CustName as CustomerName,cnt.FirstName+ cnt.LastName AS BookingContact ,cst.CustPhone,cst.CustAdd1+cst.CustAdd2 AS Address,cst.CustFax,cst.CustCity,cst.CustState, cnt.FirstName+cnt.LastName AS OnsiteContact ,cst.CustPostCode,slps.FirstName+slps.LastName as salesperson, slps.FirstName+slps.LastName as Manager from FUNCT fn left join EVENT bkg on bkg.EvtID = fn.evtid left join CUSTT cst on bkg.CustID=cst.CustID left join contacts cnt on cnt.ContactID=fn.onsitecontact left join SALPT slps on slps.SalesID=fn.spid where bkg.EvtID is not null ";

var CustomerInfo='';

$.each(JSON.parse(CRUD(customer)), function(key, value){

bookingID=value.EvtID;

CustomerInfo+="<tr><td colspan='4' width='391'><p><strong>Event Name:&nbsp; </strong>"+value.EvtName+"</p></td><td width='343'></td></tr><tr><td colspan='4' width='391'><p><strong>Customer Name:&nbsp; </strong>"+value.CustomerName+"</p></td><td width='343'><p><strong>Contact:&nbsp; "+value.BookingContact+"</strong></p></td>"+"</tr><tr><td colspan='2' width='223'><p><strong>Telephone:&nbsp; </strong>"+value.CustPhone+"</p></td><td colspan='2' width='168'><p><strong>Fax:&nbsp;"+value.CustFax+" </strong></p>"+"</td><td width='343'><p><strong>Telephone:&nbsp; </strong>"+value.CustPhone+"</p></td></tr><tr><td colspan='4' width='391'><p><strong>Address:&nbsp; </strong>"+value.Address+"&nbsp;&nbsp;</p></td></tr><tr><td width='157'><p><strong>City:</strong>"+value.CustCity+"</p></td><td colspan='2' width='105'><p><strong>State: </strong>"+value.CustState+"</p></td><td width='129'><p><strong>Zip: </strong>"+value.CustPostCode+"</p></td><td width='343'><p><strong>On Site Contact: </strong>"+value.OnsiteContact+"</p></td></tr>"+"<tr>"+"<td colspan='4' width='391'>"+"<p><strong>Salesperson: </strong>"+value.salesperson+"</p>"+"</td>"+"</tr>"+"<tr>"+"<td width='157'>&nbsp;</td>"+"<td width='66'>&nbsp;</td>"+"<td width='39'>&nbsp;</td>"+"<td width='129'>&nbsp;</td>"+"<td width='343'>&nbsp;</td>"+"</tr>";

$('#CustomerInfo tbody').html('');
$('#CustomerInfo tbody').append(CustomerInfo);

})


/////////// Function Detail ///////////////

var fndetails="select distinct top 5 *,fn.startdate as StartDate, StartTime, fn.FunctID as funID from FUNCT fn full join EVENT on fn.evtid = EVENT.EvtID full join SALPT on fn.SPID = SALPT.SalesID full join SYS_STATDESC on EVENT.EvtStatus = SYS_STATDESC.statusid full join  TSLTT on TSLTT.FunctID =fn.functid  full  join FUNCTNAMES functnames on functnames.ResID = TSLTT.frid full join contacts on contacts.ContactID = fn.OnSiteContact full join SERVDETSETUP on SERVDETSETUP.ServDetID = fn.SetupType  full join  SERVDET  on SERVDETSETUP.ServDetID=SERVDET.ServDetID  full join SERVITEMS on SERVDET.ServItemID=SERVITEMS.ServItemID full join HeaderTypes  on SERVITEMS.HeaderTypeID= HeaderTypes.HeaderTypeID   where EVENT.EvtID = "+bookingID+"  and EVENT .EvtStatus != '4' order by fn.FunctID desc";
//////console.log(fndetails)
var functiondetailrow='';

$.each(JSON.parse(CRUD(fndetails)), function(key, value){

functiondetailrow+='<tr><td width="97"><p><strong>Monday</strong></p><p><strong>'+value.startdate+'</strong></p></td>'+'<td width="150"><p><strong>'+value.endtime+'</strong></p></td>'+'<td width="114"><p><strong>'+value.EvtName+'</strong></p></td>'+'<td width="84"></td>'+'<td width="84"><p><strong>'+value.functexpnumppl+'</strong><strong>/'+value.functgtdnumppl+'</strong></p></td>'+'<td width="114"><p><strong>'+value.Room_Description+'</strong></p></td>'+'<td width="89"><p><strong>'+'100.00'+'</strong></p></td>'+'<td width="1"></td>'+'</tr>';

$('#FunctionDetails tbody').html('');
$('#FunctionDetails tbody').append(functiondetailrow);

})

var groupedData = _.groupBy(JSON.parse(CRUD(fndetails)), function(d){
CategoryName=d.HeaderDesc;
return d.HeaderDesc});

$.each(groupedData, function(key, value1) {


var FoodnBevearges='';

if(key=="Food and Beverage")
{

$.each(value1, function(key, value2) {

var date= value2.startdate;

FoodnBevearges+=
'<tr><td width="91"><p><strong>'+date+'</strong></p></td>'+'<td width="78"><p><strong>'+value2.ServTime+'-'+value2.ServEndTime+'</strong></p></td>'+'<td width="102"><p><strong>'+value2.HeaderDesc+'</strong></p></td>'+'<td width="294"><p><strong>'+value2.ServItemName+'</strong></p></td>'+'<td width="72"><p><strong>'+value2.ServItemQty+'</strong></p></td>'+'<td width="96"><p><strong>$'+value2.ServItemChrg+'</strong></p></td>'+'<td width="1"></td>'+'</tr>';

})

$('#BEO_Snacks_and_Social tbody').html('');
$('#BEO_Snacks_and_Social tbody').html(FoodnBevearges);

}


var BarServices='';

if(key=="Bar Services")
{

$.each(value1, function(key, value2) {

var date= value2.startdate;

BarServices+=
'<tr><td width="91"><p><strong>'+date+'</strong></p></td>'+'<td width="78"><p><strong>'+value2.ServTime+'-'+value2.ServEndTime+'</strong></p></td>'+'<td width="102"><p><strong>'+value2.HeaderDesc+'</strong></p></td>'+'<td width="294"><p><strong>'+value2.ServItemName+'</strong></p></td>'+'<td width="72"><p><strong>'+value2.ServItemQty+'</strong></p></td>'+'<td width="96"><p><strong>$'+value2.ServItemChrg+'</strong></p></td>'+'<td width="1"></td>'+'</tr>';
})

$('#BEO_Bar_Services tbody').html('');
$('#BEO_Bar_Services tbody').html(BarServices);


}

var AudioVisual='';

if(key=="Audio Visual")
{

$.each(value1, function(key, value2) {

var startdate=value2.startdate;

AudioVisual+='<tr><td width="91"><p><strong>'+startdate+'</strong></p></td>'+'<td width="78"><p><strong>'+value2.ServTime+'-'+value2.ServEndTime+'</strong></p></td>'+'<td width="102"><p><strong>'+value2.HeaderDesc+'</strong></p></td>'+'<td width="294"><p><strong>'+value2.ServItemName+'</strong></p></td>'+'<td width="72"><p><strong>'+value2.ServItemQty+'</strong></p></td>'+'<td width="96"><p><strong>$'+value2.ServItemChrg+'</strong></p></td>'+'<td width="1"></td></tr>';
})


$('#BEO_Audio_Visual tbody').html('');
$('#BEO_Audio_Visual tbody').html(AudioVisual);

}

var RoomSetup='';

if(key=="Room Setup")
{

$.each(value1, function(key, value2) {

var startdate= value2.startdate;

RoomSetup+=
'<tr><td width="91"><p><strong>'+startdate+'</strong></p></td>'+'<td width="78"><p><strong>'+value2.ServTime+'-'+value2.ServEndTime+'</strong></p></td>'+'<td width="102"><p><strong>'+value2.HeaderDesc+'</strong></p></td>'+'<td width="294"><p><strong>'+value2.ServItemName+'</strong></p></td>'+'<td width="72"><p><strong>'+value2.ServItemQty+'</strong></p></td>'+'<td width="96"><p><strong>$'+value2.ServItemChrg+'</strong></p></td>'+'<td width="1"></td>'+'</tr>';
})


$('#BEO_Room_Setup tbody').html('');
$('#BEO_Room_Setup tbody').html(RoomSetup);

}


var Miscellaneous='';

if(key=="Miscellaneous")
{

$.each(value1, function(key, value2) {

var startdate=value2.startdate;

Miscellaneous+=
'<tr><td width="91"><p><strong>'+startdate+'</strong></p></td>'+'<td width="78"><p><strong>'+value2.ServTime+'-'+value2.ServEndTime+'</strong></p></td>'+'<td width="102"><p><strong>'+value2.HeaderDesc+'</strong></p></td>'+'<td width="294"><p><strong>'+value2.ServItemName+'</strong></p></td>'+'<td width="72"><p><strong>'+value2.ServItemQty+'</strong></p></td>'+'<td width="96"><p><strong>$'+value2.ServItemChrg+'</strong></p></td>'+'<td width="1"></td></tr>';
})


$('#BEO_Miscellaneous tbody').html('');
$('#BEO_Miscellaneous tbody').html(Miscellaneous);

}

})


/////////// Summary ///////////////

var qrySummary="select distinct top 5  'Sleeping Rooms' as 'CategoryName' ,sum(RoomRate) as 'Charges','' as 'Discount' ,sum(RoomRate)*0.2  as 'SrvChrg'  ,sum(RoomRate)*1.2  as 'SubTot' ,sum(RoomRate)*(0.088)as 'Tax1',''  as 'Tax2',sum(RoomRate)*(1.288) as 'Total'  from SlpRooms  group by SRHdrID union all select distinct top 5  'RoomRental' as 'CategoryName' ,100 as 'Charges' ,'' as 'Discount' ,(100)*0.2 as 'SrvChrg'  ,(100)*(1.2) as 'SubTot' ,(100)*(0.088) as 'Tax1',''  as 'Tax2',sum(100)*(1.288)  as 'Total' from FUNCT fn join EVENT bkg on fn.evtid = bkg.EvtID  group by bkg.EvtID union all select distinct c.HeaderDesc,sum(ss.ServItemChrg) as 'Charges' ,'' as 'Discount' ,sum(ss.ServItemChrg)*0.2 as 'SrvChrg' ,sum(ss.ServItemChrg)*(1.2) as 'SubTot' ,sum(ss.ServItemChrg)*(0.088) as 'Tax1',''  as 'Tax2',sum(ss.ServItemChrg)*(1.288)  as 'Total' from SERVITEMS ss full join HeaderTypes c on ss.HeaderTypeID=c.HeaderTypeID join FUNCT fn on ss.FunctID=fn.FunctID join EVENT bkg on fn.evtid = bkg.EvtID  where bkg.EvtID = "+bookingID+" group by c.HeaderDesc ";

var GrandTotal='';
var Summary='';

$.each(JSON.parse(CRUD(qrySummary)), function(key, value2) {

Summary+=
'<tr><td width="91"><p><strong>'+value2.CategoryName+'</strong></p></td>'+'<td width="78"><p><strong>'+value2.Charges+'</strong></p></td>'+'<td width="102"><p><strong>'+value2.SrvChrg+'</strong></p></td>'+'<td width="294"><p><strong>'+value2.SubTot+'</strong></p></td>'+'<td width="72"><p><strong>'+value2.Tax1+'</strong></p></td>'+'<td width="96"><p><strong>$'+value2.Tax2+'</strong></p></td>'+'<td width="96"><p><strong>$'+value2.Total+'</strong></p></td>'+'</tr>';

GrandTotal=value2.Total;
})

$('#BEO_summary tbody').html('');
$('#BEO_summary tbody').html(Summary);


/////////// Deposit ///////////////
var querydeposit="select top 5 CASE  WHEN (dp.Amtdue-dp.Amtrecvd)>0  THEN 'Deposit Due'  ELSE 'Deposit Paid' END AS 'Description',dp.Amtdue,dp.Duedate,dp.Amtrecvd,dp.Datercvd ,(dp.Amtdue-dp.Amtrecvd) as 'Balance' from DEPOSITT dp join EVENT  bkg on dp.EvtID = bkg.EvtID where bkg.evtid = "+bookingID+" group by bkg.EvtID ,dp.Amtdue,dp.Duedate,dp.Amtrecvd,dp.Datercvd ";

var Deposit='';

var LessDeposit='';

$.each(JSON.parse(CRUD(querydeposit)), function(key, value2) {
var Duedate= value2.Duedate;
var Datercvd= value2.Datercvd;

Deposit+=
'<tr><td width="91"><p><strong>'+value2.Description+'</strong></p></td>'+'<td width="78"><p><strong>'+value2.Amtdue+'</strong></p></td>'+'<td width="102"><p><strong>'+Duedate+'</strong></p></td>'+'<td width="294"><p><strong>'+value2.Amtrecvd+'</strong></p></td>'+'<td width="72"><p><strong>'+Datercvd+'</strong></p></td>'+'<td width="96"><p><strong>$'+value2.Balance+'</strong></p></td>'+'</tr>';

LessDeposit+=value2.Amtrecvd;

})

$('#BEO_Deposits tbody').html('');
$('#BEO_Deposits tbody').html(Deposit);

$('#LessDeposit').html('');
$('#LessDeposit').html(LessDeposit);

var AmtDue=GrandTotal-LessDeposit;

$('#AmountDue').html('');
$('#AmountDue').html(AmtDue);

/////////// BEO_HOTEL_ROOMS ///////////////

var hotelrooms="select 	top 5 rbe.SRDate, rt.RoomType, rbe.Adult, rbe.RoomRate, rbe.SRBlckd  from SlpRooms rbe join RoomTypes rt on rbe.SRTypeID=rt.RoomtypeID where SRHdrID ="+bookingID+" ";

var BEO_HOTEL_ROOMS='';

$.each(JSON.parse(CRUD(hotelrooms)), function(key, value2) {

var date= value2.startdate;

BEO_HOTEL_ROOMS+='<tr><td width="91"><p>'+date+'</p></td><td width="78"><p>'+value2.RoomType+'</p></td><td width="102"><p>'+value2.Adult+'</p></td><td width="294"><p>'+value2.RoomRate+'</p></td><td width="72"><p>'+value2.SRBlckd+'</p></td></tr>';

})

$('#BEO_HOTEL_ROOMS tbody').html('');
$('#BEO_HOTEL_ROOMS tbody').html(BEO_HOTEL_ROOMS);

word($('#DocumentContainer').html());

},
error:function (xhr, ajaxOptions, thrownError){
if(xhr.status==404) {
alert('document not found');
return;
}
}
});



///////////////



C:\Inetpub\vhosts\esp.systems\httpdocs\esp-project\common\images\harvard\contractLogo.jpg


// var row="<th><td>Services</td><td>ServiceCharges</td><td>Discount</td><td>SrvcChrg</td><td>Other</td><td>StateTax</td><td>MealTax</td></th>";

// $.each(JSON.parse(CRUD(query)), function( index, value ) {
// row+="<tr headertypeid="+value.headertypeid+"><td>"+value.Services+"</td><td>"+value.ServiceCharges+"</td><td>"+value.Discount+"</td><td>"+value.SrvcChrg+"</td><td>"+value.Other+"</td><td>"+value.StateTax+"</td><td>"+value.MealTax+"</td></tr>"
// })

var query1 ="select 'RoomRent' as Services, functroomrentrevenue as Charges from query_functionrevenue where FunctID ='"+fnid+"' union all select  max(headerdesc) as Services,cast(sum(servitemchrg*servitemqty) as decimal(10,2)) as Charges from servitems left join funct fn on  fn.functid =servitems.functid left join  headertypes ht on servitems.headertypeid=ht.headertypeid left join roomrentsummary rr on fn.evtid = rr.evtid where servitems.functid ='"+fnid+"' group by headerdesc union all select  'Total' as Services,cast(sum(servitemchrg*servitemqty) as decimal(10,2))+min(rr.rentsum) as Charges from servitems left join funct fn on  fn.functid =servitems.functid left join  headertypes ht on servitems.headertypeid=ht.headertypeid left join roomrentsummary rr on fn.evtid = rr.evtid where servitems.functid  ='"+fnid+"' ";


var query2 ="select cast(sum(0) as decimal(10,2))  as  'Discount',cast(sum(0) as decimal(10,2))  as ServiceCharge ,cast(sum(0) as decimal(10,2))  as 'StateTax',cast(sum(0) as decimal(10,2))  as 'Other',cast(sum(0) as decimal(10,2))  as 'MealTax'  union all select cast(sum(servitemchrg*discrate) as decimal(10,2))  as  'Discount',cast(sum(servitemchrg*taxmapdet.srvchgrate) as decimal(10,2))  as ServiceCharge ,0.00 as 'StateTax',0.00 as 'Other',0.00 as 'MealTax' from servitems left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid	where FunctID ='"+fnid+"'  group by headerdesc union all select cast(sum(servitemchrg*discrate) as decimal(10,2))  as  'Discount',cast(sum(servitemchrg*taxmapdet.srvchgrate) as decimal(10,2)) as ServiceCharge ,0.00 as 'StateTax',0.00 as 'Other',0.00 as 'MealTax' from servitems left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid where FunctID ='"+fnid+"'";
//////console.log(query1);//////console.log(query2);

var html1="";
var Total=0.00;
$.each(JSON.parse(CRUD(query1)), function( index, value ) {
html1+="<tr><td>"+value.Services+"</td><td>"+value.Charges+"</td></tr>"
})

var html2="";
$.each(JSON.parse(CRUD(query2)), function( index, value ) {
html2+="<tr><td>"+value.Discount+"</td><td>"+value.ServiceCharge+"</td><td>"+value.Other+"</td><td>"+value.StateTax+"</td><td>"+value.MealTax+"</td><td></td></tr>"
})

//$('#tblFunctionSummery1 tbody').html(html1);
//$('#tblFunctionSummery2 tbody').html(html2);

var sum=0;

$("#tblFunctionSummery2 tbody tr").each(function()
{

var index = $('tr', $(this).closest("table")).index(this)-1;

var tr1=$("#tblFunctionSummery1 tbody tr:eq("+index+")");

var a=parseFloat(tr1.children('td:eq(1)').html()) ,b=parseFloat($(this).children('td:eq(0)').html()) ,c=parseFloat($(this).children('td:eq(1)').html()) ,d=parseFloat($(this).children('td:eq(2)').html()) ,e=parseFloat($(this).children('td:eq(3)').html()),f=parseFloat($(this).children('td:eq(4)').html());

$(this).children('td:eq(5)').html(a+b+c+d+e+f);

sum+=parseFloat($(this).children('td:eq(5)').html());

})

$("#tblFunctionSummery2 tbody tr").last().children('td:eq(5)').html('');
$("#tblFunctionSummery2 tbody tr").last().children('td:eq(5)').html(sum/2);


//////////

//////console.log(otherchrgequery)
$.each(JSON.parse(CRUD(otherchrgequery)), function(key, value){
$("#tblFunctionSummery tbody trid="+value.id+"]").children('td:eq(4)').html(value.Other)
});




var query="select COALESCE(max(servitems.headertypeid), 0)   as id ,cast(COALESCE( sum(servitemchrg*servitemqty), 0) as decimal(10,2)) as Charges from servitems  full join  headertypes ht on servitems.headertypeid=ht.headertypeid where servitems.functid ='"+fnid+"' and servitems.headertypeid="+$(this).attr('id')+" ";

$.each(JSON.parse(CRUD(query)), function(key, value){$("#tblFunctionSummery tbody trid="+value.id+"]").children('td:eq(1)').html(value.Charges)});

var discountquery="select COALESCE(max(servitems.headertypeid), 0) as id ,cast(COALESCE( sum(amount), 0) as decimal(10,2)) as Discount from servitems  join  headertypes ht on servitems.headertypeid=ht.headertypeid  join  discount  on servitems.functid=discount.functid where servitems.functid ='"+fnid+"' and servitems.headertypeid="+$(this).attr('id')+" ";

$.each(JSON.parse(CRUD(discountquery)), function(key, value){$("#tblFunctionSummery tbody trid="+value.id+"]").children('td:eq(1)').html(value.Charges)});

var otherchrgequery="select COALESCE(max(servitems.headertypeid), 0) as id ,COALESCE(sum(servdetchrg), 0)  as Other from servdet join servitems on servitems.servitemid=servdet.servitemid  where  servitems.functid ='"+fnid+"' and servitems.headertypeid="+$(this).attr('id')+" ";


var allcolumnquery_old="select COALESCE(max(servitems.headertypeid), 0)   as id ,cast(sum(servitemchrg*servitemqty*taxmapdet.srvchgrate) as decimal(10,2)) as ServiceCharge ,0.00 as 'StateTax',0.00 as 'MealTax' from servitems left join headertypes ht on servitems.headertypeid=ht.headertypeid  join taxmapdet on servitems.taxid=taxmapdet.taxid  where servitems.FunctID ='"+fnid+"' and servitems.headertypeid="+$(this).attr('id')+" and effdate=(select max(effdate) from taxmapdet) ";


//////////

var row='';
$.each(jsonData, function(key, value){row+='<tr">';$.each(value, function(key1, value1){row=row+'<td>'+value1+'</td>';});row+='</tr>';});
$('#tblFunctionSummery tbody').html(row);


<div class="col-lg-4 col-md-4 col-sm-4 no-padding">
<div>
<table class="table table-bordered billingtable" border=1 id="tblFunctionSummery1">
<thead><tr><th>Service</th><th>Charges($)</th></tr></thead><tbody></tbody></table>
</div>
</div>
<div class="col-lg-8 col-md-8 col-sm-8 no-padding">
<div>
<table class="table table-bordered billingtable" border=1 id="tblFunctionSummery2">
<thead>
<tr>

<th>Discount($)</th>
<th>Srvc Chrg($)</th>
<th>Other</th>
<th>State Tax($)</th>
<th>Meal Tax</th>
<th>Sub Total($)</th>
</tr>
</thead>

<tbody>

</tbody>

</table>
</div>
</div>



/////////////
SELECT     dbo.query_bookingallstat.bookingid, dbo.query_bookingallstat.bookingcustomerid, dbo.query_bookingallstat.bookingcontactid, dbo.query_bookingallstat.pmsnumber, 
dbo.query_bookingallstat.bookingsalespersonid, dbo.query_bookingallstat.bookingname, dbo.query_bookingallstat.bookingstartdate, dbo.query_bookingallstat.bookingstartmonth, 
dbo.query_bookingallstat.bookingstartyear, dbo.query_bookingallstat.bookingenddate, dbo.query_bookingallstat.bookingendmonth, dbo.query_bookingallstat.bookingendyear, 
dbo.query_bookingallstat.bookingstatusid, dbo.query_bookingallstat.bookingconfirmdate, dbo.query_bookingallstat.bookingconfmonth, dbo.query_bookingallstat.bookingconfyear, 
dbo.query_bookingallstat.bookingpaymentmethodid, dbo.query_bookingallstat.bookingfrequencyid, dbo.query_bookingallstat.bookingreferralsourceid, dbo.query_bookingallstat.bookingmarketid, 
dbo.query_bookingallstat.bookingpostas, dbo.query_bookingallstat.bookingloudgroup, dbo.query_bookingallstat.bookingdonotpost, dbo.query_bookingallstat.bookingmanager, 
dbo.query_bookingallstat.bookingdefaultcateringcontactid, dbo.query_bookingallstat.bookingcontractsent, dbo.query_bookingallstat.bookingcontsentmonth, 
dbo.query_bookingallstat.bookingcontsentyear, dbo.query_bookingallstat.bookingcontractreceived, dbo.query_bookingallstat.bookingcontrcvdmonth, dbo.query_bookingallstat.bookingcontrcvdyear, 
dbo.query_bookingallstat.bookingcontractdue, dbo.query_bookingallstat.bookingcontduemonth, dbo.query_bookingallstat.bookingcontdueyear, dbo.query_bookingallstat.billingcustomerid, 
dbo.query_bookingallstat.bookingprofitibilityoverridden, dbo.query_bookingallstat.bookingtaxexempt, dbo.query_bookingallstat.bookingstatus, dbo.query_bookingallstat.userdefevent_id, 
dbo.query_bookingallstat.bookingsalespersongroupid, dbo.query_bookingallstat.bookingsalespersonfirstname, dbo.query_bookingallstat.bookingsalespersonlastname, 
dbo.query_bookingallstat.bookingsalespersonaddr1, dbo.query_bookingallstat.bookingsalespersonaddr2, dbo.query_bookingallstat.bookingsalespersoncity, 
dbo.query_bookingallstat.bookingsalespersonstate, dbo.query_bookingallstat.bookingsalespersonpostcode, dbo.query_bookingallstat.bookingsalespersonphone, 
dbo.query_bookingallstat.bookingsalespersonfax, dbo.query_bookingallstat.bookingsalespersioncountryid, dbo.query_bookingallstat.bookingsalespersonreachatlocation, 
dbo.query_bookingallstat.bookingsalespersonreachataddr1, dbo.query_bookingallstat.bookingsalespersonreachataddr2, dbo.query_bookingallstat.bookingsalespersonreachatcity, 
dbo.query_bookingallstat.bookingsalespersonreachatstate, dbo.query_bookingallstat.bookingsalespersonreachatpostcode, dbo.query_bookingallstat.bookingsalespersonreachatphone, 
dbo.query_bookingallstat.bookingsalespersonreachatfax, dbo.query_bookingallstat.bookingsalespersonreachatcountryid, dbo.query_bookingallstat.bookingsalespersontitle, 
dbo.query_bookingallstat.bookingsalespersonactive, dbo.query_bookingallstat.bookingsalespersonemail, dbo.query_bookingallstat.bookingsalespersonpartnerid, 
dbo.query_bookingallstat.bookingmarketsegment, dbo.query_bookingallstat.bookingmarketnotes, dbo.query_bookingallstat.bookingmarketdefaultindicator, 
dbo.query_bookingallstat.bookingmarketconsolidationcode, dbo.query_bookingallstat.bookingbookeddate, dbo.query_bookingallstat.bookingbookedmonth, 
dbo.query_bookingallstat.bookingbookedyear, dbo.query_bookingallstat.arrivaldate, dbo.query_bookingallstat.arrivalmonth, dbo.query_bookingallstat.arrivalyear, 
dbo.query_bookingallstat.departuredate, dbo.query_bookingallstat.departuremonth, dbo.query_bookingallstat.departureyear, dbo.query_bookingallstat.roomblockcutoffdate, 
dbo.query_bookingallstat.pmsactualroomnights, dbo.query_bookingallstat.pmsactualadults, dbo.query_bookingallstat.pmsactualrevenue, dbo.query_bookingallstat.contactid, 
dbo.query_bookingallstat.contactcustomerid, dbo.query_bookingallstat.contactfirstname, dbo.query_bookingallstat.contactlastname, dbo.query_bookingallstat.contactlastnamesoundslike, 
dbo.query_bookingallstat.contactsalutation, dbo.query_bookingallstat.contacttitle, dbo.query_bookingallstat.contactaddressline1, dbo.query_bookingallstat.contactaddressline2, 
dbo.query_bookingallstat.contactcity, dbo.query_bookingallstat.contactstate, dbo.query_bookingallstat.contactpostalcode, dbo.query_bookingallstat.contactcountryid, 
dbo.query_bookingallstat.contactemailaddress, dbo.query_bookingallstat.contacttypeid, dbo.query_bookingallstat.contactactive, dbo.query_bookingallstat.userdefcont_id, 
dbo.query_bookingallstat.contactcountry, dbo.query_bookingallstat.contacttype, dbo.query_bookingallstat.contactphonenumber, dbo.query_bookingallstat.contactfax, 
dbo.query_bookingallstat.custslsprsnid, dbo.query_bookingallstat.custid, dbo.query_bookingallstat.custsearchid, dbo.query_bookingallstat.custname, dbo.query_bookingallstat.custphone, 
dbo.query_bookingallstat.custaddressline1, dbo.query_bookingallstat.custaddressline2, dbo.query_bookingallstat.custcity, dbo.query_bookingallstat.custstate, 
dbo.query_bookingallstat.custpostalcode, dbo.query_bookingallstat.custcountryid, dbo.query_bookingallstat.custbilladdressline1, dbo.query_bookingallstat.custbilladdressline2, 
dbo.query_bookingallstat.custbillcity, dbo.query_bookingallstat.custbillstate, dbo.query_bookingallstat.custbillpostalcode, dbo.query_bookingallstat.custbillcountryid, 
dbo.query_bookingallstat.custfederalid, dbo.query_bookingallstat.custtaxexempt, dbo.query_bookingallstat.custpaymentmethodid, dbo.query_bookingallstat.custmarketsegmentid, 
dbo.query_bookingallstat.custreferralsourceid, dbo.query_bookingallstat.custfax, dbo.query_bookingallstat.custactive, dbo.query_bookingallstat.custgroupid, dbo.query_bookingallstat.custisagency,
dbo.query_bookingallstat.custdateentered, dbo.query_bookingallstat.userdefcust_id, dbo.query_bookingallstat.custslsprsngroupid, dbo.query_bookingallstat.custslsprsnfirstname, 
dbo.query_bookingallstat.custslsprsnlastname, dbo.query_bookingallstat.custslsprsnaddr1, dbo.query_bookingallstat.custslsprsnaddr2, dbo.query_bookingallstat.custslsprsncity, 
dbo.query_bookingallstat.custslsprsnstate, dbo.query_bookingallstat.custslsprsnpostalcode, dbo.query_bookingallstat.custslsprsnphone, dbo.query_bookingallstat.custslsprsnfax, 
dbo.query_bookingallstat.custslsprsncntryid, dbo.query_bookingallstat.custslsprsnreachatlocation, dbo.query_bookingallstat.custslsprsnreachataddr1, 
dbo.query_bookingallstat.custslsprsnreachataddr2, dbo.query_bookingallstat.custslsprsnreachatcity, dbo.query_bookingallstat.custslsprsnreachatstate, 
dbo.query_bookingallstat.custslsprsnreachatpostalcode, dbo.query_bookingallstat.custslsprsnreachatphone, dbo.query_bookingallstat.custslsprsnreachatfax, 
dbo.query_bookingallstat.custslsprsnreachatcntryid, dbo.query_bookingallstat.custslsprsntitle, dbo.query_bookingallstat.custslsprsnactive, dbo.query_bookingallstat.custslsprsnbookingpartnerid, 
dbo.query_bookingallstat.custslsprsnemail, dbo.query_bookingallstat.custcountry, dbo.query_bookingallstat.custbillcountry, dbo.query_bookingallstat.custmarketsegment, 
dbo.query_bookingallstat.custmarketnotes, dbo.query_bookingallstat.custconsolidationcode, dbo.query_bookingallstat.custreferralsource, dbo.query_bookingallstat.custpaymentmethod, 
dbo.query_bookingallstat.custgroup, dbo.query_bookingallstat.custslsprsngroup, dbo.query_bookingallstat.custslsprsncntry, dbo.query_bookingallstat.custslsprsnreachatcntry, 
dbo.query_bookingallstat.custslsprsnpartnergroupid, dbo.query_bookingallstat.custslsprsnpartnerfirstname, dbo.query_bookingallstat.custslsprsnpartnerlastname, 
dbo.query_bookingallstat.custslsprsnpartneraddr1, dbo.query_bookingallstat.custslsprsnpartneraddr2, dbo.query_bookingallstat.custslsprsnpartnercity, 
dbo.query_bookingallstat.custslsprsnpartnerstate, dbo.query_bookingallstat.custslsprsnpartnerpostalcode, dbo.query_bookingallstat.custslsprsnpartnerphone, 
dbo.query_bookingallstat.custslsprsnpartnerfax, dbo.query_bookingallstat.custslsprsnpartnercntryid, dbo.query_bookingallstat.custslsprsnpartnerreachatlocation, 
dbo.query_bookingallstat.custslsprsnpartnerreachataddr1, dbo.query_bookingallstat.custslsprsnpartnerreachataddr2, dbo.query_bookingallstat.custslsprsnpartnerreachatcity, 
dbo.query_bookingallstat.custslsprsnpartnerreachatstate, dbo.query_bookingallstat.custslsprsnpartnerreachatpostalcode, dbo.query_bookingallstat.custslsprsnpartnerreachatphone, 
dbo.query_bookingallstat.custslsprsnpartnerreachatfax, dbo.query_bookingallstat.custslsprsnpartnerreachatcntryid, dbo.query_bookingallstat.custslsprsnpartnertitle, 
dbo.query_bookingallstat.custslsprsnpartneractive, dbo.query_bookingallstat.custslsprsnpartneremail, dbo.query_bookingallstat.custslsprsnpartnercntry, 
dbo.query_bookingallstat.custslsprsnpartnerreachatcntry, dbo.query_bookingallstat.customernotes, dbo.query_bookingallstat.bookingnotes, dbo.query_bookingallstat.mattercode, 
dbo.query_bookingallstat.mattername, dbo.query_bookingallstat.clientcode, dbo.query_bookingallstat.clientname, dbo.query_bookrev.booking_revenue AS totalrevenue
FROM         dbo.query_bookingallstat LEFT OUTER JOIN
dbo.query_bookrev ON dbo.query_bookingallstat.bookingid = dbo.query_bookrev.evtid
WHERE     (dbo.query_bookingallstat.bookingstatusid < 4)


//////////////////////


var query1="select functid,servicetime,serviceendtime ,max(serviceitemname) as item ,max(itemquantity) as Qty,cast(sum(itemtot) as decimal(10,2))  as price from  query_services where functid="+value.functid+" group by servicetime,serviceendtime order by servicetime,serviceendtime ";

var jsonData1=JSON.parse(CRUD(query1));

row3='<tr>';
$.each(jsonData10], function(key, value){row3=row3+'<th><center>'+key+'</center></th>';});
row3=row3+'</tr>';

$.each(jsonData1, function(key, value){
row4=row4+'<tr class="item-row">';
$.each(value, function(key1, value1){row4=row4+'<td ><center>'+value1+'</center></td>';});
row4=row4+'</tr>';
})

row2+=row3+row4;



///////////////


FunctionDistribution(jsonData)
{

var row='';
var table2='';

var EvtID='';

var groupedData = _.groupBy(jsonData, function(d){
EvtID=d.EvtID;
return d.EvtID});

var row2='';

var result = _.chain(jsonData)
.groupBy('EvtID')
.mapObject( EvtID => _.groupBy(EvtID, 'functid'))
.value();

$.each(result, function(key31, value32) {

$.each(value32, function(key41, value42) {

row+='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white"><p></p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"></p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white"></p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"></p></td><td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white"></p></td></tr><tr><td colspan=2 style="font-size:14px;border:1px solid black;"></p></td></tr>';


$.each(value42, function(key4, value) {

var Booking_Start= value.Booking_Start;
var StartTime= value.starttime;
var EndTime=value.endtime;

row+='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white"><p>bookingName : '+value.EvtName+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white">postAs :'+value.PostAs+'</p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">BookingId :'+value.EvtID+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white">Start Date :'+value.Booking_Start+'</p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">FunctionName :'+value.FunctionName+'</p></td><td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">Status :'+value.EvtStatus+'</p></td></tr><tr><td colspan=2 style="font-size:14px;border:1px solid black;">functionid :'+value.functionId+'</p></td></tr>';


///////////////Customer Detail /////////

row+='<tr><td colspan=2 style="font-size:14px;border:1px solid black;border-bottom-color: white;">Customer Name :'+value.Customer+'</p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">Phone :'+value.CustPhone+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white">Fax :'+value.Fax+'</p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">ContactPerson Name :'+value.ContactName+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white">ContactPerson Phone :'+value.ContactPhone+'</p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">OnSiteContact :'+value.OnSiteContact+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white">StartTime :'+value.StartTime+'</p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">EndTime :'+value.EndTime+'</p></td><td style="font-size:14px;border:1px solid black;border-bottom-color: white">Gaurenteed People :'+value.Gaurenteed+'</p></td></tr><tr><td style="font-size:14px;border:1px solid black;border-right-color:white">Exp People :'+value.expr+'</p></td><td style="font-size:14px;border:1px solid black;">Function Room :'+value.functionroom+'</p></td></tr>';
///////////////Customer Detail /////////


///////////////Function's Services /////////

var FunctionName=value.FunctionName;

var ServiceData = _.groupBy(groupedData, function(d){return d.FunctionName});

row+='<tr><td style="font-size:14px;border:1px solid black;margin-top:3em;"><center>'+FunctionName+'</center></td></tr>';

var query="select servicetime,serviceendtime ,max(serviceitemname) as item ,max(itemquantity) as Qty,cast(sum(itemtot) as decimal(10,2))  as price from  query_services where functid="+value.functionId+" group by servicetime,serviceendtime order by servicetime,serviceendtime ";//////;
var jsonData1=JSON.parse(CRUD(query));


var row3='<tr>';
var row4='';

$.each(jsonData10], function(key, value){

row3=row3+'<th style="font-size:'+objReportsInterface.fontSize+'px;"><center>'+key.replace(/_/g, '<br>')+'</center></th>';

});

row3=row3+'</tr>';

$.each(jsonData1, function(key, value){

row4=row4+'<tr class="item-row" style="font-size:'+objReportsInterface.fontSize+'px;">';
$.each(value, function(key1, value1){

row4=row4+'<td style="font-size:'+objReportsInterface.fontSize+'px;"><center>'+value1+'</center></td>';

});

row4=row4+'</tr>';
});

row+=row3+row4;
row+='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;"> </td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-Top-color:white;border-right-color:white;"></td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-Top-color:white;border-right-color:white;"></td><td style="font-size:14px;border:1px solid black;border-Top-color:white;"></td></tr>';

///////////////Function's Services End/////////

})

})

})

$(".pdfouter .tblitems tbody").append(row);
$('#html_hdn').val($(".pdfouter").html())
word($('#html_hdn').val());

}



//////////////////////

select distinct top 100 fn.startdate, bkg.EvtName,bkg.PostAs,bkg.EvtID,fn.evtid,bkg.EvtStart as Booking_Start,sts.statustype as status,fn.FunctName as FunctionName,bkg.EvtStatus,fn.FunctID as functionId,cst.CustName as Customer,cst.CustPhone as CustPhone,cst.CustFax as Fax,cst.CustAdd1 AS Address1 ,cnt.FirstName+cnt.LastName AS ContactName ,cst.CustPhone as ContactPhone,cnt.FirstName+cnt.LastName AS OnSiteContact ,fn.starttime AS StartTime , fn.endtime AS EndTime ,fn.functgtdnumppl as Gaurenteed,fn.functexpnumppl as Expr,SFRDT.frname,c.HeaderDesc,st.ServTime,ss.ServItemName as Item,ss.ServItemQty as Quantity,ss.ServItemChrg as price,sd.ServDescID,SFRDT.FRName as functionroom from FUNCT fn left join  EVENT bkg on  fn.evtid =bkg.EvtID  left join  CUSTT cst on bkg.CustID=cst.CustID left join  contacts cnt on cnt.ContactID=fn.onsitecontact left join  FUNCTNAMES fName on fn.FunctName=fName.ResDesc left  join  SALPT slps on fn.SPID=slps.SalesID left join  SERVITEMS ss on fn.FunctID = ss.FunctID left  join  SlpRooms rmblk on fn.evtid=rmblk.SRHdrID  left join  SERVTIME st on fn.FunctID = st.FunctID left  join  TSLTT on TSLTT.FunctID = fn.functid left join  SFRDT on SFRDT.FrdID = TSLTT.FRID  join  SYS_STATDESC sts on sts.statusid=bkg.EvtStatus left join  SERVDESC sd on st.ServDescID =sd.ServDescID  join  HeaderTypes c on ss.HeaderTypeID=c.HeaderTypeID  join sections sc on SFRDT.sectionid=sc.sectionid where fn.startdate  between '"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"' "+ServiceHeadersquery + sectionsquery + statusquery + ServiceDescriptionquery 



/////////////

bookingName ,BookingId,,FunctionName,	Status, ,Customer Name ,Phone ,	Fax ,ContactPerson Name ,ContactPerson Phone ,OnSiteContact ,StartTime,EndTime ,Gaurenteed People ,Exp People ,FunctionRoom 


functid ,bookingid bookingname  functname bookingstartdate bookingstatus  custname	custphone contactfax contactfirstname+contactlastname contactphonenumber  servicetime	serviceendtime functguaranteedpeople functexpectedpeople functoneroomname	functactualpeople functsetuptypeid	functinitialcontactdate	functinitmonth	functinityear	functcontactdate	functcontactmonth	functcontactyear	functconfirmeddate	functconfmonth	functconfyear	functstatusid	functdate	functstartmonth	functstartyear	functstarttime	functendtime	functrentaltypeid	functcontractsent	functcontsentmonth	functcontsentyear	functcontractreceived	functcontrcvdmonth	functcontrcvdyear	functsetuptime	functknockdowntime	functsetfornumberofpeople	functactualized	functunmovable	functpostas	userdeffunct_id	functroomsetuptype	functstatus	functrentaltype	ofrfunctid		sectionid	functoneroomsection		bookingcustomerid	bookingcontactid	pmsnumber	bookingsalespersonid			bookingstartmonth	bookingstartyear	bookingenddate	bookingendmonth	bookingendyear	bookingstatusid	bookingconfirmdate	bookingconfmonth	bookingconfyear	bookingpaymentmethodid	bookingfrequencyid	bookingreferralsourceid	bookingmarketid	bookingpostas	bookingloudgroup	bookingdonotpost	bookingmanager	bookingdefaultcateringcontactid	bookingcontractsent	bookingcontsentmonth	bookingcontsentyear	bookingcontractreceived	bookingcontrcvdmonth	bookingcontrcvdyear	bookingcontractdue	bookingcontduemonth	bookingcontdueyear	billingcustomerid	bookingprofitibilityoverridden	bookingtaxexempt		userdefevent_id	bookingsalespersongroupid	bookingsalespersonfirstname	bookingsalespersonlastname	bookingsalespersonaddr1	bookingsalespersonaddr2	bookingsalespersoncity	bookingsalespersonstate	bookingsalespersonpostcode	bookingsalespersonphone	bookingsalespersonfax	bookingsalespersioncountryid	bookingsalespersonreachatlocation	bookingsalespersonreachataddr1	bookingsalespersonreachataddr2	bookingsalespersonreachatcity	bookingsalespersonreachatstate	bookingsalespersonreachatpostcode	bookingsalespersonreachatphone	bookingsalespersonreachatfax	bookingsalespersonreachatcountryid	bookingsalespersontitle	bookingsalespersonactive	bookingsalespersonemail	bookingsalespersonpartnerid	bookingmarketsegment	bookingmarketnotes	bookingmarketdefaultindicator	bookingmarketconsolidationcode	bookingbookeddate	bookingbookedmonth	bookingbookedyear	arrivaldate	arrivalmonth	arrivalyear	departuredate	departuremonth	departureyear	roomblockcutoffdate	pmsactualroomnights	pmsactualadults	pmsactualrevenue	contactid	contactcustomerid		contactlastnamesoundslike	contactsalutation	contacttitle	contactaddressline1	contactaddressline2	contactcity	contactstate	contactpostalcode	contactcountryid	contactemailaddress	contacttypeid	contactactive	userdefcont_id	contactcountry	contacttype			custslsprsnid	custid	custsearchid		custaddressline1	custaddressline2	custcity	custstate	custpostalcode	custcountryid	custbilladdressline1	custbilladdressline2	custbillcity	custbillstate	custbillpostalcode	custbillcountryid	custfederalid	custtaxexempt	custpaymentmethodid	custmarketsegmentid	custreferralsourceid	custfax	custactive	custgroupid	custisagency	custdateentered	userdefcust_id	custslsprsngroupid	custslsprsnfirstname	custslsprsnlastname	custslsprsnaddr1	custslsprsnaddr2	custslsprsncity	custslsprsnstate	custslsprsnpostalcode	custslsprsnphone	custslsprsnfax	custslsprsncntryid	custslsprsnreachatlocation	custslsprsnreachataddr1	custslsprsnreachataddr2	custslsprsnreachatcity	custslsprsnreachatstate	custslsprsnreachatpostalcode	custslsprsnreachatphone	custslsprsnreachatfax	custslsprsnreachatcntryid	custslsprsntitle	custslsprsnactive	custslsprsnbookingpartnerid	custslsprsnemail	custcountry	custbillcountry	custmarketsegment	custmarketnotes	custconsolidationcode	custreferralsource	custpaymentmethod	custgroup	custslsprsngroup	custslsprsncntry	custslsprsnreachatcntry	custslsprsnpartnergroupid	custslsprsnpartnerfirstname	custslsprsnpartnerlastname	custslsprsnpartneraddr1	custslsprsnpartneraddr2	custslsprsnpartnercity	custslsprsnpartnerstate	custslsprsnpartnerpostalcode	custslsprsnpartnerphone	custslsprsnpartnerfax	custslsprsnpartnercntryid	custslsprsnpartnerreachatlocation	custslsprsnpartnerreachataddr1	custslsprsnpartnerreachataddr2	custslsprsnpartnerreachatcity	custslsprsnpartnerreachatstate	custslsprsnpartnerreachatpostalcode	custslsprsnpartnerreachatphone	custslsprsnpartnerreachatfax	custslsprsnpartnerreachatcntryid	custslsprsnpartnertitle	custslsprsnpartneractive	custslsprsnpartneremail	custslsprsnpartnercntry	custslsprsnpartnerreachatcntry	customernotes	bookingnotes	mattercode	mattername	clientcode	clientname	functionnotes	serviceitemid	serviceitemname	serviceitemcharge	serviceitemcost	itemquantity	actualitemquantity	itemtot	itemacttot		servicepeople	servicenotes	servicedescription	servicecategory	inpackage	servicetypeid	servicetypedescription


///////////////


// Booking_Start: "2018-07-02" ContactName: "DennisGuevara" ContactPhone: "(617) 525-4744" CustPhone: "(617) 525-4744" Customer: "BWH - Genetics Division" EndTime: "11:00:00" EvtID: "33544" EvtName: "Block Booking Monday" EvtStatus: "1" Expr: "0" Fax: "(617) 525-4705" FunctionName: "Campus Catering - Breakfast" Gaurenteed: "11" HeaderDesc: "HMS Campus Catering" Item: "**** All Disposables***" OnSiteContact: "DennisGuevara" PostAs: "BWH - Genetics Division" Quantity: "1.00" ServDescID: "15" ServTime: "1899-12-30" StartTime: "09:00:00" evtid: "33544" frname: "Offsite No Section" functionId: "77117" functionroom: "Offsite No Section" price: ".0000" startdate: "2019-02-25"Address1: "77 Avenue Louis Pasteur" status: "Confirmed

//////////////
select distinct FunctID as functionId,CustName as CustomerName,bookingname,FunctName as FunctionName,functdate as FunctionDate,functstarttime AS StartTime ,functendtime AS EndTime ,bookingstatus as Status,functrevenue,functactualrevenue,functcost,functactualcost,functroomrentrevenue,functroomrentcost,functservicesrevenue,functservicesactualrevenue,functservicescost,functservicesactualcost ,functrevenue+functactualrevenue+functcost+functactualcost+functroomrentrevenue+functroomrentcost+functservicesrevenue+functservicesactualrevenue+functservicescost+functservicesactualcost as SubTotal from query_functionrevenue where functdate between '02/01/2019' and '02/28/2019' 

select functroomrentcost, functroomrentrevenue from query_functionrevenue



Word(jsonData)
{


var row='<tr>';
var row2='';

$.each(jsonData0], function(key, value){

row=row+'<th style="font-size:16px;"><center>'+key.replace(/_/g, '<br>')+'</center></th>';

});


row=row+'</tr>';

$.each(jsonData, function(key, value){

row2=row2+'<tr class="item-row" style="font-size:16px;">';
$.each(value, function(key1, value1){

row2=row2+'<td style="font-size:14px;"><center>'+value1+'</center></td>';

});

row2=row2+'</tr>';
});

$(".pdfouter .tblitems thead").append(row);
$(".pdfouter .tblitems tbody").append(row2);
$('#html_hdn').val($(".pdfouter").html())

word($('#html_hdn').val());
}





var query_old="select distinct top 5000  fn.FunctID as functionId,max(cst.CustName) as CustomerName,max(bkg.EvtName) as BookingName,max(fName.ResDesc)  as FunctionName,max(SFRDT.FRName) as FunctionRoom,max(slps.FirstName)  as salesperson,max(fn.startdate)  as FunctionDate,max(fn.starttime)  AS StartTime ,max(fn.endtime)  AS EndTime ,max(sts.statustype)  as Status,sum(ISNULL(roomrentsummary.rentsum,0))  as  RoomRent,"+ServiceHeadersColquery+" sum(case when c.HeaderTypeID=1 then ss.ServItemChrg else 0 end) as CC Food and Beverage] ,sum(case when c.HeaderTypeID=1 then ss.ServItemCost else 0 end) as CC Food and BeverageCost ] , sum(case when c.HeaderTypeID=2 then ss.ServItemChrg else 0 end) as CC Audio Visual] ,sum(case when c.HeaderTypeID=2 then ss.ServItemCost else 0 end) as CC Audio VisualCost ] , sum(case when c.HeaderTypeID=3 then ss.ServItemChrg else 0 end) as HMS Campus Catering] ,sum(case when c.HeaderTypeID=3 then ss.ServItemCost else 0 end) as HMS Campus CateringCost ] , sum(case when c.HeaderTypeID=4 then ss.ServItemChrg else 0 end) as CC Room Setup/Rates] ,sum(case when c.HeaderTypeID=4 then ss.ServItemCost else 0 end) as CC Room Setup/RatesCost ] , (ISNULL(sum(ss.ServItemChrg),0))  as Service_Revenue_Total,(ISNULL(sum(ss.ServItemCost),0))  as  Service_RevenueCost,(ISNULL(roomrentsummary.rentsum,0))  +(ISNULL(sum(ss.ServItemChrg),0))  +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0)+ISNULL(null,0)+ISNULL(null,0) +ISNULL(null,0) as Subtotal,ISNULL(null,0) as Cost,(ISNULL(roomrentsummary.rentsum,0) +ISNULL(sum(ss.ServItemChrg),0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0)+ISNULL(null,0)+ISNULL(null,0) +ISNULL(null,0))*0.20 as ServiceCharge,ISNULL(null,0) as Discount,(ISNULL(roomrentsummary.rentsum,0) +ISNULL(sum(ss.ServItemChrg),0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0)+ISNULL(null,0)+ISNULL(null,0) +ISNULL(null,0))*0.07 as Tax,(ISNULL(roomrentsummary.rentsum,0) +ISNULL(sum(ss.ServItemChrg),0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0)+ISNULL(null,0)+ISNULL(null,0) +ISNULL(null,0))*1.27 as Total from FUNCT fn left join EVENT bkg on  fn.evtid =bkg.EvtID  left join CUSTT cst on bkg.CustID=cst.CustID left join FUNCTNAMES fName on fn.FunctName=fName.ResDesc left join contacts cnt on cnt.ContactID=fn.onsitecontact left join SALPT slps on fn.SPID=slps.SalesID left join SERVITEMS ss on fn.FunctID = ss.FunctID  left join SlpRooms rmblk on fn.evtid=rmblk.SRHdrID left join SERVTIME st on fn.FunctID = st.FunctID left join TSLTT on TSLTT.FunctID = fn.functid left join SFRDT on SFRDT.FrdID = TSLTT.FRID left join SYS_STATDESC sts on sts.statusid=bkg.EvtStatus left join SERVDESC sd on st.ServDescID =sd.ServDescID left join HeaderTypes c on ss.HeaderTypeID=c.HeaderTypeID left join MRKT ms on bkg.MrktSeg =ms.MrktID left join DEPOSITT dp on dp.FunctID=fn.FunctID  left join sections sc on SFRDT.sectionid=sc.sectionid  left join roomrentsummary on roomrentsummary.evtid=fn.evtid where fn.startdate between '"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"' "+ServiceHeadersquery+salesPersonquery+sectionsquery+MarketSegmentquery+" group by  fn.FunctID ,roomrentsummary.rentsum  ";





In neither the booking or customer tabs are we currently able to search by contact
Customer Tab, Existing Customer, search by last name – receive a fatal error
Undeer add booking, search for contact by last name, check containing, nothing comes up
So there is no searchability by contact name currently. We can search by customer name but not by contact which we need.


<tr servtype="65" class="edit">
<td id="ServItemID">1292</td>
<td id="ServItemName" contenteditable="" data-val="5ft Table">5ft Table</td>
<td id="ServItemChrg" contenteditable="">.0000</td>
<td id="ServItemCost" contenteditable="">.0000</td>
<td id="TaxID" taxid="1"></td>
<td id="QuantityDefault" contenteditable="" data-val="1">1</td>
<td id="WebAddress" contenteditable="">null</td>
</tr>


// {"evtid":"85","univeventid":"0","custid":null,"contactid":null,"reservationid":"","spid":"4","evtname":"Holiday Party","evtstart":"2005-12-14","evtend":"2005-12-14","evtstatus":"1","confdate":"2005-10-10","evtpaymentmethod":"0","frequency":"0","referralsource":"0","mrktseg":"1","postas":"Harvard School of Public Health","loudgroup":"0","donotpost":"0","notesexist":"0","cateringsalesid":"8","cateringcontact":"0","contractsent":"1899-12-30","contractrecd":"1899-12-30","contractdue":"1899-12-30","billingcustid":"28","monitoroverride":"0","taxexempt":"1","yieldalias":null,"matterid":"0","eventemailsent":null,"sourceevtid":"0","taxexemptdetail":"","EvtInitDate":null,"EvtCutoffDate":null,"fundid":null,"univcustid":"0","custsrchid":"Tasting","custname":"Harvard T.H. Chan  School of Public Health","soundexname":"H616","custphone":"(617) 432-1000","custadd1":"655 Huntington Ave; Building 2, 4th Floor","custadd2":"","custcity":"Boston","custstate":"MA","custpostcode":"02115","custcntry":"1","custbadd1":"655 Huntington Avenue","custbadd2":"SPH3 Room 723","custbcity":"Boston","custbstate":"MA","custbpostcode":"02115","custbcntry":"1","fedid":"","nprofit":"1","custpmtmthd":"0","custmarket":"1","custreferral":"0","custfax":"(617) 432-3755","chngd":"2018-03-29","isactive":null,"groupid":"0","isagency":null,"costcentercode":null,"mngr_email":null,"webedit":null,"custemailaddress":"","custinitdate":"2005-10-10","nohtemails":null,"CustWebsite":"","univcontactid":null,"firstname":null,"lastname":null,"soundexlast":null,"salutation":null,"title":null,"addr1":null,"addr2":null,"city":null,"state":null,"postcode":null,"cntry":null,"emailaddress":null,"contacttype":null,"webusername":null,"webpassword":null,"sourcecontid":null,"SalesID":"5"}]


//////////////

<th> </th>
<th>Charges($)</th>
<th>Discount($)</th>
<th>Srvc Chrg($)</th>
<th>Other</th>
<th>State Tax($)</th>
<th>Meal Tax</th>
<th>Sub Total($)</th>


else if(summaryButton=='EdFunc_Summary') //availibilty / Booking function -summary
{

objSummary.SetFunctionSummary($('#FunctionUpdateFunctionId').val());		

$('.DepositsColumn').css("visibility","hidden");
$('.AmountDueColumn').css("visibility","hidden");

}


/////////////


if( (!$('#FRO_Interval1').val()) && (!$('#FRO_Interval2').val()) && (!$('#FRO_Interval3').val()) && (!$('#FRO_Interval4').val()) && (!$('#FRO_Interval5').val()))
{

alert('please select at least one interval ')
return;

}

if($('#FRO_Interval2').val())
{
if($('#FRO_Interval2').val()<$('#FRO_Interval1').val())
{alert('Interval2 must have higher time')
return;
}



}

if($('#FRO_Interval3').val())
{
if($('#FRO_Interval3').val()<$('#FRO_Interval2').val())
{
alert('Interval3 must have higher time')
return;
}

}

if($('#FRO_Interval4').val())
{
if($('#FRO_Interval4').val()<$('#FRO_Interval3').val())
{
alert('Interval4 must have higher time')
return;
}

}

if($('#FRO_Interval5').val())
{
if($('#FRO_Interval5').val()<$('#FRO_Interval4').val())
{
alert('Interval5 must have higher time')
return;
}

}

var query='';
var maxInterval='';
var Interval1=$('#FRO_Interval1').val();
var Interval2=$('#FRO_Interval2').val();
var Interval3=$('#FRO_Interval3').val();
var Interval4=$('#FRO_Interval4').val();
var Interval5=$('#FRO_Interval5').val();

var stuff = "<?php  echo 'x'; ?>";
////console.log(stuff);

// var query ="select max("+Interval1+","+Interval2+") as maxInterval;";
// ////;
// var json =JSON.parse(CRUD(query))0];
// ////console.log(json);
// ////console.log(json0]);
// ////console.log(json0].maxInterval);


//////////////

if(Interval1 && Interval2)
{
$maxInterval=max($ParamArray"Interval1"],$ParamArray"Interval2"]);



query="if( fn.starttime between '"+Interval1+"' AND  '"+Interval2."' , '100%', 0 )   AS '"+Interval1."-"+Interval2."'";

}
if(Interval1 && Interval2 && Interval3)
{
$maxInterval=max(Interval1,Interval2,Interval3);

query="if( fn.starttime between '"+Interval1+"' AND  '"+Interval2."' , '100%', 0 )  AS '"+Interval1."-"+Interval2."',
if( fn.starttime between '"+Interval2+"' AND '"+Interval3."' , '100%', 0 )  AS '"+Interval2."-"+Interval3."'";
}
if(Interval1 && Interval2 && Interval3&& Interval4)
{

$maxInterval=max(Interval1,Interval2,Interval3,Interval4);
query="if( fn.starttime between '"+Interval1+"' AND '"+Interval2."' , '100%', 0 )  AS '"+Interval1."-"+Interval2."',
if( fn.starttime between '"+Interval2+"' AND '"+Interval3."' , '100%', 0 )  AS '"+Interval2."-"+Interval3."',
if( fn.starttime between '"+Interval3+"' AND '"+Interval4."' , '100%', 0 )  AS '"+Interval3."-"+Interval4."'";

}
if(Interval1 && Interval2 && Interval3 && Interval4 && Interval5)
{

$maxInterval=max(Interval1,Interval2,Interval3,Interval4,Interval5);

query="if( fn.starttime between '"+Interval1+"' AND '"+Interval2."' , '100%', 0 )  AS '"+Interval1."-"+Interval2."',
if( fn.starttime between '"+Interval2+"' AND '"+Interval3."' , '100%', 0 )  AS '"+Interval2."-"+Interval3."',
if( fn.starttime between '"+Interval3+"' AND '"+Interval4."' , '100%', 0 )  AS '"+Interval3."-"+Interval4."',
if( fn.starttime between '"+Interval4+"' AND '"+Interval5."' , '100%', 0 )  AS '"+Interval4."-"+Interval5."'";

}

var query2='';

$string="SELECT distinct fr.room_description,".var query."
from FUNCT fn 
left join EVENT bkg on  fn.evtid =bkg.evtid 
left join CUSTT cst on bkg.custid=cst.custid 
left  join FUNCTNAMES fName on fn.functname=fName.resid 
left join sfrdt fr on funct.functroomid=fr.userdeffunctroom_id
where fn.starttime between '"+Interval1+"' AND '".$maxInterval."' GROUP BY fr.room_description";

$FunctionList = $conn->query($string);
$arr=array();

while($row_FunctionList = $FunctionList->fetchAll(PDO::FETCH_OBJ))
{
$arr] = $row_FunctionList;

}

echo json_encode($arr);
exit();


///////////////////	
Backlog Report ,Blocked Sleeping Rooms Change,	Sleeping Rooms Distribution - grc 
Salesperson Productivity Sleeping Room Goal Report
var grcquery='';
var ServiceHeadersquery='';
var sectionsquery='';
var MarketSegmentquery='';
var salesPersonquery='';
var ServiceDescriptionquery='';
var statusquery='';
var displayquery='';
var traceCategoryquery='';
var ServiceHeadersColquery='';

////////////////

menu right click working javascript

<div style="width:100px;height:100px;border: solid;"></div>
<div id="menu" style="width:100px;height:100px;border: solid;" oncontextmenu="return false;"></div>

<script>

var mouse_x = 0;
var mouse_y = 0;
var mouse_left = false;
var mouse_right = false;
var area = document.getElementById("menu");
if (area.addEventListener !== undefined) area.addEventListener('mousemove', mouseMove, true);
else if (area.layers) area.captureEvents(Event.MOUSEDOWN | Event.MOUSEMOVE | Event.MOUSEUP);
area.onmousemove = mouseMove;
area.oncontextmenu = RightMouseDown;
area.onmousedown = mouseDown;
document.onmouseup = mouseUp;

function mouseMove(a) {
mouse_x = document.all ? event.clientX + document.body.scrollLeft : document.layers ? a.x + window.pageXOffset : a.clientX + window.pageXOffset;
mouse_y = document.all ? event.clientY + document.body.scrollTop : document.layers ? a.y + window.pageYOffset : a.clientY + window.pageYOffset;
}

function RightMouseDown() {
mouse_right = true;
return false;
}

function init(a, w) {
var b = document.createElement("DIV");
b.id = "contextmenu";
b.oncontextmenu = RightMouseDown;
if (!w) w = 120;
b.style.width = w + "px";
var c = '<div oncontextmenu="return false;">';
c += a;

c += '</div>';
b.innerHTML = c;
b.style.position = "absolute";
b.style.left = "0px";
b.style.top = "0px";
b.style.visibility = "hidden";
b.style.overflow = "hidden";
b.style.padding = "4px";
b.style.backgroundColor = "#ffffff";
b.style.border = "1px solid #6a6868";
document.body.appendChild(b);
}

function mouseUp(e) {
if (e.which == 1) document.getElementById("contextmenu").style.visibility = "hidden";
else if (e.which == 3) mouse_right = false;
}

function mouseDown(e) {
if (e.which == 3) {
mouse_right = true;
document.getElementById("contextmenu").style.left = mouse_x + "px";
document.getElementById("contextmenu").style.top = mouse_y + "px";
document.getElementById("contextmenu").style.visibility = "visible";
}
}


var	content=' <a href="/#" title="Reload Page" alt="Reload" onclick="window.location.reload();">Refresh</a><br>';

init(content,120); 


</script>


/////////////

else if(reportType == 'Event List')
{
if(!$('#dateFrom').val()){ alert('please select start Date'); return;}

var statusquery='';
var totalquery='';

if($('#Confrimchk').is(':checked'))
{
statusquery+=' and tbk.Evtstatus =1 ';
totalquery+="select 'confirmed total' as status, '0' as functionid,  '' as BookingId, '' as BookingName, '' as startdate, '' as EndDate, '' as BookedDate, '' as SalesPersonName,case when sum(funct.functactnumppl) is  null then 0 end   as People,case when sum(treb.roomrate) is  null then 0 end    as fnroomcharge,case when sum( (treb.roomrate*treb.srblckd)) is  null then 0 end as slpRmCharge,case when sum(treb.srblckd) is  null then 0 end as Block from FUNCT   join EVENT tbk on  FUNCT.evtid =tbk.EvtID  join SALPT tsp on FUNCT.SPID=tsp.SalesID join SlpRooms treb on tbk.evtid=treb.SRHdrID where tbk.evtstart between '"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"' and tbk.Evtstatus=1 and treb.roomrate is not null ";
}
if($('#Tentativechk').is(':checked'))
{
statusquery+=' and tbk.Evtstatus =2 ';
totalquery+="select 'tentative total' as status, '0' as functionid, '' as BookingId, '' as BookingName, '' as startdate, '' as EndDate, '' as BookedDate, '' as SalesPersonName,case when sum(funct.functactnumppl) is  null then 0 end   as People,case when sum(treb.roomrate) is  null then 0 end    as fnroomcharge,case when sum( (treb.roomrate*treb.srblckd)) is  null then 0 end as slpRmCharge,case when sum(treb.srblckd) is  null then 0 end as Block from FUNCT   join EVENT tbk on  FUNCT.evtid =tbk.EvtID  join SALPT tsp on FUNCT.SPID=tsp.SalesID join SlpRooms treb on tbk.evtid=treb.SRHdrID where tbk.evtstart between '"+$('#dateFrom').val()+"' and '"+$('#dateTo').val()+"' and tbk.Evtstatus=2 and treb.roomrate is not null ";
}
if($('#Inquirychk').is(':checked'))
{
statusquery+='and tbk.Evtstatus =3';
}

var query ="select '' as status , FUNCT.functid as functionid, tbk.evtstatus as status, tbk.evtid as BookingId, tbk.evtname as BookingName, tbk.evtstart as startdate, tbk.evtend as EndDate, tbk.confdate as BookedDate, tsp.firstname+tsp.lastname as SalesPersonName, funct.functactnumppl as People, treb.roomrate as fnroomcharge, (treb.roomrate*treb.srblckd) as slpRmCharge, treb.srblckd as Block from FUNCT   join EVENT tbk on  FUNCT.evtid =tbk.EvtID  join SALPT tsp on FUNCT.SPID=tsp.SalesID  join SlpRooms treb on tbk.evtid=treb.SRHdrID and treb.roomrate is not null and funct.functactnumppl is not null and treb.srblckd is not null "+statusquery;

var jsonData = JSON.parse(CRUD(query));
var jsontotal =null;//////console.log(totalquery)

if(totalquery) 
{

jsontotal=JSON.parse(CRUD(totalquery));	
}//////console.log(jsontotal)
if(jsonData)
{
//////console.log(jsonData);
objBookingReports.EventList(jsonData,jsontotal);
}
return;

}



/////////////

EventList(data, reportType, dateTo, dateFrom)
{


var tableRow = '', pplTot = 0,funrmTot = 0, cateringTot = 0, slprmtot = 0, grandTotal = 0;
$.each(data, function(i,j){
tableRow = tableRow +'<tr><td><b>'+datai]0]+'</b></td></tr>';
var pplSum = 0, funSum = 0, cateringsum = 0, slpSum= 0, totalChrg = 0;
$.each(datai]1], function(k,l){

var ppl = (datai]1]k].people == null || datai]1]k].people == '')? '0' : datai]1]k].people;
var catering = (datai]1]k].catering == null || datai]1]k].catering == '' || datai]1]k].catering == undefined)? '0.00': datai]1]k].catering;
var funRoomCharge = (datai]1]k].fnroomcharge == null || datai]1]k].fnroomcharge == '')? '0.00' : datai]1]k].fnroomcharge;
var catCharge = (datai]1]k].cateringcharge == null || datai]1]k].cateringcharge == '')? '0.00' : datai]1]k].cateringcharge;
var slpRoomCharge = (datai]1]k].slprmcharge == null || datai]1]k].slprmcharge == '')? '0.00' : datai]1]k].slprmcharge; 
var tot = parseFloat(funRoomCharge) + parseFloat(catCharge) + parseFloat(slpRoomCharge);

var sd = datai]1]k].startdate.split('-');
var startDate = sd1]+'/'+sd2]+'/'+sd0];
var bd = datai]1]k].bookeddate.split('-');
var bookedDate = bd1]+'/'+bd2]+'/'+bd0];
var ed = datai]1]k].enddate.split('-');
var EndDate = ed1]+'/'+ed2]+'/'+ed0];

tableRow = tableRow + '<tr><td>'+datai]1]k].bookingname+'</td><td style="text-align:center;">'+startDate+'</td><td style="text-align:center;">'+EndDate+'</td><td style="text-align:center;">'+bookedDate+'</td><td style="text-align:center;">'+ppl+'</td><td style="text-align:center;">'+datai]1]k].salespersonname+'</td><td style="text-align:center;">$'+funRoomCharge+'</td><td style="text-align:center;">$'+catCharge+'</td><td style="text-align:center;">$'+slpRoomCharge+'</td><td style="text-align:center;">$'+tot+'</td></tr>';

pplSum = parseFloat(pplSum) + parseFloat(ppl);
funSum = parseFloat(funSum) + parseFloat(funRoomCharge);
cateringsum = parseFloat(cateringsum) + parseFloat(catCharge);
slpSum = parseFloat(slpSum) + parseFloat(slpRoomCharge);
totalChrg = parseFloat(totalChrg) + parseFloat(tot);
});
tableRow = tableRow + '<tr style="font-weight: bold;"><td><b>'+datai]0]+' Totals:</b></td><td style="text-align: center;"></td><td style="text-align: center;"></td><td style="text-align: center;"></td><td style="text-align: center;"><b>'+pplSum+'</b></td><td style="text-align: center;"></td><td style="text-align: center;"><b>$'+funSum+'</b></td><td style="text-align: center;"><b>$'+cateringsum+'</b></td><td style="text-align: center;"><b>$'+slpSum+'</b></td><td style="text-align: center;"><b>$'+totalChrg+'</b></td></tr><tr><td>&emsp;</td></tr>';
pplTot = parseFloat(pplTot) + parseFloat(pplSum);
funrmTot = parseFloat(funrmTot) + parseFloat(funSum);
cateringTot = parseFloat(cateringTot) + parseFloat(cateringsum);
slprmtot = parseFloat(slprmtot) + parseFloat(slpSum);
});
grandTotal = parseFloat(grandTotal) + parseFloat(funrmTot) + parseFloat(cateringTot) + parseFloat(slprmtot);
tableRow = tableRow + '<tr><td><b>Grand Totals :</b></td><td style="text-align: center;"></td><td style="text-align: center;"></td><td style="text-align: center;"></td><td style="text-align: center;"><b>'+pplTot+'</b></td><td style="text-align: center;"></td><td style="text-align: center;"><b>$'+funrmTot+'</b></td><td style="text-align: center;"><b>$'+cateringTot+'</b></td><td style="text-align: center;"><b>$'+slprmtot+'</b></td><td style="text-align: center;"><b>$'+grandTotal+'</b></td></tr>';

$.ajax({
method : "POST",
url : "../Reports/CancellationReportTemp.php",
data : {tableData : tableRow, reportType : reportType, dateTo : dateTo, dateFrom : dateFrom },
async : false,
success : function(output)
{
$('#html_hdn').val('');
$('#html_hdn').val(output);
}
});
$('#frm_Reports').submit();
}


///////////////


else if(reportType=='Future Booking Pace')
{
var dsplyOptn = ];
var catCharges = ];
$.each($("inputname='BookingPaceCheckbox']:checked"), function(){            
dsplyOptn.push($(this).val());
});
var dIndCatTot = $('#Cntrl_CateringShow').is(':checked');
if(dIndCatTot)
{
$('#RS_catCatering').find('div').each(function(){
if($(this).find('inputtype=checkbox]:checked').val() != undefined)
{
catCharges.push($(this).find('inputtype=checkbox]:checked').val());
}
});
}

var GrpBy = $("inputname='BookingPaceRadio']:checked").val();

var paramArray={
reportType : reportType,
dateTo : dateTo,
dateFrom : dateFrom,
dsplyOptn : dsplyOptn,
catCharges : catCharges,
GrpBy : GrpBy,
dIndCatTot : dIndCatTot
};

var data = objBookingReports.pdf2(paramArray);
if(GrpBy == "1")
{
objBookingReports.BookingPace(data, reportType, dateTo, dateFrom);
}
else 
{
objBookingReports.BookingPaceSalesPerson(data, reportType, dateTo, dateFrom);
}
}



//////////


Annual Spreadsheet

Annual Spreadsheet
Compass Invoice Report
Compass Invoice Report 2

Backlog Report
Blocked Sleeping Rooms Change

GRC Log



<style type="text/css">
.isclickedT{
cursor: pointer;
}
.isclickedSortT{
cursor: pointer;
}
</style>
<div id="RS_Trace" class="AllRptSetups">
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group">
<center><h5>Trace Report</h5></center>
</div>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label form-group">
<label>Trace Reports</label>
<select id="RS_Tr_select" name="RS_Tr_select" class="form-control selectpicker">
<option value="Customer Call Report"> Customer Call Report</option>
<option value="Daily Call Report Activity">Daily Call Report Activity</option>
<option value="Morning Trace List">Morning Trace List</option>
</select>
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group">
<div class="col-xs-5 col-lg-5 col-md-5 col-sm-5" style="padding-left: 0px;">
<label>Trace List Options</label>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12" id="RS_FN_TraceOptions" style="border: 1px solid grey; overflow-x: auto; max-height: 20%;border-radius: 5px;min-height: 20%;">


<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_0" default="false" colname="ISNULL(tracedescription,'') as Action" tabindex="-1">Action</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_1" default="true" colname="(contactfirstname+' '+contactlastname) as BookingContact" tabindex="-1">Booking Contact</div>
<!-- <div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_2" default="false" colname="" tabindex="-1">Booking Contact Fax</div> -->
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_4" default="true" colname="ISNULL(contactphonenumber,'') as BookingContactPhone" tabindex="-1">Booking Contact Phone</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_5" default="false" colname="ISNULL(booking, '') as BookingName" tabindex="-1">Booking Name</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_6" default="false" colname="ISNULL(bookingstartdate, '') as BookingStart" tabindex="-1">Booking Start</div>

<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_7" default="true" colname="ISNULL(bookingenddate, '') as CompleteDate" tabindex="-1">Complete Date</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_8" default="true" colname="ISNULL(custfax, '') as CustFax" tabindex="-1">Cust Fax</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_9" default="false" colname="ISNULL(custid, '') as CustID" tabindex="-1">Cust ID</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_10" default="false" colname="ISNULL(custname, '') as CustName" tabindex="-1">Cust Name</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_11" default="false" colname="ISNULL(custphone, '') as CustPhone" tabindex="-1">Cust Phone</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_13" default="false" colname="ISNULL(functname, '') as Funct" tabindex="-1">Function</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_15" default="false" colname="(contactfirstname+' '+contactlastname) as OnSiteContact" tabindex="-1">On-Site Contact</div>
<!-- <div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_16" default="false" colname="" tabindex="-1">On-Site Contact Fax</div> -->
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_17" default="false" colname="ISNULL(contactphonenumber, '') as OnSiteContactPhone" tabindex="-1">On-Site Contact Phone</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_18" default="false" colname="(contactfirstname+' '+contactlastname) as PrimaryContact" tabindex="-1">Primary Contact</div>
<!-- <div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_19" default="false" colname="" tabindex="-1">Primary Contact Fax</div> -->
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_20" default="false" colname="ISNULL(contactphonenumber, '') as PrimaryContactPhone" tabindex="-1">Primary Contact Phone</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_21" default="false" colname="ISNULL(custslsprsnemail, '') as SentBy" tabindex="-1">Sent By</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_22" default="false" colname="ISNULL(custslsprsnpartneremail, '') as SentTo" tabindex="-1">Sent To</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_23" default="false" colname="ISNULL(tracetype, '') as TraceCategory" tabindex="-1">Trace Category</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_24" default="false" colname="(contactfirstname+' '+contactlastname) as TraceContact" tabindex="-1">Trace Contact</div>
<!--  <div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_25" default="false" colname="" tabindex="-1">Trace Contact fax</div> -->
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_26" default="false" colname="ISNULL(contactphonenumber, '') as TraceContactPhone" tabindex="-1">Trace Contact Phone</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedT" id="divT_27" default="false" colname="ISNULL(tracedate, '') as TraceDate" tabindex="-1">Trace Date</div>
</div>
</div>
<div class="col-xs-1 col-lg-1 col-md-1 col-sm-1 no-padding" style="top: 45px;">
<div class="form-group"><button id="RS_Trace_OptionR">&gt; &gt;</button></div>
<div><button id="RS_Trace_OptionL">&lt; &lt;</button></div>
</div>
<div class="col-xs-5 col-lg-5 col-md-5 col-sm-5" style="padding-right: 0px;padding-left: 0px;">
<label>Display on Trace Report</label>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12" id="RS_FN_DisplayOnTrace" style="border: 1px solid grey; overflow-x: auto; max-height: 20%;border-radius: 5px;min-height: 20%;">
</div>
</div>
<div class="col-xs-1 col-lg-1 col-md-1 col-sm-1" style="top: 45px;">
<div class="form-group"><button class="commonClass" id="">Up</button></div>
<div><button class="commonClass" id="">Dn</button></div>
</div>
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group no-padding" style="padding-left: 36px;display: none">
<div class="col-xs-6 col-lg-6 col-md-6 col-sm-6 form-group">
<div class=" form-group" style="padding-bottom: 15px;">
<div style="float: left; padding-right:20px;"><input type="checkbox" name="groupBy" id="groupBy" style="margin-left:0px"> Group By</div>
<div style="float: left;">
<select class="form-control selectpicker">
<option value="Trace Date">Trace Date</option>
<option value="Complete Date">Complete Date</option>
<option value="Trace Category">Trace Category</option>
<option value="Cust Name">Cust Name</option>
<option value="Sent By">Sent By</option>
<option value="Sent To">Sent To</option>
</select>
</div>
</div>
<div class="form-group">
<div style="float: left; font-size: 15px;padding-right:20px;"><label>Orientation:</label></div>
<div style="float: left;">
<select class="form-control selectpicker" disabled>
<option value="Portrait">Portrait</option>
<option value="Landscape">Landscape</option>
</select>
</div>
</div>
</div>
<div class="col-xs-6 col-lg-6 col-md-6 col-sm-6 form-group">
<div><input type="checkbox" disabled>Complete Traces</div>
<div><input type="checkbox" disabled>Incomplete Traces</div>
<div><input type="checkbox" disabled>Expand fields to fit page</div>
</div>
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group">
<div class="col-xs-5 col-lg-5 col-md-5 col-sm-5" style="padding-left: 0px;">
<label>Sort Options</label>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12" id="RS_Trace_SortOptions" style="border: 1px solid grey; overflow-x: auto; max-height: 17%;border-radius: 5px;min-height: 17%;">
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedSortT" id="sortT_0" default="false" colname="event.evtend" tabindex="-1">Complete Date</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedSortT" id="sortT_1" default="true" colname="custt.custname" tabindex="-1">Cust Name</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedSortT" id="sortT_2" default="false" colname="ttrct.emailfromaddress" tabindex="-1">Sent By</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedSortT" id="sortT_3" default="false" colname="ttrct.emailtoaddress" tabindex="-1">Sent To</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedSortT" id="sortT_4" default="false" colname="trccat.category" tabindex="-1">Trace Category</div>
<div class="col-sx-12 col-lg-12 col-md-12 col-sm-12 form-group isclickedSortT" id="sortT_5" default="false" colname="ttrct.trdate" tabindex="-1">Trace Date</div>
</div>
</div>
<div class="col-xs-1 col-lg-1 col-md-1 col-sm-1 no-padding" style="top: 45px;">
<div class="form-group"><button id="RS_Trace_SortR">&gt; &gt;</button></div>
<div><button id="RS_Trace_SortL">&lt; &lt;</button></div>
</div>
<div class="col-xs-5 col-lg-5 col-md-5 col-sm-5" style="padding-right: 0px;padding-left: 0px;">
<label>Sorted By</label>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12" id="RS_Trace_SortedBy" style="border: 1px solid grey; overflow-x: auto; max-height: 17%;border-radius: 5px;min-height: 17%;">
</div>
</div>
<div class="col-xs-1 col-lg-1 col-md-1 col-sm-1" style="top: 45px;">
<div class="form-group"><button class="commonClass">Up</button></div>
<div><button class="commonClass">Dn</button></div>
</div>
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group" id="Div_DCRA" style="display: none;">
<div class="col-xs-5 col-lg-5 col-md-5 col-sm-5" style="padding-left: 0px;">
<label>Use these categories</label>
<select class="selectpicker form-group form-control" id="Trace_Category" multiple></select>
</div>
<div class="col-xs-1 col-lg-1 col-md-1 col-sm-1 no-padding" style="top: 45px;"></div>
<div class="col-xs-5 col-lg-5 col-md-5 col-sm-5" style="padding-right: 0px;padding-left: 0px;">
<label>Use these salespeople</label>
<select class="selectpicker form-group form-control" id="Traces_salespersons" multiple></select>
</div>
<div class="col-xs-1 col-lg-1 col-md-1 col-sm-1" style="top: 45px;"></div>
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group">
<div class="col-xs-6 col-lg-6 col-md-6 col-sm-6 control-label">
</div>
<div class="col-xs-6 col-lg-6 col-md-6 col-sm-6 control-label ">
<button id="RS_Tr_Save" type="button" class="btn btn-default">Save</button>
<button id="RS_Tr_Close" type="button" class="btn btn-default">Close</button>
</div>
</div>


</div>

/////////////////////


DisplayTemplates(reportType)
{
$(".ReportTabs").css("display","none")

if(reportType=="Service Sheet" || reportType=="Booking Distribution" ||reportType == "Blocked Sleeping Rooms Change" ||reportType == "Sleeping Rooms Distribution")
{

$(".bookingSearch").css("display","block");

}

else if(reportType=="Customer Recap")
{

$(".CustomerSearch").css("display","block");
}

else if(reportType=="Function Distribution By Date")
{

$(".FunctionDistribution").css("display","block");


}

else if(reportType == "Sleeping Room Goal Report")
{

$(".reportContainer").css("display","block");

$("#dateFrom").attr('disabled',true);
$("#dateTo").attr('disabled',true);
$("#FinancialPeriod").val('');

$('#dateFrom').val(yyyymmdd(CurrentDate()))
$('#dateTo').val(yyyymmdd(CurrentDate()))

}

else if(reportType == "Customer Call Report"){

$(".CustomerSearch").css("display", "block");

$("#dateFrom").attr('disabled', false);
$("#dateTo").attr('disabled', false);
}

else if(reportType == "Daily Call Report Activity"){

$(".reportContainer").css("display", "block");
$("#dateFrom").attr('disabled', false);
$("#dateTo").attr('disabled', false);
}

else if(reportType == "Morning Trace List"){

$(".reportContainer").css("display", "block");
$("#dateFrom").attr('disabled', false);
$("#dateTo").attr('disabled', false);
}

}


//////////////////

Compass Invoice Report
Compass Invoice Report 2
Catering Goal Report
Backlog Report
Master Services List
Cancellation Event Report

SELECT fn.functid ,cst.custname ,rmblk.RoomRate  as Total  from FUNCT fn left join EVENT bkg on  fn.evtid =bkg.evtid  left join CUSTT cst on  bkg.custid=cst.custid  left join SERVITEMS ss on fn.functid = ss.functid  left join SlpRooms rmblk on fn.evtid=rmblk.srhdrid where fn.startdate between '2018-2-12' and '2019-2-12'  UNION ALL SELECT 'grand total' ,'' ,ISNULL(sum(rmblk.RoomRate)+sum(ss.ServItemChrg)+sum((rmblk.SRBlckd)*(ss.ServItemChrg)),0)  from FUNCT fn left join EVENT bkg on  fn.evtid =bkg.evtid  left join CUSTT cst on  bkg.custid=cst.custid  left join SERVITEMS ss on fn.functid = ss.functid  left join SlpRooms rmblk on fn.evtid=rmblk.srhdrid where fn.startdate  between '2019-2-12' and '2019-2-12' GROUP BY cst.custname,fn.functid,cst.custname


<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Func_Charges" type="checkbox">Catering
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Service_Notes" type="checkbox">Sleep Rooms
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Despoit_Info" type="checkbox">Function Room Rental
</div>


/////////////


select distinct fn.FunctID as functionId,cst.CustName as CustomerName,bkg.EvtName,fName.ResDesc as FunctionName,SFRDT.FRName,slps.FirstName as salesperson,fn.startdate as FunctionDate,fn.starttime AS StartTime ,fn.endtime AS EndTime ,sts.statustype as Status,ISNULL(rmblk.RoomRate,0) as  RoomRent,ISNULL(sum(ss.ServItemChrg),0)as Food_n_Bevearges,ISNULL(sum(ss.ServItemCost),0)as Cost_Food_n_Bevearges,ISNULL(sum(ss.ServItemChrg),0)as Bar_Services,ISNULL(sum(ss.ServItemCost),0)as Cost_Bar_Services,ISNULL(sum(ss.ServItemChrg),0)as Audio_Visual,ISNULL(sum(ss.ServItemCost),0)as Cost_Audio_Visual,ISNULL(sum(ss.ServItemChrg),0)as Room_Setup,ISNULL(sum(ss.ServItemCost),0)as Cost_Room_Setup,ISNULL(sum(ss.ServItemChrg),0)as Miscellaneous,ISNULL(sum(ss.ServItemCost),0)as  Cost_Miscellaneous,ISNULL(sum(ss.ServItemChrg),0) as Service_Revenue_Total,ISNULL(sum(ss.ServItemCost),0) as  Service_RevenueCost,ISNULL(rmblk.RoomRate,0) +ISNULL(sum(ss.ServItemChrg),0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0)+ISNULL(null,0)+ISNULL(null,0) +ISNULL(null,0) as Subtotal,ISNULL(null,0) as Cost,(ISNULL(rmblk.RoomRate,0) +ISNULL(sum(ss.ServItemChrg),0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0)+ISNULL(null,0)+ISNULL(null,0) +ISNULL(null,0))*0.20 as ServiceCharge,ISNULL(null,0) as Discount,(ISNULL(rmblk.RoomRate,0) +ISNULL(sum(ss.ServItemChrg),0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0)+ISNULL(null,0)+ISNULL(null,0) +ISNULL(null,0))*0.07 as Tax,(ISNULL(rmblk.RoomRate,0) +ISNULL(sum(ss.ServItemChrg),0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0) +ISNULL(null,0)+ISNULL(null,0)+ISNULL(null,0) +ISNULL(null,0))*1.27 as Total from FUNCT fn left join EVENT bkg on  fn.evtid =bkg.EvtID  left join CUSTT cst on bkg.CustID=cst.CustID left join FUNCTNAMES fName on fn.FunctName=fName.ResDesc left join contacts cnt on cnt.ContactID=fn.onsitecontact left join SALPT slps on fn.SPID=slps.SalesID left join SERVITEMS ss on fn.FunctID = ss.FunctID  left join SlpRooms rmblk on fn.evtid=rmblk.SRHdrID left join SERVTIME st on fn.FunctID = st.FunctID left join TSLTT on TSLTT.FunctID = fn.functid left join SFRDT on SFRDT.FrdID = TSLTT.FRID left join SYS_STATDESC sts on sts.statusid=bkg.EvtStatus left join SERVDESC sd on st.ServDescID =sd.ServDescID left join headertypes c on ss.HeaderTypeID=c.HeaderTypeID left join MRKT ms on bkg.MrktSeg =ms.MrktID left join DEPOSITT dp on dp.FunctID=fn.FunctID where fn.startdate between '02/11/2019' and '02/11/2019'  and c.HeaderTypeID in(1,2)  and sts.statusid in(1,2) 
and slps.SalesID in(1,2)   group by  fn.FunctID ,cst.CustName,bkg.EvtName,fn.FunctName,fn.startdate,fn.starttime ,fn.endtime ,sts.statustype ,rmblk.RoomRate ,ss.ServItemChrg ,ss.ServItemCost ,rmblk.RoomRate,fName.ResDesc,SFRDT.FRName ,slps.FirstName ,fn.startdate ,fn.starttime  ,fn.endtime ,sts.statustype 

////////////////////

and if ( GRCArray is null,1,(if(grc.id is null ,1,find_in_set(grc.id,GRCArray)))) 
and if ( salesPersonArray is null,1,(if(slps.id is null ,1,find_in_set(slps.id,salesPersonArray)))) 
and if ( statusArray is null,1,(if(grc.id is null ,1,find_in_set(st.id,statusArray)))) 
and if ( ServiceHeadersArray is null,1,(if(sd.servdescid is null ,1,find_in_set(sd.servdescid,ServiceHeadersArray)))) 
group by fn.FunctID;
and if ( ServiceDescriptionArray is null,1,(if(sd.servdescid is null ,1,find_in_set(sd.servdescid,ServiceDescriptionArray)))) 

///////////

rtrim comma

var edited = test.replace(/^,|,$/g,'');


GRC Sections:
SalesPerson:

Service Categories:

Booking Status:

function getStatus()
{

var outputData=CRUD("select * from SYS_STATDESC");
var html='';
$.each(JSON.parse(outputData), function( index, value ) {
html += '<option value='+value.statusid+'>' + value.statustype+ '</option>';
})

return html;

}


function getSalesPerson()
{

var outputData=CRUD("select * from SALPT");
var html='';
$.each(JSON.parse(outputData), function( index, value ) {
html += '<option value='+value.salesid+'>' + value.firstname+' '+value.lastname+ '</option>';
})

return html;

}

function getSections(type)
{


var outputData="";
var query="select * from sections";
if(type=='Room'){query+=" where sectionid>0 ";}
else if(type=='Off-Site'){query+=" where sectionid<0 ";}

outputData=CRUD(query);


var html='';
html += '<option value="All">All</option>';
$.each(JSON.parse(outputData), function( index, value ) {
html += '<option value='+value.sectionid+'>' +value.sectionname+ '</option>';
})

return html;

}

function getGRCSections()
{

var outputData=CRUD("select * from grcsections");
var html='';
$.each(JSON.parse(outputData), function( index, value ) {
html += '<option value='+value.grcsectionid+'>' +value.grcsectionname+ '</option>';
})

return html;

}


function getServiceDescriptions()
{

var outputData=CRUD("select * from SERVDESC ");
var html='';
$.each(JSON.parse(outputData), function( index, value ) {
html += '<option value='+value.servdescid+'>' + value.descrip+ '</option>';
})

return html;

}



'../Reports/ReportSetup/BacklogReport.php'
'../Reports/ReportSetup/CateringPaceGrpRm.php'
'../Reports/ReportSetup/ForecastBookGrpRm.php' 
../Reports/ReportSetup/GRCLogGrpRm.php
'../Reports/ReportSetup/SleepingRoomsDistribution.php' for  '../Reports/ReportSetup/BookingPaceActual.php'
../Reports/ReportSetup/BookingRevenue.php)
'../Reports/ReportSetup/SleepRoomGoal.php'
'../Reports/ReportSetup/CaterginGoal.php'

<!--
<?php  include('../Reports/ReportSetup/AnnualSpreadSheet.php')?>
<?php  include('../Reports/ReportSetup/BacklogReport.php')?>
<?php  include('../Reports/ReportSetup/BlockedSlpeepingRoomsChange.php')?>
<?php  include('../Reports/ReportSetup/CateringPaceGrpRm.php')?>
<?php  include('../Reports/ReportSetup/ForecastBookGrpRm.php')?>
<?php  include('../Reports/ReportSetup/GRCLogGrpRm.php')?>
<?php  include('../Reports/ReportSetup/SleepingRoomsDistribution.php')?>
<?php  include('../Reports/ReportSetup/BookingPaceActual.php')?>
<?php  include('../Reports/ReportSetup/SleepRoomGoal.php')?>
<?php  include('../Reports/ReportSetup/CaterginGoal.php')?>
<?php  include('../Reports/ReportSetup/BookingRevenue.php')?>-->	



Fatal error: Call to a member function fetchAll() on boolean in C:\Inetpub\vhosts\esp.systems\httpdocs\esp-project\Availability\assets\ajax\get_Category.php on line 9



//////////////////


if(sessionStorage.getItem("bookingData"))
{


$('#bookingName').val(sessionStorage.getItem("bookingName"));
var json = JSON.parse(sessionStorage.getItem("bookingData"));
//$('#hiddenBookingIDUpdate').val(json.FunctID);
$('#hiddenCustomerIDUpdate').val(json.CustID);
$('#NBMdls_HideCustomerID').val(json.CustID);
$('#customerName').val(json.CustName);
$('#bookingName').val(json.bookingName);	
$('#bookingcontactDropdown').val(json.ContactID).prop('selected',true);
$('#startDAte').val(json.StartDate);	
$('#endDate').val(json.StartDate);
$('#dateBooked').val(json.FunctConfDate);
$('#bookingStatus').val(json.statusId).prop('selected',true);
$('#salesPerson').val(json.SPID).prop('selected',true);
$('#bookingManager').val(json.SPID).prop('selected',true);
$('#postAs').val(json.PostFunctAs);
$('#bookingSegment').val("1").prop('selected',true);
sessionStorage.removeItem("bookingData");
sessionStorage.removeItem("bookingName");
}




/////////////


0-15^0-16@0-17@0-18@0-19^0-20^2^69728^2017-09-23^#HMS - Student Affairs^^849^Campus Catering - Lunch^ ^2017-09-23^12:00:00 14:00:00^0/225^HMS - Student Affairs^849^Offsite No Section^Healthy Quote^QUOTE 

0-15^0-16@0-17@0-18@0-19^0-20^2^69728^2017-09-23^#HMS - Student Affairs^^849^Campus Catering - Lunch^ ^2017-09-23^12:00:00 14:00:00^0/225^HMS - Student Affairs^849^Offsite No Section^Healthy Quote^QUOTE 



// Cherries -@
// pizza 2-#
// movie projector 1-$
// PlanetEarth-%


$('.blueColor').each(function(index, el) {

// Cherries -@
// pizza 2-
// movie projector 1-$
// PlanetEarth-%

if( $(this).eq(0).children('p').html()==undefined)
{
return;	
}

if($(this).eq(0).children('p').html()=='@')
{
$(this).eq(0).children('p').html('<img src="../Availability/assets/images/servpictkey/Cherries.png" >')
}

if($(this).eq(0).children('p').html()=='#')
{
$(this).eq(0).children('p').html('<img src="../Availability/assets/images/servpictkey/pizza 2.png" >')
}

if($(this).eq(0).children('p').html()=='$')
{
$(this).eq(0).children('p').html('<img src="../Availability/assets/images/servpictkey/movie projector 1.png" >')
}

if($(this).eq(0).children('p').html()=='%')
{
$(this).eq(0).children('p').html('<img src="../Availability/assets/images/servpictkey/PlanetEarth.png" >')
}



});




/////////////

switch($(this).eq(0).children('p').html())
{
case '@':
$(this).eq(0).children('p').html('<img src="../Availability/assets/images/servpictkey/Cherries.png" >') ;break;
case '#':
$(this).eq(0).children('p').html('<img src="../Availability/assets/images/servpictkey/pizza 2.png" >') ;break;
case '$':
$(this).eq(0).children('p').html('<img src="../Availability/assets/images/servpictkey/movie projector 1.png" >') ;break;
case '%':
////console.log('1')
$(this).eq(0).children('p').html('<img src="../Availability/assets/images/servpictkey/PlanetEarth.png">') ;break;

$(this).eq(0).children('p').html('<img src="../Availability/assets/images/servpictkey/PlanetEarth.png" >')

}





select distinct servpictkey from headertypes  join servitems  on servitems.headertypeid=headertypes.headertypeid  join FUNCT on servitems.FunctID= FUNCT.FunctID where FUNCT.FunctID=67325select distinct servpictkey from headertypes  join servitems  on servitems.headertypeid=headertypes.headertypeid  join FUNCT on servitems.FunctID= FUNCT.FunctID where FUNCT.FunctID=67368select distinct servpictkey from headertypes  join servitems  on servitems.headertypeid=headertypes.headertypeid  join FUNCT on servitems.FunctID= FUNCT.FunctID where FUNCT.FunctID=74297select distinct servpictkey from headertypes  join servitems  on servitems.headertypeid=headertypes.headertypeid  join FUNCT on servitems.FunctID= FUNCT.FunctID where FUNCT.FunctID=75571%%select distinct servpictkey from headertypes  join servitems  on servitems.headertypeid=headertypes.headertypeid  join FUNCT on servitems.FunctID= FUNCT.FunctID where FUNCT.FunctID=75571%%select distinct servpictkey from headertypes  join servitems  on servitems.headertypeid=headertypes.headertypeid  join FUNCT on servitems.FunctID= FUNCT.FunctID where FUNCT.FunctID=77583select distinct servpictkey from headertypes  join servitems  on servitems.headertypeid=headertypes.headertypeid  join FUNCT on servitems.FunctID= FUNCT.FunctID where FUNCT.FunctID=77591^6-10@6-11@6-12@6-13^^1^67325^2019-02-06^BIDMC - Neurology^^40^Grand rounds meeting^ ^2019-02-06^09:00:00 11:00:00^0/0^BIDMC - Neurology^40^Bray Room^Neurology Grand Rounds for Harvard^complimentary use of the meeting room and basic AV for established grand rounds for Harvard!^6-18@6-19@6-20^^1^67368^2019-02-06^BWH & Children's Hospital^^29^Meeting^ ^2019-02-06^13:00:00 14:30:00^0/0^BWH & Children's Hospital^29^Bray Room^BWH & Children's Hospital Grand Rounds^comp use of the meeting room and basic AV for this re-occuring meeting.!47-25^47-26@47-27^47-28^1^74297^2019-02-06^HMS - PhD Program in Immunology^^1015^Campus Catering - Reception^ ^2019-02-06^17:00:00 18:00:00^40/40^HMS - PhD Program in Immunology^1015^Modell Foyer^2018/2019 Wine Wednesday^520 45804 6570 000001 730009 0000 00000!13-6@13-7^13-8@13-9@13-10@13-11@13-12@13-13@13-14@13-15@13-16@13-17@13-18@13-19@13-20@13-21@13-22@13-23@13-24@13-25@13-26@13-27^13-28^1^75571^2019-02-06^Harvard Medical School External Education^^2085^Educational Session^ ^2019-02-06^08:00:00 15:40:00^100/0^Harvard Medical School External Education^2085^Rotunda^HMS Alumni in Industry Summit^**7am arrival today!22-6@22-7^22-8@22-9@22-10@22-11@22-12@22-13@22-14@22-15@22-16@22-17@22-18@22-19@22-20@22-21@22-22@22-23@22-24@22-25@22-26@22-27^22-28^1^75571^2019-02-06^Harvard Medical School External Education^^2085^Educational Session^ ^2019-02-06^08:00:00 15:40:00^100/0^Harvard Medical School External Education^2085^Area Surrounding Rotunda^HMS Alumni in Industry Summit^**7am arrival today!29-5^29-6@29-7@29-8@29-9@29-10@29-11@29-12^29-13^1^77583^2019-02-06^HMS - PME Curriculum Support^^990^Campus Catering  - Breakfast^ ^2019-02-06^07:00:00 10:30:00^75/75^HMS - PME Curriculum Support^990^Waterhouse /Faculty  Gordon Hall^Clerkship Directors Meeting^520 46888 8060 000001 730001 0000 00000 Attn: Michele Cohn]!30-27^30-28@30-29@30-30@30-31^30-32^1^77591^2019-02-06^HMS - Office of Alumni Affairs and Development^^15^Campus Catering Dinner^ ^2019-02-06^18:00:00 20:00:00^0/15^HMS - Office of Alumni Affairs and Development^15^Alumni Conference Room, Gordon Hall^Dinner^520-47712-8450-000001-730005-0000-00000




$('.blueColor').each(function(index, el) {

if($(this).attr('funcid')==$(this).next().attr('funcid'))
{
////console.log($(this).eq(0).children('p').html())

}

////console.log('///')
});



var p =$(this).children('p').html()
// if(p!=undefined)

if($(this).children('p').html())
if($(this).attr('funcid')==$(this).next().attr('funcid'))
{
$(this).eq(0).children('p').html('S')	
return;
}
////console.log('//');

// var sleeprooms=1;
// for(var i=0;i<=1;i++)
// {
// ////console.log('1')
// }

var groupedData = _.groupBy($('.blueColor'), function(d){return d.attr('funcid')});
////console.log(groupedData);

// $('.blueColor').each(function()
// {
// var length =$(this).length;
// ////console.log(length);

// var p =$(this).children('p').html()
// if(p!=undefined)
// {
// ////console.log(p)
// }

// })

//////////

FLIK:
Molly Hudson
Molly_hudson@hms.harvard.edu
Molly
mh

Christian Panasuk
Christian_panasuk@hms.harvard.edu
Christian
CP

Scot McCauley
Scot_mccauley@hms.harvard.edu
Scot
sm

Alwyn Thomas
Alwyn_thomas@hms.harvard.edu
Alwyn
at

CCHMAV
cchmav@hms.harvard.edu
cchmav
1234

3 users TBD:
1 for incoming Conference Planner
2 on hold for staff growth

Can we change passwords once web based is live?


RA:
Chris Sottile
Chris S
cs


Heather Cullen
Heather_cullen@hms.harvard.edu 
Heather C
HXC

Andrea  Jones
Andrea J
AKJ


Catering Intern (can we change this?)
Intern
racatering


3 users TBD:
3 on hold for staff growth 
////////////////////////////////////////

$(document).ready(function(){

$("#mydate").glDatePicker({
showAlways: true,
onClick: function(target, cell, date, data) {

objAv.CalenderDate=yyyymmdd(date);
objAv.InitGrid(objAv.CalenderDate)
},

});
});




$query1="select count(*) as sleeprooms from SlpRooms  where SRHdrID=34788";
$result = $conn->query($query1);
$sleeprooms=0;
foreach($result->fetchAll(PDO::FETCH_OBJ) as $row)
{
$sleeprooms=$sleeprooms+$row->sleeprooms;
}
$string = $string."^".$row->sleeprooms."!";

////////////////////////

class="table-responsive margin-bottom Function-table functionagendadiv"

min-height: 52%;

//////console.log($('#AV_Infotbl tbody trfrsubidx!="0"]').children('td:eq(3)').html())

// ////console.log($('#AV_Infotbl tbody trfrsuperidx="6"]frsubidx="0"]').children('td:eq(3)').html())
// ////console.log($('#AV_Infotbl tbody trfrsuperidx="6"]frsubidx="1"]').children('td:eq(3)').html())


//$('#AV_Infotbl tbody trfrsubidx<0]').css('display','none');


// $('#AV_Infotbl tbody trfrsubidx="0"]').each(function()
// {
// $('#AV_Infotbl tbody trfrsubidx="0"]').next('tr')
// })

// $('#AV_Infotbl tbody trfrsubidx="0"]').nextAll('tr').each(function() 
// {
// $('#AV_Infotbl tbody trfrsubidx="0"]').next('tr')
// })

// $('#AV_Infotbl tbody trfrsubidx="0"]').each
// $('#AV_Infotbl tbody trfrsubidx!="0"]')


/////////////////

<a class="btn btn-sm bounceIn animation-delay5" id="singup" style="background:#1C699A"><i class="fa fa-sign-up" ></i>Sign Up</a>

<div id="signupContainer" style="display: none;">
<div class="login-wrapper" style="top: 0;">
<!-- <div class="text-center">
<h2 class="fadeInUp animation-delay10" style="font-weight:bold">
<span class="text-success">ESP</span> <span style="color:#ccc; text-shadow:0 1px #fff"></span>
</h2>
</div> -->
<div class="login-widget animation-delay1">
<div class="panel panel-default">
<div class="panel-heading" style="padding-bottom: 22px;">
<div class="pull-right">
<span style="font-size:11px;">Already have an account?</span>
<a class="btn btn-default btn-xs login-link" id="singin" style="margin-top:-2px;">
<i class="fa fa-plus-circle"></i> Sign in
</a>
</div>
</div>
<div class="panel-body">
<span id="serrormsg1" style="display: none;color:red;font-size: 14px;">Technical Error! Something Went Wrong.</span>
<span id="serrormsg" style="display: none;color:red;font-size: 14px;">User is already registered with this email or username.</span>
<form class="form-login">
<div class="form-group">
<label for="scomapnyName">Company Name</label>
<!-- <input list="scompanyName" name="scomapnyName" type="text" id="scname" placeholder="Company Name" class="form-control input-sm bounceIn animation-delay2 allcontrols">
<datalist id="scompanyName"></datalist> -->
<select class="form-control input-sm bounceIn animation-delay2" name="scompanyName" id="scompanyName">
</select>
<span id="serrorCname"></span>
</div>
<div class="form-group">
<label for="role">Name</label>
<input type="text" placeholder="Name" class="form-control input-sm bounceIn animation-delay2 allcontrols" id="name"  disabled>

<span id="errorname"></span>
</div>
<div class="form-group">
<label for="role">Role</label>
<select class="form-control input-sm bounceIn animation-delay2" id="role" disabled>
<option value="0">Demo</option>
<option value="1">Catering Director</option>
<option value="2">Asst. Catering Director</option>
<option value="3">Senior Catering Coordinator</option>
<option value="4">Catering Coordinator</option>
<option value="5">Assistant Catering Coordinator</option>
</select>
<span id="errorrole"></span>
</div>
<div class="form-group">
<label>Username</label>
<input type="text" placeholder="Username" class="form-control input-sm bounceIn animation-delay2 allcontrols" id="userName" disabled>
<span id="errorusername"></span>
</div>
<!-- /form-group -->
<div class="form-group">
<label>Password</label>
<input type="password" placeholder="Password" class="form-control input-sm bounceIn animation-delay3 allcontrols" id="spassword" disabled>
<span id="errorpassword"></span>
</div>
<!-- /form-group -->
<div class="form-group">
<label>Confirm Password</label>
<input type="password" placeholder="Confirm password" class="form-control input-sm bounceIn animation-delay4 allcontrols" id="Cpassword" disabled>
<span id="errorCpassword"></span>
</div>
<!-- /form-group -->
<div class="form-group">
<label>Email Address</label>
<input type="text" placeholder="Email address" class="form-control input-sm bounceIn animation-delay5 allcontrols" id="email" disabled>
<span id="erroremail"></span>
</div>
<div class="seperator"></div>
<hr>
<div class="form-group">
<div class="controls text-right">
<a class="btn btn-sm bounceIn animation-delay7 login-link" onclick="validSignUp()"><i class="fa fa-plus-circle"></i> Sign up</a>
</div>
</div>
<!-- /form-group -->
</form>
</div>
</div>
<!-- /panel -->
</div>
<!-- /login-widget -->
</div>
<!-- /login-wrapper --> 
</div>

$('#paymethods').html(paymethods());
$('#ddlSiteCountry').html(getCountry());
$('#mrkt').html(getMarket());
$('#ReferralSource').html(getReferral());
$('#SalesGroups').html(getSalesPerson());
$('#Group').html(getCustGroups());

$('#paymethods').val(obj.CustPmtMthd).prop('selected',true);
$('#ddlSiteCountry').val(obj.CustCntry).prop('selected',true);
$('#mrkt').val(obj.CustMarket).prop('selected',true);
$('#ReferralSource').val(obj.CustReferral).prop('selected',true);
$('#SalesGroups').val(obj.spid).prop('selected',true);
$('#Group').val(obj.GroupID).prop('selected',true);



objAv.gridMark(objAv.CalenderDate,section,room);
function gridmarweekly(section);
function gridmarkmonthly(newdate,lastdate,section); 
function gridMark(date,section,room);   

var query="select distinct bkg.EvtName,bkg.EvtStatus,FUNCT.renttype, FUNCT.functid as functionId, FUNCT.evtid as eventid, SFRDT.FrdID as functionRoomId, SFRDT.FRName as functionRoom, FUNCT.functname as functionName, FUNCT.startdate as StartDate, FUNCT.starttime as StartTime, FUNCT.endtime as EndTime,DATEADD(MINUTE, -(setuptime*60), FUNCT.starttime) as setup ,DATEADD(MINUTE, (knockdowntime*60), FUNCT.endtime) as knock  ,functexpnumppl,functgtdnumppl ,cst.CustName as CustName ,cst.CustID ,EvtName ,cnt.FirstName,cnt.LastName  from FUNCT left join TSLTT on TSLTT.FunctID = FUNCT.functid left join EVENT bkg on bkg.EvtID = FUNCT.evtid left join SFRDT on SFRDT.FrdID = TSLTT.FRID left join CUSTT cst on bkg.CustID=cst.CustID left join contacts cnt on cnt.ContactID=FUNCT.onsitecontact left join SALPT slps on slps.SalesID=FUNCT.spid  where FUNCT.startdate ='".$_POST'date']."'";

var out = CRUD(query);

var string='';

$.each(JSON.parse(CRUD(query)), function( index, value1 ) {

$.each(arr, function( key, value ) 
{ 
if(value1.setup == value){setup = key;} 
if(value1.StartTime == value){startPoint = key;} 
if(value1.EndTime == value){ endPoint = key; } 
if(value1.knock == value){ knock = key; } 
}) 
if(setup > startPoint){setup = 0;}

for(var i = setup ; i < startPoint ; i++)
{
string = string+value1.functionRoomId+"-"+i+"@";
}


string=string.replace(/\s+$/, '@')
string = string+"^";

//BookingString
for(var i = startPoint ; i < endPoint ; i++)
{string = string+value1.functionRoomId+"-"+i+"@";}

string=string.replace(/\s+$/, '@')
string = string+"^";
if(endPoint > knock){ knock = 48;}

//KnckdwnString
for(var k = endPoint ; k < knock ; k++)
{string = string+value1.functionRoomId."-".k."@";}

string=string.replace(/\s+$/, '@')
string = string+"^";

//ColorString
string = string+value1.EvtStatus;
string = string+"^";
string+=value1.functionId+"^"+value1.StartDate+"^"+value1.CustName+"^"+value1.CustPhone+"^"+value1.CustID+"^"+value1.functionName+"^"+value1.firstname+" "+value1.lastname+"^"+value1.StartDate+"^"+value1.StartTime+" "+value1.EndTime+"^"+value1.functexpnumppl."/"+value1.functgtdnumppl+"^"+value1.CustName+"^"+value1.CustID+"^"+value1.functionRoom+"^"+value1.EvtName+"!";

}

string=string.replace(/\s+$/, '!')
//////console.log()




right now in our server version we can alter the view under section to CC room only, Catering or all – in the webs version that is not available, can we make those dropdown options

Ill continue looking through today and come back with any other questions

//////////////////

var objAvailGRC;

class AvailGRC {

constructor() {


}

css(){


$("#tblAV_GRC tbody tr").each(function(){

$(this).children('td:lt(4)').css("background","rgb(241, 241, 119)");
$(this).children('td:gt(3)').css("background","rgb(255, 255, 118)");

})

$("#tblTotal").css("background","rgb(122, 255, 224)");

};

Get(custid)
{
//////console.log(getData0]);

$("#tblAV_GRC tbody tr").remove();
$("#tblAV_GRC tr.summary").remove();

var Block_sum =0;
var Pickup_sum =0;
var Revenue_sum =0.00;
var AvgRate_sum =0.00;
var AvgRate=0.00;
var n=0;

$.each(getData, function( index, value ) {

Block_sum=parseInt(Block_sum, 10)+parseInt(value.SRBlckd, 10);
Pickup_sum=parseInt(Pickup_sum, 10)+parseInt(value.SRPickup, 10);
Revenue_sum=(parseFloat(Revenue_sum)+(parseFloat(value.SRBlckd)*parseFloat(value.RoomRate))).toFixed(2);
AvgRate_sum=(parseFloat(AvgRate_sum)+parseFloat(value.RoomRate)).toFixed(2);
AvgRate= AvgRate_sum/(getData.length)

})

var rowGRC ='<tr class="summary" id="RB_tr_'+k+'" tabindex="-1">'+
'<td>'+getData0].SRDate+'</td>'+
'<td>'+getData0].CustomerName+'</td>'+
'<td>'+getData0].SalesprsnName+'</td>'+
'<td>'+Block_sum+'</td>'+
'<td>'+Pickup_sum+'</td>'+
'<td>'+Revenue_sum+'</td>'+
'<td>'+parseFloat(AvgRate)+'</td>'+
'<td>'+Block_sum+'</td>'+
'</tr>';

$("#tblAV_GRC tbody").append(rowGRC);

// Adult: "1"// Child: "1"// CustomerName: "Ford Motors Company"// Extra: ".0000"//FunctID1: "1"// FunctID2: "1"// InPackage: "1"// RateChild: ".0000"// RateDbl:".0000"// RateQuad: ".0000"// RateSing: "11.1100"// RateTrip: ".0000"// RoomRate:".0100"// SRBlckd: "11"// SRConf: "1"// SRCost: "-10.0000"// SRDate: "2019-01-15"// SRHdrID: "34836"// SRID: "38"// SROrig: "11"// SRPickup: "1"// SRTypeID: "1"// SalesprsnName: ""// SleepingRoom: ""


$.each(getData, function( index, value ) {

var row='<tr class="sleepingRooms">'+
'<td>-]</td>'+
'<td></td>'+
'<td>'+value.SleepingRoom+'</td>'+
'<td>'+value.SRBlckd+'</td>'+
'<td>'+value.SRPickup+'</td>'+
'<td>'+(parseFloat(value.SRBlckd)*parseFloat(value.RoomRate)).toFixed(2)+'</td>'+
'<td>'+value.RoomRate+'</td>'+
'<td>'+value.SRBlckd+'</td>'+
'</tr>';

$("#tblAV_GRC tbody tr.summary:last").after(row);

k++;

})

$('.sleepingRooms').hide('');
objAvailGRC=new AvailGRC();

$(this).parent('ul').css("height","auto");

objAvailGRC.css();

this.total(getData);
}

Total(getData)
{

$.each(getData, function( index, value ) {

var row='<tr class="sleepingRooms">'+
'<td>-]</td>'+
'<td></td>'+
'<td>'+value.SleepingRoom+'</td>'+
'<td>'+value.SRBlckd+'</td>'+
'<td>'+value.SRPickup+'</td>'+
'<td>'+(parseFloat(value.SRBlckd)*parseFloat(value.RoomRate)).toFixed(2)+'</td>'+
'<td>'+value.RoomRate+'</td>'+
'<td>'+value.SRBlckd+'</td>'+
'</tr>';

$("#tblTotal tr.SubTotal_Confirmed").after(row);
$("#tblTotal tr.TOTALS").after(row);

})

var Confirmed =$("#tblTotal tbody tr.SubTotal_Confirmed")
var Tentative =$("#tblTotal tbody tr.SubTotal_Tentative")
var Totals =$("#tblTotal tbody tr.TOTALS")

Totals.children('td:eq(0)').text(
parseFloat(Confirmed.children('td:eq(0)').text())+
parseFloat(Tentative.children('td:eq(0)').text())
) 

$('.sleepingRooms').hide('');
}

}

$(document).ready(function(){

objAvailGRC=new AvailGRC();

$(document).on('click', "tr.summary", function (evt) 
{

var row= $(this).closest('tr')

objClass_CRUD.toggle(row,'.sleepingRooms');

})

$(document).on('click', "tr.SubTotal_Confirmed", function (evt) 
{

var row= $(this).closest('tr')

objClass_CRUD.toggle(row,'.sleepingRooms');

})

$(document).on('click', "tr.TOTALS", function (evt) 
{

var row= $(this).closest('tr')

objClass_CRUD.toggle(row,'.sleepingRooms');

})

$('#GRCTotal').on('click',function(){

if($('#tblTotal').css('display')=="inline-table")
{
$('#tblTotal').css('display',"none");
}
else
{
$('#tblTotal').css('display',"inline-table");
}


})


$('#AV_GRCMonthlyView').on('click',function(){
objAvailGRC.Get(objAv.CustID);
})


}) 



/////////////



var firsttd = 1;

var query="select * from sfrdt";

$.each(JSON.parse(CRUD(query)), function( index, value ) {

var table = "<tr> <td class='text-center'>+</td> <td><div class='col-sm-12 col-md-12 col-lg-12' style='border:none;padding:0px;'><input type='checkbox' name='Av_checkbox' style='margin: 0px;margin-top: -6px;padding:0px;'></div></td> <td style='padding:0px;'><div class='col-sm-12 col-md-12 col-lg-12 "+value.id+"' style='border:none;padding:0px;'></div></td> <td>"+value.functionRoom+"</td> <td class='no-padding'>";

while(firsttd <= tdLengthDaily)
{
table+="<div class='Av_gridMonthly grid_back "+value.id+"-"+firsttd+"' id='"+value.id+"-"+firsttd+"'></div>";	
firsttd++;	
}
table = table+"</td></tr>";
firsttd = 1;

})
////console.log(table)


/////////////



function gridmarkmonthly(newdate,lastdate)
{

var date = new Date(newdate);
var firstdate = new Date(date.getFullYear(), date.getMonth(), 1);
var lastdate = new Date(date.getFullYear(), date.getMonth() + 1, 0);

while(firstdate <= lastdate){

var query="select *,StartTime as stime, EndTime as etime  from FUNCT  join TSLTT on TSLTT.FunctID = FUNCT.functid  join EVENT bkg on bkg.EvtID = FUNCT.evtid  join SFRDT on SFRDT.FrdID = TSLTT.FRID  join CUSTT cst on bkg.CustID=cst.CustID  join contacts cnt on cnt.ContactID=FUNCT.onsitecontact  join SALPT slps on slps.SalesID=FUNCT.spid where funct.StartDate = '"+yyyymmdd(firstdate)+"' and funct.OffSiteLocation = '' ";

var string='';

$.each(JSON.parse(CRUD(query)), function( index, value ) {

string += value.evtstatus+"^"+value.evtid+"^"+value.functid+"^"+value.startdate+"^"+value.custname+"^"+value.custphone+"^"+value.custid+"^"+value.evtname+"!";

})
string=string.replace(/\s+$/, '');
var data=string;//////console.log(data);

if( data != '')
{
var Griddata = data.split('!');
var flag = "0";
for (var i = 0; i < Griddata.length ; i++) 
{

var DataString = Griddatai].split('^');
if((DataString) && (DataString!="")){//////console.log(DataString);
var ColorString = DataString0];
var EvtID = DataString1];
var FunctID = DataString2];
var startdate = DataString3].split('-');
var compstartDate = startdate2];
if (compstartDate.substring(0, 1) == '0') { 
compstartDate = compstartDate.substring(1);
}
var CustName = DataString4];
var CustPhone = DataString5];
var customerId = DataString6];
if(ColorString == 1)
{
$('#'+EvtID+'-'+compstartDate).attr('startdate', startdate);
$('#'+EvtID+'-'+compstartDate).attr('ColorString', ColorString);
$('#'+EvtID+'-'+compstartDate).addClass("blueColor");
$('#'+EvtID+'-'+compstartDate).bind("contextmenu", function(event) {
rightclickMonthly($(this).attr("id"),$(this).attr("startdate"),lastdate);
});
}

else if(ColorString == 2)
{
$('#'+EvtID+'-'+compstartDate).attr('startdate', startdate);
$('#'+EvtID+'-'+compstartDate).attr('ColorString', ColorString);
$('#'+EvtID+'-'+compstartDate).addClass("redColor");
$('#'+EvtID+'-'+compstartDate).bind("contextmenu", function(event) {
rightclickMonthly($(this).attr("id"),$(this).attr("startdate"),lastdate);
});
}

else if(ColorString == 3)
{
$('#'+EvtID+'-'+compstartDate).attr('startdate', startdate);
$('#'+EvtID+'-'+compstartDate).attr('ColorString', ColorString);
$('#'+EvtID+'-'+compstartDate).addClass("blueColor");
$('#'+EvtID+'-'+compstartDate).bind("contextmenu", function(event) {
rightclickMonthly($(this).attr("id"),$(this).attr("startdate"),lastdate);
});
$('.'+EvtID).addClass("i-image");
$('.'+EvtID).css("cursor","pointer");
$('.'+EvtID).attr("oncontextmenu","openinquiries("+EvtID+", '"+weeks+"')");
}


}
}
}

var firstdate = firstdate.setDate(firstdate.getDate() + 1);
firstdate = new Date(firstdate);
}


}


///////////////////


for(var i = 1; i <=date1 ; i++)
{
var dateNow = new Date(date1);
var monthNext = ("0" + (dateNow.getMonth() + 1)).slice(-2);
var dateNext = (monthNext)+"/"+(i)+"/"+dateNow.getFullYear();   

var query="select *,StartTime as stime, EndTime as etime  from FUNCT  join TSLTT on TSLTT.FunctID = FUNCT.functid  join EVENT bkg on bkg.EvtID = FUNCT.evtid  join SFRDT on SFRDT.FrdID = TSLTT.FRID  join CUSTT cst on bkg.CustID=cst.CustID  join contacts cnt on cnt.ContactID=FUNCT.onsitecontact  join SALPT slps on slps.SalesID=FUNCT.spid where funct.StartDate = '"+yyyymmdd(dateNext)+"' and funct.OffSiteLocation = '' ";

var string='';

$.each(JSON.parse(CRUD(query)), function( index, value ) {

string = string+value.evtstatus;
string = string+"^";
string = string+value.evtid;
string = string+"^";
string = string+value.functid;
string = string+"^";
string = string+value.startdate;
string = string+"^";
string = string+value.custname;
string = string+"^";
string = string+value.custphone;
string = string+"^";
string = string+value.custid;
string = string+"^";
string = string+value.evtname;
string = string+"!";

})

string= rtrim($string,"!");

var data=string;
//////console.log(data);

if( data != '')
{
var Griddata = data.split('!');
var flag = "0";
for (var i = 0; i < Griddata.length ; i++) 
{//////console.log(DataString);
if(DataString){
var DataString = Griddatai].split('^');
var ColorString = DataString0];
var EvtID = DataString1];
var FunctID = DataString2];
var startdate = DataString3].split('-');
var compstartDate = startdate2];
if (compstartDate.substring(0, 1) == '0') { 
compstartDate = compstartDate.substring(1);
}
var CustName = DataString4];
var CustPhone = DataString5];
var customerId = DataString6];
if(ColorString == 1)
{
$('#'+EvtID+'-'+compstartDate).attr('startdate', startdate);
$('#'+EvtID+'-'+compstartDate).attr('ColorString', ColorString);
$('#'+EvtID+'-'+compstartDate).addClass("blueColor");
$('#'+EvtID+'-'+compstartDate).bind("contextmenu", function(event) {
rightclickMonthly($(this).attr("id"),$(this).attr("startdate"),lastdate);
});
}

else if(ColorString == 2)
{
$('#'+EvtID+'-'+compstartDate).attr('startdate', startdate);
$('#'+EvtID+'-'+compstartDate).attr('ColorString', ColorString);
$('#'+EvtID+'-'+compstartDate).addClass("redColor");
$('#'+EvtID+'-'+compstartDate).bind("contextmenu", function(event) {
rightclickMonthly($(this).attr("id"),$(this).attr("startdate"),lastdate);
});
}

else if(ColorString == 3)
{
$('#'+EvtID+'-'+compstartDate).attr('startdate', startdate);
$('#'+EvtID+'-'+compstartDate).attr('ColorString', ColorString);
$('#'+EvtID+'-'+compstartDate).addClass("blueColor");
$('#'+EvtID+'-'+compstartDate).bind("contextmenu", function(event) {
rightclickMonthly($(this).attr("id"),$(this).attr("startdate"),lastdate);
});
$('.'+EvtID).addClass("i-image");
$('.'+EvtID).css("cursor","pointer");
$('.'+EvtID).attr("oncontextmenu","openinquiries("+EvtID+", '"+weeks+"')");
}


}
}
}

}




//////////////////////

function gridmarkmonthly(newdate,lastdate)
{

var query="DECLARE @date date = '"+newdate+"'; DECLARE @StartDate date = CAST(DATEADD(month, DATEDIFF(month, 0, @date), 0) AS DATE) DECLARE @LastDate date = dateadd(d, -datepart(d,@date) ,dateadd(m,1,@date)) WHILE @StartDate <= @LastDate BEGIN select distinct SFRDT.FRName as functionRoom,min(bkg.evtstatus) as status from FUNCT join TSLTT on TSLTT.FunctID = FUNCT.functid join EVENT bkg on bkg.EvtID = FUNCT.evtid join SFRDT on SFRDT.FrdID = TSLTT.FRID where FUNCT.startdate=@StartDate and SFRDT.frdid>0 group by day(FUNCT.startdate),SFRDT.FRName ,bkg.evtstatus set @StartDate=dateadd(day,1,@StartDate); END" ;
//////console.log(CRUD(query))//////console.log(JSON.parse(CRUD(query)))
}


function gridmarkmonthly(newdate,lastdate)
{
var weeks=];

for(var i = 1  ; i <=lastdate ; i++)
{
var dateNow = new Date(newdate);
var monthNext = ("0" + (dateNow.getMonth() + 1)).slice(-2);
var dateNext = (monthNext)+"/"+(i)+"/"+dateNow.getFullYear();   


var query="select *,StartTime as stime, EndTime as etime  from FUNCT  join TSLTT on TSLTT.FunctID = FUNCT.functid  join EVENT bkg on bkg.EvtID = FUNCT.evtid  join SFRDT on SFRDT.FrdID = TSLTT.FRID  join CUSTT cst on bkg.CustID=cst.CustID  join contacts cnt on cnt.ContactID=FUNCT.onsitecontact  join SALPT slps on slps.SalesID=FUNCT.spid where funct.StartDate = '"+yyyymmdd(dateNext)+"' and funct.OffSiteLocation = '' ";

var string='';//////;//////console.log(CRUD(query));//////console.log(JSON.parse(CRUD(query)));

$.each(JSON.parse(CRUD(query)), function( index, value ) {

string = string+value.evtstatus;
string = string+"^";
string = string+value.evtid;
string = string+"^";
string = string+value.functid;
string = string+"^";
string = string+value.startdate;
string = string+"^";
string = string+value.custname;
string = string+"^";
string = string+value.custphone;
string = string+"^";
string = string+value.custid;
string = string+"^";
string = string+value.evtname;
string = string+"!";

})
var data=string;
if( data != '')
{
var Griddata = data.split('!');
var flag = "0";
for (var i = 0; i < Griddata.length ; i++) 
{//////console.log(DataString);
if(DataString){
var DataString = Griddatai].split('^');
var ColorString = DataString0];
var EvtID = DataString1];
var FunctID = DataString2];
var startdate = DataString3].split('-');
var compstartDate = startdate2];
if (compstartDate.substring(0, 1) == '0') { 
compstartDate = compstartDate.substring(1);
}
var CustName = DataString4];
var CustPhone = DataString5];
var customerId = DataString6];
if(ColorString == 1)
{
$('#'+EvtID+'-'+compstartDate).attr('startdate', startdate);
$('#'+EvtID+'-'+compstartDate).attr('ColorString', ColorString);
$('#'+EvtID+'-'+compstartDate).addClass("blueColor");
$('#'+EvtID+'-'+compstartDate).bind("contextmenu", function(event) {
rightclickMonthly($(this).attr("id"),$(this).attr("startdate"),lastdate);
});
}

else if(ColorString == 2)
{
$('#'+EvtID+'-'+compstartDate).attr('startdate', startdate);
$('#'+EvtID+'-'+compstartDate).attr('ColorString', ColorString);
$('#'+EvtID+'-'+compstartDate).addClass("redColor");
$('#'+EvtID+'-'+compstartDate).bind("contextmenu", function(event) {
rightclickMonthly($(this).attr("id"),$(this).attr("startdate"),lastdate);
});
}

else if(ColorString == 3)
{
$('#'+EvtID+'-'+compstartDate).attr('startdate', startdate);
$('#'+EvtID+'-'+compstartDate).attr('ColorString', ColorString);
$('#'+EvtID+'-'+compstartDate).addClass("blueColor");
$('#'+EvtID+'-'+compstartDate).bind("contextmenu", function(event) {
rightclickMonthly($(this).attr("id"),$(this).attr("startdate"),lastdate);
});
$('.'+EvtID).addClass("i-image");
$('.'+EvtID).css("cursor","pointer");
$('.'+EvtID).attr("oncontextmenu","openinquiries("+EvtID+", '"+weeks+"')");
}


}
}
}

}



}




/////////////////////


select *,StartTime as stime, EndTime as etime from FUNCT left join CUSTT on funct.custid = CUSTT.custId left join contacts on contacts.contactid = funct.onsitecontact left  join FUNCTNAMES functnames on functnames.resid = funct.functname left join SALPT on SALPT.salesid = funct.spid left join sfrdt FR on funct.EvtID =FR.id left join EVENT on EVENT.bookingId = funct.bookingID where funct.StartDate = '12/01/2018' and funct.OffSiteLocation = '' 


$('#BM_ShowSummmary , #BM_ShowSummmaryNext , #BM_ShowSummmaryNext2 ,#bookingSummary').on('click',function()
{
if(($('#bookingName').val()=='')||($('#bookingName').val()==null))
{
alert('Function must be Loaded or saved before opening Summary');

}
else
{

FunctionID=blling_FunctionID;
$('#FunctionSummaryModal').modal('show');
$('#FunctionSummaryModal').css("width","100%");
$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_getForeCasting.php",
data : {FunctionID :blling_FunctionID},
success : function(data)
{	
//(data);

$('#FA_FuncCharTbl tbody').html(data);

}
});


}


});




Forecasting


$('#EdFunc_Summary,#EdFunc_Forecast').on('click',function()
{

var query = "select  ServDetName,ServDetChrg,'0' as Discount ,(ServDetChrg*(0.2)) as ServiceCharge,  ServDetQty,(ServDetChrg*(.07)) as StateTax ,(ServDetChrg*ServDetQty) as  SubTotal from SERVDET where FunctID ='"+objFunctionID.FunctionID+"' union all  select 'Total' as ServDetName, sum(ServDetChrg),'0' as Discount ,sum((ServDetChrg*(0.2))) as ServiceCharge,sum(ServDetQty) as ServDetQty,sum((ServDetChrg*(.07))) as StateTax ,sum((ServDetChrg*ServDetQty)) as  SubTotal from SERVDET where FunctID ='"+objFunctionID.FunctionID+"'";

//////
var html="";
$.each(JSON.parse(CRUD(query)), function( index, value ) {
html+="<tr><td>"+value.ServDetName+"</td><td>"+value.ServDetChrg+"</td><td>"+value.Discount+"</td><td>"+value.ServiceCharge+"</td><td>"+value.StateTax+"</td><td>"+value.SubTotal+"</td></tr>"
})

$('#FA_FuncCharTbl tbody').html(data);
$('#FunctionSummaryModal').modal('show');

});

if(objTracesReports.RS_Tr_DisplayOnTrace)
{

var newjson = new Array();
var x =objTracesReports.RS_FN_FunctionList;
x = x.replace(/^"\?/, '');
x=x.replace(/"+$/,'');
var y = x.replace(/"']/g, "").split(',')  
$.each(jsonData, function(key, value){
newjson.push(objTracesReports.copyObjectProps(value,y))
});
jsonData=newjson;

}
if(objTracesReports.RS_Tr_SortedBy)
{

// multisortby = _.map(_.groupBy(jsonData, 'date'), (value, key) => ({key]: _.groupBy(value, 'foo')}));
// jsonData=multisortby;

}




if(objTracesReports.RS_Tr_DisplayOnTrace)
{

var newjson = new Array();
var x =objTracesReports.RS_Tr_DisplayOnTrace;
//////console.log(x)
if(x)

{

x = x.replace(/^"\?/, '');
x=x.replace(/"+$/,'');
var y = x.replace(/"']/g, "").split(',')  
$.each(jsonData, function(key, value){
newjson.push(objTracesReports.copyObjectProps(value,y))
});
jsonData=newjson;

}	

}
if(objTracesReports.RS_Tr_SortedBy)
{

// multisortby = _.map(_.groupBy(jsonData, 'date'), (value, key) => ({key]: _.groupBy(value, 'foo')}));
// jsonData=multisortby;

}

if(objTracesReports.RS_Tr_DisplayOnTrace)
{

var newjson = new Array();
if(objBookingReports.RS_FN_FunctionList!="undefined" ||objBookingReports.RS_FN_FunctionList!="")
{
var x =objTracesReports.RS_FN_FunctionList.toString();
x = x.replace(/^"\?/, '');
x=x.replace(/"+$/,'');
var y = x.replace(/"']/g, "").split(',')  
$.each(jsonData, function(key, value){
newjson.push(objTracesReports.copyObjectProps(value,y))
});
jsonData=newjson;
}
}
if(objTracesReports.RS_Tr_SortedBy)
{

// multisortby = _.map(_.groupBy(jsonData, 'date'), (value, key) => ({key]: _.groupBy(value, 'foo')}));
// jsonData=multisortby;

}



///////////////


// if(objTracesReports.RS_Tr_DisplayOnTrace)
// {

// var newjson = new Array();
// var x =objTracesReports.RS_Tr_DisplayOnTrace.toString();
// x = x.replace(/^"\?/, '');
// x=x.replace(/"+$/,'');
// var y = x.replace(/"']/g, "").split(',')  
// $.each(jsonData, function(key, value){
// newjson.push(objTracesReports.copyObjectProps(value,y))
// });
// jsonData=newjson;

// }
// if(objTracesReports.RS_Tr_SortedBy)
// {

multisortby = _.map(_.groupBy(jsonData, 'date'), (value, key) => ({key]: _.groupBy(value, 'foo')}));
jsonData=multisortby;

// }

objBookingReports.SetupParams={
GRCArray:GRCArray,
ServiceHeadersArray:ServiceHeadersArray,
sectionsArray:sectionsArray,
MarketSegmentArray:MarketSegmentArray,
ServiceHeadersArray:ServiceHeadersArray,
salesPersonArray:salesPersonArray,
statusArray:statusArray,
ServiceDescriptionArray:ServiceDescriptionArray
};



left join TSLTT on TSLTT.FunctID = fn.functid left join SFRDT on SFRDT.FrdID = TSLTT.FRID 

left join sfrdt fr on funct.functroomid=fr.userdeffunctroom_id 


report categories
BookingReports CateringReports CustomerReports SetupReports GroupRoomsReports LostBusinessReports

else if(data == "2")
{
$('#errormsg').hide();
$('#errormsg2').show();
$('.mainContainer').css('height','39.66%!important');
}
else if(data == "1")
{
$('.mainContainer').css('height','37.66%!important');
//window.location = '../DashBoard';
$('#errormsg').hide();
$('#errormsg2').hide();
}
c:\Program Files\Microsoft SQL Server\MSSQL10_50.SQLEXPRESS\MSSQL\Backup\

todname	/////////////
$uname= preg_replace('/\s+/', '_', $_POST'uname']);
$query1="select * from users where name = '".$uname."' and password='".$_POST'pass']."'";
echo $query1;
$getUser = $conn->query($query1);

if($getUser->fetchColumn() > 0 )
{
print_r($getUser->fetchColumn());
print_r($getUser->fetchAll(PDO::FETCH_OBJ));				
foreach($getUser->fetchAll(PDO::FETCH_OBJ) as $user)
{

$name=$user->name;
echo $name;
$name=str_replace('_', ' ', $name);
$_SESSION'nameProfile'] = $name;
$_SESSION'userMail'] = $getUser->email;
echo $_SESSION'nameProfile'];
}
if($_SESSION'nameProfile'])
{echo "1";}

}		
else
{
echo "2";
}
//////////////////////



$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_ServiceSummary.php",
data : {ServiceSummary:"1",FunctionID:fnId},
success:function(data){

////////////console.log(data);

if(data=='' || data==null)
{
('no data');
}
else
{
$('#tbl_ServiceSummary tbody').html('');
$('#tbl_ServiceSummary tbody').html(data);
}

}
});

var query="";

$.each(JSON.parse(CRUD(query)), function( index, value ) {

var Service_Time=$row_ServiceSummary->HeaderDesc ;
var M_StartTime=$row_ServiceSummary->M_StartTime ;
var M_EndTime=$row_ServiceSummary->M_EndTime ;


})



foreach($row_ServiceSummary= $GetServiceSummary->fetchAll(PDO::FETCH_OBJ))
{

$Service_Time=$row_ServiceSummary->HeaderDesc ;
$M_StartTime=$row_ServiceSummary->M_StartTime ;
$M_EndTime=$row_ServiceSummary->M_EndTime ;


echo '<tr><td colspan="4" style="width:30%">'.$row_ServiceSummary->HeaderDesc.'</td><tr>
<tr><td colspan="4" style="width:30%">'.$row_ServiceSummary->HeaderDesc.'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'.$M_StartTime.'-'.$M_EndTime.'</td><tr>';

echo "select ServItemID,ServItemName ,CAST(ServItemChrg AS DECIMAL(12,2)) as D_price,CAST((ServItemChrg*ServItemQty) AS DECIMAL(12,2)) as D_Total from FUNCT fn left join SERVITEMS ss on fn.FunctID = ss.FunctID left join SERVTIME st on ss.ServTimeID = st.ServTimeID left join SERVDESC sd on st.servdescid =sd.servdescid where ServTime='".$row_ServiceSummary->ServTime."' AND ServEndTime='".$row_ServiceSummary->ServEndTime."' AND ss.FunctID='".$_POST"FunctionID"]."' AND ServItemID='".$row_ServiceSummary->ServItemID."' order by ss.FunctID ";


$GetServiceItem = $conn->query("select ServItemID,ServItemName ,CAST(ServItemChrg AS DECIMAL(12,2)) as D_price,CAST((ServItemChrg*ServItemQty) AS DECIMAL(12,2)) as D_Total from FUNCT fn left join SERVITEMS ss on fn.FunctID = ss.FunctID left join SERVTIME st on ss.ServTimeID = st.ServTimeID left join SERVDESC sd on st.servdescid =sd.servdescid where ServTime='".$row_ServiceSummary->ServTime."' AND ServEndTime='".$row_ServiceSummary->ServEndTime."' AND ss.FunctID='".$_POST"FunctionID"]."' AND ServItemID='".$row_ServiceSummary->ServItemID."' order by ss.FunctID "); 

foreach($row_ServiceItem= $GetServiceItem->fetchAll(PDO::FETCH_OBJ))
{


if($row_ServiceItem->D_price!=0.00 AND $row_ServiceItem->ServItemQty!=0.00 AND $row_ServiceItem->D_Total!=0.00)
{
$i=1;
echo '<tr tabindex="-1" data-secondmenu="'.$i.'">
<td>'.$row_ServiceItem->ServItemName.'</td>
<td class="ES_Price editable" contenteditable >'.$row_ServiceItem->D_price.'</td>
<td class="ES_Qty editable" contenteditable>'.$row_ServiceItem->ServItemQty.'</td>
<td class="ES_Total editable" contenteditable >'.$row_ServiceItem->D_Total.'</td>
</tr>';
}
else 
{
$i=1;
echo '<tr tabindex="-1" class="Menu3tr'.$i.'">
<td colspan="4">'.$row_ServiceItem->ServItemName.'</td>
</tr>';
}

} 

}





$('#tbl_ServiceSummary tbody').html('');
$('#tbl_ServiceSummary tbody').html(data)


////////////////	
/*JS for company name autosuggestion*/
$(document).ready(function(){

$.ajax({
method:"POST",
url: "assets/ajax/ajax_companyList.php",
success:function(data){
$('#companyName').html(data);
$('#scompanyName').html(data);
}
});
});

/* Validation for Sing In*/
function validSign()
{
if($('#cname').val() == '' || $('#cname').val() == null)
{
$('#cname').css('border-color','red');
$('#errorCname').css('color','red');
$('#errorCname').html("Please Enter company Name.");
return false;
}
else if($('#uname').val() == '' || $('#uname').val() == null)
{
$('#cname').css('border-color','#ccc');
$('#errorCname').hide();
$('#uname').css('border-color','red');
$('#errorUname').css('color','red');
$('#errorUname').html("Please Enter Username.");
return false;
}
else if($('#password').val() == '' || $('#password').val() == null)
{
$('#uname').css('border-color','#ccc');
$('#errorUname').hide();
$('#password').css('border-color','red');
$('#errorPass').css('color','red');
$('#errorPass').html("Please Enter Password.");
return false;
}
else
{
$('#password').css('border-color','#ccc');
$('#errorPass').hide();
signIn($('#cname').val(),$('#uname').val(),$('#password').val());
return true;
}
}

/*Ajax for Sign In*/
function signIn(cname, uname, pass)
{
$.ajax({
method: "POST",
url: "assets/ajax/ajax_signIn.php",
data: {cname : cname, uname : uname , pass : pass}, 

success:function(data){
if(data == "0")
{
$('#errormsg').show();
$('#errormsg2').hide();
}
else if(data == "2")
{
$('#errormsg').hide();
$('#errormsg2').show();
}
else
{
window.location = '../DashBoard';
$('#errormsg').hide();
$('#errormsg2').hide();
}
}
});
}

/*Validation for Sign up*/
$(function(){
$('#scname').change(function(){
var sc = $(this).val();
if(sc == '' || sc == null)
{
$(this).css('border-color','red');
$('#serrorCname').show();
$('#serrorCname').css('color','red');
$('#serrorCname').html("Please Enter Company Name.");
$('#role').prop("disabled",true);
$('#userName').prop("disabled",true);
$('#spassword').prop("disabled",true);
$('#Cpassword').prop("disabled",true);
$('#email').prop("disabled",true);
return false;
}
else
{
$.ajax({
method: "POST",
url: "assets/ajax/ajax_checkCompany.php",
data: {company : sc}, 
success:function(data){
if(data == "0")
{
$('#serrorCname').css('color','red');
$('#serrorCname').show();
$('#serrorCname').html("No Company Found of Such Name.");
$('#role').prop("disabled",true);
$('#userName').prop("disabled",true);
$('#spassword').prop("disabled",true);
$('#Cpassword').prop("disabled",true);
$('#email').prop("disabled",true);
}
else
{
$('#serrorCname').hide();	
$('#role').removeAttr("disabled");
$('#userName').removeAttr("disabled");
$('#spassword').removeAttr("disabled");
$('#Cpassword').removeAttr("disabled");
$('#email').removeAttr("disabled");
}
}
});
}
});
});

function validSignUp()
{
if($('#role').val() == '' || $('#role').val() == null)
{
$('#role').css('border-color','red');
$('#errorrole').css('color','red');
$('#errorrole').html("Please Enter Role.");
return false;
}
else if($('#name').val() == '' || $('#name').val() == null)
{
$('#role').css('border-color','#ccc');
$('#errorrole').hide();
$('#name').css('border-color','red');
$('#errorname').css('color','red');
$('#errorname').html("Please Enter Username.");
return false;
}
else if($('#userName').val() == '' || $('#userName').val() == null)
{
$('#name').css('border-color','#ccc');
$('#errorname').hide();
$('#userName').css('border-color','red');
$('#errorusername').css('color','red');
$('#errorusername').html("Please Enter Username.");
return false;
}
else if($('#spassword').val() == '' || $('#spassword').val() == null)
{
$('#userName').css('border-color','#ccc');
$('#errorusername').hide();
$('#spassword').css('border-color','red');
$('#errorpassword').css('color','red');
$('#errorpassword').html("Please Enter Password.");
return false;

}
else if($('#Cpassword').val() == '' || $('#Cpassword').val() == null)
{
$('#spassword').css('border-color','#ccc');
$('#errorpassword').hide();
$('#Cpassword').css('border-color','red');
$('#errorCpassword').css('color','red');
$('#errorCpassword').html("Please Enter Confirm Password.");
return false;
}
else if($('#spassword').val() != $('#Cpassword').val())
{
$('#Cpassword').css('border-color','red');
$('#errorCpassword').css('color','red');
$('#errorCpassword').html("Password and Confirm Password are not same.");
}
else if($('#email').val() == '' || $('#email').val() == null)
{	
$('#Cpassword').css('border-color','#ccc');
$('#errorCpassword').hide();
$('#email').css('border-color','red');
$('#erroremail').css('color','red');
$('#erroremail').html("Please Enter Email.");
return false;
}
else
{
$('#email').css('border-color','#ccc');
$('#erroremail').hide();
signUp($('#role').val(),$('#name').val(),$('#scname').val(), $('#userName').val(), $('#spassword').val(), $('#email').val());
return true;
}
}

/*Email validation for sign Up*/
$(function() {
$('#email').change(function(){
var e = $('#email').val();
var a = e.indexOf("@");
var dotpos = e.lastIndexOf(".");
if (a<1 || dotpos<a+2 || dotpos+2>=e.length) 
{
$('#erroremail').html("Please Enter Correct Email.");
$('#erroremail').css('color','red');
$('#email').css('border-color','red'); 
return false;
}
else if(e != '')
{
$('#erroremail').hide();
$('#email').css('border-color','#ccc');
}
}); 
});

/*Ajax For sign up*/
function signUp(r, n, c, u, p, e)
{
$('.loader').show();
$.ajax({
method: "POST",
url: "assets/ajax/ajax_signUp.php",
data: {role : r, name :n, cname : c, uname : u , pass : p , email : e}, 
success:function(data){
$('.loader').hide();
/*if(data == "0")
{
$('#serrormsg').show();
}
else*/ if(data == "1")
{
$('#serrormsg1').show();
}
else
{
//alert("User Registered...");
window.location.href = '../login/index.php';
}
}
});
}

function validreset()
{
if ( $('#resetuserName').val() == '' || $('#resetuserName').val() == null ) 
{
$('#errorResetuserName').css('color' , 'red');
$('#resetuserName').css('border-color' , 'red');
$('#errorResetuserName').html("Please Enter Username.");
return false;
}
else if ($('#sresetpassword').val() == '' || $('#sresetpassword').val() == null) 
{  
$('#resetuserName').css('border-color' , '#ccc');
$('#errorResetuserName').hide();
$('#errorsresetpassword').css('color' , 'red');
$('#sresetpassword').css('border-color' , 'red');
$('#errorsresetpassword').html("Please Enter Password.");
return false;
}
else if ($('#Cresetpassword').val() == '' || $('#Cresetpassword').val() == null) 
{ 
$('#sresetpassword').css('border-color' , '#ccc');
$('#errorsresetpassword').hide();
$('#errorCresetpassword').css('color' , 'red');
$('#Cresetpassword').css('border-color' , 'red');
$('#errorCresetpassword').html("Please Enter Confirm Password.");
return false;
}
else if (($('#Cresetpassword').val()) !=  ($('#sresetpassword').val() )) 
{ 
$('#Cresetpassword').css('border-color' , '#ccc');
$('#errorCresetpassword').hide();
$('#errorCresetpassword').css('color' , 'red');
$('#Cresetpassword').css('border-color' , 'red');
$('#errorCresetpassword').html("Confirm Password Should Be Same As New Password.");
return false;
}
else{
$('#Cresetpassword').css('border-color' , '#ccc');
$('#errorCresetpassword').hide();
var pass = $('#sresetpassword').val();
var id = $('#hideVal').val();
$('.loader').show();
$.ajax({
method: "POST",
url: "assets/ajax/ajax_resetPassword.php",
data: {id : id, pass : pass}, 
success:function(data){
//alert(data);
window.location.href='../login/index.php' ;
}
});
return true;
}
}

/*Email validation for Reset password*/
function resetPassword()
{	
var email = $('#reswetEmail').val();
comName = $('#rcname').val();
if(comName == '' || comName == null)
{
$('#rerrorCname').html("Please Enter Company Name.");
$('#rerrorCname').css('color','red');
$('#rcname').css('border-color','red'); 
return false;
}
else if(email == '' || email == null)
{
$('#rerrorCname').hide();
$('#rcname').css('border-color','#ccc');
$('#reseterroremail').html("Please Enter Email.");
$('#reseterroremail').css('color','red');
$('#reswetEmail').css('border-color','red'); 
return false;
}
else
{	
$.ajax({
method: "POST",
url: "assets/ajax/ajax_checkMail.php",
data: {cname : comName, email : email}, 
success:function(data){
$('.loader').hide();
if(data == "0")
{
$('#rserrormsg').show();
}
else if(data == "1")
{
$('#rserrormsg1').show();
}
else
{
var cData = JSON.parse(data);
$('#resetuserName').val(cData.userName);
$('#hideVal').val(cData.UserDef_ID);
$('#resetContainer').show();
$('#resetemailContainer').hide();
$('#signInContainer').hide();
}
}
});
}
}

$(function() {
$('#reswetEmail').change(function(){
var e = $('#reswetEmail').val();
var a = e.indexOf("@");
var dotpos = e.lastIndexOf(".");
if (a<1 || dotpos<a+2 || dotpos+2>=e.length) 
{
$('#reseterroremail').html("Please Enter Correct Email.");
$('#reseterroremail').css('color','red');
$('#reswetEmail').css('border-color','red'); 
return false;
}
else if(e != '')
{
$('#reseterroremail').hide();
$('#reswetEmail').css('border-color','#ccc');
}
}); 
});




///////////


var query="select CompanyName,DBname ,LocationId from tbl_company where CompanyName = '"+cname+"' ";
var Company = JSON.parse(CRUD(query)0];
if(CompanyName)
{
var query="select * from users where name = '"+uname.trim()+"' and password='"+pass.trim()+"'";
var user = JSON.parse(CRUD(query))0];

if(user)
{
$.ajax({
method: "POST",
url: "assets/ajax/ajax_signIn.php",
data: {cname : Company.CompanyName,DBname: uname :Company.DBname, user:user.UserName, email : user.email}, 
success:function(data){
window.location = '../DashBoard/index.php';
$('#errormsg').hide();
$('#errormsg2').hide();	
}
});

///////////


Please add the following catering staff members for our Beta test application:

INSERT INTO user(name,password,email)
VALUES('Sherri Perez',password,email),
('Sarah Harris',password,email),
(name,password,email),
(name,password,email),
(name,password,email)

Sherri Perez  sherrip@thedac.com Catering Director

Sarah Harris sarahh@thedac.com Asst. Catering Director

Ashley Adamski ashleya@thedac.com Catering Coordinator

Lindsay Cameron lindsayc@thedac.com Catering Coordinator

Emily Frederick emilyf@thedac.com Senior Catering Coordinator

Connar McLeod connarm@thedac.com Catering Coordinator

Alex Pelyak alexp@thedac.com Catering Coordinator

Lyz Sandler lyzs@thedac.com Assistant Catering Coordinator


Ideally, we need to be able to add members ourselves as there is usually turnover in this department.

////////////////


$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_ServiceSummary.php",
data : {Add:"Add",values1 :values1,ES_ServiceTimes:ES_ServiceTimes,ES_ServiceStart:ES_ServiceStart,ES_ServiceEnd:ES_ServiceEnd,FunctionID:objServices.FunctionID,ES_Category:ES_Category},
success:function(data){

//////console.log(data);
if(data=='inserted')
{

$('#EditServiceModal').modal('hide');

}
else
{

//alert('data not inserted');
}

}
});


//////////////////////////

//ChangeServieDescription
$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_ServiceSummary.php",
data : {ChangeServieDescription:"ChangeServieDescription",values1 :values1,ES_ServiceTimes:ES_ServiceTimes,ES_ServiceStart:ES_ServiceStart,ES_ServiceEnd:ES_ServiceEnd,FunctionID:objServices.FunctionID,ES_Category:ES_Category,previous_Serv_time:previous_Serv_time},
success:function(data){
//////console.log(data)
if(data=='updated')
{

$('#EditServiceModal').modal('hide');
}
else
{

//alert('data not inserted');
}

}
});

///////////////////////
var checkEditFunctionLoc = "0";

$('#FA_Forecasting').on('click',function(){
alert("Under Progress.");
return ;
});

$('#EdFunc_Status').val('2').prop('selected',true);

$('#FA_EditFunctionmodal').on('shown.bs.modal', function(){

if(Iframe != "Availability")
{

$('#EdFunc_Setup').val('1.0').prop('selected',true);
$('#EdFunc_KnckDwn').val('1.0').prop('selected',true);
$('#EdFunc_Salesperson').val('1').prop('selected',true);
$('#EdFunc_Date').val(sessionStorage.getItem('date'));
checkEditFunctionLoc = "1";

}
});


$('#FA_EditFunctionmodal').on("hidden.bs.modal", function(){
if(checkEditFunctionLoc == "1")
{
$('#EdFunc_OffSite').prop('checked',false);
$('#EdFunc_Unmovable').prop('checked',false);
$('#EdFunc_Leftdiv').remove();
$('#EdFunc_Rightdiv').remove();
$('#EdFunc_Post').prop('disabled',false);
$('#EdFunc_Status').prop('disabled',false);
$('#EdFunc_Status').val('2').prop('selected',true);
$('#EdFunc_Date').prop('disabled',false);
$('#EdFunc_StartTime').prop('disabled',false);
$('.func_pointer').css('cursor', 'none');
$('#EdFunc_EndTime').prop('disabled',false);
$('#EdFunc_Exp').prop('disabled',false);
$('#EdFunc_Gtd').prop('disabled',false);
$('#EdFunc_Set').prop('disabled',false);
$('#EdFunc_Salesperson').prop('disabled',false);
$('#EdFunc_Salesperson').val('1').prop('selected',true);
$('#EdFunc_SiteContact').prop('disabled',false);
$('#EdFunc_ConfirmDate').prop('disabled',false);
$('#EdFunc_ContactDate').prop('disabled',false);
$('#EdFunc_SetupType').prop('disabled',false);
$('#EdFunc_SetupType').val('');
$('#EdFunc_Setup').prop('disabled',false);
$('#EdFunc_KnckDwn').prop('disabled',false);
$('#EdFunc_Setup').val('1.0').prop('selected',true);
$('#EdFunc_KnckDwn').val('1.0').prop('selected',true);
$('#EdFunc_RentType').prop('disabled',false);
$('#EdFunc_Revenue').prop('disabled',false);
$('#EdFunc_OffSite').css('pointer-events','auto');
$('#b_tab ul li').removeClass('active');
$('#b_tab ul li:first-child').addClass('active');
$('#FA_RoomSelectionTab').removeClass('active');
$('#FA_DetailTab').addClass('active');
$('#FA_DetailTab').addClass('fade in');
$(this).find('inputtype=text]').val('');
$(this).find('inputtype=time]').val(''); 
$(this).find('inputtype=number]').val('');
$(this).find('selectid=EdFunc_Funtion]').val('');
$('#FunctionUpdateFunctionId').val('');
$('#EdFunc_RightList').html('');
$('.func_pointer').css('cursor', 'pointer');
$('#EdFunc_OffSitelist').removeClass('func_right');
$('#EdFunc_RightList').removeClass('EdFunc_Rightdiv');
$('#EdFunc_Leftdiv').remove();
checkEditFunctionLoc = "0";
}
});


function validateSaveOffsiteFuncAgenda()
{
var Save_Starttime = $('#EdFunc_StartTime').val();
var Save_Endtime =  $('#EdFunc_EndTime').val();
var Timeval =Save_Starttime.split(':');
var hours = Timeval0];
var minutes = Timeval1];
var ampm = hours >= 12 ? 'pm' : 'am';
var valSave_Starttime = Save_Starttime + ampm;
var valSave_Endtime = Save_Endtime + ampm;

// if ($('#EdFunc_Funtion').val() == 0){
// 	alert("Please Select Function.");
// 	return ;
// }
if ($('#EdFunc_Status').val() == ''){
alert("Please Select Status.");
return ;
} 
else if (valSave_Starttime == valSave_Endtime)
{
alert("Start time and End time can not be same.");
return ;
}
else if(valSave_Starttime > valSave_Endtime)
{
alert("End time should not smaller than start time.");
return ;
}
else
{
return true;
}
}


//////////////////


function functionAgendaData(bookingId)
{
fabookingId=bookingId;

var query="select starttime as stime,functname,frname,EvtStatus,funct.functId as funID,functexpnumppl,functgtdnumppl,functactnumppl,setuptime,knockdowntime,renttype,renttype,confDate  from FUNCT funct  left join EVENT bkg on  funct.evtid =bkg.EvtID  left join SALPT slps on funct.SPID=slps.SalesID left join SYS_STATDESC sts on sts.statusid=bkg.EvtStatus left join tsltt on tsltt.functid = FUNCT.functid left join SFRDT on tsltt.frid = SFRDT.FrdID left join contacts cnt on funct.onsitecontact=cnt.ContactID left join SERVDETSETUP sd on bkg.EvtID=sd.ServHdrID  where bkg.evtid = '"+bookingId+"' and bkg.EvtStatus != '4' order by funct.functid desc";

//////console.log(JSON.parse(CRUD(query)));

// EvtStatus: "1"
// confDate: "2008-01-09"
// frname: "The Pechet Room"
// funID: "14721"
// functactnumppl: "0"
// functexpnumppl: "13"
// functgtdnumppl: "25"
// functname: "Meeting"
// knockdowntime: ".5"
// renttype: "1"
// setuptime: ".5"
// stime: "16:00:00"

var html='';
$('#functionagendaTable tbody').html('');
$.each(JSON.parse(CRUD(query)), function( index, value ) {

html = html+"<tr funid="+value.funID+" ><td tabindex='-1' class='date_"+value.funID+"' id='date_"+value.funID+"'>".startdate+"</td><td tabindex='-1' class='data_"+value.funID+"' id='time_"+value.funID+"'>"+value.stime+"</td><td tabindex='-1' class='data_"+value.funID+"' id='funSelect_"+value.funID+"'>"+value.functname+"</td><td tabindex='-1' class='data_"+value.funID+"' id='funRoom_"+value.funID+"'>"+value.frname+"</td><td tabindex='-1' class='data_"+value.funID+"' id='status_"+value.funID+"'>"+value.EvtStatus+"</td><td tabindex='-1' class='data_"+value.funID+"' id='sale_"+value.funID+"'>""</td><td tabindex='-1' class='data_"+value.funID+"' id='exp_"+value.funID+"'>"+value.functexpnumppl+"</td><td tabindex='-1' class='data_"+value.funID+"' id='gtd_"+value.funID+"'>"+value.functgtdnumppl+"</td><td tabindex='-1' class='data_"+value.funID+"' id='set_"+value.funID+"'>"+value.functactnumppl+"</td><td tabindex='-1' class='data_"+value.funID+"' id='setuptype_"+value.funID+"'>""</td><td tabindex='-1' class='data_"+value.funID+"' id='setuptime_"+value.funID+"'>"+value.setuptime+"</td><td tabindex='-1' class='data_"+value.funID+"' id='kncktime_"+value.funID+"'>"+value.knockdowntime+"</td><td tabindex='-1' class='data_"+value.funID+"' id='rental_"+value.funID+"'>"+value.renttype+"</td><td tabindex='-1' class='data_"+value.funID+"' id='reven_"+value.funID+"'>"+value.renttype+"</td><td tabindex='-1' class='data_"+value.funID+"' id='contact_"+value.funID+"'>"+value.firstname+' '+value.lastname+"</td><td tabindex='-1' class='data_"+value.funID+"' id='confdate_"+value.funID+"'>".$confDate+"</td><td tabindex='-1' class='data_"+value.funID+"' id='move_"+value.funID+"'>".$unmove+"</td></tr>";
})

$('#functionagendaTable tbody').html(html);

}


Name	Rooms(s)	Status Set Rental	Contact	Confirm Date	Movable


var bookingFlag = "1";
$('#functionagendaTable tbody').html('');
//////console.log(bookingId)
$.ajax({
method : "POST",
async : false,
data : { bookingId : bookingId , bookingFlag : bookingFlag },
url : "../Booking/assets/ajax/ajax_getBookingData.php",
success : function(data){
//////console.log(data);
if(data != '')
{

}
}
});




/////////////

.on("click", "#functionagendaTable tr td", function(e) {
cid = $(this).attr('class');
funId = cid.split("_");
var id  = $(this);
clicks++;  //count clicks
if(funId0] == 'date' )//edit function
{
if(clicks === 1) 
{
timer = setTimeout(function() {
clicks = 0;  //after action performed, reset counter
}, DELAY);
} 
else 
{
clearTimeout(timer);  //prevent single-click action
//EditFunctionAgenda(funId1]);  //perform double-click action
clicks = 0;  //after action performed, reset counter
}
}
else//edit filed
{
if(clicks === 1) 
{
timer = setTimeout(function() {
clicks = 0;  //after action performed, reset counter
}, DELAY);
} 
else 
{
clearTimeout(timer);  //prevent single-click action
//perform double-click action
var contType = id.attr('id').split("_");
if(contType0] == "funSelect")
{
var sel = '<select id="FuntionAgendaEditFunctionDropD" name="FuntionAgendaEditFunctionDropD" class="form-control selectpicker"></select>';
id.html(sel);
$.ajax({
method : "POST",
url : "../Availability/assets/ajax/ajax_getFunction.php",
async : false,
success:function(data)
{
$('#FuntionAgendaEditFunctionDropD').html(data);
}
});
$('#FuntionAgendaEditFunctionDropD').on('change mouseout', function(){
$.ajax({
method : "POST",
async : false,
url : "../Booking/assets/ajax/ajax_updateFunctionAgendaCell.php",
data : { type : contType, value : $(this).val() },
success : function(data){
GetFunctionAgenda(data);
}
});
});
}
else if(contType0] == "status")
{
var sel = '<select id="FuntionAgendaEditFunctionStatus" name="FuntionAgendaEditFunctionStatus" class="form-control selectpicker"></select>';
id.html(sel);
$('#FuntionAgendaEditFunctionStatus').html(getStatus());
$('#FuntionAgendaEditFunctionStatus').on('change mouseout', function(){
$.ajax({
method : "POST",
async : false,
url : "../Booking/assets/ajax/ajax_updateFunctionAgendaCell.php",
data : { type : contType, value : $(this).val() },
success : function(data){
GetFunctionAgenda(data);
}
});
});
}
else if(contType0] == "sale")
{
var sel = '<select id="FuntionAgendaEditFunctionSalesP" name="FuntionAgendaEditFunctionSalesP" class="form-control selectpicker"></select>';
id.html(sel);
$('#FuntionAgendaEditFunctionSalesP').html(localStorage.getItem("getSalesPerson"));
$('#FuntionAgendaEditFunctionSalesP').on('change mouseout', function(){
$.ajax({
method : "POST",
async : false,
url : "../Booking/assets/ajax/ajax_updateFunctionAgendaCell.php",
data : { type : contType, value : $(this).val() },
success : function(data){
GetFunctionAgenda(data);

}
});
});
}
else if(contType0] == "exp")
{
var sel = '<input type="text" class="form-control" id="FuntionAgendaEditFunctionExp" name="FuntionAgendaEditFunctionExp" onkeypress="return event.charCode >= 48 && event.charCode <= 57" min="0" style="padding: 1px;"  value="0">';
id.html(sel);
$('#FuntionAgendaEditFunctionExp').on('change mouseout', function(){
$.ajax({
method : "POST",
async : false,
url : "../Booking/assets/ajax/ajax_updateFunctionAgendaCell.php",
data : { type : contType, value : $(this).val() },
success : function(data){
GetFunctionAgenda(data);
}
});
});
}
else if(contType0] == "gtd")
{
var sel = '<input type="text" class="form-control" id="FuntionAgendaEditFunctionGtd" name="FuntionAgendaEditFunctionGtd" onkeypress="return event.charCode >= 48 && event.charCode <= 57" min="0" style="padding: 1px;" value="0">';
id.html(sel);
$('#FuntionAgendaEditFunctionGtd').on('change mouseout', function(){
$.ajax({
method : "POST",
async : false,
url : "../Booking/assets/ajax/ajax_updateFunctionAgendaCell.php",
data : { type : contType, value : $(this).val() },
success : function(data){
GetFunctionAgenda(data);
}
});
});
}
else if(contType0] == "set")
{
var sel = '<input type="text" class="form-control" id="FuntionAgendaEditFunctionSet" name="FuntionAgendaEditFunctionSet" onkeypress="return event.charCode >= 48 && event.charCode <= 57" min="0" style="padding: 1px;" value="0">';
id.html(sel);
$('#FuntionAgendaEditFunctionSet').on('change mouseout', function(){
$.ajax({
method : "POST",
async : false,
url : "../Booking/assets/ajax/ajax_updateFunctionAgendaCell.php",
data : { type : contType, value : $(this).val() },
success : function(data){
GetFunctionAgenda(data);
}
});
});
}
else if(contType0] == "setuptype")
{
var sel = '<select id="FuntionAgendaEditFunctionSetType" name="FuntionAgendaEditFunctionSetType" class="form-control selectpicker"></select>'; 			

$('#FuntionAgendaEditFunctionSetType').html(getSetuptype());

id.html(sel);
$('#FuntionAgendaEditFunctionSetType').on('change mouseout', function(){
$.ajax({
method : "POST",
async : false,
url : "../Booking/assets/ajax/ajax_updateFunctionAgendaCell.php",
data : { type : contType, value : $(this).val() },
success : function(data){
GetFunctionAgenda(data);
}
});
});
}
else if(contType0] == "rental")
{
var sel = '<select id="FuntionAgendaEditFunctionRental" name="FuntionAgendaEditFunctionRental" class="form-control selectpicker"><option value="Hourly">Hourly</option><option value="Quarter Day">Quarter Day</option> <option value="Half Day">Half Day</option> <option value="Full Day">Full Day</option> <option value="Over-ride">Over-ride</option> <option value="In Package">In Package</option></select>';
id.html(sel);
$('#FuntionAgendaEditFunctionRental').on('change mouseout', function(){
$.ajax({
method : "POST",
async : false,
url : "../Booking/assets/ajax/ajax_updateFunctionAgendaCell.php",
data : { type : contType, value : $(this).val() },
success : function(data){
GetFunctionAgenda(data);
}
});
});
}
else if(contType0] == "reven")
{
var sel = '<input type="text" id="FuntionAgendaEditFunctionReven" name="FuntionAgendaEditFunctionReven" class="form-control">';
id.html(sel);
$('#FuntionAgendaEditFunctionReven').on('change mouseout', function(){
$.ajax({
method : "POST",
async : false,
url : "../Booking/assets/ajax/ajax_updateFunctionAgendaCell.php",
data : { type : contType, value : $(this).val() },
success : function(data){
GetFunctionAgenda(data);
}
});
});
}
else if(contType0] == "contact")
{
var sel = '<select id="FuntionAgendaEditFunctionContact" name="FuntionAgendaEditFunctionContact" class="form-control selectpicker"></select>';
id.html(sel);
$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_getContactName.php",
async : false,
data : { funcId : contType1] },
success:function(data){ //////console.log(data);
$('#FuntionAgendaEditFunctionContact').html(data);
}
});
$('#FuntionAgendaEditFunctionContact').on('change mouseout', function(){
$.ajax({
method : "POST",
async : false,
url : "../Booking/assets/ajax/ajax_updateFunctionAgendaCell.php",
data : { type : contType, value : $(this).val() },
success : function(data){
GetFunctionAgenda(data);
}
});
});
}
else if(contType0] == "move")
{
var sel = '<select id="FuntionAgendaEditFunctionUnMove" name="FuntionAgendaEditFunctionUnMove" class="form-control selectpicker"><option value="1">Yes</option><option value="2">No</option></select>';
id.html(sel);
$('#FuntionAgendaEditFunctionUnMove').on('change mouseout', function(){
$.ajax({
method : "POST",
async : false,
url : "../Booking/assets/ajax/ajax_updateFunctionAgendaCell.php",
data : { type : contType, value : $(this).val() },
success : function(data){
GetFunctionAgenda(data);
}
});
});
}
clicks = 0;  //after action performed, reset counter
}
}
})


/////////


<!-- new edit contact -->
<div class="modal fade" id="NBM_NeditcontactModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-hidden="true">
<div class="modal-dialog modal-lg">
<div class="modal-content">
<div class="modal-header">
<button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">x</span><span class="sr-only">Close</span></button>
<h3 class="modal-title" id="lineModalLabel">Add Contact</h3>
</div>
<div class="modal-body" style="padding-bottom: 0px;">
<!-- content goes here -->
<form>
<div class="row">
<div class="col-sm-12 col-md-12 col-lg-12  no-padding">
<div class="col-sm-2  col-md-2  col-lg-2  form-group">
<label>Salutation</label>
<div class="input-group-addon">
<select id="NBM_NeditcontactSal" name="NBM_NeditcontactSal" class="form-control selectpicker">
</select>
</div>
</div>
<div class="col-sm-4  col-md-4  col-lg-4  form-group">
<label>First Name</label>
<input type="text" class="form-control" id="NBM_NirstName" name="NBM_NFirstName" placeholder="First Name">
</div>
<div class="col-sm-6  col-md-6  col-lg-6  form-group">
<label>Last Name</label>
<input type="text" class="form-control" id="NBM_NLastName" name="NBM_NLastName" placeholder="Last Name">
</div>
</div>
<div class="col-sm-12 col-md-12 col-lg-12">
<div class="col-sm-6 col-md-6 col-lg-6  no-padding">
<div class="col-sm-12 col-md-12 col-lg-12 form-group" style="padding-left:0px;">
<label>Title</label>
<input type="text" class="form-control" id="NBM_NTitle" name="NBM_NTitle" placeholder="Title">
</div>
<div class="col-sm-12 col-md-12 col-lg-12 form-group  no-padding">
<label>Address</label>
<div class="col-sm-12 col-md-12 col-lg-12 form-group" style="padding-left:0px;">
<input type="text" class="form-control" id="NBM_NAddress" name="NBM_NAddress" placeholder="" form-group>
</div>
<!-- <input type="text" class="form-control" id="NBM_" placeholder=""> -->
</div>
</div>
<div class="col-sm-6 col-md-6 col-lg-6  no-padding">
<div class="col-sm-12 col-md-12 col-lg-12" style="padding-right:0px">
<label>Phone Number</label>
<div type="text" class="form-control gridHeight" id="NBM_NEditContactPhoneNumber" name="NBM_NEditContactPhoneNumber"   onkeypress='return event.charCode >= 48 && event.charCode <= 57'>     
</div>
</div>
</div>
</div>
<div class="col-sm-12 col-md-12 col-lg-12 no-padding form-group">
<div class="col-sm-3 col-md-3 col-lg-3" >
<label>City</label>
<input type="text" class="form-control" id="NBM_NCity" name="NBM_NCity" placeholder="City">
</div>
<div class="col-sm-3 col-md-3 col-lg-3">
<label>State</label>
<input type="text" class="form-control" id="NBM_NState" name="NBM_NState" placeholder="State">
</div>
<div class="col-sm-3 col-md-3 col-lg-3">
<label>Postal Code</label>
<input type="text" class="form-control" id="NBM_NPostalCode" name="NBM_NPostalCode" placeholder="Postal Code" onkeypress='return event.charCode >= 48 && event.charCode <= 57'>
</div>
<div class="col-sm-3 col-md-3 col-lg-3">
<label>Country</label>
<div class="input-group-addon">
<select name="NBM_NCountry1" id="NBM_NCountry1" class="form-control selectpicker">
</select>
</div>
</div>
</div>
<div class="col-sm-12 col-md-12 col-lg-12 no-padding form-group">
<div class="col-sm-6 col-md-6 col-lg-6  no-padding">
<div class="col-sm-12 col-md-12 col-lg-12">
<label>Other Field</label>
<textarea type="text" class="form-control" rows="7" id="NBM_NOtherField" name="NBM_NOtherField" placeholder="Address" style="resize: none; overflow-y: scroll;">            
</textarea>
</div>
</div>
<div class="col-sm-6 col-md-6 col-lg-6  no-padding">
<div class="col-sm-12 col-md-12 col-lg-12 form-group">
<label>Contact Type</label>
<div class="input-group-addon">
<select name="NBM_NContactType" id="NBM_NContactType" class="form-control selectpicker">
</select>
</div>
</div>
<div class="col-sm-12 col-md-12 col-lg-12">
<label>Email Address</label>
<input type="text" class="form-control" id="NBM_NEmailAddress" name="NBM_NEmailAddress" placeholder="Email Address">
</div>
<div class="col-sm-12  col-md-12  col-lg-12 form-group checkbox">
<div class="col-sm-6  col-md-6  col-lg-6 ">
<label>
<input type="checkbox" id="NBM_NSendEmails" name="NBM_NSendEmails" disabled  disabled >Send Emails
</label>
</div>
<div class="col-sm-6  col-md-6  col-lg-6 ">
<label>
<input type="checkbox" id="NBM_NActive" name="NBM_NActive" checked>Active
</label>
</div>
</div>
</div>
</div>
<div class="col-lg-12 col-md-12 col-sm-12 ">
<div class="col-lg-1 col-md-1 col-sm-1">
</div>
<div class="col-lg-2 col-md-2 col-sm-2  ">
<button type="button" class="btn Booking-Btn Function-btn" id="NBM_NeditcontactNew" >New</button>
</div>
<div class="col-lg-2 col-md-2 col-sm-2 ">
<button type="button" class="btn Booking-Btn Function-btn" id="NBM_NeditcontactSearch" data-toggle="modal" data-target="#BM_ContactsearchModal"> Search</button>
</div>
<div class="col-lg-2 col-md-2 col-sm-2 ">
<button type="button" class="btn Booking-Btn Function-btn" id="NBM_NeditcontactApply">Apply</button>
</div>
<div class="col-lg-2 col-md-2 col-sm-2 ">
<button type="button" class="btn Booking-Btn Function-btn" id="NBM_NeditcontactOk">Ok</button>
</div>
<div class="col-lg-2 col-md-2 col-sm-2 ">
<button type="button" class="btn Booking-Btn Function-btn" data-dismiss="modal">Cancel</button>
</div>
<div class="col-lg-1 col-md-1 col-sm-1">
</div>
</div>
</div>
</form>
</div>
<hr>
</div>
</div>
</div>


//////////////////////////

var query="update `SlpRooms` set SRHdrID="+objSlpRooms._bookingID+",SRDate="+yyyymmdd($(this).children('td:eq(1)').find("input").val())+", SRTypeID='"+$(this).find(".RB_RoomType").val()+"',Adult='"+$(this).children('td:eq(4)').html()+"', Child='"+$(this).children('td:eq(5)').html()+"', RoomRate='"+$(this).children('td:eq(6)').find("input").val()+"', SRConf='"+ $(this).children('td:eq(7)').html()+"', SROrig='"+$(this).children('td:eq(8)').html()+"',SRBlckd='"+$(this).children('td:eq(9)').html()+"', SRCost='"+$(this).children('td:eq(11)').html()+"',SRPickup='"+$(this).children('td:eq(10)').html()+"', RateSing='"+arr_Rates"Single"]+"',RateDbl='"+arr_Rates"Double"]+"', RateTrip='"+arr_Rates"Triple"]+"', RateQuad='"+arr_Rates"Quad"]+"', RateChild='"+arr_Rates"Child"]+"',Extra='"+arr_Rates"Extra"]+"' where SRID='"+$(this).attr("roomeditblockid")+"'";



CAST(GETDATE() AS DATE)

$('#BM_RbeTbl_tbody>tr').length
c:\Program Files\Microsoft SQL Server\MSSQL10_50.SQLEXPRESS\MSSQL\Backup\

///////////////
$("#BM_Rates_OK").on('click', function(){

var row =$('#BM_RbeTbl tbody trdata-selectedRow="true"]');

objSleepingRooms.GetFinalRates(row);

})

///////////////////
$conn = new PDO("sqlsrv:Server=S132-148-86-127\SQLEXPRESS;Database=test","sa","ndt2sx1@");

if ($conn->connect_error) {
die("Connection failed: " . $conn->connect_error);
}
$search=$conn->query("select * from login1");

if($search->fetchColumn()==0)
{
echo "no data";
exit;
}
else
{
$arr=array();

foreach($search->fetchAll(PDO::FETCH_OBJ) as $row)
{

if($row)
{
$arr] = $row;
}
}
echo json_encode($arr);
exit();
} 

?>

///////////////

if(!sessionStorage.getItem("CateringCategories"))
{

var BookingParam= new Array();
BookingParam.push({CategoryID:2})
var ReportBookingCategories;
$.getScript('../common/js/Class_CRUD.js', function(){
ReportBookingCategories=CRUD("select * from SYS_REPORTSDESC where CategoryID:2");

})

if(ReportBookingCategories)
{
var jsonData=JSON.parse(ReportBookingCategories);
var liStr = '';
$.each(jsonData, function( index, value ) {
liStr +='<li><a category="'+value.ReportName+'" id="'+ value.ReportCode + '"  class="subcategory" >'+ value.ReportName + '</a></li>';
})

}
sessionStorage.setItem("CateringCategories",liStr);

}

if(!sessionStorage.getItem("CustomerCategories"))
{
var BookingParam= new Array();
BookingParam.push({CategoryID:3})

var ReportBookingCategories;
$.getScript('../common/js/Class_CRUD.js', function(){
ReportBookingCategories=CRUD("select * from SYS_REPORTSDESC where CategoryID:3");

})

if(ReportBookingCategories)
{
var jsonData=JSON.parse(ReportBookingCategories);
var liStr = '';
$.each(jsonData, function( index, value ) {
liStr +='<li><a category="'+value.ReportName+'" id="'+ value.ReportCode + '"  class="subcategory" >'+ value.ReportName + '</a></li>';
})

}
sessionStorage.setItem("CustomerCategories",liStr);
}

if(!sessionStorage.getItem("ReportSetupCategories"))
{

$.ajax({
method : "POST",
data : {ReportSetupCategories :'1'},
url : "../common/ajax/ajax_commonCrud.php",
success:function(data){

if(!data)
{
return;
}

var jsonData=JSON.parse(data);
var liStr = '';
$.each(jsonData, function( index, value ) {
liStr +='<li><a category="'+value.ReportName+'" id="'+ value.ReportCode + '"  class="RS_category" >'+ value.ReportName + '</a></li>';
})

sessionStorage.setItem("ReportSetupCategories",liStr);
}
});


}
////////////////////////



Sidebar_functionRoomAV



arr.push({
Table_Name:  $(this).children('td:eq(0)').html(),
Field_Name: $(this).children('td:eq(1)').find('.Field_Name :selected').val()
Display_Name :$(this).children('td:eq(2)').html(),
Available:  $(this).children('td:eq(3)').html(),
PayMethodID: $(this).children('td:eq(4)').find('.PayMethod :selected').val()
});

//////////////////


Get(tableName)
{

var outputData=CRUDFunction("Get",tableName,null);
var jsonData=JSON.parse(outputData);

$('#table_CommonSetup tbody tr').remove();
var row='<tr><th style="width:23%" >Category</center></th><th style="width:23%"><center>Field</center></th><th style="width:23%"><center>Display_Name</center></th><th style="width:23%"><center>Type</center></th><th style="width:23%"><center>PaymentMethod</center></th></tr>';
var row2='';

$.each(jsonData, function( index, value ) {

//UserDefWebPayment_ID, Table_Name, Field_Name, Display_Name, 
//Available, PayMethodID 

row2 =row2+'<tr tabindex="-1" UserDefWebPayment_ID='+value.UserDefWebPayment_ID+' >'+
'<td contenteditable style="width:23%">'+value.Table_Name+'</td>'+
'<td contenteditable style="width:23%"><select class="form-Group Field_Name"/></td>'+
'<td contenteditable style="width:23%">'+value.Display_Name+'</td>'+
'<td contenteditable style="width:23%">'+value.Available+'</td>'+
'<td contenteditable style="width:23%"><select class="form-Group PayMethod"  /></td>'+
'</tr>';

})


$("#table_CommonSetup thead").html('');		
$("#table_CommonSetup tbody").html('');

$("#table_CommonSetup thead").append(row);		
$("#table_CommonSetup tbody").append(row2);

// '+value.Field_Name+'
// '+value.PayMethodID+'

var outputData=CRUDFunction("Get","PayMethods");
var jsonData=JSON.parse(outputData);
var html='';
$.each(jsonData, function( index, value ) {
html += '<option value='+value.MethodID+'>' + value.MethodDesc+ '</option>';
})

$('.PayMethod').html(html)
$('.Field_Name').html('<option value="1">UserDefined</option><option value="2">PaymentField</option>')


$("#table_CommonSetup tbody tr").each(function()
{
$(this).children('td:eq(1)').find('select').val($(this).children('td:eq(1)').attr('PayMethod')).prop('selected',true);
$(this).children('td:eq(5)').find('select').val($(this).children('td:eq(5)').attr('comptracecat')).prop('selected',true);
})


}

New(tableName)
{

var Row ='<tr tabindex="-1" >'+
'<td contenteditable style="width:23%"></td>'+
'<td contenteditable style="width:23%"><select class="form-Group Field_Name"/></td>'+
'<td contenteditable style="width:23%"></td>'+
'<td contenteditable style="width:23%"></td>'+
'<td contenteditable style="width:23%"><select class="form-Group PayMethod"  /></td>'+
'</tr>';

$('#table_CommonSetup tbody').append(Row);

var outputData=CRUDFunction("Get","PayMethods");
var jsonData=JSON.parse(outputData);
var html='';
$.each(jsonData, function( index, value ) {
html += '<option value='+value.MethodID+'>' + value.MethodDesc+ '</option>';
})

$('#table_CommonSetup tbody tr').last().find('.PayMethod').html(html)
$('#table_CommonSetup tbody tr').last().find('.Field_Name').html('<option value="1">UserDefined</option><option value="2">PaymentField</option>')


}



/////////////

initialise -- calculated rates - to do 
default options -to do - find table
user 
user groups

/////////////
var Row ='<tr tabindex="-1" ledgerid='+($("#table_CommonSetup tbody").find("tr :nth-last-child(1)").attr('ledgerid')+1)+'>'+
'<td contenteditable style="width:23%"></td>'+
'<td contenteditable style="width:23%" ></td>'+
'</tr>';



var outputData=CRUDFunction("Get","RMTHDS");
var jsonData=JSON.parse(outputData);
var html='';
$.each(jsonData, function( index, value ) {
html += '<option value='+value.FiscalYear+'>' + value.FiscalYear+ '</option>';
})
$('#BM_ReservationMethod').html(html)

///////////////////////

objCommonSetup.MR_Period();

var outputData=CRUDFunction("Get","MRKT");
var jsonData=JSON.parse(outputData);
var html='';
$.each(jsonData, function( index, value ) {
html += '<option value='+value.MrktID+'>' + value.MrktName+ '</option>';
})
$('#MR_MarketSegment').html(html)

var outputData=CRUDFunction("Get","RoomTypes");
var jsonData=JSON.parse(outputData);
var html='';
$.each(jsonData, function( index, value ) {
html += '<option value='+value.RoomtypeID+'>' + value.RoomType+ '</option>';
})
$('#MR_RoomTypes').html(html)


//MR_FiscalYear change
$(document).on('change', "#MR_FiscalYear", function (evt) 
{
objCommonSetup.MR_Period();
})

////////////////////


var outputData=CRUDFunction("Get","SUTYPES");

var jsonData=JSON.parse(outputData);
var html='';
$.each(jsonData, function( index, value ) {

html += '<option value='+value.sutype+'>' + value.sudesc+ '</option>';

})
//////////



HeaderTypes


select 	sutype, sudesc, PMSAlias, YieldAlias, WebItem 
from 
`ESP2000`.`SUTYPES` 
limit 0, 50



select 	SectionID, SectionName, webLocUrl, webShowAvail, webDfltEvtStatus, webDispIdx, webText 
from 
`ESP2000`.`Sections` 
limit 0, 50


USERDEF_EVENT
select * from USERDEF_CONTACTS

ALTER TABLE USERDEF_LOCATION CHANGE c1 TO c1 int(11)

select * from USERDEF_LOCATION


ALTER TABLE USERDEF_LOCATION CHANGE c1 c1 varchar(11) ,CHANGE UserDefLoc_ID1 UserDefLoc_ID1 varchar(11) 

ALTER TABLE USERDEF_LOCATION ADD COLUMN x3 INT ,ADD COLUMN x4 INT ;


SELECT    table_name,   column_name,   data_type,ordinal_position FROM  INFORMATION_SCHEMA.COLUMNS WHERE table_schema = 'ESP2000'  AND column_name like  '%sect%' ;

select 	UserDefLoc_ID, Parking, Time_Zone 
from 
`ESP2000`.`USERDEF_LOCATION` 
limit 0, 50


USERDEF_CONTACTS tsltt sfrdt USERDEF_EVENT USERDEF_TTRCT USERDEF_WEBPAYMENT

ALTER TABLE USERDEF_LOCATION ADD COLUMN c1 varchar(50)


SELECT COLUMN_NAME,DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE table_name = 'tsltt' and COLUMN_NAME like '%sponsor%'

DROP TABLE IF EXISTS `USERDEF_LOCATION`;


CREATE TABLE ".$_POST"table"]." (COLUMN_NAME 'UserDefLoc_ID ', DATA_TYPE 'int(11) ', COLUMN_NAME 'Parking ', DATA_TYPE 'varchar(255) ', COLUMN_NAME 'Time_Zone ', DATA_TYPE 'varchar(255) ', COLUMN_NAME 'c1 ', DATA_TYPE 'varchar(255) ')

CREATE TABLE tsltt (UserDefCust_ID varchar(50) , Member_Since varchar(50) , Food_Allergies varchar(50) , Member varchar(50) , Sponsor_Member_Number varchar(50) , Member_Type varchar(50) , Previous_Bad_Experience varchar(50))

CREATE TABLE USERDEF_LOCATION (UserDefLoc_ID int(11) , Parking varchar(50) , Time_Zone varchar(50) , c1 varchar(50) )

CREATE TABLE `USERDEF_LOCATION` (
`UserDefLoc_ID` int(11) NOT NULL DEFAULT '0',
`Parking` varchar(255) DEFAULT NULL,
`Time_Zone` varchar(255) DEFAULT NULL,
PRIMARY KEY (`UserDefLoc_ID`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;



SELECT COLUMN_NAME,DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS 
WHERE table_name = 'USERDEF_LOCATION' AND COLUMN_NAME = 'col_name';


select * from USERDEF_LOCATION
UserDefLoc_ID

ALTER TABLE USERDEF_LOCATION RENAME COLUMN "UserDefLoc_ID" TO "UserDefLoc_ID1" varchar(11)


ALTER TABLE USERDEF_LOCATION CHANGE `UserDefLoc_ID1` `UserDefLoc_ID` int

UserDefLoc_ID int
Parking varchar
Time_Zone varchar

drop table  USERDEF_LOCATION1

CREATE TABLE `USERDEF_LOCATION1` (
`UserDefLoc_ID` int(11) ,
`Parking` varchar(255) ,
`Time_Zone` varchar(255) 
) 





////////////////

$(document).ready(function(){


$('.CustomizedFields > li > a ').on('click', function(){

$('.setupTitle').text('');
$('.setupTitle').text($(this).text());

$('.AllSetUp').hide();
$('#Setup_ServiceDescriptions').show(function(){

objServiceDescriptions = new ServiceDescriptions();

$("#left_list #accordion ul > li").each(function()
{

if($(this).css('background-color') == 'rgb(173, 216, 230)') 
{

switch ($(this).children("a").text()) {
case "ServiceDescriptions":
objServiceDescriptions.tableName="USERDEF_ServiceDescriptions";

break;
case "Customer":
objServiceDescriptions.tableName="tsltt";

break;
case "Contact":
objServiceDescriptions.tableName="USERDEF_CONTACTS";

break;
case "Booking":
objServiceDescriptions.tableName="USERDEF_EVENT";

break;		
case "Function Room":
objServiceDescriptions.tableName="sfrdt";

break;
case "Trace":
objServiceDescriptions.tableName="USERDEF_TTRCT";

break;
case "Function":
objServiceDescriptions.tableName="UserDef_Funct";

break;
case "Function":
objServiceDescriptions.tableName="UserDef_Funct";

break;

}

}

})

objServiceDescriptions.GetColumns();
});

});

$('.setupmenu').on('click', function(){

$('.setupTitle').text('');
$('.setupTitle').text($(this).text());

$('.AllSetUp').hide();
objServiceDescriptions = new ServiceDescriptions();
switch ($(this).text()) 
{

case "Service Descriptions":
objServiceDescriptions.tableName="SUTYPES";

break;

}

$('.Setup_Common').show(function(){

objServiceDescriptions.Get();
});

});

$(document).on('focusin',".COLUMNNAME", function (evt) 
{

$(this).attr("data-val", $(this).html());

});

$(document).on('focusin',".td_datatype", function (evt) 
{

$(this).attr("data-val", $(this).find('.select_datatype').val());

});

$('#ServiceDescriptions_new').on('click',function(){

objServiceDescriptions.New();

});

$('#ServiceDescriptions_save').on('click',function(){

objServiceDescriptions.save();

});

$('#ServiceDescriptions_delete').on('click',function(){

objServiceDescriptions.Delete();

});


$('#ServiceDescriptions_close').on('click',function(){

objServiceDescriptions.closeAll();

});

$(document).on('click', "#table_ServiceDescriptions tr", function (evt) 
{

$(this).attr("data-selectedRow", "true")
$(this).nextAll().attr("data-selectedRow", "false")
$(this).prevAll().attr("data-selectedRow", "false")

})



});


//////////////////


// var objClass_CRUD,objLocation;

// class Location { 

// constructor() {

// objClass_CRUD = new Class_CRUD();

// this.tableName=null;
// this.subMenu=null;


// }

// GetRows()
// {

// switch (this.subMenu) 
// {		
// case "Service Descriptions":(new ServiceDescriptions()).Get(objLocation.tableName); break;

// }

// }


// NewRows()
// {
// //////console.log(objLocation.subMenu)
// switch (objLocation.subMenu) 
// {		
// case "Service Descriptions":(new ServiceDescriptions()).New(objLocation.tableName); break;

// }

// }

// SaveRows()
// {
// switch (this.subMenu) 
// {		
// case "Service Descriptions":(new ServiceDescriptions()).Save(objLocation.tableName); break;

// }

// }

// DeleteRows()
// {
// switch (this.subMenu) 
// {		
// case "Service Descriptions":(new ServiceDescriptions()).Delete(objLocation.tableName); break;

// }

// }

// closeAll()
// {
// $('#Setup_home').show();
// $('#Setup_Location').hide();
// }

// }

// $(document).ready(function(){

// $('.setupmenu').on('click'	, function(){

// $('.setupTitle').text('');
// $('.setupTitle').text($(this).text());

// $('.AllSetUp').hide();

// objLocation = new Location();
// objLocation.subMenu=$(this).text();
// switch (objLocation.subMenu) {	case "Service Descriptions":objLocation.tableName="SUTYPES";break;}

// $('.Setup_Common').show(function(){
// $('#table_CommonSetup tbody tr').remove();
// objLocation.GetRows();
// });

// });

// $('#CommonSetup_new').on('click',function(){

// objLocation.NewRows();

// });

// $('#CommonSetup_save').on('click',function(){

// objLocation.SaveRows();
// });

// $('#CommonSetup_delete').on('click',function(){

// objLocation.DeleteRows();

// });

// $('#CommonSetup_close').on('click',function(){

// objLocation.closeAll();

// });

// $(document).on('click', "#table_Location tr", function (evt) 
// {

// $(this).attr("data-selectedRow", "true")
// $(this).nextAll().attr("data-selectedRow", "false")
// $(this).prevAll().attr("data-selectedRow", "false")

// })

// });



/////////////////////////

<div class="" style="display: none;">
Forgot your password? Click <a onclick="window.location.href = '../login/reset.php' " style="cursor: pointer;">here</a> to reset your password
</div>
<!-- <hr/> -->
<div >
<div class="pull-left" style="visibility:hidden;">
<span style="font-size:11px;">Don't have an account?</span>
<a class="btn btn-sm login-link" onclick="window.location.href = '../login/Registration.php'"><i class="fa fa-plus-circle"></i> Sign up</a>
</div>
<div class="pull-right">
<a class="btn  btn-sm bounceIn animation-delay5 login-link pull-right" onclick="validSign()" style="background:#1C699A"><i class="fa fa-sign-in" ></i> Sign in</a>
</div>
</div>
<div class="col-sm-12 col-md-12 col-lg-12 PagesMenu" >

<div class="col-sm-3 col-md-3 col-lg-3"><a href="https://www.esp.systems/gw/home.php?q=Home"><b>Company</b></a></div>
<div class="col-sm-3 col-md-3 col-lg-3"><a href="https://www.esp.systems/gw/home.php?q=Products"><b>Products</b></a></div>
<div class="col-sm-3 col-md-3 col-lg-3"><a href="https://www.esp.systems/gw/home.php?q=Support"><b>About</b></a></div>

<div class="col-sm-3 col-md-3 col-lg-3 no-padding"><a href="https://www.esp.systems/gw/home.php?q=Contact"><b>Contact Us</b></a></div>

</div>			





HTML code:	#1C699A




@media only screen and (min-width: 1367px) {

.PagesMenu
{
margin-top: 46px !important;
}
}

@media only screen and (max-width: 700px) {

.PagesMenu
{
margin-top: 20px !important;
}
}	
.PagesMenu
{
margin-top: 26px;
}




////////////////////////


$('.setupmenu > li > a ').on('click', function(){

$('.setupTitle').text('');
$('.setupTitle').text($(this).text());

$('.AllSetUp').hide();

switch ($(this).text()) 
{
case "Section":
objLocation.tableName="Sections";
break;

}

// $('.Setup_Common').show(function(){

// objLocation = new Location();
// objLocation.Get();
// });

});





foreach($InputArray as $arr)
{

$set_Param=$set_Param."".$arr'COLUMN_NAME']." ".$arr'DATA_TYPE']." , " ;
}

$set_Param= rtrim($set_Param," , ");

$query="CREATE TABLE ".$_POST"table"]." (".$set_Param.")";

echo $query;



///////////////////////



// var contents = $('.changeable').html();
// $('.changeable').blur(function() {
// if (contents!=$(this).html()){
// alert('Handler for .change() called.');
// contents = $(this).html();
// }
// });


// $('#table_Location tbody tr td:eq(0)').on('focusin', function(){
// //////console.log("Prev value " + $(this).val());
// $(this).data('val', $(this).val());
// });


// $('#table_Location tbody tr td:eq(0)').blur(function() {
// if (contents!=$(this).html()){
// alert('Handler for .change() called.');
// contents = $(this).html();
// }
// });




$(document).on('blur',".changeable", function (evt) 
{
var prev = $(this).data('val');
var new  = $(this).data('val');

var contents = $('.changeable').html();
if (contents!=$(this).html()){

//////console.log(contents);
//////console.log($(this).html());

} 
});

///////////////////


$conn = new mysqli('160.153.77.227', 'neerajkeerp','v{L0?9^PUfsV', $db_name);

Text :  
Memo :  Integer : Long :  Date :  Date :  Currency : Souble 
Single :


<script type="text/javascript" src="../Setup/assets/js/CustomizedFields/Customer.js"></script>
<script type="text/javascript" src="../Setup/assets/js/CustomizedFields/Contact.js"></script>
<script type="text/javascript" src="../Setup/assets/js/CustomizedFields/Booking.js"></script>
<script type="text/javascript" src="../Setup/assets/js/CustomizedFields/FunctionRoom.js"></script>
<script type="text/javascript" src="../Setup/assets/js/CustomizedFields/Trace.js"></script>
<script type="text/javascript" src="../Setup/assets/js/CustomizedFields/Function.js"></script>


Location
Customer
Contact
Booking
Function Room
Trace
Function





// $(document).ready(function(){

// $('#CsMainFrm_CSSearch').on('click',function(){

// var CustName=$('#FirstName').val();

// $.ajax({
// type: "POST",
// data: {CustName: CustName},
// url: "CustSearchTbl.php",
// success: function (data) { 

// var obj = JSON.parse(data);
// sessionStorage.setItem("key",obj.CustName);

// var customerName = obj.CustName+'#'+obj.cCustID+']';

// $('inputname=TbPnlCust_HeaderAlias]').val(obj.Alias);
// var d = obj.Chngd;
// var da = d.split(" ");
// var dat = da0].split("-");
// var date = dat1]+"-"+dat2]+"-"+dat0];
// var datea = date+" "+da1];
// $('#TbPnlCust_HeaderDate').html(datea);

// $('#test').html(customerName);
// $('#NewHiddenContactId').val(obj.cCustID);
// $('inputname=name]').val(obj.CustName);
// $('inputname=Phone]').val(obj.CustPhone);
// $('inputname=Email]').val(obj.CustEmailAddress);
// $('inputname=Address1]').val(obj.CustAdd1);
// $('inputname=Address2]').val(obj.CustAdd2);
// $('inputname=City]').val(obj.CustCity);
// $('inputname=siteState]').val(obj.CustState);
// $('inputname=siteZip]').val(obj.CustPostCode);

// $('inputname=Fax]').val(obj.CustFax);

// $('inputname=BillAddress1]').val(obj.CustBAdd1);
// $('inputname=BillAddress2]').val(obj.CustBAdd2);
// $('inputname=BillCity]').val(obj.CustBCity);
// $('inputname=billState]').val(obj.CustBState);
// $('inputname=billZip]').val(obj.CustBPostCode);

// $('inputname=BillCountry]').val(obj.CustBCntry);
// $('inputname=FederalID]').val(obj.FedID);
// $('inputname=NotesExist]').val(obj.NotesExist);

// $('#Custearch_btnCancel').click();

// $('#paymethods').val(obj.CustPmtMthd).prop('selected',true);
// $('#ddlSiteCountry').val(obj.CustCntry).prop('selected',true);
// $('#mrkt').val(obj.CustMarket).prop('selected',true);
// $('#ReferralSource').val(obj.CustReferral).prop('selected',true);
// $('#SalesGroups').val(obj.SPID).prop('selected',true);
// $('#Group').val(obj.GroupID).prop('selected',true);

// $('#Customer_tabs').show();
// $('#CustomerSearchform').hide();

// $("#CustomerSearchModal").modal('hide');
// $('.modal-backdrop').removeClass();

// contactTable(obj.cCustID);
// BookingProfile(obj.cCustID);
// CustomerActivityTable(obj.cCustID);

// },
// error: function(xhr, status, error) {
// var err = eval("(" + xhr.responseText + ")");
// alert(err.Message);
// }
// });


// })
// })



/////////////////


// if(!sessionStorage.getItem("CateringCategories"))
// {

// var BookingParam= new Array();
// BookingParam.push({CategoryID:2})
// var ReportBookingCategories=class_CRUD.CRUDFunction("Get","SYS_REPORTSDESC",null,BookingParam);

// if(ReportBookingCategories)
// {

// var jsonData=JSON.parse(ReportBookingCategories);


// var liStr = '';
// $.each(jsonData, function( index, value ) {
// liStr +='<li><a category="'+value.SubCategoryName+'" id="'+ value.subCategoryID + '"  class="subcategory" >'+ value.SubCategoryName + '</a></li>';
// })

// }
// sessionStorage.setItem("CateringCategories",liStr);

// }

// if(!sessionStorage.getItem("CustomerCategories"))
// {
// var BookingParam= new Array();
// BookingParam.push({CategoryID:3})
// var ReportBookingCategories=class_CRUD.CRUDFunction("Get","SYS_REPORTSDESC",null,BookingParam);
// if(ReportBookingCategories)
// {
// var jsonData=JSON.parse(ReportBookingCategories);
// var liStr = '';
// $.each(jsonData, function( index, value ) {
// liStr +='<li><a category="'+value.SubCategoryName+'" id="'+ value.subCategoryID + '"  class="subcategory" >'+ value.SubCategoryName + '</a></li>';
// })

// }
// sessionStorage.setItem("CustomerCategories",liStr);
// }

// if(!sessionStorage.getItem("ReportSetupCategories"))
// {

// $.ajax({
// method : "POST",
// data : {ReportSetupCategories :'1'},
// url : "../common/ajax/ajax_commonCrud.php",
// success:function(data){

// if(!data)
// {
// return;
// }

// var jsonData=JSON.parse(data);
// var liStr = '';
// $.each(jsonData, function( index, value ) {
// liStr +='<li><a category="'+value.ReportName+'" id="'+ value.ReportCode + '"  class="RS_category" >'+ value.ReportName + '</a></li>';
// })

// sessionStorage.setItem("ReportSetupCategories",liStr);
// }
// });


// }

// if(!sessionStorage.getItem("ServiceHeaders"))
// {

// var ServiceHeaders=class_CRUD.CRUDFunction("Get","tbl_Category",null,null);

// if(ServiceHeaders)
// {

// var jsonData=JSON.parse(ServiceHeaders);

// var html='<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding">';

// $.each(jsonData, function( index, value ) {

// html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
// '<input id='+value.CategoryID+' name="ServiceHeaders]" type="checkbox" value="'+value.CategoryName+'" >'+value.CategoryName+''+
// '</div>';

// })

// html=html+'</div>';

// sessionStorage.setItem("ServiceHeaders",html);

// }

// }

// if(!sessionStorage.getItem("sections"))
// {

// var sections=class_CRUD.CRUDFunction("Get","sections",null,null);

// if(sections)
// {

// var jsonData=JSON.parse(sections);

// var html='<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding">';

// $.each(jsonData, function( index, value ) {

// html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
// '<input id='+value.SectionID+' name="sections]" type="checkbox" value="'+value.SectionName+'" >'+value.SectionName+''+
// '</div>';

// })

// html=html+'</div>';

// sessionStorage.setItem("sections",html);

// }

// }

// if(!sessionStorage.getItem("MarketSegment"))
// {

// var MarketSegment=class_CRUD.CRUDFunction("Get","mrkt",null,null);

// if(MarketSegment)
// {

// var jsonData=JSON.parse(MarketSegment);

// var html='<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding">';

// $.each(jsonData, function( index, value ) {

// html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
// '<input id='+value.MrktID+' name="MarketSegment]"  type="checkbox" value="'+value.name+'" >'+value.MrktName+''+
// '</div>';

// })

// html=html+'</div>';

// sessionStorage.setItem("MarketSegment",html);

// }

// }

// if(!sessionStorage.getItem("ServiceCategory"))
// {
// var ServiceCategory=class_CRUD.CRUDFunction("Get","tbl_Category",null,null);
// if(ServiceCategory)
// {
// var jsonData=JSON.parse(ServiceCategory);
// var html ='';
// $.each(jsonData, function( index, value ) {


// html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
// '<input id='+value.CategoryID+' name="Category]"  type="checkbox" value="'+value.CategoryName+'" >'+value.CategoryName+''+
// '</div>';


// })
// sessionStorage.setItem("ServiceCategory",html);
// }

// }


// if(!sessionStorage.getItem("ServiceCategory1"))
// {
// var ServiceCategory1=class_CRUD.CRUDFunction("Get","tbl_Category",null,null);
// if(ServiceCategory1)
// {
// var jsonData=JSON.parse(ServiceCategory1);
// var html='';;
// $.each(jsonData, function( index, value ) {

// html += '<option value='+value.CategoryID+'>' + value.CategoryName + '</option>';

// })

// sessionStorage.setItem("ServiceCategory1",html);
// }

// }


// if(!sessionStorage.getItem("getSalesPerson2"))
// {

// var getSalesPerson2=class_CRUD.CRUDFunction("Get","tbl_salesPerson",null,null);
// if(getSalesPerson2)
// {
// var jsonData=JSON.parse(getSalesPerson2);
// var html ='';
// $.each(jsonData, function( index, value ) {


// html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
// '<input id='+value.id+' name="salesPerson]" type="checkbox" value="'+value.name+'" >'+value.name+''+
// '</div>';


// })
// sessionStorage.setItem("getSalesPerson2",html);
// }

// }

// if(!sessionStorage.getItem("RS_status"))
// {

// var RS_status=class_CRUD.CRUDFunction("Get","tbl_status",null,null);
// if(RS_status)
// {
// var jsonData=JSON.parse(RS_status);
// var html ='';
// $.each(jsonData, function( index, value ) {

// html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
// '<input id='+value.id+' name="status]" type="checkbox" value="'+value.name+'" >'+value.status+''+
// '</div>';


// })
// sessionStorage.setItem("RS_status",html);
// }

// }

// if(!sessionStorage.getItem("GRC_Sections"))
// {

// var GRC_Sections=class_CRUD.CRUDFunction("Get","tbl_GRC_Sections",null,null);
// if(GRC_Sections)
// {
// var jsonData=JSON.parse(GRC_Sections);
// var html ='';
// $.each(jsonData, function( index, value ) {

// html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
// '<input id='+value.id+' name="GRCSections]" type="checkbox" value="'+value.name+'" >'+value.name+''+
// '</div>';


// })
// sessionStorage.setItem("GRC_Sections",html);
// }

// }

// if(!sessionStorage.getItem("TracesCategories"))
// {

// var BookingParam= new Array();
// BookingParam.push({CategoryID:7})
// var TracesCategories=class_CRUD.CRUDFunction("Get","SYS_REPORTSDESC",null,BookingParam);

// if(TracesCategories)
// {

// var jsonData=JSON.parse(TracesCategories);

// var liStr = '';
// $.each(jsonData, function( index, value ) {
// liStr +='<li><a category="'+value.SubCategoryName+'" id="'+ value.subCategoryID + '"  class="subcategory" >'+ value.SubCategoryName + '</a></li>';
// })

// }
// sessionStorage.setItem("TracesCategories",liStr);

// }


// if(!sessionStorage.getItem("ActivityCategory"))
// {

// var BookingParam= new Array();
// var ActivityCategory=class_CRUD.CRUDFunction("Get","tblActivityCategory",null,BookingParam);

// if(ActivityCategory)
// {
// var jsonData=JSON.parse(ActivityCategory);

// var html='';;
// $.each(jsonData, function( index, value ) {

// html += '<option value='+value.CategoryID+'>' + value.CategoryName + '</option>';

// })
// sessionStorage.setItem("ActivityCategory",html);
// }

// }


// if(!sessionStorage.getItem("ServiceDescription"))
// {

// var ServiceDescription=class_CRUD.CRUDFunction("Get","servdesc",null,null);

// if(ServiceDescription)
// {

// var jsonData=JSON.parse(ServiceDescription);

// var html='<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding">';

// $.each(jsonData, function( index, value ) {

// html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
// '<input id='+value.servdescid+' name="ServiceDescription]" type="checkbox" value="'+value.Descrip+'" >'+value.Descrip+''+
// '</div>';

// })

// html=html+'</div>';

// sessionStorage.setItem("ServiceDescription",html);

// }

// }



///////////////////


$date = $d2]."-".$d1]."-".$d0];


//echo $row_getFunctionAgendaData->FunctName;


functid] => 151249
evtid] => 138709
spid] => 1
functname] => Seminar
offsitelocation] => 
functactnumppl] => 3
functgtdnumppl] => 2
functexpnumppl] => 1
setuptype] => 1
functinitdate] => 2018-11-23
functconfdate] => 2018-11-23
timestat] => 0
startdate] => 2018-11-20
starttime] => 04:30:00
endtime] => 05:40:00
startcol] => 3
endcol] => 6
renttype] => 1
contractsent] => 0000-00-00
contractreceived] => 0000-00-00
setuptime] => 1.0
knockdowntime] => 1.0
onsitecontact] => 0
numberset] => 0
actualized] => 0
unmovable] => 0
functionaltered] => 0
alteredby] => 0
alteredtimestamp] => 0000-00-00
notesexist] => 0
roomnightcreated] => 0
billinggroup] => 0
postfunctas] => 
exhibitcustid] => 0
expoparentid] => 0
isexpo] => 0
delivertime] => 
pickuptime] => 
functemailsent] => 
isweb] => 
sourcefunctid] => 
functcontactdate] => 
rlsID] => 
functRoomId] => 1
revenue] => 1.0
EvtID] => 138709
UnivEventID] => 
CustID] => 
ContactID] => 
ReservationID] => 
SPID] => 69
EvtName] => Cust20Nov4Booking
EvtStart] => 2018-11-20
EvtEnd] => 2018-11-20
EvtStatus] => 1
ConfDate] => 0000-00-00
EvtPaymentMethod] => 6
Frequency] => 
ReferralSource] => 0
MrktSeg] => 56
PostAs] => 
LoudGroup] => 0
DoNotPost] => 0
NotesExist] => 0
CateringSalesID] => 
CateringContact] => 
ContractSent] => 
ContractRecd] => 
BillingCustID] => 
MonitorOverride] => 0
TaxExempt] => 0
YieldAlias] => 
MatterID] => 
EventEmailSent] => 
ContractDue] => 
SourceEvtID] => 
TaxExemptDetail] => 
EvtInitDate] => 
EvtCutoffDate] => 0000-00-00
fundid] => 
SalesID] => 1
GroupID] => 0
LoginID] => Hodges
Passwd] => cmdobl
FirstName] => 
LastName] => 
SPAddress] => 
SPAddr2] => 
SPCity] => 
SPState] => 
SPPostCode] => 
SPPhone] => 
SPFax] => 
SPCntry] => 0
ReachMeAt] => 
ReachMeAddress] => 
ReachMeAddr2] => 
ReachMeCity] => 
ReachMeState] => 
ReachMePostCode] => 
ReachMePhone] => 
ReachMeFax] => 
ReachMeCntry] => 0
SPTitle] => 
SPActive] => 1
Language] => 1
BookingPartnerID] => 0
EMailAccount] => 
EMailPassWd] => 
EMailAddress] => 
PMSAlias] => 
statusid] => 1
language] => 1
statustype] => Confirmed
pmsalias] => 
yieldalias] => 
UserDefFunctRoom_ID] => 1
sectionID] => 1
Room_Description] => Living Room
setupTypeIds] => 5,6,13,14
HourlyCharge] => 100
QuartDayCharge] => 100
HalfDayCharge] => 100
FullDayCharge] => 0
Length] => 0
Width] => 0
Ceiling] => 0
Cost] => 0.00
SqFeet] => 0
SelectRmChrg] => 0
funcOrder] => 1
Analog_Line] => 
Digital_Line] => 
ResID] => 
ResDesc] => 
ResDflt] => 
WebItem] => 
UnivContactID] => 
SoundExLast] => 
Salutation] => 
Title] => 
Addr1] => 
Addr2] => 
City] => 
State] => 
PostCode] => 
Cntry] => 
EmailAddress] => 
ContactType] => 
WebUserName] => 
WebPassword] => 
IsActive] => 
NoHTEmails] => 
sourcecontid] => 
ServDetID] => 
ServHdrID] => 
ServDetName] => 
ServDetQty] => 
ServOrder] => 
stime] => 04:30:00 AM
funID] => 151249

/////////////////////////////

EdFunc_ConfirmDate

// while ($row_getFunction = $getFunction->fetchAll(PDO::FETCH_OBJ))
// {
// foreach($arr as $key => $value)
// {	
// if($row_getFunction->StartCol == $value)
// {
// $setup = $key;
// }

// if($row_getFunction->StartTime == $value)
// {
// $startPoint = $key;
// }

// if($row_getFunction->EndTime == $value)
// {
// $endPoint = $key;
// }

// if($row_getFunction->EndCol == $value)
// {	
// $knock = $key;
// }
// }
// if($setup > $startPoint){
// $setup = 0;
// }
// for($i = $setup ; $i < $startPoint ; $i++)
// {
// $string = $string.$row_getFunction->EvtID."-".$i."@";
// }

// $string = rtrim($string,"@");
// $string = $string."^";
// for($i = $startPoint ; $i < $endPoint ; $i++)
// {
// $string = $string.$row_getFunction->EvtID."-".$i."@";
// }

// $string = rtrim($string,"@");
// $string = $string."^";
// if($endPoint > $knock){
// $knock = 48;
// }
// for($k = $endPoint ; $k < $knock ; $k++)
// {
// $string = $string.$row_getFunction->EvtID."-".$k."@";
// }
// $string = rtrim($string,"@");
// $string = $string."^";
// $string = $string.$row_getFunction->statusId;
// $string = $string."^";
// $string = $string.$row_getFunction->FunctID;
// $string = $string."^";
// $string = $string.$row_getFunction->StartDate;
// $string = $string."^";
// $string = $string.$row_getFunction->CustName;
// $string = $string."^";
// $string = $string.$row_getFunction->CustPhone;
// $string = $string."^";
// $string = $string.$row_getFunction->fcustId;
// $string = $string."^";
// $string = $string.$row_getFunction->ResDesc."^".$row_getFunction->firstname." ".$row_getFunction->lastname."^".$row_getFunction->StartDate."^".$row_getFunction->stime." ".$row_getFunction->etime."^".$row_getFunction->FunctExpNumPpl."/".$row_getFunction->FunctGtdNumPpl."^".$row_getFunction->name."^".$row_getFunction->fcustId."^".$row_getFunction->EvtName."!";

// }
// echo rtrim($string,"!");




// ^^^^^^Dac, Committee Meetings AT THE^888-888-8888^5661^^Lyz Sandler^^12:00:00 PM 02:00:00 PM^/^^5661^MEMBERSHIP DEVELOPMENT COMMITTEE!^^^^^^Dac, Committee Meetings AT THE^888-888-8888^5661^^Lyz Sandler^^11:45:00 AM 02:00:00 PM^/^^5661^MEMBERS ACTIVITIES COMMITTEE!^^^^^^Events, Dac Club^313-442-1074^14272^^Sarah Harris^^04:30:00 PM 09:00:00 PM^/^^14272^PROMISE WINE DINNER!^^^^^^Finkel, Robert Jay^248-855-6500^6069^^Emily Frederick^^12:00:00 PM 02:30:00 PM^/^^6069^JEWISH COMMUNITY RELATIONS COUNCIL!^^^^^^Welsh, Bryan O.^313-496-7205^8946^^Ashley Carman^^12:00:00 PM 05:00:00 PM^/^^8946^PLANTE & MORAN, PLLC!^^^^^^Sterling, Joshua^734-225-6934^119810^^Emily Frederick^^12:00:00 PM 04:00:00 PM^/^^119810^DETROIT EO-FREEDOM PIRATES FORUM!^^^^^^Williams, Richard E.^616-257-7221^59800^^Sarah Harris^^11:00:00 AM 03:00:00 PM^/^^59800^PLANMEMBER SECURITIES BUSINESS SUCCESSION SEMINAR

/////////////////////


Array ( name] => neeraj verma Phone] => 09999645181 Fax] => Email] => mail.nrj@gmail.com Website] => Address1] => Address2] => City] => New Delhi siteState] => Delhi siteZip] => 110051 ddlSiteCountry] => 1 BillAddress1] => BillAddress2] => BillCity] => billState] => billZip] => BillCountry] => 1 SalesGroups] => ReferralSource] => Group] => paymethods] => FederalID] => CsMainFrm_hdn] => 1 chkActive] => active NotesExist] => ) 
Notice: Undefined index: ECsMdl_chkSendEmail in C:\xampp\htdocs\espdev\esp-project\Customer\updateCustomer.php on line 13

Notice: Undefined index: ECsMdl_chkTaxExepmt in C:\xampp\htdocs\espdev\esp-project\Customer\updateCustomer.php on line 14

Notice: Undefined index: mrkt in C:\xampp\htdocs\espdev\esp-project\Customer\updateCustomer.php on line 26
insert into CUSTT	set CustName = 'neeraj verma', SoundexName = 'neeraj verma' , CustPhone = '09999645181' , Email= 'mail.nrj@gmail.com' , CustAdd1 = '' , CustAdd2 = '' , CustCity = 'New Delhi' , CustState = 'Delhi' , CustPostCode = '110051' ,	CustCntry = '1' , CustBAdd1 = '' ,	CustBAdd2 = '' , CustBCity = '' ,SalesPersonID = '', CustBState = '' , CustBPostCode = '110051' ,	CustBCntry = '1' , FedID = 1 , NProfit = 1 , CustPmtMthd = '' , CustMarket = '' , CustReferral = '' , CustFax = '' , Chngd = CAST(GETDATE() AS DATE) , ISActive = 1 , NotesExist = '' , GroupID = 1 ,IsAgency = 1




if(find_in_set(1,`ServiceHeadersArray`),IFNULL(if(ss.HeaderTypeID=1,IFNULL(sum(ss.ServItemChrg),0),''),0),'') as Food_n_Bevearges,
if(find_in_set(1,`ServiceHeadersArray`),IFNULL(if(ss.HeaderTypeID=1,IFNULL(sum(ss.ServItemCost),0),''),0),'') as CostOf_Food_n_Beverage,







Fatal error: Call to a member function fetch_object() on a non-object in C:\Inetpub\vhosts\esp.systems\httpdocs\Customer\assets\ajax\ajax_getContactInfo.php on line 41



<b>Warning</b>:  Invalid argument supplied for foreach() in <b>C:\xampp\htdocs\espdev\esp-project\common\ajax\ajax_commonCrud.php</b> on line <b>68</b><br />
{"CatID":"1","Language":"1","CatDesc":"Booking"},{"CatID":"2","Language":"1","CatDesc":"Catering"},{"CatID":"3","Language":"1","CatDesc":"Customer"},{"CatID":"4","Language":"1","CatDesc":"Setup"},{"CatID":"5","Language":"1","CatDesc":"Group Rooms"},{"CatID":"6","Language":"1","CatDesc":"Lost Business"},{"CatID":"7","Language":"1","CatDesc":"Trace"}]


///////////////////////////////

if(find_in_set(2,`ServiceHeadersArray`),,IFNULL(if(ss.HeaderTypeID=1,IFNULL(sum(ss.ServItemChrg),0),''),0),'') as Bar_Services,
if(find_in_set(2,`ServiceHeadersArray`),IFNULL(sum(ss.BarServicesTotal),0),'') as CostOf_Bar_Services,
if(find_in_set(3,`ServiceHeadersArray`),IFNULL(sum(ss.AudioVisualTotal),0),'') as Audio_Visual,
if(find_in_set(3,`ServiceHeadersArray`),IFNULL(sum(ss.AudioVisualTotal),0),'') as CostOf_Audio_Visual,
if(find_in_set(4,`ServiceHeadersArray`),IFNULL(sum(ss.RoomSetupTotal),0),'') as Room_Setup,
if(find_in_set(4,`ServiceHeadersArray`),IFNULL(sum(ss.RoomSetupTotal),0),'') as CostOf_Room_Setup,
if(find_in_set(5,`ServiceHeadersArray`),IFNULL(sum(ss.MiscellaneousTotal),0),'') as Miscellaneous,
if(find_in_set(5,`ServiceHeadersArray`),IFNULL(sum(ss.MiscellaneousTotal),0),'') as CostOf_Miscellaneous,
if(find_in_set(6,`ServiceHeadersArray`),IFNULL(sum(ss.LaborTotal),0),'') as Labor,
if(find_in_set(6,`ServiceHeadersArray`),IFNULL(sum(ss.LaborTotal),0),'') as CostOf_Labor,
if(find_in_set(7,`ServiceHeadersArray`),IFNULL(sum(ss.RegettaSetupTotal),0),'') as Reggetta_SetUp,
if(find_in_set(7,`ServiceHeadersArray`),IFNULL(sum(ss.RegettaSetupTotal),0),'') as CostOf_Reggetta_SetUp,
if(find_in_set(8,`ServiceHeadersArray`),IFNULL(sum(ss.FnBNonMemberTotal),0),'') as Food_Beverages_NonMember,
if(find_in_set(8,`ServiceHeadersArray`),IFNULL(sum(ss.FnBNonMemberTotal),0),'') as CostOf_Food_Beverages_NonMember,
if(find_in_set(9,`ServiceHeadersArray`),IFNULL(sum(ss.BarSevicesNonMemberTotal),0),'') as Bar_Sevices_NonMember,
if(find_in_set(9,`ServiceHeadersArray`),IFNULL(sum(ss.BarSevicesNonMemberTotal),0),'') as CostOf_Bar_Sevices_NonMember,
if(find_in_set(10,`ServiceHeadersArray`),IFNULL(sum(ss.RoomSetupNonMemberTotal),0),'') as Room_Setup_NonMember,
if(find_in_set(10,`ServiceHeadersArray`),IFNULL(sum(ss.RoomSetupNonMemberTotal),0),'') as CostOf_Room_Setup_NonMember,
if(find_in_set(11,`ServiceHeadersArray`),IFNULL(sum(ss.LaborNonMemberTotal),0),'') as Labor_NonMember,
if(find_in_set(11,`ServiceHeadersArray`),IFNULL(sum(ss.LaborNonMemberTotal),0),'') as CostOf_Labor_NonMember,

/////////////////


customerName
$ExtCustName='';

if($_POST'ExtCustName'])
{
$ExtCustName="and CUSTT.CustName like '%".$_POST'Ext_CustName']."%'";
}

echo "select *,ts.statustype as tstatus from EVENT as tb left join CUSTT on tb.CustID = CUSTT.CustID left join contacts as cont on cont.ContactID = tb.ContactID left join SYS_STATDESC as ts on ts.statusid = tb.EvtStatus where ".$finalString.$ExtCustName."  order by tb.EvtID asc limit 100";
exit();


/* SideBar Tabs*/

/*JS for Dynamic Dropdown*/

if(!sessionStorage.getItem("getSalesPerson"))
{

var getSalesPerson='';

$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_getSalesPerson.php",
success:function(data){
getSalesPerson=data;
sessionStorage.setItem("getSalesPerson",data);
}
});


}

if(!sessionStorage.getItem("frequency"))
{
$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_getFrequency.php",
success: function(data)
{

sessionStorage.setItem("frequency",data);
}

});
}

if(!sessionStorage.getItem("getContacts"))
{
$.ajax({
method : "POST",
url : "../Customer/assets/ajax/ajax_getContacts.php",
success: function(data)
{

sessionStorage.setItem("getContacts",data);
}

});
}

if(!sessionStorage.getItem("getTaskCategory"))
{	
$.ajax({
method : "POST",
url : "../Customer/assets/ajax/ajax_getTaskCategory.php",
success: function(data){

sessionStorage.setItem("getTaskCategory",data);
}


});
}

if(!sessionStorage.getItem("getSalesGroup"))
{

$.ajax({
method : "POST",
url : "../Customer/assets/ajax/ajax_getSalesGroup.php",
success: function(data){
////////console.log(localStorage.getItem("getSalesGroup"));
sessionStorage.setItem("getSalesGroup",data);
}

});

}


/*Customer Dropdowns */

if(!sessionStorage.getItem("CountryName"))
{
$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_getCountryName.php",
success : function(data){

sessionStorage.setItem("CountryName",data);


}
});

}

if(!localStorage.getItem("getReferral"))
{	
$.ajax({
method : "POST",
url : "../Customer/assets/ajax/ajax_getReferral.php",
success: function(data){
if(!localStorage.getItem("getReferral"))
{
localStorage.setItem("getReferral",data);
}

}
});
}


if(!localStorage.getItem("getGroup"))
{
$.ajax({
method : "POST",
url : "../Customer/assets/ajax/ajax_getGroup.php",
success: function(data){

if(!localStorage.getItem("getGroup"))
{
localStorage.setItem("getGroup",data);
}

}
});

}


$.ajax({
method : "POST",
url : "../Customer/assets/ajax/ajax_getPayment.php",
success: function(data){

if(!localStorage.getItem("getPayment"))
{
localStorage.setItem("getPayment",data);
}

}
});

$.ajax({
method : "POST",
url : "../Customer/assets/ajax/ajax_getMarket.php",
success: function(data){


if(!localStorage.getItem("getMarket"))
{
localStorage.setItem("getMarket",data);
}

}
});

$.ajax({
method : "POST",
url : "../Customer/assets/ajax/ajax_getContactType.php",
success: function(data){

if(!localStorage.getItem("getContactType"))
{
localStorage.setItem("getContactType",data);
}

}
});


$.ajax({
method : "POST",
url : "../Customer/assets/ajax/ajax_getSalutation.php",
success: function(data){


if(!localStorage.getItem("getSalutation"))
{
localStorage.setItem("getSalutation",data);
}


}
});

$.ajax({
method : "POST",
url : "../Customer/assets/ajax/ajax_getStatus.php",
success: function(data){

if(!localStorage.getItem("getStatus"))
{
localStorage.setItem("getStatus",data);
}

}
});
/* Availibility */

if(!localStorage.getItem("Fore_Drop_0"))
{
$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_ForeCasting.php",
success:function(data){
localStorage.setItem("Fore_Drop_0",data);
}
});

}

if(!sessionStorage.getItem("getCategory"))
{
$.ajax({
method : "POST",
url : "../Availability/assets/ajax/get_Category.php",
success: function(data){
sessionStorage.setItem("getCategory",data);
}
});
}

if(!sessionStorage.getItem("getServDesc"))
{
$.ajax({
method : "POST",
url : "../Availability/assets/ajax/ajax_getServiceDescription.php",
success: function(data){
sessionStorage.setItem("getServDesc",data);
}
});
}	
if(!sessionStorage.getItem('optionFunctionRoom'))
{
$.ajax({
method : "POST",
url : "../Availability/assets/ajax/ajax_spaceholdFunctionRoom.php",
success : function(data){
sessionStorage.setItem("optionFunctionRoom",data);
}
});
}

if(!sessionStorage.getItem('getSetuptype'))
{

$.ajax({
method : "POST",
url : "../Availability/assets/ajax/ajax_getSetuptype.php",
success:function(data){
sessionStorage.setItem('getSetuptype',data);
}
});

}

$.getScript('../common/js/Class_CRUD.js', function()
{

var class_CRUD = new Class_CRUD();

if(!sessionStorage.getItem("ReportCategories"))
{
var ReportCategories=class_CRUD.CRUDFunction("Get","SYS_REPCATDESC");	
if(ReportCategories)
{
var jsonData=JSON.parse(ReportCategories);

var html='';;
$.each(jsonData, function( index, value ) {

html += '<option value='+value.CatID+'>' + value.CatDesc + '</option>';

})
sessionStorage.setItem("ReportCategories",html);
}

}

if(!sessionStorage.getItem("BookingCategories"))
{

$.ajax({
method : "POST",
data : {BookingCategories :'1'},
url : "../common/ajax/ajax_commonCrud.php",
success:function(data){


if(!data)
{
return;
}
var jsonData=JSON.parse(data);


var liStr = '';
$.each(jsonData, function( index, value ) {
liStr +='<li><a category="'+value.ReportName+'" id="'+ value.ReportCode + '"  class="subcategory" >'+ value.ReportName + '</a></li>';
})

sessionStorage.setItem("BookingCategories",liStr);


}
});

}

if(!sessionStorage.getItem("CateringCategories"))
{

var BookingParam= new Array();
BookingParam.push({CategoryID:2})
var ReportBookingCategories=class_CRUD.CRUDFunction("Get","SYS_REPORTSDESC",null,BookingParam);

if(ReportBookingCategories)
{

var jsonData=JSON.parse(ReportBookingCategories);


var liStr = '';
$.each(jsonData, function( index, value ) {
liStr +='<li><a category="'+value.SubCategoryName+'" id="'+ value.subCategoryID + '"  class="subcategory" >'+ value.SubCategoryName + '</a></li>';
})

}
sessionStorage.setItem("CateringCategories",liStr);

}

if(!sessionStorage.getItem("CustomerCategories"))
{
var BookingParam= new Array();
BookingParam.push({CategoryID:3})
var ReportBookingCategories=class_CRUD.CRUDFunction("Get","SYS_REPORTSDESC",null,BookingParam);
if(ReportBookingCategories)
{
var jsonData=JSON.parse(ReportBookingCategories);
var liStr = '';
$.each(jsonData, function( index, value ) {
liStr +='<li><a category="'+value.SubCategoryName+'" id="'+ value.subCategoryID + '"  class="subcategory" >'+ value.SubCategoryName + '</a></li>';
})

}
sessionStorage.setItem("CustomerCategories",liStr);
}

if(!sessionStorage.getItem("ReportSetupCategories"))
{

$.ajax({
method : "POST",
data : {ReportSetupCategories :'1'},
url : "../common/ajax/ajax_commonCrud.php",
success:function(data){

if(!data)
{
return;
}

var jsonData=JSON.parse(data);
var liStr = '';
$.each(jsonData, function( index, value ) {
liStr +='<li><a category="'+value.ReportName+'" id="'+ value.ReportCode + '"  class="RS_category" >'+ value.ReportName + '</a></li>';
})

sessionStorage.setItem("ReportSetupCategories",liStr);
}
});


}

if(!sessionStorage.getItem("ServiceHeaders"))
{

var ServiceHeaders=class_CRUD.CRUDFunction("Get","tbl_Category",null,null);

if(ServiceHeaders)
{

var jsonData=JSON.parse(ServiceHeaders);

var html='<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding">';

$.each(jsonData, function( index, value ) {

html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
'<input id='+value.CategoryID+' name="ServiceHeaders]" type="checkbox" value="'+value.CategoryName+'" >'+value.CategoryName+''+
'</div>';

})

html=html+'</div>';

sessionStorage.setItem("ServiceHeaders",html);

}

}

if(!sessionStorage.getItem("sections"))
{

var sections=class_CRUD.CRUDFunction("Get","sections",null,null);

if(sections)
{

var jsonData=JSON.parse(sections);

var html='<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding">';

$.each(jsonData, function( index, value ) {

html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
'<input id='+value.SectionID+' name="sections]" type="checkbox" value="'+value.SectionName+'" >'+value.SectionName+''+
'</div>';

})

html=html+'</div>';

sessionStorage.setItem("sections",html);

}

}

if(!sessionStorage.getItem("MarketSegment"))
{

var MarketSegment=class_CRUD.CRUDFunction("Get","mrkt",null,null);

if(MarketSegment)
{

var jsonData=JSON.parse(MarketSegment);

var html='<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding">';

$.each(jsonData, function( index, value ) {

html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
'<input id='+value.MrktID+' name="MarketSegment]"  type="checkbox" value="'+value.name+'" >'+value.MrktName+''+
'</div>';

})

html=html+'</div>';

sessionStorage.setItem("MarketSegment",html);

}

}

if(!sessionStorage.getItem("ServiceCategory"))
{
var ServiceCategory=class_CRUD.CRUDFunction("Get","tbl_Category",null,null);
if(ServiceCategory)
{
var jsonData=JSON.parse(ServiceCategory);
var html ='';
$.each(jsonData, function( index, value ) {


html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
'<input id='+value.CategoryID+' name="Category]"  type="checkbox" value="'+value.CategoryName+'" >'+value.CategoryName+''+
'</div>';


})
sessionStorage.setItem("ServiceCategory",html);
}

}


if(!sessionStorage.getItem("ServiceCategory1"))
{
var ServiceCategory1=class_CRUD.CRUDFunction("Get","tbl_Category",null,null);
if(ServiceCategory1)
{
var jsonData=JSON.parse(ServiceCategory1);
var html='';;
$.each(jsonData, function( index, value ) {

html += '<option value='+value.CategoryID+'>' + value.CategoryName + '</option>';

})

sessionStorage.setItem("ServiceCategory1",html);
}

}


if(!sessionStorage.getItem("getSalesPerson2"))
{

var getSalesPerson2=class_CRUD.CRUDFunction("Get","tbl_salesPerson",null,null);
if(getSalesPerson2)
{
var jsonData=JSON.parse(getSalesPerson2);
var html ='';
$.each(jsonData, function( index, value ) {


html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
'<input id='+value.id+' name="salesPerson]" type="checkbox" value="'+value.name+'" >'+value.name+''+
'</div>';


})
sessionStorage.setItem("getSalesPerson2",html);
}

}

if(!sessionStorage.getItem("RS_status"))
{

var RS_status=class_CRUD.CRUDFunction("Get","tbl_status",null,null);
if(RS_status)
{
var jsonData=JSON.parse(RS_status);
var html ='';
$.each(jsonData, function( index, value ) {

html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
'<input id='+value.id+' name="status]" type="checkbox" value="'+value.name+'" >'+value.status+''+
'</div>';


})
sessionStorage.setItem("RS_status",html);
}

}

if(!sessionStorage.getItem("GRC_Sections"))
{

var GRC_Sections=class_CRUD.CRUDFunction("Get","tbl_GRC_Sections",null,null);
if(GRC_Sections)
{
var jsonData=JSON.parse(GRC_Sections);
var html ='';
$.each(jsonData, function( index, value ) {

html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
'<input id='+value.id+' name="GRCSections]" type="checkbox" value="'+value.name+'" >'+value.name+''+
'</div>';


})
sessionStorage.setItem("GRC_Sections",html);
}

}

if(!sessionStorage.getItem("TracesCategories"))
{

var BookingParam= new Array();
BookingParam.push({CategoryID:7})
var TracesCategories=class_CRUD.CRUDFunction("Get","SYS_REPORTSDESC",null,BookingParam);

if(TracesCategories)
{

var jsonData=JSON.parse(TracesCategories);

var liStr = '';
$.each(jsonData, function( index, value ) {
liStr +='<li><a category="'+value.SubCategoryName+'" id="'+ value.subCategoryID + '"  class="subcategory" >'+ value.SubCategoryName + '</a></li>';
})

}
sessionStorage.setItem("TracesCategories",liStr);

}


if(!sessionStorage.getItem("ActivityCategory"))
{

var BookingParam= new Array();
var ActivityCategory=class_CRUD.CRUDFunction("Get","tblActivityCategory",null,BookingParam);

if(ActivityCategory)
{
var jsonData=JSON.parse(ActivityCategory);

var html='';;
$.each(jsonData, function( index, value ) {

html += '<option value='+value.CategoryID+'>' + value.CategoryName + '</option>';

})
sessionStorage.setItem("ActivityCategory",html);
}

}


if(!sessionStorage.getItem("ServiceDescription"))
{

var ServiceDescription=class_CRUD.CRUDFunction("Get","servdesc",null,null);

if(ServiceDescription)
{

var jsonData=JSON.parse(ServiceDescription);

var html='<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding">';

$.each(jsonData, function( index, value ) {

html=html+'<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">'+
'<input id='+value.servdescid+' name="ServiceDescription]" type="checkbox" value="'+value.Descrip+'" >'+value.Descrip+''+'</div>';

})

html=html+'</div>';

sessionStorage.setItem("ServiceDescription",html);

}

}


})

if(!sessionStorage.getItem('getFunction'))
{

$.ajax({
method : "POST",
url : "../Availability/assets/ajax/ajax_getFunction.php",
success:function(data){
sessionStorage.setItem('getFunction',data);
}
});

}


///////////////////



$.each(jsonData, function(key, value){

var Booking_Start= moment(value.Booking_Start).format('YYYY/MM/DD');

row='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white"><p>bookingName : '+value.EvtName+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">postAs :'+value.PostAs+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">BookingId :'+value.EvtID+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">Start Date :'+Booking_Start+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">FunctionName :'+value.FunctionName+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">Status :'+value.status+'</p></td></tr>'+

'<tr><td colspan=2 style="font-size:14px;border:1px solid black;">FunctionId :'+value.functionId+'</p></td></tr>';

table2='<table id="tbl_FD2" style="width:100%;border-collapse: collapse;margin-top:5em;" ><tr><td colspan=2 style="font-size:14px;border:1px solid black;border-bottom-color: white;">Customer Name :'+value.Customer+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">Phone :'+value.CustPhone+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">Fax :'+value.Fax+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">ContactPerson Name :'+value.ContactName+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">ContactPerson Phone :'+value.ContactPhone+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">OnSiteContact :'+value.OnSiteContact+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">StartTime :'+value.StartTime+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">EndTime :'+value.EndTime+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">Gaurenteed People :'+value.Gaurenteed+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white">Exp People :'+value.Expr+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;">Function Room :'+value.functionRoom+'</p></td></tr></table>';

});

var CategoryName='';

var groupedData = _.groupBy(jsonData, function(d){
CategoryName=d.CategoryName;
return d.CategoryName});

var row2='';

var result = _.chain(jsonData)
.groupBy('CategoryName')
.mapObject( CategoryName => _.groupBy(CategoryName, 'FunctID'))
.value();

row2+='<tr><td style="font-size:14px;border:1px solid black;margin-top:3em;"><center>'+CategoryName+'</center></td></tr>';

$.each(result, function(key31, value32) {

row2+='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;">Service Time</td><td style="font-size:14px;border:1px solid black;border-right-color:white;">Item</td><td style="font-size:14px;border:1px solid black;border-right-color:white;">Qty</td><td style="font-size:14px;border:1px solid black;">Charge</td></tr>';

$.each(value32, function(key41, value42) {

$.each(value42, function(key4, value4) {

var StartTime= moment(value4.StartTime).format('HH-MM-SS');
var EndTime= moment(value4.EndTime).format('HH-MM-SS');

row2+='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;">'+StartTime+'-'+EndTime+'</td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-Top-color:white;border-right-color:white;">'+value4.Item+'</td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-Top-color:white;border-right-color:white;">'+value4.Quantity+'</td><td style="font-size:14px;border:1px solid black;border-Top-color:white;">'+value4.price+'</td></tr>';

})

})

})


row2+='</table>';

////////////////////



select bkg.EvtName,bkg.PostAs,bkg.EvtID,bkg.EvtStart as Booking_Start,fName.ResDesc as FunctionName,bkg.EvtStatus,fn.FunctID as functionId,cst.CustName as Customer,cst.CustPhone as CustPhone,cst.CustFax as Fax,cst.CustAdd1 AS Address1 , cnt.FirstName+' '+ cnt.LastName  AS ContactName ,cst.CustPhone as ContactPhone, cnt.FirstName+' '+ cnt.LastName  AS OnSiteContact ,fn.starttime AS StartTime , fn.endtime AS EndTime ,fn.functgtdnumppl as Gaurenteed,fn.functexpnumppl as Expr,fr.Room_Description ,c.HeaderDesc,st.ServTime,ss.ServItemName,ss.ServItemQty,ss.ServItemChrg,sd.servdescid 
from FUNCT fn 
left  join FUNCTNAMES fName on fn.FunctName=fName.ResID 
left join contacts cnt on cnt.ContactID=fn.onsitecontact
left join SALPT slps on fn.SPID=slps.SalesID
left join EVENT bkg on  fn.evtid =bkg.EvtID 
left join CUSTT cst on bkg.CustID=cst.CustID 
left join sfrdt fr on fn.evtid=fr.UserDefFunctRoom_ID
left join SlpRooms rmblk on fn.evtid=rmblk.SRHdrID
left join SYS_STATDESC sts on sts.statusid=bkg.EvtStatus
left join SERVITEMS ss on fn.FunctID = ss.FunctID 
left join SERVTIME st on fn.FunctID = st.FunctID 
left join SERVDESC sd on st.servdescid =sd.servdescid 
left join HeaderTypes c on ss.HeaderTypeID=c.HeaderTypeID




////////////



https://mail-gmail-4.tinytake.com/sf/MzA1MjI4Nl85MTQ3NTkw

//////////



$(document).ready(function(){
var location = window.location.href;
var locArray = location.split("/");
for(var i = 0 ; i < locArray.length; i++)
{
if(locArrayi] == "Home")
{
IFRAME = "Home";
}
}

if(IFRAME == "Home")
{
/*-----------JS for find Last week Monday and Sunday--------------*/
var newDate = new Date();
var beforeOneWeek = new Date(newDate.getTime() - 60 * 60 * 24 * 7 * 1000)
, day = beforeOneWeek.getDay()
, diffToMonday = beforeOneWeek.getDate() - day + (day === 0 ? -6 : 1)
, lastMonday = new Date(beforeOneWeek.setDate(diffToMonday))
, lastSunday = new Date(beforeOneWeek.setDate(diffToMonday + 6));

var day = ("0" + lastMonday.getDate()).slice(-2)
, month = ("0" + (lastMonday.getMonth() + 1)).slice(-2)
, pmonday = lastMonday.getFullYear()+"-"+(month)+"-"+(day);

var day = ("0" + lastSunday.getDate()).slice(-2)
, month = ("0" + (lastSunday.getMonth() + 1)).slice(-2)
, psunday = lastSunday.getFullYear()+"-"+(month)+"-"+(day);	

var diff = newDate.getDate() - newDate.getDay() + (newDate.getDay() === 0 ? -6 : 1)
, currentMonday = new Date(newDate.setDate(diff))
, currentSunday = new Date(newDate.setDate(diff+6));

var day = ("0" + currentMonday.getDate()).slice(-2)
, month = ("0" + (currentMonday.getMonth() + 1)).slice(-2)
, cmonday = currentMonday.getFullYear()+"-"+(month)+"-"+(day);

var day = ("0" + currentSunday.getDate()).slice(-2)
, month = ("0" + (currentSunday.getMonth() + 1)).slice(-2)
, csunday = currentSunday.getFullYear()+"-"+(month)+"-"+(day)
, csundayDisplay = (month)+"/"+(day)+"/"+currentSunday.getFullYear();	

var tDate = new Date();
var todayDate = (tDate.getMonth()+1)+'/'+tDate.getDate()+'/'+tDate.getFullYear();

//Today
$('#today').html('('+todayDate+')');	

//This week sunday
$('#week').html('(W/E '+csundayDisplay+')');

//This month
const monthNames = "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
$('#month').html('('+monthNamesnewDate.getMonth()]+')');

//This year
$('#year').html('('+newDate.getFullYear()+')');

/*Ajax For old Dashboard*/
// $.ajax({
// 	method : "POST",
// 	url : "../Home/assets/ajax/ajax_getNumBooking.php",
// 	async : false,
// 	data : { pmonday : pmonday, psunday : psunday, cmonday : cmonday, csunday : csunday },
// 	success : function(data){
// 		var val = data.split("!");
// 		$('#DashBoard_totalBooking').html('');
// 		$('#DashBoard_totalBooking').html(val0]);
// 		$('#orderCount').html('');
// 		$('#orderCount').html(val1]);
// 		$('#bookingIncrease').html('');
// 		$('#bookingIncrease').html(val2]);
// 	}
// });

// $.ajax({
// 	method : "POST",
// 	url : "../Home/assets/ajax/ajax_getNumCustomer.php",
// 	async : false,
// 	data : { pmonday : pmonday, psunday : psunday, cmonday : cmonday, csunday : csunday },
// 	success : function(data){
// 		var val = data.split("!");
// 		$('#userCount').html('');
// 		$('#userCount').html(val0]);
// 		$('#custIncrease').html('');
// 		$('#custIncrease').html(val1]);
// 		$('#newCustomer').html('');
// 		$('#newCustomer').html(val2]);
// 	}
// });

// $.ajax({
// 	method : "POST",
// 	url : "../Home/assets/ajax/ajax_getNumExpGuest.php",
// 	async : false,
// 	data : { pmonday : pmonday, psunday : psunday, cmonday : cmonday, csunday : csunday },
// 	success : function(data){
// 		var val = data.split("!");
// 		$('#visitorCount').html('');
// 		$('#visitorCount').html(val0]);
// 		$('#ExpGuestIncrease').html('');
// 		$('#ExpGuestIncrease').html(val1]);
// 	}
// });

// $.ajax({
// 	method : "POST",
// 	url : "../Home/assets/ajax/ajax_getNumInquiry.php",
// 	async : false,
// 	data : { pmonday : pmonday, psunday : psunday, cmonday : cmonday, csunday : csunday },
// 	success : function(data){
// 		var val = data.split("!");
// 		$('#serverloadCount').html('');
// 		$('#serverloadCount').html(val0]);
// 		$('#increaseInq').html('');
// 		$('#increaseInq').html(val1]);
// 	}
// });

/*Ajax For New Dashboard*/
/*Booking*/
$.ajax({
method : "POST",
url : "../Home/assets/ajax/ajax_getBookingData.php",
async : false,
data : { pmonday : pmonday, psunday : psunday, cmonday : cmonday, csunday : csunday },
success : function(data){
if(data != '')
{
var values = data.split('!');
$('#bookingToday').html(values0]);
$('#bookingWeek').html(values1]);
$('#bookingMonth').html(values2]);
$('#bookingYear').html(values3]);
}
}
});

/*Guest*/
$.ajax({
method : "POST",
url : "../Home/assets/ajax/ajax_getGuestData.php",
async : false,
data : { pmonday : pmonday, psunday : psunday, cmonday : cmonday, csunday : csunday },
success : function(data){
if(data != '')
{
var values = data.split('!');
$('#guestToday').html(values0]);
$('#guestWeek').html(values1]);
$('#guestMonth').html(values2]);
$('#guestYear').html(values3]);
}
}
});

/*Catering*/
$.ajax({
method : "POST",
url : "../Home/assets/ajax/ajax_getCateringData.php",
async : false,
data : { pmonday : pmonday, psunday : psunday, cmonday : cmonday, csunday : csunday },
success : function(data){
if(data != '')
{
var values = data.split('!');
$('#cateringToday').html(values0]);
$('#cateringWeek').html(values1]);
$('#cateringMonth').html(values2]);
$('#cateringYear').html(values3]);
}
}
});

/*Revenue*/
$.ajax({
method : "POST",
url : "../Home/assets/ajax/ajax_getRevenueData.php",
async : false,
data : { pmonday : pmonday, psunday : psunday, cmonday : cmonday, csunday : csunday },
success : function(data){
if(data != '')
{
var values = data.split('!');
$('#RevenueToday').html('$'+values0]);
$('#RevenueWeek').html('$'+values1]);
$('#RevenueMonth').html('$'+values2]);
$('#RevenueYear').html('$'+values3]);
}
}
});
}

$("#donutChart").donutpie();
$("#donutChart").donutpie('update', get_data());
});


//////////////////////

if(key=="Food and Beverage")
{

$.each(value1, function(key, value2) {
FoodnBevearges+=
'<tr><td width="91"><p><strong>'+value2.startdate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ServTime+'-'+value2.ServEndTime+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.HeaderDesc+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.ServItemName+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.ServItemQty+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.ServItemChrg+'</strong></p></td>'+
'<td width="1"></td>'+
'</tr>';

})

$('#BEO_Snacks_and_Social tbody').html('');
$('#BEO_Snacks_and_Social tbody').html(FoodnBevearges);

}


//////////////


select *,StartTime as stime, FUNCT.FunctID as funID from FUNCT left join EVENT on FUNCT.evtid = EVENT.EvtID left join SALPT on FUNCT.SPID = SALPT.SalesID left join SYS_STATDESC on EVENT.EvtStatus = SYS_STATDESC.statusid left join sfrdt on sfrdt.UserDefFunctRoom_ID = FUNCT.EvtID left  join FUNCTNAMES functnames on FUNCTNAMES.ResID = FUNCT.FunctName left join contacts on contacts.ContactID = FUNCT.OnSiteContact left join SERVDETSETUP on SERVDETSETUP.ServDetID = FUNCT.SetupType where  EVENT.EvtStatus != '4' order by FUNCT.FunctID desc limit 10


select 	SRID, SRHdrID, SRTypeID, SRDate, SRConf, SROrig, SRBlckd, RateSing, RateDbl, RateTrip, RateQuad, RateChild, Adult,Child, Extra, RoomRate, SRCost, FunctID1, FunctID2, SRPickup, InPackage from `ESP2000`.`SlpRooms` limit 0, 10

select 	HeaderTypeID, HeaderDesc, TaxID, PMSAlias, YieldAlias, ServPictKey, WebItem, SectionIDs, servprovemail from  HeaderTypes` limit 0, 50

select 	servdescid, Descrip, HeaderType, DfltAmount, PMSAlias, YieldAlias, webAvail, DfltPpl from `ESP2000`.`SERVDESC` limit 0, 50

select 'Sleeping Rooms' as 'CategoryName' ,@SleepingRoomCharge:=CAST(sum(RoomRate) AS DECIMAL(2)) as 'Charges','' as 'Discount' ,@SleepingRoomSrvChrg:=CAST(sum(RoomRate)*0.2 AS DECIMAL(2)) as 'SrvChrg'  ,@SleepingRoomSubTot:=CAST(sum(RoomRate)*1.2 AS DECIMAL(2))  as 'SubTot' ,@SleepingRoomTax1:=CAST(sum(RoomRate)*(0.088) AS DECIMAL(2)) as 'Tax1',''  as 'Tax2',@SleepingRoomTotal:=CAST(sum(RoomRate)*(1.288)AS DECIMAL(2)) as 'Total'  from SlpRooms limit 1 where SRHdrID=".$_POST'bookingID']." group by SRHdrID

union all

select 'RoomRental' as 'CategoryName' ,@fn_Revenue:= 100 as 'Charges' ,'' as 'Discount' ,@fn_SrvChrg:=CAST(sum(100)*0.2 AS DECIMAL(2))  as 'SrvChrg'  ,@fn_SubTot:=CAST(sum(100)*(1.2) AS DECIMAL(2))  as 'SubTot' ,@fn_Tax1:=CAST(sum(100)*(0.088) AS DECIMAL(2))  as 'Tax1',''  as 'Tax2',@fn_Total:=sum(100)*(1.288)  as 'Total' from FUNCT fn join EVENT bkg on fn.evtid = bkg.EvtID limit 1 where bkg.EvtID=".$_POST'bookingID']." group by bkg.EvtID

union all

select distinct c.CategoryName,@Service_Price:=sum(ss.price) as 'Charges' ,'' as 'Discount' ,@Service_SrvChrg:=sum(ss.price)*0.2 as 'SrvChrg'  ,@Service_SubTot:=sum(ss.price)*(1.2) as 'SubTot' ,@Service_Tax1:=sum(ss.price)*(0.088) as 'Tax1',''  as 'Tax2',@Service_Total:=sum(ss.price)*(1.288)  as 'Total' from SERVDESC ss join HeaderTypes c on ss.CategoryID=c.CategoryID join FUNCT fn on ss.FunctionID=fn.FunctID join EVENT bkg on fn.bookingID = bkg.bookingID join servdesc sd on ss.Service_time=sd.servdescid where bkg.bookingID=".$_POST'bookingID']." group by c.CategoryName



union all 

select distinct 'Grand Totals' as 'CategoryName' ,IFNULL(@SleepingRoomCharge, 0)+IFNULL(@fn_Revenue, 0) +IFNULL(@Service_Price, 0)  as 'Charges' ,'' as 'Discount' ,IFNULL(@SleepingRoomSrvChrg, 0)+IFNULL(@fn_SrvChrg, 0) +IFNULL(@Service_SrvChrg, 0) as 'SrvChrg'  ,IFNULL(@SleepingRoomSubTot, 0)+IFNULL(@Service_SubTot, 0) +IFNULL(@Service_SrvChrg, 0)  as 'SubTot' ,IFNULL(@SleepingRoomTax1, 0)+IFNULL(@fn_Tax1, 0) +IFNULL(@Service_Tax1, 0) as 'Tax1',''  as 'Tax2',IFNULL(@SleepingRoomTotal, 0)+IFNULL(@fn_Total, 0) +IFNULL(@Service_Total, 0)  as 'Total'



///////////////////////



ESP2000 new query

select *,StartTime as stime, FUNCT.FunctID as funID from FUNCT left join EVENT on FUNCT.evtid = EVENT.EvtID left join SALPT on FUNCT.SPID = SALPT.SalesID left join SYS_STATDESC on EVENT.EvtStatus = SYS_STATDESC.statusid left join sfrdt on sfrdt.UserDefFunctRoom_ID = FUNCT.EvtID left  join FUNCTNAMES functnames on FUNCTNAMES.ResID = FUNCT.FunctName left join contacts on contacts.ContactID = FUNCT.OnSiteContact left join SERVDETSETUP on SERVDETSETUP.ServDetID = FUNCT.SetupType where  EVENT.EvtStatus != '4' order by FUNCT.FunctID desc limit 100



///////

C:\Users\lenovo\Documents\dumps\Dump20181101

D:\espBackup\DAC_DB\FunctRoom.csv

D:\espBackup\DAC_DB\fnRoom.sql

////////////



DROP TABLE IF EXISTS `sfrdt`;

CREATE TABLE `sfrdt` (
`UserDefFunctRoom_ID` int(11) NOT NULL,
`sectionID` int(11) NOT NULL,
`Room_Description` varchar(200) DEFAULT NULL,
`setupTypeIds` varchar(200) DEFAULT NULL,
`HourlyCharge` int(11) NOT NULL,
`QuartDayCharge` int(11) NOT NULL,
`HalfDayCharge` int(11) NOT NULL,
`FullDayCharge` int(11) NOT NULL,
`Length` int(11) NOT NULL,
`Width` int(11) NOT NULL,
`Ceiling` int(11) NOT NULL,
`Cost` varchar(200) NOT NULL,
`SqFeet` int(11) NOT NULL,
`SelectRmChrg` int(11) NOT NULL,
`funcOrder` int(11) DEFAULT NULL,
`Analog_Line` varchar(200) NOT NULL,
`Digital_Line` varchar(200) NOT NULL,
PRIMARY KEY (`UserDefFunctRoom_ID`)
) ENGINE=MyISAM AUTO_INCREMENT=33 DEFAULT CHARSET=latin1;

/*Data for the table `tbl_functionRoom` */

insert into `sfrdt` values 

(1,1,'Living Room','5,6,13,14',100,100,100,0,0,0,0,'0.00',0,0,1,'',''),

(2,1,'Formal Dining Room','2,3,4,5,9,10,13,14,15,16',150,200,100,0,0,0,0,'0.00',0,0,2,'',''),

(3,1,'Formal Terrace','5,10,13,14',2,0,0,0,0,0,0,'0.00',0,0,3,'',''),

(4,1,'Ballroom','1,4,5,15',2,0,0,0,0,0,0,'0.00',0,0,4,'',''),

(5,1,'Dance Terrace','3,5,10,13,14',2,0,0,0,0,0,0,'0.00',0,0,5,'',''),

(6,1,'East Bar','3,5,8,13,14,15',2,0,0,0,0,0,0,'0.00',0,0,6,'',''),

(7,1,'NY End East bar','3,5,13,14,15',2,0,0,0,0,0,0,'0.00',0,0,7,'',''),

(8,1,'Perennial Garden','3,5,13,14',2,0,0,0,0,0,0,'0.00',0,0,8,'',''),

(9,1,'Wood End East Bar','3,5,13,14,15',2,0,0,0,0,0,0,'0.00',0,0,9,'',''),

(10,1,'Library','2',2,0,0,0,0,0,0,'0.00',0,0,10,'',''),

(11,1,'West Deck','3,5',2,0,0,0,0,0,0,'0.00',0,0,11,'',''),

(12,1,'Bar','3,5,6,15',2,0,0,0,0,0,0,'0.00',0,0,12,'',''),

(13,1,'Flag Pole Lawn','3,15',2,0,0,0,0,0,0,'0.00',0,0,13,'',''),

(14,1,'Bowing Green','1,2,3,4,5,6,7,8,9,10,12,13,14,15,16',2,0,0,0,0,0,0,'0.00',0,0,14,'',''),

(15,1,'Saliors Terrace','1,2,3,4,5,6,7,8,9,10,12,13,14,15,16',2,0,0,0,0,0,0,'0.00',0,0,15,'',''),

(16,1,'Front Porch','1,2,3,4,5,6,7,8,9,10,12,13,14,15,16',2,0,0,0,0,0,0,'0.00',0,0,16,'',''),

(17,1,'JAYC House','3,5,10',2,0,0,0,0,0,0,'0.00',0,0,17,'',''),

(18,1,'Jr. JAYC House','3,5',2,0,0,0,0,0,0,'0.00',0,0,18,'',''),

(19,1,'Regatta 1','',2,0,0,0,0,0,0,'0.00',0,0,19,'',''),

(20,1,'Regatta 2','',2,0,0,0,0,0,0,'0.00',0,0,20,'',''),

(21,1,'Main Dock','1,2,3,5,6,8,10,12,13,14',0,0,0,0,0,0,0,'',0,0,21,'',''),

(22,1,'Gibbons Point','1,2,3,4,5,6,7,8,9,10,12,13,14,15,16',0,0,0,0,0,0,0,'',0,0,22,'',''),

(23,1,'JAYC Float','1,2,3,5,6,8,10,12,13,14',0,0,0,0,0,0,0,'',0,0,23,'',''),

(24,1,'Beach','1,2,3,4,5,6,7,8,9,10,12,13,14,15,16',0,0,0,0,0,0,0,'',0,0,24,'',''),

(25,1,'Tennis Deck','1,2,3,4,5,6,7,8,9,10,12,13,14,15,16',0,0,0,0,0,0,0,'',0,0,25,'',''),

(26,1,'Tennis Courts 1','1,2,3,4,5,6,7,8,9,10,12,13,14,15,16',0,0,0,0,0,0,0,'',0,0,26,'',''),

(27,1,'Tennis Courts 2','1,2,3,4,5,6,7,8,9,10,12,13,14,15,16',0,0,0,0,0,0,0,'',0,0,27,'',''),

(28,1,'Padde Tennis','1,2,3,4,5,6,7,8,9,10,12,13,14,15,16',0,0,0,0,0,0,0,'',0,0,28,'',''),

(29,1,'Pool','1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16',0,0,0,0,0,0,0,'',0,0,29,'',''),

(30,1,'Formal Lawn','1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16',0,0,0,0,0,0,0,'',0,0,30,'',''),

(31,1,'Parking Lot','1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16',0,0,0,0,0,0,0,'',0,0,31,'',''),

(32,2,'Test',NULL,0,0,0,0,0,0,0,'',0,0,1,'','');


////////////////////


$(document).ready(function(){

$('#BookingIcon').on('click',function(){

var img1 = "assets/images/Bookings_Icon_Pressed.png",
var img2 = "assets/images/Bookings_Icon_UnPressed.png";

var src=$('#BookingIcon').attr('stc');
src=(src === img1)? img2 : img1;
$("#tbl_FoodNBeverages tr").attr("stc", "false");;

}) 

})

///////////


{"EvtID":"1","UnivEventID":"0","CustID":"5198","ContactID":"3385","ReservationID":"","SPID":"127","EvtName":"Nicholl, Charles H.","EvtStart":"2000-12-16 00:00:00.000000","EvtEnd":"2000-12-15 00:00:00.000000","EvtStatus":"1","ConfDate":"2000-06-23 08:10:13.000000","EvtPaymentMethod":"0","Frequency":"0","ReferralSource":"0","MrktSeg":"38","PostAs":"Nicholl, Charles H.","LoudGroup":"0","DoNotPost":"0","NotesExist":"1","CateringSalesID":"0","CateringContact":"5198","ContractSent":"1899-12-30 00:00:00.000000","ContractRecd":"1899-12-30 00:00:00.000000","BillingCustID":"7671","MonitorOverride":"0","TaxExempt":"0","YieldAlias":null,"MatterID":"0","EventEmailSent":null,"ContractDue":null,"SourceEvtID":null,"TaxExemptDetail":"","EvtInitDate":null,"EvtCutoffDate":null,"fundid":null,"UnivCustID":"0","LocID":null,"CustSrchID":"N287","SalesPersonID":null,"ContactpersonID":null,"Email":null,"CustName":"Nicholl, Charles H.","Alias":null,"SoundexName":"N240","CustPhone":"586-445-0330","CustAdd1":"12880 E. 9 Mile Rd.","CustAdd2":"","CustCity":"Warren","CustState":"MI","CustPostCode":"48089","CustCntry":"1","CustBAdd1":"376 Chalfonte","CustBAdd2":"12880 E. 9 Mile Rd.","CustBCity":"Grosse Pointe Farms","CustBState":"MI","CustBPostCode":"48236","CustBCntry":"1","FedID":"","NProfit":"0","CustPmtMthd":"0","CustMarket":"64","CustReferral":"4","CustFax":"586-776-6491","Chngd":"2018-10-15 05:35:17.700000","ISActive":"1","GroupID":"0","IsAgency":"0","CostCenterCode":null,"Mngr_email":null,"webEdit":null,"NoHTEmails":null,"CustEmailAddress":"cnicholl@modernhc.com","CustInitDate":"2000-06-23 00:00:00.000000","CustWebsite":"","UnivContactID":"0","FirstName":null,"LastName":"DETROIT AREA AGENCY ON AGING","SoundExLast":"DETROIT AREA AGENCY ON AGING","Salutation":null,"Title":null,"Addr1":null,"Addr2":null,"City":null,"State":null,"PostCode":null,"Cntry":"1","EmailAddress":null,"ContactType":"99","WebUserName":"3385","WebPassword":null,"IsActive":"1","sourcecontid":"0"}

/////////

Olejniczak, III Edmond J.


////////

TTRCT - failed
- `ESP2000`.`COMPETITION` has FAILED (0 of 38 rows copied)
ESP2000`.`FUNCTNOTES` has FAILED 

/////////////

113 tables of 170 were fully copied

Data copy results:
- `ESP2000`.`SYS_ATSAS` has succeeded (16 of 16 rows copied)
- `ESP2000`.`tsltt` has succeeded (4552 of 4552 rows copied)
- `ESP2000`.`Sys_Freq` has succeeded (8 of 8 rows copied)
- `ESP2000`.`RefSource` has succeeded (3 of 3 rows copied)
- `ESP2000`.`PackageServItems` has succeeded (0 of 0 rows copied)
- `ESP2000`.`Transient` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SUFRT` has succeeded (683 of 683 rows copied)
- `ESP2000`.`SYS_ContactTypes` has succeeded (4 of 4 rows copied)
- `ESP2000`.`GRCT` has succeeded (0 of 0 rows copied)
- `ESP2000`.`ITF_AvailableBoard` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SYS_LBTYPEDESC` has succeeded (2 of 2 rows copied)
- `ESP2000`.`LOSTHEADER` has succeeded (51439 of 51439 rows copied)
- `ESP2000`.`CUSTT_BU_20171112` has succeeded (32056 of 32056 rows copied)
- `ESP2000`.`ReferralTypes` has succeeded (2 of 2 rows copied)
- `ESP2000`.`Sys_FreqDesc` has succeeded (8 of 8 rows copied)
- `ESP2000`.`Sys_TemplateServTime` has succeeded (3 of 3 rows copied)
- `ESP2000`.`SYS_ATPER` has succeeded (12 of 12 rows copied)
- `ESP2000`.`SYS_TraceType` has succeeded (3 of 3 rows copied)
- `ESP2000`.`EventPayment` has succeeded (1 of 1 rows copied)
- `ESP2000`.`SYS_REPCAT` has succeeded (7 of 7 rows copied)
- `ESP2000`.`ITF_AvailableYield` has succeeded (0 of 0 rows copied)
- `ESP2000`.`FUNCT` has succeeded (147981 of 147981 rows copied)
- `ESP2000`.`PayMethods` has succeeded (8 of 8 rows copied)
- `ESP2000`.`Matter` has succeeded (0 of 0 rows copied)
- `ESP2000`.`ContractRates` has succeeded (0 of 0 rows copied)
- `ESP2000`.`BILLTYPE` has succeeded (5 of 5 rows copied)
- `ESP2000`.`PackageServDesc` has succeeded (0 of 0 rows copied)
- `ESP2000`.`GRCSections` has succeeded (1 of 1 rows copied)
- `ESP2000`.`SYS_LOCATION` has succeeded (1 of 1 rows copied)
- `ESP2000`.`SlpRooms` has succeeded (35 of 35 rows copied)
- `ESP2000`.`AutoTrace` has succeeded (4 of 4 rows copied)
- `ESP2000`.`ITF_DeletedBlock` has succeeded (0 of 0 rows copied)
- `ESP2000`.`WebRecept_PropSections` has succeeded (0 of 0 rows copied)
- `ESP2000`.`dtproperties` has succeeded (21 of 21 rows copied)
- `ESP2000`.`DailyCodes` has succeeded (0 of 0 rows copied)
- `ESP2000`.`DEPOSITT` has succeeded (1114 of 1114 rows copied)
- `ESP2000`.`SYS_TraceDisplayFields` has succeeded (25 of 25 rows copied)
- `ESP2000`.`ContactPhones` has succeeded (41614 of 41614 rows copied)
- `ESP2000`.`ATTENDEE` has succeeded (0 of 0 rows copied)
- `ESP2000`.`Sys_PrioritiesDesc` has succeeded (3 of 3 rows copied)
- `ESP2000`.`QueryCategories` has succeeded (18 of 18 rows copied)
- `ESP2000`.`WebContactRooms` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SERVSETUP` has succeeded (1103 of 1103 rows copied)
- `ESP2000`.`Trace_Attachments` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SYS_CountryCodes` has succeeded (15 of 15 rows copied)
- `ESP2000`.`FUNCTNOTES` has FAILED (23900 of 51058 rows copied)
- `ESP2000`.`SlpHdrTransActs` has succeeded (140143 of 140143 rows copied)
- `ESP2000`.`ROOMRENTHDR` has succeeded (147981 of 147981 rows copied)
- `ESP2000`.`PackageFuncts` has succeeded (0 of 0 rows copied)
- `ESP2000`.`RESMTHD` has succeeded (3 of 3 rows copied)
- `ESP2000`.`FUNCTNAMES` has succeeded (35 of 35 rows copied)
- `ESP2000`.`fund` has succeeded (0 of 0 rows copied)
- `ESP2000`.`TargetRates` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SYS_ATPERDESC` has succeeded (6 of 6 rows copied)
- `ESP2000`.`PERMISSIONS` has succeeded (58 of 58 rows copied)
- `ESP2000`.`EVENT` has succeeded (133478 of 133478 rows copied)
- `ESP2000`.`WebBookRules` has succeeded (0 of 0 rows copied)
- `ESP2000`.`CLIENTOPTIONS` has succeeded (62 of 62 rows copied)
- `ESP2000`.`REPOPTIONS` has succeeded (2090 of 2090 rows copied)
- `ESP2000`.`Evt_PackageServDesc` has succeeded (0 of 0 rows copied)
- `ESP2000`.`Evt_PackageDays` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SYS_PROPT` has succeeded (1 of 1 rows copied)
- `ESP2000`.`InventoryControl` has succeeded (16809 of 16809 rows copied)
- `ESP2000`.`sys_diagoptions` has succeeded (1 of 1 rows copied)
- `ESP2000`.`ITF_NEWBlock` has succeeded (0 of 0 rows copied)
- `ESP2000`.`QryDetail` has succeeded (387 of 387 rows copied)
- `ESP2000`.`InvoiceHeader` has succeeded (1458 of 1458 rows copied)
- `ESP2000`.`SYS_STATDESC` has succeeded (5 of 5 rows copied)
- `ESP2000`.`EVENTNOTES` has succeeded (28 of 28 rows copied)
- `ESP2000`.`ITF_EDITBlock` has succeeded (0 of 0 rows copied)
- `ESP2000`.`CustGroups` has succeeded (12 of 12 rows copied)
- `ESP2000`.`Sys_LbType` has succeeded (2 of 2 rows copied)
- `ESP2000`.`FRAVDET` has succeeded (0 of 0 rows copied)
- `ESP2000`.`Sys_Priorities` has succeeded (3 of 3 rows copied)
- `ESP2000`.`SUTYPES` has succeeded (27 of 27 rows copied)
- `ESP2000`.`CustPayment` has succeeded (0 of 0 rows copied)
- `ESP2000`.`LBRT` has succeeded (22 of 22 rows copied)
- `ESP2000`.`Sys_TemplateServTimeDesc` has succeeded (3 of 3 rows copied)
- `ESP2000`.`RoomTypes` has succeeded (6 of 6 rows copied)
- `ESP2000`.`GroupPERMISSIONS` has succeeded (4 of 4 rows copied)
- `ESP2000`.`Inventory` has succeeded (9 of 9 rows copied)
- `ESP2000`.`SYS_REPORTSDESC` has succeeded (40 of 40 rows copied)
- `ESP2000`.`CONTACTS` has succeeded (25345 of 25345 rows copied)
- `ESP2000`.`ExportQueue` has succeeded (105 of 105 rows copied)
- `ESP2000`.`ServDetTransacts` has FAILED (741200 of 1035339 rows copied)
- `ESP2000`.`PaymentTypes` has FAILED (0 of 6 rows copied)
- `ESP2000`.`SYS_TraceTypeDesc` has FAILED (0 of 3 rows copied)
- `ESP2000`.`ITF_NEWCUSTOMER` has succeeded (0 of 0 rows copied)
- `ESP2000`.`PERIOD` has FAILED (0 of 132 rows copied)
- `ESP2000`.`TAXMAPHEAD` has FAILED (0 of 1 rows copied)
- `ESP2000`.`MRKT` has FAILED (0 of 45 rows copied)
- `ESP2000`.`Packages` has succeeded (0 of 0 rows copied)
- `ESP2000`.`EventPackage` has succeeded (0 of 0 rows copied)
- `ESP2000`.`Queries` has FAILED (0 of 44 rows copied)
- `ESP2000`.`SERVDESC` has FAILED (0 of 98 rows copied)
- `ESP2000`.`Evt_SlpRooms` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SFRDT` has FAILED (0 of 53 rows copied)
- `ESP2000`.`SALUTATIONS` has FAILED (0 of 9 rows copied)
- `ESP2000`.`HeaderTypes` has FAILED (0 of 5 rows copied)
- `ESP2000`.`MarketRates` has succeeded (0 of 0 rows copied)
- `ESP2000`.`LEDGER` has FAILED (0 of 88 rows copied)
- `ESP2000`.`SYS_EXPORTTYPEDESC` has FAILED (0 of 7 rows copied)
- `ESP2000`.`SYS_RENTALDESC` has FAILED (0 of 6 rows copied)
- `ESP2000`.`sfrdt` has FAILED (0 of 13 rows copied)
- `ESP2000`.`CustTransient` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SYS_ContactTypesDesc` has FAILED (0 of 4 rows copied)
- `ESP2000`.`ITF_AvailablePMS` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SYS_STATUS` has FAILED (0 of 5 rows copied)
- `ESP2000`.`ATSTT` has succeeded (0 of 0 rows copied)
- `ESP2000`.`InvoiceDet` has FAILED (0 of 1598 rows copied)
- `ESP2000`.`diagramt` has succeeded (0 of 0 rows copied)
- `ESP2000`.`UserDef_Funct` has FAILED (0 of 8 rows copied)
- `ESP2000`.`SYS_SERVEROPTIONS` has FAILED (0 of 1 rows copied)
- `ESP2000`.`SlpRmsTransActs` has FAILED (0 of 59 rows copied)
- `ESP2000`.`RollingScreen` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SALESGROUPS` has FAILED (0 of 8 rows copied)
- `ESP2000`.`USERDEF_WEBPAYMENT` has succeeded (0 of 0 rows copied)
- `ESP2000`.`Documents` has FAILED (0 of 260 rows copied)
- `ESP2000`.`SYS_FormatDesc` has succeeded (0 of 0 rows copied)
- `ESP2000`.`Sections` has FAILED (0 of 21 rows copied)
- `ESP2000`.`FRAVLevel` has succeeded (0 of 0 rows copied)
- `ESP2000`.`Restriction` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SERVTYPE` has FAILED (0 of 77 rows copied)
- `ESP2000`.`PeriodGoals` has FAILED (0 of 45 rows copied)
- `ESP2000`.`SYS_TIMEZONE` has succeeded (0 of 0 rows copied)
- `ESP2000`.`ROOMHOLDDATES` has FAILED (0 of 2906 rows copied)
- `ESP2000`.`slphdrt` has FAILED (0 of 133478 rows copied)
- `ESP2000`.`Evt_PackageFuncts` has succeeded (0 of 0 rows copied)
- `ESP2000`.`Error_Log` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SYS_PhoneTypes` has FAILED (0 of 5 rows copied)
- `ESP2000`.`SYS_EXPORTTYPE` has FAILED (0 of 7 rows copied)
- `ESP2000`.`ServTimeTransActs` has FAILED (0 of 1023852 rows copied)
- `ESP2000`.`TaxMap` has FAILED (0 of 14 rows copied)
- `ESP2000`.`SERVDETSETUP` has FAILED (0 of 2389 rows copied)
- `ESP2000`.`RESTYPE` has FAILED (0 of 3 rows copied)
- `ESP2000`.`COMPETITION` has FAILED (0 of 38 rows copied)
- `ESP2000`.`PackageDays` has succeeded (0 of 0 rows copied)
- `ESP2000`.`Discount` has succeeded (0 of 0 rows copied)
- `ESP2000`.`PaymentFields` has FAILED (0 of 8 rows copied)
- `ESP2000`.`NeedDates` has FAILED (0 of 1 rows copied)
- `ESP2000`.`CUSTT_BU_20181004` has FAILED (0 of 39894 rows copied)
- `ESP2000`.`SalesGoals` has FAILED (0 of 21 rows copied)
- `ESP2000`.`AgencyBookings` has succeeded (0 of 0 rows copied)
- `ESP2000`.`USERDEF_LOCATION` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SYS_EventLocks` has FAILED (0 of 6 rows copied)
- `ESP2000`.`SYS_PhoneTypeDesc` has FAILED (0 of 5 rows copied)
- `ESP2000`.`SYS_TableList` has succeeded (0 of 0 rows copied)
- `ESP2000`.`recept_prop` has FAILED (0 of 1 rows copied)
- `ESP2000`.`Holidays` has FAILED (0 of 1100 rows copied)
- `ESP2000`.`diagrammatrix` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SALPT` has FAILED (0 of 58 rows copied)
- `ESP2000`.`SYS_LANGUAGES` has FAILED (0 of 1 rows copied)
- `ESP2000`.`CUSTT` has FAILED (0 of 39754 rows copied)
- `ESP2000`.`SFRAVT` has succeeded (0 of 0 rows copied)
- `ESP2000`.`Agency` has succeeded (0 of 0 rows copied)
- `ESP2000`.`TRCCAT` has FAILED (0 of 9 rows copied)
- `ESP2000`.`GrcDefaults` has succeeded (0 of 0 rows copied)
- `ESP2000`.`SYS_RENTAL` has FAILED (0 of 5 rows copied)
- `ESP2000`.`Client` has succeeded (0 of 0 rows copied)
- `ESP2000`.`diagsumatrix` has succeeded (0 of 0 rows copied)
- `ESP2000`.`USERDEF_EVENT` has FAILED (0 of 1 rows copied)
- `ESP2000`.`sys_reports` has FAILED (0 of 40 rows copied)
- `ESP2000`.`SYS_ATSASDESC` has FAILED (0 of 16 rows copied)
- `ESP2000`.`WebItemRules` has succeeded (0 of 0 rows copied)
- `ESP2000`.`CONSOLIDATION` has FAILED (0 of 9 rows copied)
- `ESP2000`.`TaxMapDet` has FAILED (0 of 7 rows copied)
- `ESP2000`.`DocTemplates` has FAILED (0 of 19 rows copied)
- `ESP2000`.`SYS_REPCATDESC` has FAILED (0 of 7 rows copied)
- `ESP2000`.`USERDEF_TTRCT` has succeeded (0 of 0 rows copied)
- `ESP2000`.`USERDEF_CONTACTS` has FAILED (0 of 6081 rows copied)


//////////////////////////////////




Codes -
Customer Groups
Market Segments
Payment Methods
Referral Types
Referral Sources
Lost Business Competition
Lost Business Reasons
Salutations
Phone Types

--------
Function/Catering
Section
Function Room
Room Setup Types
Function Room AV
Function Types
Service Items
Service Descriptions
Service Categories
Packages

--------

Group Rooms
Availability
Reservation Methods
Reservation Types

//////////




agency 
agencybookings 
atstt 
attendee
client 
contractrates 
dailycodes
diagsumatrix 
diagrammatrix 
error_log
fravdet 
fravlevel 
grcdefaults 
grct 
itf_availableboard  
itf_availablepms 
itf_availableyield 
itf_deletedblock 
itf_editblock
itf_newblock 
itf_newcustomer 
marketrates 
needdates 
packages 
rollingscreen
targetrates
trace_attachments
transient 
userdef_location 
userdef_location 
userdef_webpayment 
userdef_webpayment  
webbookrules 
webitemrules 
webrecept_propsections

//////////////////////////


$('#DocumentContainer').load('../common/Templates/'+selected+'.html', function() {


$('table').css('width','100%');
$('thead tr td').css('border','1px solid');
$('thead tr td').css('border-collapse','collapse');
$('thead tr td').css('background','lightgray');

var row='';
var table2='';

if(!BookingDatajson)
{
alert('Please Load a Booking');
return;
}	

/////////// Function Detail ///////////////
$.ajax({
method : "POST",
async : false,
data : { bookingId : BookingDatajson.bookingId },
url : "../Booking/assets/ajax/BEO.php",
success : function(data){

var jsonfnDetail=JSON.parse(data);

var functiondetailrow='';

$.each(jsonfnDetail, function(key, value){

functiondetailrow+=
'<tr><td width="97"><p><strong>Monday</strong></p><p><strong>'+value.StartTime+'</strong></p></td>'+
'<td width="150"><p><strong>'+value.EndTime+'</strong></p></td>'+
'<td width="114"><p><strong>'+value.ResDesc+'</strong></p></td>'+
'<td width="84"></td>'+
'<td width="84"><p><strong>'+value.FunctExpNumPpl+'</strong><strong>/'+value.FunctGtdNumPpl+'</strong></p></td>'+
'<td width="114"><p><strong>'+value.functionRoom+'</strong></p></td>'+
'<td width="89"><p><strong>'+value.revenue+'</strong></p></td>'+
'<td width="1"></td>'+
'</tr>'
;


$('#FunctionDetails tbody').html('');
$('#FunctionDetails tbody').append(functiondetailrow);

})

}
});


/////////// Different Services Data ///////////////
$.ajax({
method : "POST",
url : "../Booking/assets/ajax/BEO.php",
data : {GetServices:"1",bookingID:BookingDatajson.bookingId},
async : false,
success:function(data){

if(data)
{

var jsonData=JSON.parse(data);

var groupedData = _.groupBy(jsonData, function(d){
return d.CategoryName});

$.each(groupedData, function(key, value1) {

// Line 152: <table id="BEO_Snacks_and_Social">
// Line 191: <table id="BEO_Audio_Visual">
// Line 250: <table id="BEO_Bar_Services">
// Line 309: <table id="BEO_Room_Setup">
// Line 368: <table id="BEO_Activities">
// Line 426: <table id="BEO_Standard_Dining">
// Line 485: <table id="BEO_Miscellaneous">

var FoodnBevearges='';

if(key=="Food & Bevearges")
{

$.each(value1, function(key, value2) {
FoodnBevearges+=
'<tr><td width="91"><p><strong>'+value2.StartDate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ES_ServiceStart+'-'+value2.ES_ServiceEnd+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.Descrip+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.Item+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.Quantity+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.price+'</strong></p></td>'+
'<td width="1"></td>'+
'</tr>';

})

$('#BEO_Snacks_and_Social tbody').html('');
$('#BEO_Snacks_and_Social tbody').html(FoodnBevearges);

}

var BarServices='';

if(key=="Bar Services")
{

$.each(value1, function(key, value2) {

BarServices+=
'<tr><td width="91"><p><strong>'+value2.StartDate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ES_ServiceStart+'-'+value2.ES_ServiceEnd+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.Descrip+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.Item+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.Quantity+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.price+'</strong></p></td>'+
'<td width="1"></td>'+
'</tr>';
})


$('#BEO_Bar_Services tbody').html('');
$('#BEO_Bar_Services tbody').html(BarServices);

}


var AudioVisual='';

if(key=="Audio Visual")
{

$.each(value1, function(key, value2) {

BarServices+=
'<tr><td width="91"><p><strong>'+value2.StartDate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ES_ServiceStart+'-'+value2.ES_ServiceEnd+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.Descrip+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.Item+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.Quantity+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.price+'</strong></p></td>'+
'<td width="1"></td>'+
'</tr>';
})


$('#BEO_Bar_Services tbody').html('');
$('#BEO_Bar_Services tbody').html(AudioVisual);

}

var RoomSetup='';

if(key=="Room Setup")
{

$.each(value1, function(key, value2) {

BarServices+=
'<tr><td width="91"><p><strong>'+value2.StartDate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ES_ServiceStart+'-'+value2.ES_ServiceEnd+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.Descrip+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.Item+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.Quantity+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.price+'</strong></p></td>'+
'<td width="1"></td>'+
'</tr>';
})


$('#BEO_Room_Setup tbody').html('');
$('#BEO_Room_Setup tbody').html(RoomSetup);

}


var Miscellaneous='';

if(key=="Miscellaneous")
{

$.each(value1, function(key, value2) {

BarServices+=
'<tr><td width="91"><p><strong>'+value2.StartDate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ES_ServiceStart+'-'+value2.ES_ServiceEnd+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.Descrip+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.Item+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.Quantity+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.price+'</strong></p></td>'+
'<td width="1"></td>'+
'</tr>';
})


$('#BEO_Miscellaneous tbody').html('');
$('#BEO_Miscellaneous tbody').html(Miscellaneous);

}


})

}

}
});


/////////// Summary ///////////////

var GrandTotal='';


$.ajax({
method : "POST",
url : "../Booking/assets/ajax/BEO.php",
data : {Summary:"1",bookingID:BookingDatajson.bookingId},
async : false,
success:function(data){

if(data)
{

var jsonData=JSON.parse(data);
var Summary='';

$.each(jsonData, function(key, value2) {

Summary+=
'<tr><td width="91"><p><strong>'+value2.CategoryName+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.Charges+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.SrvChrg+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.SubTot+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.Tax1+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.Tax2+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.Total+'</strong></p></td>'+
'</tr>';

GrandTotal=value2.Total;
})

$('#BEO_summary tbody').html('');
$('#BEO_summary tbody').html(Summary);

}
}

})


/////////// Deposit ///////////////

$.ajax({
method : "POST",
url : "../Booking/assets/ajax/BEO.php",
data : {Deposit:"1",bookingID:BookingDatajson.bookingId},
async : false,
success:function(data){

if(data)
{

var jsonData=JSON.parse(data);
var Deposit='';

var LessDeposit='';

$.each(jsonData, function(key, value2) {

Deposit+=
'<tr><td width="91"><p><strong>'+value2.Description+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.Amtdue+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.Duedate+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.Amtrecvd+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.Datercvd+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.Balance+'</strong></p></td>'+
'</tr>';

LessDeposit+=value2.Amtrecvd;

})

$('#BEO_Deposits tbody').html('');
$('#BEO_Deposits tbody').html(Deposit);

$('#LessDeposit').html('');
$('#LessDeposit').html(LessDeposit);

var AmtDue=GrandTotal-LessDeposit;

$('#AmountDue').html('');
$('#AmountDue').html(AmountDue);


}
}

})


/////////// BEO_HOTEL_ROOMS ///////////////

$.ajax({
method : "POST",
url : "../Booking/assets/ajax/BEO.php",
data : {BEO_HOTEL_ROOMS:"1",bookingID:BookingDatajson.bookingId},
async : false,
success:function(data){

if(data)
{

var jsonData=JSON.parse(data);
var BEO_HOTEL_ROOMS='';

$.each(jsonData, function(key, value2) {

BEO_HOTEL_ROOMS+=
'<tr><td width="91"><p>'+value2._Date+'</p></td>'+
'<td width="78"><p>'+value2.RoomType+'</p></td>'+
'<td width="102"><p>'+value2.Adult+'</p></td>'+
'<td width="294"><p>'+value2.Rate+'</p></td>'+
'<td width="72"><p>'+value2.Block+'</p></td>'+
'</tr>';

})

$('#BEO_HOTEL_ROOMS tbody').html('');
$('#BEO_HOTEL_ROOMS tbody').html(BEO_HOTEL_ROOMS);

}
}

})


$('#DocumentContainer').wordExport();

});


//////////////

653 - 268


<tr><td width="91"><p><strong>Sleeping Rooms</strong></p></td><td width="78"><p><strong>99</strong></p></td><td width="102"><p><strong>47.0</strong></p></td><td width="294"><p><strong>99.0</strong></p></td><td width="72"><p><strong>21.000</strong></p></td><td width="96"><p><strong>$</strong></p></td><td width="96"><p><strong>$99</strong></p></td></tr>

<tr><td width="91"><p><strong>RoomRental</strong></p></td><td width="78"><p><strong>14</strong></p></td><td width="102"><p><strong>3.0</strong></p></td><td width="294"><p><strong>17.0</strong></p></td><td width="72"><p><strong>1.000</strong></p></td><td width="96"><p><strong>$</strong></p></td><td width="96"><p><strong>$18.032</strong></p></td></tr>

<tr><td width="91"><p><strong>Food & Bevearges</strong></p></td><td width="78"><p><strong>8</strong></p></td><td width="102"><p><strong>1.6</strong></p></td><td width="294"><p><strong>9.6</strong></p></td><td width="72"><p><strong>0.704</strong></p></td><td width="96"><p><strong>$</strong></p></td><td width="96"><p><strong>$10.304</strong></p></td></tr>




<table id="BEO_Deposits">
<thead>
<tr>
<td colspan="6" width="734">
<p><strong>Deposits</strong></p>
</td>
</tr>
<tr>
<td width="122">
<p>Description</p>
</td>
<td width="122">
<p>Amount Due</p>
</td>
<td width="122">
<p>Date Due</p>
</td>
<td width="122">
<p>Amount Paid</p>
</td>
<td width="122">
<p>Date Paid</p>
</td>
<td width="122">
<p>Balance</p>
</td>
</tr>
</thead>
<tbody>
<tr>
<td width="122">
<p><strong>&nbsp;</strong></p>
</td>
<td width="122">
<p><strong>&nbsp;</strong></p>
</td>
<td width="122">
<p><strong>&nbsp;</strong></p>
</td>
<td width="122">
<p><strong>&nbsp;</strong></p>
</td>
<td width="122">
<p><strong>&nbsp;</strong></p>
</td>
<td width="122">
<p><strong>&nbsp;</strong></p>
</td>
</tr>
</tbody>
</table>

///////////////////

var Labor='';

if(key=="Labor")
{

$.each(value1, function(key, value2) {

BarServices+=
'<tr><td width="91"><p><strong>'+value2.StartDate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ES_ServiceStart+'-'+value2.ES_ServiceEnd+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.Descrip+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.Item+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.Quantity+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.price+'</strong></p></td>'+
'<td width="1"></td>'+
'</tr>';
})


$('#BEO_Bar_Services tbody').html('');
$('#BEO_Bar_Services tbody').html(Labor);

}


var ReggettaSetUp='';

if(key=="Reggetta SetUp")
{

$.each(value1, function(key, value2) {

BarServices+=
'<tr><td width="91"><p><strong>'+value2.StartDate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ES_ServiceStart+'-'+value2.ES_ServiceEnd+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.Descrip+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.Item+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.Quantity+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.price+'</strong></p></td>'+
'<td width="1"></td>'+
'</tr>';
})


$('#BEO_Bar_Services tbody').html('');
$('#BEO_Bar_Services tbody').html(ReggettaSetUp);

}


var Food_Beverages_NonMember='';

if(key=="Food & Beverages NonMember")
{

$.each(value1, function(key, value2) {

BarServices+=
'<tr><td width="91"><p><strong>'+value2.StartDate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ES_ServiceStart+'-'+value2.ES_ServiceEnd+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.Descrip+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.Item+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.Quantity+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.price+'</strong></p></td>'+
'<td width="1"></td>'+
'</tr>';
})


$('#BEO_Bar_Services tbody').html('');
$('#BEO_Bar_Services tbody').html(Food_Beverages_NonMember);

}


var Bar_Sevices_NonMember='';

if(key=="Bar Sevices NonMember")
{

$.each(value1, function(key, value2) {

BarServices+=
'<tr><td width="91"><p><strong>'+value2.StartDate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ES_ServiceStart+'-'+value2.ES_ServiceEnd+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.Descrip+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.Item+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.Quantity+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.price+'</strong></p></td>'+
'<td width="1"></td>'+
'</tr>';
})


$('#BEO_Bar_Services tbody').html('');
$('#BEO_Bar_Services tbody').html(Bar_Sevices_NonMember);

}


var Room_Setup_NonMember='';

if(key=="Room Setup NonMember")
{

$.each(value1, function(key, value2) {

BarServices+=
'<tr><td width="91"><p><strong>'+value2.StartDate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ES_ServiceStart+'-'+value2.ES_ServiceEnd+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.Descrip+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.Item+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.Quantity+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.price+'</strong></p></td>'+
'<td width="1"></td>'+
'</tr>';
})


$('#BEO_Bar_Services tbody').html('');
$('#BEO_Bar_Services tbody').html(Room_Setup_NonMember);

}


var LaborNonMember='';

if(key=="Labor NonMember")
{

$.each(value1, function(key, value2) {

BarServices+=
'<tr><td width="91"><p><strong>'+value2.StartDate+'</strong></p></td>'+
'<td width="78"><p><strong>'+value2.ES_ServiceStart+'-'+value2.ES_ServiceEnd+'</strong></p></td>'+
'<td width="102"><p><strong>'+value2.Descrip+'</strong></p></td>'+
'<td width="294"><p><strong>'+value2.Item+'</strong></p></td>'+
'<td width="72"><p><strong>'+value2.Quantity+'</strong></p></td>'+
'<td width="96"><p><strong>$'+value2.price+'</strong></p></td>'+
'<td width="1"></td>'+
'</tr>';
})


$('#BEO_Bar_Services tbody').html('');
$('#BEO_Bar_Services tbody').html(LaborNonMember);

}




/////////////////////////////


Date	Service Time	Service Type	Item	Qty.	Charge



///////

{bookingId: "653", packageBookedId: "0", locationId: "MTAwMQ==", customerId: "89", bookingName: "Ford 19 sep report booking", …}
Addr1: "h 3/6 , krishna nagar , delhi"
Addr2: null
Alias: ""
Chngd: "2018-10-01 15:38:43"
City: "Delhi"
Cntry: "1"
ConfirmedDate: null
ContactID: "214"
ContactPersonID: "129"
ContactType: null
CreatedOn: null
CustAdd1: "2000 Fairlane Drive"
CustAdd2: ""
CustBAdd1: "2000 Fairlane Drive"
CustBAdd2: ""
CustBCity: "Dearborn"
CustBCntry: "0"
CustBPostCode: "48180"
CustBState: ""
CustCity: "Dearborn"
CustCntry: "1"
CustFax: ""
CustID: "131"
CustMarket: "4"
CustName: "Ford Motor Company"
CustPhone: "3135551233"
CustPmtMthd: "2"
CustPostCode: "48180"
CustReferral: "0"
CustSrchID: ""
CustState: "MI"
Email: "admin@ford.com"
EmailAddress: "mail.nrj@gmail.com"
Fax: null
FedID: "1"
FirstName: "Neeraj"
GroupID: "1"
ISActive: "1"
IsAgency: "1"
LastName: "verma"
LocID: "MTAwMQ=="
NProfit: "1"
NotesExist: "0"
PMS: ""
Phone: "999964518192"
PostCode: "110051"
SPID: null
SalesPersonID: "1"
Salutation: null
SoundExLast: null
SoundexName: "Ford Motor Company"
State: "Delhi"
Title: null
UnivContactID: null
UnivCustID: null
bookingContact: "131"
bookingId: "653"
bookingName: "Ford 19 sep report booking"
customerId: "89"
cutOffDate: "0000-00-00"
dateBooked: "2018-09-10"
endDate: "2018-09-19"
frequency: ""
grcId: "1"
locationId: "MTAwMQ=="
manager: ""
packageBookedId: "0"
paymentMthd: ""
postAs: ""
referralSource: ""
salesPerson: ""
sectionId: "1"
segment: "1"
startDate: "2018-09-19"
status: "1"

//////////////////////////


function id 


<td tabindex='-1' class='date_".$row_getFunctionAgendaData->funID."' id='date_".$row_getFunctionAgendaData->funID."'>".$date."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='time_".$row_getFunctionAgendaData->funID."'>".$row_getFunctionAgendaData->stime."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='funSelect_".$row_getFunctionAgendaData->funID."'>".$row_getFunctionAgendaData->ResDesc."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='funRoom_".$row_getFunctionAgendaData->funID."'>".$row_getFunctionAgendaData->functionRoom."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='status_".$row_getFunctionAgendaData->funID."'>".$row_getFunctionAgendaData->status."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='sale_".$row_getFunctionAgendaData->funID."'>".$row_getFunctionAgendaData->name."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='exp_".$row_getFunctionAgendaData->funID."'>".$row_getFunctionAgendaData->FunctExpNumPpl."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='gtd_".$row_getFunctionAgendaData->funID."'>".$row_getFunctionAgendaData->FunctGtdNumPpl."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='set_".$row_getFunctionAgendaData->funID."'>".$row_getFunctionAgendaData->FunctActNumPpl."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='setuptype_".$row_getFunctionAgendaData->funID."'>".$row_getFunctionAgendaData->ServDetName."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='setuptime_".$row_getFunctionAgendaData->funID."'>".$row_getFunctionAgendaData->SetupTime."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='kncktime_".$row_getFunctionAgendaData->funID."'>".$row_getFunctionAgendaData->KnockDownTime."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='rental_".$row_getFunctionAgendaData->funID."'>".$row_getFunctionAgendaData->RentType."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='reven_".$row_getFunctionAgendaData->funID."'>".$row_getFunctionAgendaData->revenue."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='contact_".$row_getFunctionAgendaData->funID."'>".$row_getFunctionAgendaData->firstname.' '.$row_getFunctionAgendaData->lastname."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='confdate_".$row_getFunctionAgendaData->funID."'>".$confDate."</td>
<td tabindex='-1' class='data_".$row_getFunctionAgendaData->funID."' id='move_".$row_getFunctionAgendaData->funID."'>".$unmove."</td>





bookingData

Addr1: "h 3/6 , krishna nagar , delhi" ,Addr2: null Alias: "" Chngd: "2018-10-01 15:38:43" City: "Delhi" Cntry: "1" 
ConfirmedDate: null ContactID: "214" ContactPersonID: "129" ContactType: null CreatedOn: null CustAdd1: "2000 Fairlane Drive" CustAdd2: "" CustBAdd1: "2000 Fairlane Drive" CustBAdd2: ""  CustBCity: "Dearborn" CustBCntry: "0" CustBPostCode: "48180" CustBState: "" CustCity: "Dearborn" CustCntry: "1" CustFax: "" CustID: "131" CustMarket: "4" CustName: "Ford Motor Company" CustPhone: "3135551233" CustPmtMthd: "2" CustPostCode: "48180" CustReferral: "0" CustSrchID: "" CustState: "MI"Email: "admin@ford.com" EmailAddress: "mail.nrj@gmail.com" Fax: null FedID: "1" FirstName: "Neeraj" GroupID: "1" ISActive: "1" IsAgency: "1" LastName: "verma" LocID: "MTAwMQ==" NProfit: "1" NotesExist: "0" PMS: "" Phone: "999964518192" PostCode: "110051"SPID: null SalesPersonID: "1" Salutation: null SoundExLast: null SoundexName: "Ford Motor Company" State: "Delhi"
Title: null UnivContactID: null UnivCustID: null bookingContact: "131" bookingId: "653" bookingName: "Ford 19 sep report booking" customerId: "89" cutOffDate: "0000-00-00" dateBooked: "2018-09-10" endDate: "2018-09-19" frequency: "" grcId: "1" locationId: "MTAwMQ==" manager: "" packageBookedId: "0" paymentMthd: "" postAs: "" referralSource: "" salesPerson: "" sectionId: "1" segment: "1" startDate: "2018-09-19" status: "1"

//////////////

FunctionDistribution(jsonData)
{

var row='';
var table2='';

$.each(jsonData, function(key, value){

row='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white"><p>bookingName : '+value.bookingName+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">postAs :'+value.postAs+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">BookingId :'+value.bookingId+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">Start Date :'+value.Booking_Start+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">FunctionName :'+value.FunctionName+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">Status :'+value.status+'</p></td></tr>'+

'<tr><td colspan=2 style="font-size:14px;border:1px solid black;">FunctionId :'+value.functionId+'</p></td></tr>';

table2='<table id="tbl_FD2" style="width:100%;border-collapse: collapse;margin-top:5em;" ><tr><td colspan=2 style="font-size:14px;border:1px solid black;border-bottom-color: white;">Customer Name :'+value.Customer+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">Phone :'+value.CustPhone+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">Fax :'+value.Fax+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">ContactPerson Name :'+value.ContactName+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">ContactPerson Phone :'+value.ContactPhone+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">OnSiteContact :'+value.OnSiteContact+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">StartTime :'+value.StartTime+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">EndTime :'+value.EndTime+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">Gaurenteed People :'+value.Gaurenteed+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white">Exp People :'+value.Expr+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;">Function Room :'+value.functionRoom+'</p></td></tr></table>';

});

var CategoryName='';

var groupedData = _.groupBy(jsonData, function(d){
CategoryName=d.CategoryName;
return d.CategoryName});

var row2='';

var result = _.chain(jsonData)
.groupBy('CategoryName')
.mapObject( CategoryName => _.groupBy(CategoryName, 'FunctionID'))
.value();

row2+='<tr><td style="font-size:14px;border:1px solid black;margin-top:3em;"><center>'+CategoryName+'</center></td></tr>';

$.each(result, function(key31, value32) {

row2+='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;">Service Time</td><td style="font-size:14px;border:1px solid black;border-right-color:white;">Item</td><td style="font-size:14px;border:1px solid black;border-right-color:white;">Qty</td><td style="font-size:14px;border:1px solid black;">Charge</td></tr>';

$.each(value32, function(key41, value42) {

$.each(value42, function(key4, value4) {

row2+='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;">'+value4.StartTime+'-'+value4.EndTime+'</td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-Top-color:white;border-right-color:white;">'+value4.Item+'</td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-Top-color:white;border-right-color:white;">'+value4.Quantity+'</td><td style="font-size:14px;border:1px solid black;border-Top-color:white;">'+value4.price+'</td></tr>';

})

})

})


row2+='</table>';

$(".pdfouter .tblitems tbody").append(row);
$(table2).insertAfter(".pdfouter .tblitems");
$(".pdfouter #tbl_FD2").append(row2);

$('#html_hdn').val($(".pdfouter").html())
$('#frm_Reports').submit();

}




//////////


TITLE: Connect to Server
------------------------------

Cannot connect to .\SQLEXPRESS.

------------------------------
ADDITIONAL INFORMATION:

A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: SQL Network Interfaces, error: 26 - Error Locating Server/Instance Specified) (Microsoft SQL Server, Error: -1)

For help, click: https://go.microsoft.com/fwlink?ProdName=Microsoft+SQL+Server&EvtSrc=MSSQLServer&EvtID=-1&LinkId=20476

------------------------------
BUTTONS:

OK
------------------------------


///////


style="display: none;"


var html;

$.ajax({
method : "GET",
url : "../Reports/template.php",
async:false,
success:function(data){

if(data)
{

$(".pdftemplate").addClass('coloredRow');
//////console.log(data);

}
else
{
alert('Html template not loading')
}

}

});

var html =$(".pdftemplate").html();
//////console.log(html);
html.wordExport();


//////////////////////////

C:\xampp\htdocs\espdev\esp-project\Booking\assets\js\billing.js


$.each(jsonData, function(key, value){

row='<tr><td style="font-size:16px;border:1px solid black;border-right-color:white;border-bottom-color: white"><p>bookingName : '+value.bookingName+'</p></td>'+
'<td style="font-size:16px;border:1px solid black;border-bottom-color: white"></p></td></tr>'+

'<tr><td style="font-size:16px;border:1px solid black;border-right-color:white;border-bottom-color: white;">Customer Name :'+value.Customer+'</p></td>'+

$(".pdftemplate #tbltopLeft tr").remove();
$(".pdftemplate #tbltopLeft").html('');

var rowtopLeft=
'<tr><td style="float: left;font-size:16px;">American Yatch Club</td><td style="font-size:16px;">Booking Distribution</td></tr>'+
'<tr><td style="float: left;font-size:16px;">499 Stevesant Avenue</td><td style="font-size:16px;">Contact Date </td></tr>'+
'<tr><td style="float: left;font-size:16px;"> Rye , NY , 10580</td></tr>'+
'<tr><td style="float: left;font-size:16px;">Telephone -(914)-968-4800</td></tr>'+
'<tr><td style="float: left;font-size:16px;">Telephone -(914)-968-5300</td></tr>';

$(".pdftemplate #tbltopLeft").html(rowtopLeft);

var row='';
var row2='';

var headerrow ='<tr>'+
'<th style="font-size:16px;"><center>Date</center></th>'+
'<th style="font-size:16px;"><center>(StartTime-EndTime)</center></th>'+
'<th style="font-size:16px;"><center>FunctionName</center></th>'+
'<th style="font-size:16px;"><center>Expr</center></th>'+
'<th style="font-size:16px;"><center>Gtd</center></th>'+
'<th style="font-size:16px;"><center>Function Room</center></th>'+
'<th style="font-size:16px;"><center>Room Rental($)</center></th>/tr>';

$(".pdfouter .tblitems tbody").append(row);

$(".pdftemplate .footertable thead").html(headerrow);
$(".pdftemplate .footertable tbody").html(row2);

/////////

'<td style="font-size:16px;border:1px solid black;border-bottom-color: white">Contact Name :'+value.ContactName+'</p></td></tr>'+

'<tr><td style="font-size:16px;border:1px solid black;border-right-color:white;border-bottom-color: white;">TelePhone :'+value.CustPhone+'</p></td>'+
'<td style="font-size:16px;border:1px solid black;border-Top-color:white;border-bottom-color:white">Fax :'+value.Fax+'</p></td></tr>'+

'<tr><td style="font-size:16px;border:1px solid black;border-right-color:white;border-bottom-color: white;">Address :'+value.Address1+'</p></td>'+
'<td style="font-size:16px;border:1px solid black;border-bottom-color: white"></td></tr>'+

'<tr><td style="font-size:16px;border:1px solid black;border-right-color:white;">Salesperson :'+value.ContactName+'</p></td>'+
'<td style="font-size:16px;border:1px solid black"></td></tr>';

row2=
'<tr><td style="font-size:16px;">'+value.Booking_Start+'</p></td>'+
'<td style="font-size:16px;">'+value.StartTime_EndTime+'</p></td>'+
'<td style="font-size:16px;">'+value.FunctionName+'</p></td>'+
'<td style="font-size:16px;">'+value.Expr+'</p></td>'+
'<td style="font-size:16px;">'+value.Gaurenteed+'</p></td>'+
'<td style="font-size:16px;">'+value.functionRoom+'</p></td>'+
'<td style="font-size:16px;">'+value.Room_Rental+'</p></td></tr>';

});


////////////

union all
# for D15-D30
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
'D16'  as `D1`,
'D17' as `D2`,
'D18' as `D3`,
'D19' as `D4`,
'D20' as `D5`,
'D21' as `D6`,
'D22' as `D7`,
'D23' as `D8`,
'D24' as `D9`,
'D25' as `D10`,
'D26' as `D11`,
'D27' as `D12`,
'D28' as `D13`,
'D29' as `D14`,
'D30' as `D15`

union all
SELECT 'Confirmed' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
'' as `D1`,
'' as `D2`,
'' as `D3`,
'' as `D4`,
'' as `D5`,
'' as `D6`,
'' as `D7`,
'' as `D8`,
'' as `D9`,
'' as `D10`,
'' as `D11`,
'' as `D12`,
'' as `D13`,
'' as `D14`,
'' as `D15`
union all
#D15_D30_Confirmed
SELECT '' as 'status',
cst.CustName as 'Organization',
bkg.bookingId as 'BookingNumber', 
slps.name as 'salesperson',
bkg.startDate as 'Date_Definite' ,
@CRevenue:=IFNULL(sum((rmblk.Block)*(rmblk.Rate)),0) as 'Revenue',
@CAvgRate:=IFNULL(sum(rmblk.Rate),0) as 'AvgRate'  ,
@CD16:=if(rmblk._Date = D16 ,sum(rmblk.Pickup), 0 ) as `D1`,
@CD17:=if(rmblk._Date = D17, sum(rmblk.Pickup), 0 ) as `D2`,
@CD18:=if(rmblk._Date = D18, sum(rmblk.Pickup), 0 ) as `D3`,
@CD19:=if(rmblk._Date = D19, sum(rmblk.Pickup), 0 ) as `D4`,
@CD20:=if(rmblk._Date = D20, sum(rmblk.Pickup), 0 ) as `D5`,
@CD21:=if(rmblk._Date = D21, sum(rmblk.Pickup), 0 ) as `D6`,
@CD22:=if(rmblk._Date = D22, sum(rmblk.Pickup), 0 ) as `D7`,
@CD23:=if(rmblk._Date = D23, sum(rmblk.Pickup), 0 ) as `D8`,
@CD124:=if(rmblk._Date =D24, sum(rmblk.Pickup),0 ) as `D9`,
@CD25:=if(rmblk._Date = D25,sum(rmblk.Pickup), 0 ) as `D10`,
@CD26:=if(rmblk._Date = D26,sum(rmblk.Pickup), 0 ) as `D11`,
@CD27:=if(rmblk._Date = D27,sum(rmblk.Pickup), 0 ) as `D12`,
@CD28:=if(rmblk._Date = D28,sum(rmblk.Pickup), 0 ) as `D13`,
@CD29:=if(rmblk._Date = D29,sum(rmblk.Pickup), 0 ) as `D14`,
@CD30:=if(rmblk._Date = D30,sum(rmblk.Pickup), 0 ) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D16 and D30 and bkg.status=1 
group by bkg.customerId
union all
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
''  as `D1`,
'' as `D2`,
'' as `D3`,
'' as `D4`,
'' as `D5`,
'' as `D6`,
'' as `D7`,
'' as `D8`,
'' as `D9`,
'' as `D10`,
'' as `D11`,
'' as `D12`,
'' as `D13`,
'' as `D14`,
'' as `D15`

union all
SELECT 'Tentative' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
''  as `D1`,
'' as `D2`,
'' as `D3`,
'' as `D4`,
'' as `D5`,
'' as `D6`,
'' as `D7`,
'' as `D8`,
'' as `D9`,
'' as `D10`,
'' as `D11`,
'' as `D12`,
'' as `D13`,
'' as `D14`,
'' as `D15`

union all
#D15_D30_Tentative
SELECT bkg.status as 'status',
cst.CustName as 'Organization',
bkg.bookingId as 'BookingNumber', 
slps.name as 'salesperson',
bkg.startDate as 'Date_Definite' ,
@TRevenue:=IFNULL(sum((rmblk.Block)*(rmblk.Rate)),0) as 'Revenue',
@TAvgRate:=IFNULL(sum(rmblk.Rate),0) as 'AvgRate'  ,
@TD16:=if(rmblk._Date = D16 ,sum(rmblk.Pickup), 0 ) as `D1`,
@TD17:=if(rmblk._Date = D17 ,sum(rmblk.Pickup), 0 ) as `D2`,
@TD18:=if(rmblk._Date = D18,sum(rmblk.Pickup), 0 ) as `D3`,
@TD19:=if(rmblk._Date = D19,sum(rmblk.Pickup), 0 ) as `D4`,
@TD20:=if(rmblk._Date = D20,sum(rmblk.Pickup), 0 ) as `D5`,
@TD21:=if(rmblk._Date = D21,sum(rmblk.Pickup), 0 ) as `D6`,
@TD22:=if(rmblk._Date = D22, sum(rmblk.Pickup), 0 ) as `D7`,
@TD23:=if(rmblk._Date = D23, sum(rmblk.Pickup), 0 ) as `D8`,
@TD24:=if(rmblk._Date = D24,sum(rmblk.Pickup), 0 ) as `D9`,
@TD25:=if(rmblk._Date = D25,sum(rmblk.Pickup), 0 ) as `D10`,
@TD26:=if(rmblk._Date = D26,sum(rmblk.Pickup), 0 ) as `D11`,
@TD27:=if(rmblk._Date = D27,sum(rmblk.Pickup), 0 ) as `D12`,
@TD28:=if(rmblk._Date = D28,sum(rmblk.Pickup), 0 ) as `D13`,
@TD29:=if(rmblk._Date = D29,sum(rmblk.Pickup), 0 ) as `D14`,
@TD30:=if(rmblk._Date = D30,sum(rmblk.Pickup), 0 ) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D16 and D30 and bkg.status=2
group by bkg.customerId
union all
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
''  as `D1`,
'' as `D2`,
'' as `D3`,
'' as `D4`,
'' as `D5`,
'' as `D6`,
'' as `D7`,
'' as `D8`,
'' as `D9`,
'' as `D10`,
'' as `D11`,
'' as `D12`,
'' as `D13`,
'' as `D14`,
'' as `D15`

union all 
#D15_D30_Totals1
SELECT 'Totals' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
@TotalRevenue:=IFNULL(CAST(@CRevenue AS UNSIGNED),0) + IFNULL(CAST(@TRevenue AS UNSIGNED),0) as 'Revenue',
@TotalAvgRate:=IFNULL(CAST(@CAvgRate AS UNSIGNED),0) + IFNULL(CAST(@TAvgRate AS UNSIGNED),0) as 'AvgRate'  ,
@TotalD16:=IFNULL(CAST(@CD16 AS UNSIGNED),0) + IFNULL(CAST(@TD16 AS UNSIGNED),0) as `D1`,
@TotalD17:=IFNULL(CAST(@CD17 AS UNSIGNED),0) + IFNULL(CAST(@TD17 AS UNSIGNED),0) as `D2`,
@TotalD18:=IFNULL(CAST(@CD18 AS UNSIGNED),0) + IFNULL(CAST(@TD18 AS UNSIGNED),0) as `D3`,
@TotalD19:=IFNULL(CAST(@CD19 AS UNSIGNED),0) + IFNULL(CAST(@TD19 AS UNSIGNED),0) as `D4`,
@TotalD20:=IFNULL(CAST(@CD20 AS UNSIGNED),0) + IFNULL(CAST(@TD20 AS UNSIGNED),0) as `D5`,
@TotalD21:=IFNULL(CAST(@CD21 AS UNSIGNED),0) + IFNULL(CAST(@TD21 AS UNSIGNED),0) as `D6`,
@TotalD22:=IFNULL(CAST(@CD22 AS UNSIGNED),0) + IFNULL(CAST(@TD22 AS UNSIGNED),0) as `D7`,
@TotalD23:=IFNULL(CAST(@CD23 AS UNSIGNED),0) + IFNULL(CAST(@TD23 AS UNSIGNED),0) as `D8`,
@TotalD24:=IFNULL(CAST(@CD24 AS UNSIGNED),0) + IFNULL(CAST(@TD24 AS UNSIGNED),0) as `D9`,
@TotalD25:=IFNULL(CAST(@CD25 AS UNSIGNED),0) + IFNULL(CAST(@TD25 AS UNSIGNED),0) as `D10`,
@TotalD26:=IFNULL(CAST(@CD26 AS UNSIGNED),0) + IFNULL(CAST(@TD26 AS UNSIGNED),0) as `D11`,
@TotalD27:=IFNULL(CAST(@CD27 AS UNSIGNED),0) + IFNULL(CAST(@TD27 AS UNSIGNED),0) as `D12`,
@TotalD28:=IFNULL(CAST(@CD28 AS UNSIGNED),0) + IFNULL(CAST(@TD28 AS UNSIGNED),0) as `D13`,
@TotalD29:=IFNULL(CAST(@CD29 AS UNSIGNED),0) + IFNULL(CAST(@TD29 AS UNSIGNED),0) as `D14`,
@TotalD30:=IFNULL(CAST(@CD30 AS UNSIGNED),0) + IFNULL(CAST(@TD30 AS UNSIGNED),0) as `D15`
union all
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'Ceiling' as 'AvgRate'  ,
@SD16:=if(rmblk._Date = D16 , sum(rmblk.Slippage), 0 ) as `D1`,
@SD17:=if(rmblk._Date = D17 , sum(rmblk.Slippage), 0 ) as `D2`,
@SD18:=if(rmblk._Date = D18, sum(rmblk.Slippage), 0 ) as `D3`,
@SD19:=if(rmblk._Date = D19, sum(rmblk.Slippage), 0 ) as `D4`,
@SD20:=if(rmblk._Date = D20, sum(rmblk.Slippage), 0 ) as `D5`,
@SD21:=if(rmblk._Date = D21, sum(rmblk.Slippage), 0 ) as `D6`,
@SD22:=if(rmblk._Date = D22, sum(rmblk.Slippage), 0 ) as `D7`,
@SD23:=if(rmblk._Date = D23, sum(rmblk.Slippage), 0 ) as `D8`,
@SD24:=if(rmblk._Date = D24, sum(rmblk.Slippage), 0 ) as `D9`,
@SD25:=if(rmblk._Date = D25, sum(rmblk.Slippage), 0 ) as `D10`,
@SD26:=if(rmblk._Date = D26, sum(rmblk.Slippage), 0 ) as `D11`,
@SD27:=if(rmblk._Date = D27, sum(rmblk.Slippage), 0 ) as `D12`,
@SD28:=if(rmblk._Date = D28, sum(rmblk.Slippage), 0 ) as `D13`,
@SD29:=if(rmblk._Date = D29, sum(rmblk.Slippage), 0 ) as `D14`,
@SD30:=if(rmblk._Date = D30, sum(rmblk.Slippage), 0 ) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D16 and D30 and bkg.status=1 
group by rmblk._Date
union all
#D15_D30_TotalConfirmed
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'Total Confirmed' as 'AvgRate'  ,
@TotalConfirmed16:=if(rmblk._Date = D16 , sum(rmblk.Pickup), 0 ) as `D1`,
@TotalConfirmed17:=if(rmblk._Date = D17 , sum(rmblk.Pickup), 0 ) as `D2`,
@TotalConfirmed18:=if(rmblk._Date = D18 , sum(rmblk.Pickup), 0 ) as `D3`,
@TotalConfirmed19:=if(rmblk._Date = D19, sum(rmblk.Pickup), 0 ) as `D4`,
@TotalConfirmed20:=if(rmblk._Date = D20, sum(rmblk.Pickup), 0 ) as `D5`,
@TotalConfirmed21:=if(rmblk._Date = D21, sum(rmblk.Pickup), 0 ) as `D6`,
@TotalConfirmed22:=if(rmblk._Date = D22, sum(rmblk.Pickup), 0 ) as `D7`,
@TotalConfirmed23:=if(rmblk._Date = D23, sum(rmblk.Pickup), 0 ) as `D8`,
@TotalConfirmed24:=if(rmblk._Date = D24, sum(rmblk.Pickup), 0 ) as `D9`,
@TotalConfirmed25:=if(rmblk._Date = D25, sum(rmblk.Pickup), 0 ) as `D10`,
@TotalConfirmed26:=if(rmblk._Date = D26, sum(rmblk.Pickup), 0 ) as `D11`,
@TotalConfirmed27:=if(rmblk._Date = D27, sum(rmblk.Pickup), 0 ) as `D12`,
@TotalConfirmed28:=if(rmblk._Date = D28, sum(rmblk.Pickup), 0 ) as `D13`,
@TotalConfirmed29:=if(rmblk._Date = D29, sum(rmblk.Pickup), 0 ) as `D14`,
@TotalConfirmed30:=if(rmblk._Date = D30, sum(rmblk.Pickup), 0 ) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D16 and D30 and bkg.status=1 
group by bkg.status
union all
#D15_D30_TotalTentative
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'Total Tentative' as 'AvgRate'  ,
@TotalTentative16:=if(rmblk._Date = D16 , sum(rmblk.Pickup), 0 ) as `D1`,
@TotalTentative17:=if(rmblk._Date = D17 , sum(rmblk.Pickup), 0 ) as `D2`,
@TotalTentative18:=if(rmblk._Date = D18, sum(rmblk.Pickup), 0 ) as `D3`,
@TotalTentative19:=if(rmblk._Date = D19, sum(rmblk.Pickup), 0 ) as `D4`,
@TotalTentative20:=if(rmblk._Date = D20, sum(rmblk.Pickup), 0 ) as `D5`,
@TotalTentative21:=if(rmblk._Date = D21, sum(rmblk.Pickup), 0 ) as `D6`,
@TotalTentative22:=if(rmblk._Date = D22, sum(rmblk.Pickup), 0 ) as `D7`,
@TotalTentative23:=if(rmblk._Date = D23, sum(rmblk.Pickup), 0 ) as `D8`,
@TotalTentative24:=if(rmblk._Date = D24, sum(rmblk.Pickup), 0 ) as `D9`,
@TotalTentative25:=if(rmblk._Date = D25, sum(rmblk.Pickup), 0 ) as `D10`,
@TotalTentative26:=if(rmblk._Date = D26, sum(rmblk.Pickup), 0 ) as `D11`,
@TotalTentative27:=if(rmblk._Date = D27, sum(rmblk.Pickup), 0 ) as `D12`,
@TotalTentative28:=if(rmblk._Date = D28, sum(rmblk.Pickup), 0 ) as `D13`,
@TotalTentative29:=if(rmblk._Date = D29, sum(rmblk.Pickup), 0 ) as `D14`,
@TotalTentative30:=if(rmblk._Date = D30, sum(rmblk.Pickup), 0 ) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D16 and D30 and bkg.status=1 
group by bkg.status
union all
#D15_D30_TotalRoomNights
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'Total Room Nights' as 'AvgRate'  ,
@TotalRoomNights16:=IFNULL(CAST(@CD16 AS UNSIGNED),0) + IFNULL(CAST(@TD1 AS UNSIGNED),0) as D1,
@TotalRoomNights17:=IFNULL(CAST(@CD17 AS UNSIGNED),0) + IFNULL(CAST(@TD2 AS UNSIGNED),0) as `D2`,
@TotalRoomNights18:=IFNULL(CAST(@CD18 AS UNSIGNED),0) + IFNULL(CAST(@TD3 AS UNSIGNED),0) as `D3`,
@TotalRoomNights19:=IFNULL(CAST(@CD19 AS UNSIGNED),0) + IFNULL(CAST(@TD4 AS UNSIGNED),0) as `D4`,
@TotalRoomNights20:=IFNULL(CAST(@CD20 AS UNSIGNED),0) + IFNULL(CAST(@TD5 AS UNSIGNED),0) as `D5`,
@TotalRoomNights21:=IFNULL(CAST(@CD6 AS UNSIGNED),0) + IFNULL(CAST(@TD6 AS UNSIGNED),0) as `D6`,
@TotalRoomNights22:=IFNULL(CAST(@CD7 AS UNSIGNED),0) + IFNULL(CAST(@TD7 AS UNSIGNED),0) as `D7`,
@TotalRoomNights23:=IFNULL(CAST(@CD8 AS UNSIGNED),0) + IFNULL(CAST(@TD8 AS UNSIGNED),0) as `D8`,
@TotalRoomNights24:=IFNULL(CAST(@CD9 AS UNSIGNED),0) + IFNULL(CAST(@TD9 AS UNSIGNED),0) as `D9`,
@TotalRoomNights25:=IFNULL(CAST(@CD10 AS UNSIGNED),0) + IFNULL(CAST(@TD10 AS UNSIGNED),0) as `D10`,
@TotalRoomNights26:=IFNULL(CAST(@CD11 AS UNSIGNED),0) + IFNULL(CAST(@TD11 AS UNSIGNED),0) as `D11`,
@TotalRoomNights27:=IFNULL(CAST(@CD12 AS UNSIGNED),0) + IFNULL(CAST(@TD12 AS UNSIGNED),0) as `D12`,
@TotalRoomNights28:=IFNULL(CAST(@CD13 AS UNSIGNED),0) + IFNULL(CAST(@TD13 AS UNSIGNED),0) as `D13`,
@TotalRoomNights29:=IFNULL(CAST(@CD14 AS UNSIGNED),0) + IFNULL(CAST(@TD14 AS UNSIGNED),0) as `D14`,
@TotalRoomNights30:=IFNULL(CAST(@CD15 AS UNSIGNED),0) + IFNULL(CAST(@TD15 AS UNSIGNED),0) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D16 and D30 and bkg.status=1 
group by bkg.status
union all
#D15_D30_TotalRoomsAvailable
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'Rooms Available' as 'AvgRate'  ,
@RoomsAvailable16:=if(rmblk._Date = D16, sum(rmblk.Rate), 0 ) as `D1`,
@RoomsAvailable17:=if(rmblk._Date = D17, sum(rmblk.Rate), 0 ) as `D2`,
@RoomsAvailable18:=if(rmblk._Date = D18, sum(rmblk.Rate), 0 ) as `D3`,
@RoomsAvailable19:=if(rmblk._Date = D19, sum(rmblk.Rate), 0 ) as `D4`,
@RoomsAvailable20:=if(rmblk._Date = D20, sum(rmblk.Rate), 0 ) as `D5`,
@RoomsAvailable21:=if(rmblk._Date = D21, sum(rmblk.Rate), 0 ) as `D6`,
@RoomsAvailable22:=if(rmblk._Date = D22, sum(rmblk.Rate), 0 ) as `D7`,
@RoomsAvailable23:=if(rmblk._Date = D23, sum(rmblk.Rate), 0 ) as `D8`,
@RoomsAvailable24:=if(rmblk._Date = D24, sum(rmblk.Rate), 0 ) as `D9`,
@RoomsAvailable25:=if(rmblk._Date = D25, sum(rmblk.Rate), 0 ) as `D10`,
@RoomsAvailable26:=if(rmblk._Date = D26, sum(rmblk.Rate), 0 ) as `D11`,
@RoomsAvailable27:=if(rmblk._Date = D27, sum(rmblk.Rate), 0 ) as `D12`,
@RoomsAvailable28:=if(rmblk._Date = D28, sum(rmblk.Rate), 0 ) as `D13`,
@RoomsAvailable29:=if(rmblk._Date = D29, sum(rmblk.Rate), 0 ) as `D14`,
@RoomsAvailable30:=if(rmblk._Date = D30, sum(rmblk.Rate), 0 ) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D16 and D30 and bkg.status=1 
group by bkg.status
union all
#D15_D30_AvgDailyRate_Conf
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'Avg Daily Rate (Conf)' as 'AvgRate'  ,
@AvgDailyRateConf16:=if(rmblk._Date = D16 , sum(rmblk.Rate), 0 ) as `D1`,
@AvgDailyRateConf17:=if(rmblk._Date = D17 , sum(rmblk.Rate), 0 ) as `D2`,
@AvgDailyRateConf18:=if(rmblk._Date = D18, sum(rmblk.Rate), 0 ) as `D3`,
@AvgDailyRateConf19:=if(rmblk._Date = D19, sum(rmblk.Rate), 0 ) as `D4`,
@AvgDailyRateConf20:=if(rmblk._Date = D20, sum(rmblk.Rate), 0 ) as `D5`,
@AvgDailyRateConf21:=if(rmblk._Date = D21, sum(rmblk.Rate), 0 ) as `D6`,
@AvgDailyRateConf22:=if(rmblk._Date = D22, sum(rmblk.Rate), 0 ) as `D7`,
@AvgDailyRateConf23:=if(rmblk._Date = D23, sum(rmblk.Rate), 0 ) as `D8`,
@AvgDailyRateConf24:=if(rmblk._Date = D24, sum(rmblk.Rate), 0 ) as `D9`,
@AvgDailyRateConf25:=if(rmblk._Date = D25, sum(rmblk.Rate), 0 ) as `D10`,
@AvgDailyRateConf26:=if(rmblk._Date = D26, sum(rmblk.Rate), 0 ) as `D11`,
@AvgDailyRateConf27:=if(rmblk._Date = D27, sum(rmblk.Rate), 0 ) as `D12`,
@AvgDailyRateConf28:=if(rmblk._Date = D28, sum(rmblk.Rate), 0 ) as `D13`,
@AvgDailyRateConf29:=if(rmblk._Date = D29, sum(rmblk.Rate), 0 ) as `D14`,
@AvgDailyRateConf30:=if(rmblk._Date = D30, sum(rmblk.Rate), 0 ) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D16 and D30 and bkg.status=2 
group by bkg.status
union all
#D15_D30_AvgDailyRate_Tent
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'Avg Daily Rate (Tent)' as 'AvgRate'  ,
@AvgDailyRate_Tent16:=if(rmblk._Date = D16 , sum(rmblk.Rate), 0 ) as `D1`,
@AvgDailyRate_Tent17:=if(rmblk._Date = D17 , sum(rmblk.Rate), 0 ) as `D2`,
@AvgDailyRate_Tent18:=if(rmblk._Date = D18, sum(rmblk.Rate), 0 ) as `D3`,
@AvgDailyRate_Tent19:=if(rmblk._Date = D19, sum(rmblk.Rate), 0 ) as `D4`,
@AvgDailyRate_Tent20:=if(rmblk._Date = D20, sum(rmblk.Rate), 0 ) as `D5`,
@AvgDailyRate_Tent21:=if(rmblk._Date = D21, sum(rmblk.Rate), 0 ) as `D6`,
@AvgDailyRate_Tent22:=if(rmblk._Date = D22, sum(rmblk.Rate), 0 ) as `D7`,
@AvgDailyRate_Tent23:=if(rmblk._Date = D23, sum(rmblk.Rate), 0 ) as `D8`,
@AvgDailyRate_Tent24:=if(rmblk._Date = D24, sum(rmblk.Rate), 0 ) as `D9`,
@AvgDailyRate_Tent25:=if(rmblk._Date = D25, sum(rmblk.Rate), 0 ) as `D10`,
@AvgDailyRate_Tent:=if(rmblk._Date = D26, sum(rmblk.Rate), 0 ) as `D11`,
@AvgDailyRate_Tent27:=if(rmblk._Date = D27, sum(rmblk.Rate), 0 ) as `D12`,
@AvgDailyRate_Tent28:=if(rmblk._Date = D28, sum(rmblk.Rate), 0 ) as `D13`,
@AvgDailyRate_Tent29:=if(rmblk._Date = D29, sum(rmblk.Rate), 0 ) as `D14`,
@AvgDailyRate_Tent30:=if(rmblk._Date = D30, sum(rmblk.Rate), 0 ) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D16 and D30 and bkg.status=3 
group by bkg.status
union all
#D15_D30_CancelledLostBusiness
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'Total Cancelled Lost Business' as 'AvgRate'  ,
@TotalCancelledLostBusiness16:=if(rmblk._Date = D16 , sum(rmblk.Rate), 0 ) as `D1`,
@TotalCancelledLostBusiness17:=if(rmblk._Date = D17 , sum(rmblk.Rate), 0 ) as `D2`,
@TotalCancelledLostBusiness18:=if(rmblk._Date = D18, sum(rmblk.Rate), 0 ) as `D3`,
@TotalCancelledLostBusiness19:=if(rmblk._Date = D19, sum(rmblk.Rate), 0 ) as `D4`,
@TotalCancelledLostBusiness20:=if(rmblk._Date = D20, sum(rmblk.Rate), 0 ) as `D5`,
@TotalCancelledLostBusiness21:=if(rmblk._Date = D21, sum(rmblk.Rate), 0 ) as `D6`,
@TotalCancelledLostBusiness22:=if(rmblk._Date = D22, sum(rmblk.Rate), 0 ) as `D7`,
@TotalCancelledLostBusiness23:=if(rmblk._Date = D23, sum(rmblk.Rate), 0 ) as `D8`,
@TotalCancelledLostBusiness24:=if(rmblk._Date = D24, sum(rmblk.Rate), 0 ) as `D9`,
@TotalCancelledLostBusiness25:=if(rmblk._Date = D25, sum(rmblk.Rate), 0 ) as `D10`,
@TotalCancelledLostBusiness26:=if(rmblk._Date = D26, sum(rmblk.Rate), 0 ) as `D11`,
@TotalCancelledLostBusiness27:=if(rmblk._Date = D27, sum(rmblk.Rate), 0 ) as `D12`,
@TotalCancelledLostBusiness28:=if(rmblk._Date = D28, sum(rmblk.Rate), 0 ) as `D13`,
@TotalCancelledLostBusiness29:=if(rmblk._Date = D29, sum(rmblk.Rate), 0 ) as `D14`,
@TotalCancelledLostBusiness30:=if(rmblk._Date = D30, sum(rmblk.Rate), 0 ) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D16 and D30 and bkg.status=3 
group by bkg.status
union all
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
''  as `D1`,
'' as `D2`,
'' as `D3`,
'' as `D4`,
'' as `D5`,
'' as `D6`,
'' as `D7`,
'' as `D8`,
'' as `D9`,
'' as `D10`,
'' as `D11`,
'' as `D12`,
'' as `D13`,
'' as `D14`,
'' as `D15`
union all
#D15_D30_Ceiling
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'Ceiling' as 'AvgRate'  ,
@SD16:=if(rmblk._Date = D16 , sum(rmblk.Slippage), 0 ) as `D2`,
@SD17:=if(rmblk._Date = D17 , sum(rmblk.Slippage), 0 ) as `D2`,
@SD18:=if(rmblk._Date = D18, sum(rmblk.Slippage), 0 ) as `D3`,
@SD19:=if(rmblk._Date = D19, sum(rmblk.Slippage), 0 ) as `D4`,
@SD20:=if(rmblk._Date = D20, sum(rmblk.Slippage), 0 ) as `D5`,
@SD21:=if(rmblk._Date = D21, sum(rmblk.Slippage), 0 ) as `D6`,
@SD22:=if(rmblk._Date = D22, sum(rmblk.Slippage), 0 ) as `D7`,
@SD23:=if(rmblk._Date = D23, sum(rmblk.Slippage), 0 ) as `D8`,
@SD24:=if(rmblk._Date = D24, sum(rmblk.Slippage), 0 ) as `D9`,
@SD25:=if(rmblk._Date = D25, sum(rmblk.Slippage), 0 ) as `D10`,
@SD26:=if(rmblk._Date = D26, sum(rmblk.Slippage), 0 ) as `D11`,
@SD27:=if(rmblk._Date = D27, sum(rmblk.Slippage), 0 ) as `D12`,
@SD28:=if(rmblk._Date = D28, sum(rmblk.Slippage), 0 ) as `D13`,
@SD29:=if(rmblk._Date = D29, sum(rmblk.Slippage), 0 ) as `D14`,
@SD30:=if(rmblk._Date = D30, sum(rmblk.Slippage), 0 ) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D1 and D15 and bkg.status=1 
group by rmblk._Date
union all
#D15_D30_TotalConfirmed
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'Total Confirmed' as 'AvgRate'  ,
@TotalConfirmed16:=if(rmblk._Date = D16 , sum(rmblk.Pickup), 0 ) as `D1`,
@TotalConfirmed17:=if(rmblk._Date = D17 , sum(rmblk.Pickup), 0 ) as `D2`,
@TotalConfirmed18:=if(rmblk._Date = D18, sum(rmblk.Pickup), 0 ) as `D3`,
@TotalConfirmed19:=if(rmblk._Date = D19, sum(rmblk.Pickup), 0 ) as `D4`,
@TotalConfirmed20:=if(rmblk._Date = D20, sum(rmblk.Pickup), 0 ) as `D5`,
@TotalConfirmed21:=if(rmblk._Date = D21, sum(rmblk.Pickup), 0 ) as `D6`,
@TotalConfirmed22:=if(rmblk._Date = D22, sum(rmblk.Pickup), 0 ) as `D7`,
@TotalConfirmed23:=if(rmblk._Date = D23, sum(rmblk.Pickup), 0 ) as `D8`,
@TotalConfirmed24:=if(rmblk._Date = D24, sum(rmblk.Pickup), 0 ) as `D9`,
@TotalConfirmed25:=if(rmblk._Date = D25, sum(rmblk.Pickup), 0 ) as `D10`,
@TotalConfirmed26:=if(rmblk._Date = D26, sum(rmblk.Pickup), 0 ) as `D11`,
@TotalConfirmed27:=if(rmblk._Date = D27, sum(rmblk.Pickup), 0 ) as `D12`,
@TotalConfirmed28:=if(rmblk._Date = D28, sum(rmblk.Pickup), 0 ) as `D13`,
@TotalConfirmed29:=if(rmblk._Date = D29, sum(rmblk.Pickup), 0 ) as `D14`,
@TotalConfirmed30:=if(rmblk._Date = D30, sum(rmblk.Pickup), 0 ) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D1 and D15 and bkg.status=1 
group by bkg.status
union all
#D15_D30_TotalTentative
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'Total Tentative' as 'AvgRate'  ,
@TotalTentative16:=if(rmblk._Date = D16 , sum(rmblk.Pickup), 0 ) as `D2`,
@TotalTentative17:=if(rmblk._Date = D17 , sum(rmblk.Pickup), 0 ) as `D2`,
@TotalTentative18:=if(rmblk._Date = D18, sum(rmblk.Pickup), 0 ) as `D3`,
@TotalTentative19:=if(rmblk._Date = D19, sum(rmblk.Pickup), 0 ) as `D4`,
@TotalTentative20:=if(rmblk._Date = D20, sum(rmblk.Pickup), 0 ) as `D5`,
@TotalTentative21:=if(rmblk._Date = D21, sum(rmblk.Pickup), 0 ) as `D6`,
@TotalTentative22:=if(rmblk._Date = D22, sum(rmblk.Pickup), 0 ) as `D7`,
@TotalTentative23:=if(rmblk._Date = D23, sum(rmblk.Pickup), 0 ) as `D8`,
@TotalTentative24:=if(rmblk._Date = D24, sum(rmblk.Pickup), 0 ) as `D9`,
@TotalTentative25:=if(rmblk._Date = D25, sum(rmblk.Pickup), 0 ) as `D10`,
@TotalTentative26:=if(rmblk._Date = D26, sum(rmblk.Pickup), 0 ) as `D11`,
@TotalTentative27:=if(rmblk._Date = D27, sum(rmblk.Pickup), 0 ) as `D12`,
@TotalTentative28:=if(rmblk._Date = D28, sum(rmblk.Pickup), 0 ) as `D13`,
@TotalTentative29:=if(rmblk._Date = D29, sum(rmblk.Pickup), 0 ) as `D14`,
@TotalTentative30:=if(rmblk._Date = D30, sum(rmblk.Pickup), 0 ) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D1 and D15 and bkg.status=1 
group by bkg.status
union all
#D15_D30_TotalRoomNights
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'Total Room Nights' as 'AvgRate'  ,
@TotalRoomNights1:=IFNULL(CAST(@CD1 AS UNSIGNED),0) + IFNULL(CAST(@TD1 AS UNSIGNED),0) as `D1`,
@TotalRoomNights2:=IFNULL(CAST(@CD2 AS UNSIGNED),0) + IFNULL(CAST(@TD2 AS UNSIGNED),0) as `D2`,
@TotalRoomNights3:=IFNULL(CAST(@CD3 AS UNSIGNED),0) + IFNULL(CAST(@TD3 AS UNSIGNED),0) as `D3`,
@TotalRoomNights4:=IFNULL(CAST(@CD4 AS UNSIGNED),0) + IFNULL(CAST(@TD4 AS UNSIGNED),0) as `D4`,
@TotalRoomNights5:=IFNULL(CAST(@CD5 AS UNSIGNED),0) + IFNULL(CAST(@TD5 AS UNSIGNED),0) as `D5`,
@TotalRoomNights6:=IFNULL(CAST(@CD6 AS UNSIGNED),0) + IFNULL(CAST(@TD6 AS UNSIGNED),0) as `D6`,
@TotalRoomNights7:=IFNULL(CAST(@CD7 AS UNSIGNED),0) + IFNULL(CAST(@TD7 AS UNSIGNED),0) as `D7`,
@TotalRoomNights8:=IFNULL(CAST(@CD8 AS UNSIGNED),0) + IFNULL(CAST(@TD8 AS UNSIGNED),0) as `D8`,
@TotalRoomNights9:=IFNULL(CAST(@CD9 AS UNSIGNED),0) + IFNULL(CAST(@TD9 AS UNSIGNED),0) as `D9`,
@TotalRoomNights10:=IFNULL(CAST(@CD10 AS UNSIGNED),0) + IFNULL(CAST(@TD10 AS UNSIGNED),0) as `D10`,
@TotalRoomNights11:=IFNULL(CAST(@CD11 AS UNSIGNED),0) + IFNULL(CAST(@TD11 AS UNSIGNED),0) as `D11`,
@TotalRoomNights12:=IFNULL(CAST(@CD12 AS UNSIGNED),0) + IFNULL(CAST(@TD12 AS UNSIGNED),0) as `D12`,
@TotalRoomNights13:=IFNULL(CAST(@CD13 AS UNSIGNED),0) + IFNULL(CAST(@TD13 AS UNSIGNED),0) as `D13`,
@TotalRoomNights14:=IFNULL(CAST(@CD14 AS UNSIGNED),0) + IFNULL(CAST(@TD14 AS UNSIGNED),0) as `D14`,
@TotalRoomNights15:=IFNULL(CAST(@CD15 AS UNSIGNED),0) + IFNULL(CAST(@TD15 AS UNSIGNED),0) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D1 and D15 and bkg.status=1 
group by bkg.status
union all
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'Avg Daily Rate (Conf)' as 'AvgRate'  ,
@TotalTentative1:=if( rmblk._Date =`newDate`, sum(rmblk.Rate), 0 )  as `D1`,
@TotalTentative2:=if(rmblk._Date = D1 , sum(rmblk.Rate), 0 ) as `D2`,
@TotalTentative3:=if(rmblk._Date = D2, sum(rmblk.Rate), 0 ) as `D3`,
@TotalTentative4:=if(rmblk._Date = D3, sum(rmblk.Rate), 0 ) as `D4`,
@TotalTentative5:=if(rmblk._Date = D4, sum(rmblk.Rate), 0 ) as `D5`,
@TotalTentative6:=if(rmblk._Date = D5, sum(rmblk.Rate), 0 ) as `D6`,
@TotalTentative7:=if(rmblk._Date = D6, sum(rmblk.Rate), 0 ) as `D7`,
@TotalTentative8:=if(rmblk._Date = D7, sum(rmblk.Rate), 0 ) as `D8`,
@TotalTentative9:=if(rmblk._Date = D8, sum(rmblk.Rate), 0 ) as `D9`,
@TotalTentative10:=if(rmblk._Date = D9, sum(rmblk.Rate), 0 ) as `D10`,
@TotalTentative11:=if(rmblk._Date = D10, sum(rmblk.Rate), 0 ) as `D11`,
@TotalTentative12:=if(rmblk._Date = D11, sum(rmblk.Rate), 0 ) as `D12`,
@TotalTentative13:=if(rmblk._Date = D12, sum(rmblk.Rate), 0 ) as `D13`,
@TotalTentative14:=if(rmblk._Date = D13, sum(rmblk.Rate), 0 ) as `D14`,
@TotalTentative15:=if(rmblk._Date = D14, sum(rmblk.Rate), 0 ) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D1 and D15 and bkg.status=1 
group by bkg.status
union all
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'Avg Daily Rate (Tentative)' as 'AvgRate'  ,
@AvgDailyRateTent1:=if( rmblk._Date =`newDate`, sum(rmblk.Rate), 0 )  as `D1`,
@AvgDailyRateTent2:=if(rmblk._Date = D1 , sum(rmblk.Rate), 0 ) as `D2`,
@AvgDailyRateTent3:=if(rmblk._Date = D2, sum(rmblk.Rate), 0 ) as `D3`,
@AvgDailyRateTent4:=if(rmblk._Date = D3, sum(rmblk.Rate), 0 ) as `D4`,
@AvgDailyRateTent5:=if(rmblk._Date = D4, sum(rmblk.Rate), 0 ) as `D5`,
@AvgDailyRateTent6:=if(rmblk._Date = D5, sum(rmblk.Rate), 0 ) as `D6`,
@AvgDailyRateTent7:=if(rmblk._Date = D6, sum(rmblk.Rate), 0 ) as `D7`,
@AvgDailyRateTent8:=if(rmblk._Date = D7, sum(rmblk.Rate), 0 ) as `D8`,
@AvgDailyRateTent9:=if(rmblk._Date = D8, sum(rmblk.Rate), 0 ) as `D9`,
@AvgDailyRateTent10:=if(rmblk._Date = D9, sum(rmblk.Rate), 0 ) as `D10`,
@AvgDailyRateTent11:=if(rmblk._Date = D10, sum(rmblk.Rate), 0 ) as `D11`,
@AvgDailyRateTent12:=if(rmblk._Date = D11, sum(rmblk.Rate), 0 ) as `D12`,
@AvgDailyRateTent13:=if(rmblk._Date = D12, sum(rmblk.Rate), 0 ) as `D13`,
@AvgDailyRateTent14:=if(rmblk._Date = D13, sum(rmblk.Rate), 0 ) as `D14`,
@AvgDailyRateTent15:=if(rmblk._Date = D14, sum(rmblk.Rate), 0 ) as `D15`
from  tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
left join tbl_salesPerson slps on bkg.salesperson=slps.id
where rmblk._Date between D1 and D15 and bkg.status=2 
group by bkg.status
union all
SELECT 'Period Summary (using actual values)' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
''  as `D1`,
'' as `D2`,
'' as `D3`,
'' as `D4`,
'' as `D5`,
'' as `D6`,
'' as `D7`,
'' as `D8`,
'' as `D9`,
'' as `D10`,
'' as `D11`,
'' as `D12`,
'' as `D13`,
'' as `D14`,
'' as `D15`

union all
SELECT '' as 'status',
'' as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
''  as `D1`,
'' as `D2`,
'' as `D3`,
'' as `D4`,
'' as `D5`,
'' as `D6`,
'' as `D7`,
'' as `D8`,
'' as `D9`,
'' as `D10`,
'' as `D11`,
'' as `D12`,
'' as `D13`,
'' as `D14`,
'' as `D15`
union all
SELECT 'Total Ceiling' as 'status',
@MonthlyTotalCeiling:=IFNULL(CAST(@SD1 AS UNSIGNED),0) + IFNULL(CAST(@SD2 AS UNSIGNED),0)+
IFNULL(CAST(@SD3 AS UNSIGNED),0) + IFNULL(CAST(@SD4 AS UNSIGNED),0)+
IFNULL(CAST(@SD5 AS UNSIGNED),0) + IFNULL(CAST(@SD6 AS UNSIGNED),0)+
IFNULL(CAST(@SD7 AS UNSIGNED),0) + IFNULL(CAST(@SD8 AS UNSIGNED),0)+
IFNULL(CAST(@SD9 AS UNSIGNED),0) + IFNULL(CAST(@SD10 AS UNSIGNED),0)+
IFNULL(CAST(@SD11 AS UNSIGNED),0) + IFNULL(CAST(@SD12 AS UNSIGNED),0)+
IFNULL(CAST(@SD13 AS UNSIGNED),0) + IFNULL(CAST(@SD14 AS UNSIGNED),0)+
IFNULL(CAST(@SD15 AS UNSIGNED),0) + IFNULL(CAST(@SD16 AS UNSIGNED),0)+
IFNULL(CAST(@SD17 AS UNSIGNED),0) + IFNULL(CAST(@SD18 AS UNSIGNED),0)+
IFNULL(CAST(@SD19 AS UNSIGNED),0) + IFNULL(CAST(@SD20 AS UNSIGNED),0)+
IFNULL(CAST(@SD21 AS UNSIGNED),0) + IFNULL(CAST(@SD22 AS UNSIGNED),0)+
IFNULL(CAST(@SD23 AS UNSIGNED),0) + IFNULL(CAST(@SD24 AS UNSIGNED),0)+
IFNULL(CAST(@SD25 AS UNSIGNED),0) + IFNULL(CAST(@SD26 AS UNSIGNED),0)+
IFNULL(CAST(@SD27 AS UNSIGNED),0) + IFNULL(CAST(@SD28 AS UNSIGNED),0)+
IFNULL(CAST(@SD29 AS UNSIGNED),0) + IFNULL(CAST(@SD30 AS UNSIGNED),0) as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
''  as `D1`,
'' as `D2`,
'' as `D3`,
'' as `D4`,
'' as `D5`,
'' as `D6`,
'' as `D7`,
'' as `D8`,
'' as `D9`,
'' as `D10`,
'' as `D11`,
'' as `D12`,
'' as `D13`,
'' as `D14`,
'' as `D15`
union all
SELECT 'Confirmed' as 'status',
@MonthlyTotalConfirmed:=IFNULL(CAST(@CD1 AS UNSIGNED),0) + IFNULL(CAST(@CD2 AS UNSIGNED),0)+
IFNULL(CAST(@CD3 AS UNSIGNED),0) + IFNULL(CAST(@CD4 AS UNSIGNED),0)+
IFNULL(CAST(@CD5 AS UNSIGNED),0) + IFNULL(CAST(@CD6 AS UNSIGNED),0)+
IFNULL(CAST(@CD7 AS UNSIGNED),0) + IFNULL(CAST(@CD8 AS UNSIGNED),0)+
IFNULL(CAST(@CD9 AS UNSIGNED),0) + IFNULL(CAST(@CD10 AS UNSIGNED),0)+
IFNULL(CAST(@CD11 AS UNSIGNED),0) + IFNULL(CAST(@CD12 AS UNSIGNED),0)+
IFNULL(CAST(@CD13 AS UNSIGNED),0) + IFNULL(CAST(@CD14 AS UNSIGNED),0)+
IFNULL(CAST(@CD15 AS UNSIGNED),0) + IFNULL(CAST(@CD16 AS UNSIGNED),0)+
IFNULL(CAST(@CD17 AS UNSIGNED),0) + IFNULL(CAST(@CD18 AS UNSIGNED),0)+
IFNULL(CAST(@CD19 AS UNSIGNED),0) + IFNULL(CAST(@CD20 AS UNSIGNED),0)+
IFNULL(CAST(@CD21 AS UNSIGNED),0) + IFNULL(CAST(@CD22 AS UNSIGNED),0)+
IFNULL(CAST(@CD23 AS UNSIGNED),0) + IFNULL(CAST(@CD24 AS UNSIGNED),0)+
IFNULL(CAST(@CD25 AS UNSIGNED),0) + IFNULL(CAST(@CD26 AS UNSIGNED),0)+
IFNULL(CAST(@CD27 AS UNSIGNED),0) + IFNULL(CAST(@CD28 AS UNSIGNED),0)+
IFNULL(CAST(@CD29 AS UNSIGNED),0) + IFNULL(CAST(@CD30 AS UNSIGNED),0) as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
''  as `D1`,
'' as `D2`,
'' as `D3`,
'' as `D4`,
'' as `D5`,
'' as `D6`,
'' as `D7`,
'' as `D8`,
'' as `D9`,
'' as `D10`,
'' as `D11`,
'' as `D12`,
'' as `D13`,
'' as `D14`,
'' as `D15`
union all
SELECT 'Tentative' as 'status',
@MonthlyTotalTentative:=IFNULL(CAST(@TD1 AS UNSIGNED),0) + IFNULL(CAST(@TD2 AS UNSIGNED),0)+
IFNULL(CAST(@TD3 AS UNSIGNED),0) + IFNULL(CAST(@TD4 AS UNSIGNED),0)+
IFNULL(CAST(@TD5 AS UNSIGNED),0) + IFNULL(CAST(@TD6 AS UNSIGNED),0)+
IFNULL(CAST(@TD7 AS UNSIGNED),0) + IFNULL(CAST(@TD8 AS UNSIGNED),0)+
IFNULL(CAST(@TD9 AS UNSIGNED),0) + IFNULL(CAST(@TD10 AS UNSIGNED),0)+
IFNULL(CAST(@TD11 AS UNSIGNED),0) + IFNULL(CAST(@TD12 AS UNSIGNED),0)+
IFNULL(CAST(@TD13 AS UNSIGNED),0) + IFNULL(CAST(@TD14 AS UNSIGNED),0)+
IFNULL(CAST(@TD15 AS UNSIGNED),0) + IFNULL(CAST(@TD16 AS UNSIGNED),0)+
IFNULL(CAST(@TD17 AS UNSIGNED),0) + IFNULL(CAST(@TD18 AS UNSIGNED),0)+
IFNULL(CAST(@TD19 AS UNSIGNED),0) + IFNULL(CAST(@TD20 AS UNSIGNED),0)+
IFNULL(CAST(@TD21 AS UNSIGNED),0) + IFNULL(CAST(@TD22 AS UNSIGNED),0)+
IFNULL(CAST(@TD23 AS UNSIGNED),0) + IFNULL(CAST(@TD24 AS UNSIGNED),0)+
IFNULL(CAST(@TD25 AS UNSIGNED),0) + IFNULL(CAST(@TD26 AS UNSIGNED),0)+
IFNULL(CAST(@TD27 AS UNSIGNED),0) + IFNULL(CAST(@TD28 AS UNSIGNED),0)+
IFNULL(CAST(@TD29 AS UNSIGNED),0) + IFNULL(CAST(@TD30 AS UNSIGNED),0) as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
''  as `D1`,
'' as `D2`,
'' as `D3`,
'' as `D4`,
'' as `D5`,
'' as `D6`,
'' as `D7`,
'' as `D8`,
'' as `D9`,
'' as `D10`,
'' as `D11`,
'' as `D12`,
'' as `D13`,
'' as `D14`,
'' as `D15`
union all
SELECT 'Total' as 'status',
@MonthlyTotal:=@MonthlyTotalConfirmed+@MonthlyTotalTentative as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
''  as `D1`,
'' as `D2`,
'' as `D3`,
'' as `D4`,
'' as `D5`,
'' as `D6`,
'' as `D7`,
'' as `D8`,
'' as `D9`,
'' as `D10`,
'' as `D11`,
'' as `D12`,
'' as `D13`,
'' as `D14`,
'' as `D15`
union all
SELECT 'AvgDailyRate(Conf)' as 'status',
@MonthlyAvgDailyRateConf:=IFNULL(CAST(@AvgDailyRateConf1 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf2 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateConf3 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf4 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateConf5 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf6 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateConf7 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf8 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateConf9 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf10 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateConf11 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf12 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateConf13 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf14 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateConf15 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf16 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateConf17 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf18 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateConf19 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf20 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateConf21 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf22 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateConf23 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf24 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateConf25 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf26 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateConf27 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf28 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateConf29 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateConf30 AS UNSIGNED),0) as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
''  as `D1`,
'' as `D2`,
'' as `D3`,
'' as `D4`,
'' as `D5`,
'' as `D6`,
'' as `D7`,
'' as `D8`,
'' as `D9`,
'' as `D10`,
'' as `D11`,
'' as `D12`,
'' as `D13`,
'' as `D14`,
'' as `D15`
union all
SELECT 'AvgDailyRate(Tent)' as 'status',
@MonthlyAvgDailyRateConf:=IFNULL(CAST(@AvgDailyRateTent1 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent2 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateTent3 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent4 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateTent5 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent6 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateTent7 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent8 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateTent9 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent10 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateTent11 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent12 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateTent13 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent14 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateTent15 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent16 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateTent17 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent18 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateTent19 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent20 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateTent21 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent22 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateTent23 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent24 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateTent25 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent26 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateTent27 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent28 AS UNSIGNED),0)+
IFNULL(CAST(@AvgDailyRateTent29 AS UNSIGNED),0) + IFNULL(CAST(@AvgDailyRateTent30 AS UNSIGNED),0) as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
''  as `D1`,
'' as `D2`,
'' as `D3`,
'' as `D4`,
'' as `D5`,
'' as `D6`,
'' as `D7`,
'' as `D8`,
'' as `D9`,
'' as `D10`,
'' as `D11`,
'' as `D12`,
'' as `D13`,
'' as `D14`,
'' as `D15`
union all
SELECT 'Cancelled Lost Business' as 'status',
@MonthlyCancelledLostBusiness:=IFNULL(CAST(@TotalCancelledLostBusiness1 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness2 AS UNSIGNED),0)+
IFNULL(CAST(@TotalCancelledLostBusiness3 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness4 AS UNSIGNED),0)+
IFNULL(CAST(@TotalCancelledLostBusiness5 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness6 AS UNSIGNED),0)+
IFNULL(CAST(@TotalCancelledLostBusiness7 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness8 AS UNSIGNED),0)+
IFNULL(CAST(@TotalCancelledLostBusiness9 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness10 AS UNSIGNED),0)+
IFNULL(CAST(@TotalCancelledLostBusiness11 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness12 AS UNSIGNED),0)+
IFNULL(CAST(@TotalCancelledLostBusiness13 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness14 AS UNSIGNED),0)+
IFNULL(CAST(@TotalCancelledLostBusiness15 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness16 AS UNSIGNED),0)+
IFNULL(CAST(@TotalCancelledLostBusiness17 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness18 AS UNSIGNED),0)+
IFNULL(CAST(@TotalCancelledLostBusiness19 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness20 AS UNSIGNED),0)+
IFNULL(CAST(@TotalCancelledLostBusiness21 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness22 AS UNSIGNED),0)+
IFNULL(CAST(@TotalCancelledLostBusiness23 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness24 AS UNSIGNED),0)+
IFNULL(CAST(@TotalCancelledLostBusiness25 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness26 AS UNSIGNED),0)+
IFNULL(CAST(@TotalCancelledLostBusiness27 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness28 AS UNSIGNED),0)+
IFNULL(CAST(@TotalCancelledLostBusiness29 AS UNSIGNED),0) + IFNULL(CAST(@TotalCancelledLostBusiness30 AS UNSIGNED),0) as 'Organization',
'' as 'BookingNumber', 
'' as 'salesperson',
'' as 'Date_Definite' ,
'' as 'Revenue',
'' as 'AvgRate'  ,
''  as `D1`,
'' as `D2`,
'' as `D3`,
'' as `D4`,
'' as `D5`,
'' as `D6`,
'' as `D7`,
'' as `D8`,
'' as `D9`,
'' as `D10`,
'' as `D11`,
'' as `D12`,
'' as `D13`,
'' as `D14`,
'' as `D15`
;


/////////


call sp_ForecastBook('2018-09-01',null,null)
Call sp_SalesYearlySpreadSheet("2018-9-1",null,null)
CALL sp_BookingCostAnalysis("2018-9-19","2018-9-19",null,null,null,null)
CALL sp_FunctionDistributionByDate("2018-9-17","2018-9-17",null,null,null,null,'1','1',null,null,null)
CALL sp_FunctionList("2018-9-19","2018-9-19",'2','1')
CALL sp_BookingCostAnalysis("2018-9-1","2018-9-30",null,'1,2','1,2',null)
CALL sp_CustomerCallReport('2018-09-11','2018-09-19')
CALL sp_SixPeriodForecast("2018-09-17")
CALL sp_WeeklyForecast("2018-09-17")
//////////


EdFunc_Ok


C:\xampp\htdocs\espdev\esp-project\Booking\assets\ajax\ajax_updateBooking.php



var Class_EditBlock = function(options){

var _bookingID =0;
var RoomBlockData=null;

this.construct = function(){

this.BookingId='';

};

this.construct();

this.GetFinalRates=function(row){

var Adult =row.children('td:eq(4)').html();
var Child = row.children('td:eq(5)').html();

var arr_Rates=row.data("arr_Rates");

var FinalRate=0.00; 

switch (Adult) {
case '1':

FinalRate=parseFloat(arr_Rates"Single"]*Adult)+parseFloat(arr_Rates"Child"]*Child)
break;
case '2':
FinalRate=parseFloat(arr_Rates"Double"]*Adult)+parseFloat(arr_Rates"Child"]*Child)
break;
case '3':
FinalRate=parseFloat(arr_Rates"Triple"]*Adult)+parseFloat(arr_Rates"Child"]*Child)
break;
case '4':
FinalRate=parseFloat(arr_Rates"Quad"]*Adult)+parseFloat(arr_Rates"Child"]*Child)
break;
case '5':
FinalRate=parseFloat(arr_Rates"Child"]*Child)
break;
default:
FinalRate=parseFloat(arr_Rates"Single"])+parseFloat(arr_Rates"Child"]*Child)

break;

}

FinalRate=FinalRate+parseFloat(arr_Rates"Extra"])
row.children('td:eq(6)').find("input").val(parseFloat(FinalRate).toFixed(2));

}

this.PopulateSalesPerson=function()
{
$("#BM_RSalesperson").html();
if(sessionStorage.getItem("getSalesPerson"))
{
$('#BM_RSalesperson')..html(getSalesPerson());
}

}

}


////////////////

//print_r($RoomBlock);

$query = "SELECT COUNT(RoomEditBlockID) FROM tblRoomEditBlock WHERE RoomEditBlockID='".$RoomBlock'RoomBlockID']."'";
echo $query ;
$result = $conn->query($query);
$count=$result->fetchColumn();
//echo $count;
return;

if($count > 0) {

$query="update `tblRoomEditBlock` 
set SalesprsnID='".$RoomBlock'SalesprsnID']."', BookingID='".$RoomBlock'BookingID']."', _Day='".$RoomBlock'_Day']."', _Date='".$RoomBlock'_Date']."', RoomType='".$RoomBlock'RoomType']."', 
Adult='".$RoomBlock'Adult']."', Child='".$RoomBlock'Child']."', Rate='".$RoomBlock'Rate']."', Agreed='".$RoomBlock'Agreed']."', Orig='".$RoomBlock'Orig']."', Block='".$RoomBlock'Block']."', Pickup='".$RoomBlock'Pickup']."', Slippage='".$RoomBlock'Slippage']."', 
ArrivalDate='".$RoomBlock'ArrivalDate']."', DepartureDate='".$RoomBlock'DepartureDate']."', BillingType='".$RoomBlock'BillingType']."', CutOffDate='".$RoomBlock'CutOffDate']."', ReservationMethod='".$RoomBlock'ReservationMethod']."', 
ReservationType='".$RoomBlock'ReservationType']."', Single='".$RoomBlock'Single']."', _Double='".$RoomBlock'_Double']."', Triple='".$RoomBlock'Triple']."', Quad='".$RoomBlock'Quad']."', ChildRate='".$RoomBlock'ChildRate']."',Extra='".$RoomBlock'Extra']."' where RoomEditBlockID='".$RoomBlock'RoomBlockID']."'";



}
else
{
$query="insert into `esp_test`.`tblRoomEditBlock` 
set SalesprsnID='".$RoomBlock'SalesprsnID']."', BookingID='".$RoomBlock'BookingID']."', _Day='".$RoomBlock'_Day']."', _Date='".$RoomBlock'_Date']."', RoomType='".$RoomBlock'RoomType']."', 
Adult='".$RoomBlock'Adult']."', Child='".$RoomBlock'Child']."', Rate='".$RoomBlock'Rate']."', Agreed='".$RoomBlock'Agreed']."', Orig='".$RoomBlock'Orig']."', Block='".$RoomBlock'Block']."', Pickup='".$RoomBlock'Pickup']."', Slippage='".$RoomBlock'Slippage']."', 
ArrivalDate='".$RoomBlock'ArrivalDate']."', DepartureDate='".$RoomBlock'DepartureDate']."', BillingType='".$RoomBlock'BillingType']."', CutOffDate='".$RoomBlock'CutOffDate']."', ReservationMethod='".$RoomBlock'ReservationMethod']."', 
ReservationType='".$RoomBlock'ReservationType']."', Single='".$RoomBlock'Single']."', _Double='".$RoomBlock'_Double']."', Triple='".$RoomBlock'Triple']."', Quad='".$RoomBlock'Quad']."', ChildRate='".$RoomBlock'ChildRate']."',Extra='".$RoomBlock'Extra']."'";

}

echo $query;
$InsertRoomBlock=$conn->query($query);

if($InsertRoomBlock)
{	
echo 'inserted';
}
else
{
echo 'updated';
}


//////////


$query="insert into `esp_test`.`tblRoomEditBlock` 
set SalesprsnID='".$RoomBlock'SalesprsnID']."', BookingID='".$RoomBlock'BookingID']."', _Day='".$RoomBlock'_Day']."', _Date='".$RoomBlock'_Date']."', RoomType='".$RoomBlock'RoomType']."', 
Adult='".$RoomBlock'Adult']."', Child='".$RoomBlock'Child']."', Rate='".$RoomBlock'Rate']."', Agreed='".$RoomBlock'Agreed']."', Orig='".$RoomBlock'Orig']."', Block='".$RoomBlock'Block']."', Pickup='".$RoomBlock'Pickup']."', Slippage='".$RoomBlock'Slippage']."', 
ArrivalDate='".$RoomBlock'ArrivalDate']."', DepartureDate='".$RoomBlock'DepartureDate']."', BillingType='".$RoomBlock'BillingType']."', CutOffDate='".$RoomBlock'CutOffDate']."', ReservationMethod='".$RoomBlock'ReservationMethod']."', 
ReservationType='".$RoomBlock'ReservationType']."', Single='".$RoomBlock'Single']."', _Double='".$RoomBlock'_Double']."', Triple='".$RoomBlock'Triple']."', Quad='".$RoomBlock'Quad']."', ChildRate='".$RoomBlock'ChildRate']."',Extra='".$RoomBlock'Extra']."'
ON DUPLICATE KEY UPDATE
set SalesprsnID='".$RoomBlock'SalesprsnID']."', BookingID='".$RoomBlock'BookingID']."', _Day='".$RoomBlock'_Day']."', _Date='".$RoomBlock'_Date']."', RoomType='".$RoomBlock'RoomType']."', 
Adult='".$RoomBlock'Adult']."', Child='".$RoomBlock'Child']."', Rate='".$RoomBlock'Rate']."', Agreed='".$RoomBlock'Agreed']."', Orig='".$RoomBlock'Orig']."', Block='".$RoomBlock'Block']."', Pickup='".$RoomBlock'Pickup']."', Slippage='".$RoomBlock'Slippage']."', 
ArrivalDate='".$RoomBlock'ArrivalDate']."', DepartureDate='".$RoomBlock'DepartureDate']."', BillingType='".$RoomBlock'BillingType']."', CutOffDate='".$RoomBlock'CutOffDate']."', ReservationMethod='".$RoomBlock'ReservationMethod']."', 
ReservationType='".$RoomBlock'ReservationType']."', Single='".$RoomBlock'Single']."', _Double='".$RoomBlock'_Double']."', Triple='".$RoomBlock'Triple']."', Quad='".$RoomBlock'Quad']."', ChildRate='".$RoomBlock'ChildRate']."',Extra='".$RoomBlock'Extra']."'";


///////////


<?php 
include('../../../common/connect.php');

$arr_RoomBlock = $_POST'arr_RoomBlock'];
$InsertRoomBlock;
foreach($arr_RoomBlock as $RoomBlock)
{

$count = mysql_query("SELECT COUNT(RoomEditBlockID) FROM tblRoomEditBlock WHERE RoomEditBlockID='990'");

if( mysql_num_rows($count) > 0) {

//update
$InsertRoomBlock=mysql_query("update `tblRoomEditBlock` 
set SalesprsnID='1', BookingID='653', _Day='"Wednesday"', _Date='"2018-9-10"', RoomType='106', 
Adult='5', Child='6', Rate='110.00', Agreed='9', Orig='9', Block='9', Pickup='10', Slippage='1', 
ArrivalDate='"2018-9-19"', DepartureDate='"2018-9-20"', BillingType='"2001-1-1"', CutOffDate='"2018-9-20"', ReservationMethod='9', 
ReservationType='1', Single='11.00', _Double='12.00', Triple='13.00', Quad='14.00', ChildRate='15.00',Extra='16.00'
ON DUPLICATE KEY UPDATE
set SalesprsnID='1', BookingID='653', _Day='"Wednesday"', _Date='"2018-9-10"', RoomType='106', 
Adult='5', Child='6', Rate='110.00', Agreed='9', Orig='9', Block='9', Pickup='10', Slippage='1', 
ArrivalDate='"2018-9-19"', DepartureDate='"2018-9-20"', BillingType='"2001-1-1"', CutOffDate='"2018-9-20"', ReservationMethod='9', 
ReservationType='1', Single='11.00', _Double='12.00', Triple='13.00', Quad='14.00', ChildRate='15.00',Extra='16.00' 
where RoomEditBlockID='990'");
}
else
{
//insert
$InsertRoomBlock=mysql_query("insert into `esp_test`.`tblRoomEditBlock` 
set SalesprsnID='1', BookingID='653', _Day='"Wednesday"', _Date='"2018-9-10"', RoomType='106', 
Adult='5', Child='6', Rate='110.00', Agreed='9', Orig='9', Block='9', Pickup='10', Slippage='1', 
ArrivalDate='"2018-9-19"', DepartureDate='"2018-9-20"', BillingType='"2001-1-1"', CutOffDate='"2018-9-20"', ReservationMethod='9', 
ReservationType='1', Single='11.00', _Double='12.00', Triple='13.00', Quad='14.00', ChildRate='15.00',Extra='16.00'
ON DUPLICATE KEY UPDATE
set SalesprsnID='1', BookingID='653', _Day='"Wednesday"', _Date='"2018-9-10"', RoomType='106', 
Adult='5', Child='6', Rate='110.00', Agreed='9', Orig='9', Block='9', Pickup='10', Slippage='1', 
ArrivalDate='"2018-9-19"', DepartureDate='"2018-9-20"', BillingType='"2001-1-1"', CutOffDate='"2018-9-20"', ReservationMethod='9', 
ReservationType='1', Single='11.00', _Double='12.00', Triple='13.00', Quad='14.00', ChildRate='15.00',Extra='16.00'");
}

if($InsertRoomBlock)
{	
echo 'inserted';
}
else
{
echo 'not_inserted';
}


}


?>

//////////////////

// INSERT into `table` (product_id,quantity) Values ('p1',9),('p2',13) ON DUPLICATE KEY UPDATE quantity=VALUES(quantity);

// $InsertDeposit = $conn->query("insert into depositt set  LocID='".base64_encode($_SESSION'locId'])."', EvtID='1', Amtdue='".$Deposit'AmtDue']."', Duedate='".$Deposit'DueDate']."', Amtrecvd='".$Deposit'AmtPaid']."', Datercvd='".$Deposit'DuePaid']."', FunctID='".$_POST'FunctionID']."'");

$query="insert into `esp_test`.`tblRoomEditBlock` 
set SalesprsnID='".$RoomBlock'SalesprsnID']."', BookingID='".$RoomBlock'BookingID']."', _Day='".$RoomBlock'_Day']."', _Date='".$RoomBlock'_Date']."', RoomType='".$RoomBlock'RoomType']."', 
Adult='".$RoomBlock'Adult']."', Child='".$RoomBlock'Child']."', Rate='".$RoomBlock'Rate']."', Agreed='".$RoomBlock'Agreed']."', Orig='".$RoomBlock'Orig']."', Block='".$RoomBlock'Block']."', Pickup='".$RoomBlock'Pickup']."', Slippage='".$RoomBlock'Slippage']."', 
ArrivalDate='".$RoomBlock'ArrivalDate']."', DepartureDate='".$RoomBlock'DepartureDate']."', BillingType='".$RoomBlock'BillingType']."', CutOffDate='".$RoomBlock'CutOffDate']."', ReservationMethod='".$RoomBlock'ReservationMethod']."', 
ReservationType='".$RoomBlock'ReservationType']."', Single='".$RoomBlock'Single']."', _Double='".$RoomBlock'_Double']."', Triple='".$RoomBlock'Triple']."', Quad='".$RoomBlock'Quad']."', ChildRate='".$RoomBlock'ChildRate']."',Extra='".$RoomBlock'Extra']."'
ON DUPLICATE KEY UPDATE
set SalesprsnID='".$RoomBlock'SalesprsnID']."', BookingID='".$RoomBlock'BookingID']."', _Day='".$RoomBlock'_Day']."', _Date='".$RoomBlock'_Date']."', RoomType='".$RoomBlock'RoomType']."', 
Adult='".$RoomBlock'Adult']."', Child='".$RoomBlock'Child']."', Rate='".$RoomBlock'Rate']."', Agreed='".$RoomBlock'Agreed']."', Orig='".$RoomBlock'Orig']."', Block='".$RoomBlock'Block']."', Pickup='".$RoomBlock'Pickup']."', Slippage='".$RoomBlock'Slippage']."', 
ArrivalDate='".$RoomBlock'ArrivalDate']."', DepartureDate='".$RoomBlock'DepartureDate']."', BillingType='".$RoomBlock'BillingType']."', CutOffDate='".$RoomBlock'CutOffDate']."', ReservationMethod='".$RoomBlock'ReservationMethod']."', 
ReservationType='".$RoomBlock'ReservationType']."', Single='".$RoomBlock'Single']."', _Double='".$RoomBlock'_Double']."', Triple='".$RoomBlock'Triple']."', Quad='".$RoomBlock'Quad']."', ChildRate='".$RoomBlock'ChildRate']."',Extra='".$RoomBlock'Extra']."'";

echo $query;

$InsertRoomBlock = $conn->query($query);

echo $InsertRoomBlock;

//////////


IF( (SELECT COUNT(RoomEditBlockID) FROM tblRoomEditBlock WHERE RoomEditBlockID='999'), 1, 2)

select COUNT(RoomEditBlockID) from tblRoomEditBlock where RoomEditBlockID='99'
if row_count()=

insert into `tblRoomEditBlock` 
(RoomEditBlockID,SalesprsnID)
values
( '99','123')
ON DUPLICATE KEY UPDATE SalesprsnID=VALUES(SalesprsnID);


INSERT into `table` (product_id,quantity) Values ('p1',9),('p2',13) ON DUPLICATE KEY UPDATE quantity=VALUES(quantity)



UPDATE  tblRoomEditBlock set SalesprsnID=VALUES(SalesprsnID),BookingID=VALUES(BookingID) ,_Day=VALUES(_Day) ,_Date=VALUES(_Date) ,RoomType=VALUES(RoomType) ,Rates=VALUES(Rates) ,Adult=VALUES(Adult) ,Child=VALUES(Child) ,Rate=VALUES(Rate) ,Agreed=VALUES(Agreed) ,Orig=VALUES(Orig) ,Block=VALUES(Block) ,Pickup=VALUES(Pickup),Slippage=VALUES(Slippage) ,ArrivalDate=VALUES(ArrivalDate) ,DepartureDate=VALUES(DepartureDate) ,BillingType=VALUES(BillingType) ,CutOffDate=VALUES(CutOffDate) ,ReservationMethod=VALUES(ReservationMethod) ,ReservationType=VALUES(ReservationType) ,Single=VALUES(Single) ,_Double=VALUES(_Double) ,Triple=VALUES(Triple) ,Quad=VALUES(Quad) ,ChildRate=VALUES(ChildRate) ,Extra=VALUES(Extra);


select * from tblRoomEditBlock
select * from tbl_SleepingRoomsChange

UPDATE  tblRoomEditBlock set SalesprsnID='10' where BookingID='653'

insert into `esp_test`.`tblRoomEditBlock` 
(RoomEditBlockID, SalesprsnID, BookingID, _Day, _Date, RoomType, 
Rates, Adult, Child, Rate, Agreed, Orig, Block, Pickup, Slippage, 
ArrivalDate, DepartureDate, BillingType, CutOffDate, ReservationMethod, 
ReservationType, Single, _Double, Triple, Quad, ChildRate, 
Extra)
values
(RoomEditBlockID, SalesprsnID, BookingID, _Day, _Date, RoomType, 
Rates, Adult, Child, Rate, Agreed, Orig, Block, Pickup, Slippage, 
ArrivalDate, DepartureDate, BillingType, CutOffDate, ReservationMethod, 
ReservationType, Single, _Double, Triple, Quad, ChildRate, 
Extra)

select * from trg_StatusChange


select * from tblRoomEditBlock


insert into `esp_test`.`tblRoomEditBlock` 
set SalesprsnID=1
ON DUPLICATE KEY UPDATE 
set SalesprsnID=SalesprsnID


INSERT into `tblRoomEditBlock` (SalesprsnID) Values (1) ON DUPLICATE KEY UPDATE SalesprsnID=VALUES(SalesprsnID);


insert into `esp_test`.`tblRoomEditBlock` 
set SalesprsnID='1', BookingID='653', _Day='"Wednesday"', _Date='"2018-9-10"', RoomType='106', 
Adult='5', Child='6', Rate='110.00', Agreed='9', Orig='9', Block='9', Pickup='10', Slippage='1', 
ArrivalDate='"2018-9-19"', DepartureDate='"2018-9-20"', BillingType='"2001-1-1"', CutOffDate='"2018-9-20"', ReservationMethod='9', 
ReservationType='1', Single='11.00', _Double='12.00', Triple='13.00', Quad='14.00', ChildRate='15.00',Extra='16.00'
ON DUPLICATE KEY UPDATE
set SalesprsnID='1', BookingID='653', _Day='"Wednesday"', _Date='"2018-9-10"', RoomType='106', 
Adult='5', Child='6', Rate='110.00', Agreed='9', Orig='9', Block='9', Pickup='10', Slippage='1', 
ArrivalDate='"2018-9-19"', DepartureDate='"2018-9-20"', BillingType='"2001-1-1"', CutOffDate='"2018-9-20"', ReservationMethod='9', 
ReservationType='1', Single='11.00', _Double='12.00', Triple='13.00', Quad='14.00', ChildRate='15.00',Extra='16.00'

select trigger_schema, trigger_name, action_statement
from information_schema.triggers



//////////////

delete from tblRoomEditBlock




insert into `tblRoomEditBlock` values 

(98,4,636,'Saturday','2018-09-08',106,NULL,1,2,'57.00',3,3,3,4,1,'2018-09-17','2018-09-18',2001,'2018-09-18',9,1,'11.00','12.00','13.00','14.00','15.00','16.00'),

(97,1,580,'Monday','2018-09-04',106,NULL,4,5,'247.00',6,6,6,7,1,'2018-09-17','2018-09-18',2001,'2018-09-18',9,1,'0.21','22.00','23.00','24.00','25.00','26.00'),

(99,2,637,'Saturday','2018-09-08',106,NULL,3,3,'170.00',4,4,4,5,1,'2018-09-07','2018-09-08',2001,'2018-09-08',9,1,'21.00','22.00','23.00','24.00','25.00','26.00'),

(103,1,648,'Sunday','2018-09-17',106,NULL,2,3,'145.00',4,4,4,5,1,'2018-09-17','2018-09-18',2001,'2018-09-18',10,1,'21.00','22.00','23.00','24.00','25.00','26.00'),

(101,1,647,'Saturday','2018-09-17',106,NULL,3,5,'130.00',2,2,2,3,1,'2018-09-17','2018-09-18',2001,'2018-09-18',10,1,'11.00','12.00','13.00','14.00','15.00','16.00'),

(102,1,649,'Sunday','2018-09-10',106,NULL,2,4,'100.00',5,5,5,6,1,'2018-09-17','2018-09-18',2001,'2018-09-18',9,1,'11.00','12.00','13.00','14.00','15.00','16.00'),

(130,1,653,'Wednesday','2018-09-19',100,NULL,7,8,'447.00',9,9,9,11,2,'2018-09-19','2018-09-20',2001,'2018-09-20',9,1,'41.00','42.00','43.00','44.00','45.00','46.00'),

(106,1,654,'Monday','2018-09-10',106,NULL,4,5,'247.00',6,6,6,7,1,'2018-09-21','2018-09-22',2001,'2018-09-22',9,1,'21.00','22.00','23.00','24.00','25.00','26.00'),

(107,5,678,'Thursday','2018-09-13',100,NULL,2,3,'47.00',3,3,3,5,2,'2018-09-13','2018-09-14',2001,'2018-09-14',9,1,'10.00','15.00','25.00','35.00','5.00','2.00'),

(108,2,678,'Sunday','2018-09-18',101,NULL,3,3,'85.00',5,5,5,6,1,'2018-09-18','2018-09-19',2001,'2018-09-18',10,1,'11.00','12.00','13.00','14.00','15.00','16.00'),

(110,2,750,'Tuesday','2018-10-12',106,NULL,2,2,'75.00',3,3,3,2,0,'2018-10-12','2018-10-13',2001,'2018-10-13',9,1,'23.00','25.00','28.00','30.00','10.00','5.00'),

(112,1,753,'Tuesday','2018-09-19',100,NULL,2,3,'85.00',4,4,4,6,2,'2018-09-19','2018-09-20',2001,'2018-09-20',9,1,'11.00','12.00','13.00','14.00','15.00','16.00'),

(113,1,754,'Tuesday','2018-09-19',100,NULL,3,4,'195.00',5,5,5,6,1,'2018-09-19','2018-09-20',2001,'2018-09-20',9,1,'21.00','22.00','23.00','24.00','25.00','26.00'),

(114,1,655,'Tuesday','2018-09-19',100,NULL,2,3,'205.00',4,4,4,5,1,'2018-09-19','2018-09-20',2001,'2018-09-20',9,1,'31.00','32.00','33.00','34.00','35.00','36.00'),

(115,1,755,'Tuesday','2018-09-01',100,NULL,2,3,'81.00',7,7,7,8,1,'2018-09-19','2018-09-20',2001,'2018-09-20',9,1,'11.00','12.00','13.00','14.00','14.00','15.00'),

(116,1,756,'Tuesday','2018-09-19',100,NULL,4,4,'402.00',5,5,5,6,1,'2018-09-19','2018-09-20',2001,'2018-09-20',9,1,'41.00','42.00','43.00','44.00','45.00','46.00'),

(123,8,757,'Tuesday','2018-10-19',106,NULL,3,3,'130.00',3,3,3,2,-1,'2018-10-19','2018-10-20',2001,'2018-10-20',9,1,'20.00','25.00','30.00','35.00','10.00','10.00'),

(124,8,757,'Tuesday','2018-10-19',100,NULL,4,4,'312.00',5,5,5,6,1,'2018-10-19','2018-10-20',2001,'2018-10-20',9,1,'31.00','32.00','33.00','34.00','35.00','36.00'),

(129,1,653,'Wednesday','2018-09-10',106,NULL,5,6,'109.00',9,9,9,10,1,'2018-09-19','2018-09-20',2001,'2018-09-20',9,1,'11.00','12.00','13.00','14.00','15.00','16.00'),

(131,1,653,'Wednesday','2018-09-19',100,NULL,7,8,'428.00',9,9,9,11,2,'2018-09-19','2018-09-20',2001,'2018-09-20',9,1,'41.00','42.00','43.00','44.00','45.00','46.00');

//////////////////

var groups = _(jsonData).groupBy('status');
var D1= _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D1); }, 0) };
});

var D2 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D2); }, 0) };
});
var D3 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D3); }, 0) };
});
var D4 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D4); }, 0) };
});
var D5 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D5); }, 0) };
});
var D6 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D6); }, 0) };
});
var D7 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D7); }, 0) };
});
var D8 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D8); }, 0) };
});
var D9 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D9); }, 0) };
});
var D10 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D10); }, 0) };
});

row2+='<tr>';
$.each(D10, function(key31, value32) {
row2+='<td style="font-size:14px;"><center>'+value32.status+'</center></td>';

if(value32.status=="Confirmed")
{
row2+='<td style="font-size:14px;"><center>'+value32.val+'</center></td>';
}

})
row2+='</tr>';


var D11 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D11); }, 0) };
});
var D12 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D10); }, 0) };
});
var D13 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D10); }, 0) };
});
var D14 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D10); }, 0) };
});
var D15 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D10); }, 0) };
});
var D16 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D10); }, 0) };
});
var D17 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D10); }, 0) };
});
var D18 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D10); }, 0) };
});
var D19 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D10); }, 0) };
});
var D20 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D10); }, 0) };
});
var D21 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D10); }, 0) };
});
var D22 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D10); }, 0) };
});
var D23 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D10); }, 0) };
});
var D24 = _(groups).map(function(g, key) {
return { status: key, 
val: _(g).reduce(function(m,x) { return m + parseInt(x.D10); }, 0) };
});


/////////////////


var bystatus = _.map(jsonData, function(item){ 
var status = item.status;        
return {status: status, total: item.D10}; 
});

//////console.log(bystatus)

///////////////////
var grouped = _.reduce(bystatus, function(memo, item) {
memoitem.D10] = (memoitem.D10] || 0) + parseInt(item.D10);
return memo;
}, {});

//////console.log(grouped)

/////////////////////////

//lodash sum

_(jsonData).groupBy("status").map((group, status) => { //group is an array of items with the same id
const mTotal = _.sum(_.map(group, (item) => parseInt(item.Block) || 0));

return {
status: status,
M: mTotal.toString(),
Total: (mTotal + sTotal).toString()
}
}).value() //End lodash chain



/////////////


$mpdf->setFooter('{PAGENO}');

$mpdf->WriteHTML('Section 1');
$mpdf->WriteHTML('');

// You could also do this using
// $mpdf->AddPage('','','','','on');

$mpdf->WriteHTML('Section 2 - No Footer');
$mpdf->WriteHTML('<pagebreak resetpagenum="1" pagenumstyle="a" suppress="off" />');
$mpdf->WriteHTML('Section 3 - Starting with page a');



/////////


select * from EVENT 
select * from servdesc sd
select * from funct
select * from  tblServiceSummary ss join tbl_Category c on ss.CategoryID=c.CategoryID
select * from  EVENT
select * from sections
select * from SYS_REPORTSDESC 
select * from  tbl_Category
select * from tblFoodNBeverages
select * from tblFNB_SubMenu1
select * from tblFNB_SubMenu2 order by ID
select * from  servdesc
select * from tblFNB_SubMenu2 where ID>434
select * from tblServiceSummary ss join servdesc sd on ss.Service_time=sd.servdescid 
select * from servdesc where servdescid in (6,11,12,26,34)
select * from tblRoomEditBlock

//////
call sp_ForecastBook('2018-09-17',null,null)
////////
call sp_doiterate(1);
SELECT 
WHILE x  <= 15 DO
'' as 'D'x,
SET  x = x + 1; 
END WHILE
//////////




///////


DELIMITER $$;

DROP PROCEDURE IF EXISTS `esp_test`.`sp_doiterate`$$

CREATE PROCEDURE sp_doiterate(p1 INT)
BEGIN
DECLARE x  INT;
SET x = 1;
WHILE x  <= 5 DO
select x;
SET  x = x + 1; 
END WHILE;
END$$
DELIMITER ;$$

//////

https://dev.mysql.com/doc/refman/5.7/en/cursors.html

Ceiling

Total Confirmed

Total Tentative

Total Room Nights

Rooms Available

Target Rate

Avg Daily Rate (Conf)

Avg Daily Rate (Tent)

Total Cancelled Lost Business

Total Turnaway Lost Business


//////////


left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
where ArrivalDate 
between '2018-09-07' and '2018-09-08'


SELECT 
if(rmblk.ArrivalDate between '2018-09-07' and '2018-09-08', rmblk.Pickup, 0 ) as `D2`
from tblRoomEditBlock rmblk
left join EVENT bkg on rmblk.bookingID=bkg.bookingID
left join custt cst on bkg.customerId=cst.CustID 
where rmblk.ArrivalDate between '2018-09-07' and '2018-09-08'


SELECT *
from EVENT bkg 
left join tblRoomEditBlock rmblk on bkg.bookingID=rmblk.bookingID
where rmblk.ArrivalDate between '2018-09-07' and '2018-09-08'



///////////



Booking       Date    Avg Tot  Tot    Mon
Status     Organization      Number  MGR Definite Rate Rev. Rms   09/17

Tentative Ford Motor Company 4824   Admin  	 $328.00 $1,640.00 5 5

Lost Business

Cancellation 		 sam 4849   Admin  	 $97.00  $291.00   3 3

TOTALS          				 $328.00 $1,640.00  5 5


declare x int(11);
set x=1;
select x;

set @D1= DATE_ADD(`date`  ,INTERVAL 1 Day);
set @D2=DATE_ADD(`date`  , INTERVAL 2 Day);
set @D3= DATE_ADD(`date`  ,INTERVAL 3 Day);
set @D4=DATE_ADD(`date`  , INTERVAL 4 Day);
set @D5= DATE_ADD(`date`  ,INTERVAL 5 Day);
set @D6=DATE_ADD(`date`  , INTERVAL 6 Day);


SELECT YEAR('2018-09-17') AS 'year', MONTH('2018-09-17') AS 'month'


select * from EVENT

select * from tblRoomEditBlock

SET @_Day := day('2018-09-17');


select bkg.status,
cst.CustName ,
bkg.bookingId,
slps.name as salesperson,
'' as 'Date_Definite' ,
IFNULL(sum(rmblk.Rate),0) as Revenue,
IFNULL(sum(rmblk.Rate),0) as AvgRate ,
IFNULL(sum((rmblk.Block)*(rmblk.Rate)),0) as ActRevenue,
sum( if( bkg.StartDate between @D1 and @D2, ss.Total, 0 ) ) as 'Day1',
sum( if( bkg.StartDate between @D2 and @D3, ss.Total, 0 ) ) as 'Day2'
from funct fn 
join custt cst on fn.customerId=cst.CustID 
join FUNCTNAMES fName on fn.FunctName=fName.ResID 
join contacts cnt on cnt.ContactID=fn.OnSiteContact 
join tbl_salesPerson slps on slps.id=fn.SPID
join EVENT bkg on bkg.bookingID = fn.bookingID 
join tbl_functionRoom fr on fr.id=fn.EvtID
left join tblServiceSummary ss on fn.FunctID = ss.FunctionID
left join servdesc sd on ss.Service_time =sd.servdescid 
left join sections s on bkg.sectionId =s.SectionID 
left join tblRoomEditBlock rmblk on fn.bookingID=rmblk.bookingID
left join tbl_status st on fn.statusid=st.id
group by fn.StartDate;


/////////////////////////




IFNULL(sum((rmblk.Block)*(rmblk.Rate)),0)


Call sp_SalesYearlySpreadSheet("2018-9-1",null,null)


Call sp_SalesYearlySpreadSheet("2018-9-1",null,null)


DROP TABLE IF EXISTS `tbl_SleepingRoomsChange`;

CREATE TABLE `tbl_SleepingRoomsChange` (
`id` int(11) NOT NULL AUTO_INCREMENT,
`DateChgd` date ,
`Chgd By` int(50) DEFAULT NULL,
`FieldChgd` varchar(50) DEFAULT NULL,
`ChgdFrom` varchar(50) DEFAULT NULL,
`ChgdTo` varchar(50) DEFAULT NULL,

PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;


select 	id, DateChgd, `Chgd By`, FieldChgd, ChgdFrom, ChgdTo 
from 
`esp_test`.`tbl_SleepingRoomsChange` 
limit 0, 50

select 	RoomEditBlockID, SalesprsnID, BookingID, _Day, _Date, RoomType, Rates, Adult, Child, Rate, Agreed, Orig, 
Block, Pickup, Slippage, ArrivalDate, DepartureDate, BillingType, CutOffDate, ReservationMethod, 
ReservationType, Single, _Double, Triple, Quad, ChildRate, Extra 
from 
`esp_test`.`tblRoomEditBlock` 
limit 0, 50


select * from EVENT where CustomerId=89

select * from tblRoomEditBlock order by RoomEditBlockID desc

update tblRoomEditBlock set SalesprsnID=1 where RoomEditBlockID=108

select * from tbl_SleepingRoomsChange

select * from tbl_SleepingRoomsChange

update tbl_SleepingRoomsChange set bookingId=654

insert into tbl_SleepingRoomsChange set DateChgd =CAST(GETDATE() AS DATE) 

insert into tbl_SleepingRoomsChange set DateChgd =CAST(GETDATE() AS DATE) , ChgdBy = OLD.SalesprsnID ,FieldChgd='SalesprsnID',ChgdFrom=OLD.SalesprsnID,ChgdTo=NEW.SalesprsnID;


sum( if( bkg.StartDate between `date` and D1, ss.Total, 0 ) )


select DATE_FORMAT(CAST(GETDATE() AS DATE), '%m/%d/%Y %H:%i')


/////////////

, , , , 
, , , , , , , , 
, Single, _Double, Triple, Quad, ChildRate, Extra 


DateChgd, `ChgdBy`, FieldChgd, ChgdFrom, ChgdTo 

RoomEditBlockID, SalesprsnID, BookingID, _Day, _Date, RoomType, Rates, Adult, Child, Rate, Agreed, Orig, 
Block, Pickup, Slippage, ArrivalDate, DepartureDate, BillingType, CutOffDate, ReservationMethod, 
ReservationType, Single, _Double, Triple, Quad, ChildRate, Extra 



///////////////
count(if(bsc.Date between  M1 and  M2 and bsc.OldStatus=2,NULL))

////

DELIMITER $$;

DROP PROCEDURE IF EXISTS `esp_test`.`sp_SalesYearlySpreadSheet`$$

CREATE PROCEDURE `esp_test`.`sp_SalesYearlySpreadSheet` (`month` VARCHAR(64),`sectionArray` VARCHAR(64),`ServiceHeadersArray` VARCHAR(64))
BEGIN

declare M1 ,M2 ,M3,M4,M5,M6 ,M7 ,M8 ,M9,M10,M11,M12 varchar(10);
DECLARE artist_count INT;

set M1= DATE_ADD(`month`  , INTERVAL 1 MONTH);
set M2=DATE_ADD(`month`  , INTERVAL 2 MONTH);
set M3= DATE_ADD(`month`  , INTERVAL 3 MONTH);
set M4=DATE_ADD(`month`  , INTERVAL 4 MONTH);
set M5= DATE_ADD(`month`  , INTERVAL 5 MONTH);
set M6=DATE_ADD(`month`  , INTERVAL 6 MONTH);
set M7= DATE_ADD(`month`  , INTERVAL 7 MONTH);
set M8=DATE_ADD(`month`  , INTERVAL 8 MONTH);
set M9= DATE_ADD(`month`  , INTERVAL 9 MONTH);
set M10=DATE_ADD(`month`  , INTERVAL 10 MONTH);
set M11= DATE_ADD(`month`  , INTERVAL 11 MONTH);
set M12=DATE_ADD(`month`  , INTERVAL 12 MONTH);


SELECT 'New Confirmed' as '',
@CM1:=count(if(bkg.StartDate between `month` and  M1,bkg.status,NULL)) as 'M1',
@CM2:=count(if(bkg.StartDate between  M1 and  M2,bkg.status,NULL)) as 'M2',
@CM3:=count(if(bkg.StartDate between  M2 and  M3,bkg.status,NULL)) as 'M3',
@CM4:=count(if(bkg.StartDate between  M3 and  M4,bkg.status,NULL)) as 'M4',
@CM5:=count(if(bkg.StartDate between  M4 and  M5,bkg.status,NULL)) as 'M5',
@CM6:=count(if(bkg.StartDate between  M5 and  M6,bkg.status,NULL)) as 'M6',
@CM7:=count(if(bkg.StartDate between  M6 and  M7,bkg.status,NULL)) as 'M7',
@CM8:=count(if(bkg.StartDate between  M7 and  M8,bkg.status,NULL)) as 'M8',
@CM9:=count(if(bkg.StartDate between  M8 and  M9,bkg.status,NULL)) as 'M9',
@CM10:=count(if(bkg.StartDate between  M9 and  M10,bkg.status,NULL)) as 'M10',
@CM11:=count(if(bkg.StartDate between  M10 and  M11,bkg.status,NULL)) as 'M11',
@CM12:=count(if(bkg.StartDate between  M11 and  M12,bkg.status,NULL)) as 'M12'
from EVENT bkg where bkg.status=1 
group by bkg.status

union all

SELECT 'Tentative to Confirmed' as '',
@TCM1:=count(if(bsc.Date between `month` and  M1,bsc.NewStatus,NULL)) as 'M1',
@TCM2:=count(if(bsc.Date between  M1 and  M2,bsc.NewStatus,NULL)) as 'M2',
@TCM3:=count(if(bsc.Date between  M2 and  M3,bsc.NewStatus,NULL)) as 'M3',
@TCM4:=count(if(bsc.Date between  M3 and  M4,bsc.NewStatus,NULL)) as 'M4',
@TCM5:=count(if(bsc.Date between  M4 and  M5,bsc.NewStatus,NULL)) as 'M5',
@TCM6:=count(if(bsc.Date between  M5 and  M6,bsc.NewStatus,NULL)) as 'M6',
@TCM7:=count(if(bsc.Date between  M6 and  M7,bsc.NewStatus,NULL)) as 'M7',
@TCM8:=count(if(bsc.Date between  M7 and  M8,bsc.NewStatus,NULL)) as 'M8',
@TCM9:=count(if(bsc.Date between  M8 and  M9,bsc.NewStatus,NULL)) as 'M9',
@TCM10:=count(if(bsc.Date between  M9 and  M10,bsc.NewStatus,NULL)) as 'M10',
@TCM11:=count(if(bsc.Date between  M10 and  M11,bsc.NewStatus,NULL)) as 'M11',
@TCM12:=count(if(bsc.Date between  M11 and  M12,bsc.NewStatus,NULL)) as 'M12'
from EVENT bkg left join tbl_bkgStatusChange bsc on bkg.StartDate= bsc.Date where bkg.status=1 and bsc.OldStatus=2 and bsc.NewStatus=1
group by bkg.status

union all


SELECT 'Inquiry to Confirmed' as '',
@ICM1:=count(if(bsc.Date between `month` and  M1,bsc.NewStatus,NULL)) as 'M1',
@ICM2:=count(if(bsc.Date between  M1 and  M2,bsc.NewStatus,NULL)) as 'M2',
@ICM3:=count(if(bsc.Date between  M2 and  M3,bsc.NewStatus,NULL)) as 'M3',
@ICM4:=count(if(bsc.Date between  M3 and  M4,bsc.NewStatus,NULL)) as 'M4',
@ICM5:=count(if(bsc.Date between  M4 and  M5,bsc.NewStatus,NULL)) as 'M5',
@ICM6:=count(if(bsc.Date between  M5 and  M6,bsc.NewStatus,NULL)) as 'M6',
@ICM7:=count(if(bsc.Date between  M6 and  M7,bsc.NewStatus,NULL)) as 'M7',
@ICM8:=count(if(bsc.Date between  M7 and  M8,bsc.NewStatus,NULL)) as 'M8',
@ICM9:=count(if(bsc.Date between  M8 and  M9,bsc.NewStatus,NULL)) as 'M9',
@ICM10:=count(if(bsc.Date between  M9 and  M10,bsc.NewStatus,NULL)) as 'M10',
@ICM11:=count(if(bsc.Date between  M10 and  M11,bsc.NewStatus,NULL)) as 'M11',
@ICM12:=count(if(bsc.Date between  M11 and  M12,bsc.NewStatus,NULL)) as 'M12'
from EVENT bkg left join tbl_bkgStatusChange bsc on bkg.StartDate= bsc.Date where bkg.status=1 and bsc.OldStatus=3 and bsc.NewStatus=1
group by bkg.status

union all


SELECT 'Total' as '',
IFNULL(CAST(@CM1 AS UNSIGNED),0) + IFNULL(CAST(@TCM1 AS UNSIGNED),0)+IFNULL(CAST(@ICM1 AS UNSIGNED),0) as 'M1',
IFNULL(CAST(@CM2 AS UNSIGNED),0) + IFNULL(CAST(@TCM2 AS UNSIGNED),0)+IFNULL(CAST(@ICM2 AS UNSIGNED),0) as 'M2',
IFNULL(CAST(@CM3 AS UNSIGNED),0) + IFNULL(CAST(@TCM3 AS UNSIGNED),0)+IFNULL(CAST(@ICM3 AS UNSIGNED),0) as 'M3',
IFNULL(CAST(@CM4 AS UNSIGNED),0) + IFNULL(CAST(@TCM4 AS UNSIGNED),0)+IFNULL(CAST(@ICM4 AS UNSIGNED),0) as 'M4',
IFNULL(CAST(@CM5 AS UNSIGNED),0) + IFNULL(CAST(@TCM5 AS UNSIGNED),0)+IFNULL(CAST(@ICM5 AS UNSIGNED),0) as 'M5',
IFNULL(CAST(@CM6 AS UNSIGNED),0) + IFNULL(CAST(@TCM6 AS UNSIGNED),0)+IFNULL(CAST(@ICM6 AS UNSIGNED),0) as 'M6',
IFNULL(CAST(@CM7 AS UNSIGNED),0) + IFNULL(CAST(@TCM7 AS UNSIGNED),0)+IFNULL(CAST(@ICM7 AS UNSIGNED),0) as 'M7',
IFNULL(CAST(@CM8 AS UNSIGNED),0) + IFNULL(CAST(@TCM8 AS UNSIGNED),0)+IFNULL(CAST(@ICM8 AS UNSIGNED),0) as 'M8',
IFNULL(CAST(@CM9 AS UNSIGNED),0) + IFNULL(CAST(@TCM9 AS UNSIGNED),0)+IFNULL(CAST(@ICM9 AS UNSIGNED),0) as 'M9',
IFNULL(CAST(@CM10 AS UNSIGNED),0) + IFNULL(CAST(@TCM10 AS UNSIGNED),0)+IFNULL(CAST(@ICM10 AS UNSIGNED),0) as 'M10',
IFNULL(CAST(@CM11 AS UNSIGNED),0) + IFNULL(CAST(@TCM11 AS UNSIGNED),0)+IFNULL(CAST(@ICM11 AS UNSIGNED),0) as 'M11',
IFNULL(CAST(@CM12 AS UNSIGNED),0) + IFNULL(CAST(@TCM12 AS UNSIGNED),0)+IFNULL(CAST(@ICM12 AS UNSIGNED),0) as 'M12'


from EVENT bkg left join tbl_bkgStatusChange bsc on bsc.Date= bsc.Date where  bkg.status=1 and bsc.OldStatus=2 and bsc.NewStatus=1 
group by bsc.NewStatus;

END$$

DELIMITER ;$$


////////


DROP PROCEDURE IF EXISTS `esp_test`.`sp_SalesYearlySpreadSheet`$$

CREATE PROCEDURE `esp_test`.`sp_SalesYearlySpreadSheet` (`month` VARCHAR(64),`sectionArray` VARCHAR(64),`ServiceHeadersArray` VARCHAR(64))
BEGIN

declare M1 ,M2 ,M3,M4,M5,M6 ,M7 ,M8 ,M9,M10,M11,M12 varchar(10);
set M1= DATE_ADD(`month`  , INTERVAL 1 MONTH);
set M2=DATE_ADD(`month`  , INTERVAL 2 MONTH);
set M3= DATE_ADD(`month`  , INTERVAL 3 MONTH);
set M4=DATE_ADD(`month`  , INTERVAL 4 MONTH);
set M5= DATE_ADD(`month`  , INTERVAL 5 MONTH);
set M6=DATE_ADD(`month`  , INTERVAL 6 MONTH);
set M7= DATE_ADD(`month`  , INTERVAL 7 MONTH);
set M8=DATE_ADD(`month`  , INTERVAL 8 MONTH);
set M9= DATE_ADD(`month`  , INTERVAL 9 MONTH);
set M10=DATE_ADD(`month`  , INTERVAL 10 MONTH);
set M11= DATE_ADD(`month`  , INTERVAL 11 MONTH);
set M12=DATE_ADD(`month`  , INTERVAL 12 MONTH);


SELECT 'New Confirmed' as '',
count(if(bkg.StartDate between `month` and  M1,bkg.status,NULL)) as 'M1',
count(if(bkg.StartDate between  M1 and  M2,bkg.status,NULL)) as 'M2',
count(if(bkg.StartDate between  M2 and  M3,bkg.status,NULL)) as 'M3',
count(if(bkg.StartDate between  M3 and  M4,bkg.status,NULL)) as 'M4',
count(if(bkg.StartDate between  M4 and  M5,bkg.status,NULL)) as 'M5',
count(if(bkg.StartDate between  M5 and  M6,bkg.status,NULL)) as 'M6',
count(if(bkg.StartDate between  M6 and  M7,bkg.status,NULL)) as 'M7',
count(if(bkg.StartDate between  M7 and  M8,bkg.status,NULL)) as 'M8',
count(if(bkg.StartDate between  M8 and  M9,bkg.status,NULL)) as 'M9',
count(if(bkg.StartDate between  M9 and  M10,bkg.status,NULL)) as 'M10',
count(if(bkg.StartDate between  M10 and  M11,bkg.status,NULL)) as 'M11',
count(if(bkg.StartDate between  M11 and  M12,bkg.status,NULL)) as 'M12'
from EVENT bkg where bkg.status=1 
group by bkg.status

union all


SELECT 'Tentative to Confirmed' as '',
count(if(bkg.StartDate between `month` and  M1,bkg.status,NULL)) as 'M1',
count(if(bsc.Date between  M1 and  M2,bkg.status,NULL)) as 'M2',
count(if(bsc.Date between  M2 and  M3,bsc.NewStatus,NULL)) as 'M3',
count(if(bsc.Date between  M3 and  M4,bsc.NewStatus,NULL)) as 'M4',
count(if(bsc.Date between  M4 and  M5,bsc.NewStatus,NULL)) as 'M5',
count(if(bsc.Date between  M5 and  M6,bsc.NewStatus,NULL)) as 'M6',
count(if(bsc.Date between  M6 and  M7,bsc.NewStatus,NULL)) as 'M7',
count(if(bsc.Date between  M7 and  M8,bsc.NewStatus,NULL)) as 'M8',
count(if(bsc.Date between  M8 and  M9,bsc.NewStatus,NULL)) as 'M9',
count(if(bsc.Date between  M9 and  M10,bsc.NewStatus,NULL)) as 'M10',
count(if(bsc.Date between  M10 and  M11,bsc.NewStatus,NULL)) as 'M11',
count(if(bsc.Date between  M11 and  M12,bsc.NewStatus,NULL)) as 'M12'
from EVENT bkg left join tbl_bkgStatusChange bsc on bkg.StartDate= bsc.Date where  bkg.status=1 and bsc.OldStatus=2 and bsc.NewStatus=1 
group by bsc.NewStatus

union all


SELECT 'Inquiry to Confirmed' as '',
count(if(bkg.StartDate between `month` and  M1,bkg.status,NULL)) as 'M1',
count(if(bsc.Date between  M1 and  M2,bkg.status,NULL)) as 'M2',
count(if(bsc.Date between  M2 and  M3,bsc.NewStatus,NULL)) as 'M3',
count(if(bsc.Date between  M3 and  M4,bsc.NewStatus,NULL)) as 'M4',
count(if(bsc.Date between  M4 and  M5,bsc.NewStatus,NULL)) as 'M5',
count(if(bsc.Date between  M5 and  M6,bsc.NewStatus,NULL)) as 'M6',
count(if(bsc.Date between  M6 and  M7,bsc.NewStatus,NULL)) as 'M7',
count(if(bsc.Date between  M7 and  M8,bsc.NewStatus,NULL)) as 'M8',
count(if(bsc.Date between  M8 and  M9,bsc.NewStatus,NULL)) as 'M9',
count(if(bsc.Date between  M9 and  M10,bsc.NewStatus,NULL)) as 'M10',
count(if(bsc.Date between  M10 and  M11,bsc.NewStatus,NULL)) as 'M11',
count(if(bsc.Date between  M11 and  M12,bsc.NewStatus,NULL)) as 'M12'
from EVENT bkg left join tbl_bkgStatusChange bsc on bkg.StartDate= bsc.Date where  bkg.status=1 and bsc.OldStatus=2 and bsc.NewStatus=1 
group by bsc.NewStatus;



END$$

DELIMITER ;$$

///////////////////////




Date  (09/01/2018 - 09/30/2018)

Date Period		sep | Oct | Nov 

Status 1         10 | 20  |30
Status 2         40 | 50  |60


0

0

0

0

0

0

0

0

34

0

0

0

34






if(objTracesReports.RS_Tr_DisplayOnTrace)
{

var newjson = new Array();
var x =objTracesReports.RS_Tr_DisplayOnTrace;
x = x.replace(/^"\?/, '');
x=x.replace(/"+$/,'');
var y = x.replace(/"']/g, "").split(',')  
$.each(jsonData, function(key, value){
newjson.push(objTracesReports.copyObjectProps(value,y))
});
jsonData=newjson;

}
if(objTracesReports.RS_Tr_SortedBy)
{

// multisortby = _.map(_.groupBy(jsonData, 'date'), (value, key) => ({key]: _.groupBy(value, 'foo')}));
// jsonData=multisortby;

}


/////////////



Go to Booking Module 

select test booking - "ford 17 sep rpt Bkg Actualised"

select Booking - Billing 




AllServieRequirement_New(jsonData)
{

var row='';
var table2='';
var StartDate='';

var groupedData = _.groupBy(jsonData, function(d){
StartDate=d.StartDate;
return d.StartDate});

var row2='';

var result = _.chain(jsonData)
.groupBy('StartDate')
.mapObject( StartDate => _.groupBy(StartDate, 'FunctionID'))
.value();

row2+='<tr><td style="font-size:14px;border:1px solid black;margin-top:3em;"><center>'+CategoryName+'</center></td></tr>';

$.each(result, function(key31, value32) {

row2+='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">FunctionName :'+value.FunctionName+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">FunctionId :'+value.functionId+'</p></td><td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">Time :'+value.StartTime+'-'+value.StartTime+'</p></td></tr>';


row2+='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">postAs :'+value.postAs+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">Gaurenteed People :'+value.Gaurenteed+'</p></td><td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">Function Room :'+value.functionRoom+'</p></td></tr>';


row2+='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;">Service Time</td><td style="font-size:14px;border:1px solid black;border-right-color:white;">Item</td><td style="font-size:14px;border:1px solid black;border-right-color:white;">Qty</td><td style="font-size:14px;border:1px solid black;">Charge</td></tr>';

$.each(value32, function(key41, value42) {

$.each(value42, function(key4, value4) {

row2+='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;">'+value4.StartTime+'-'+value4.EndTime+'</td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-Top-color:white;border-right-color:white;">'+value4.Item+'</td><td style="font-size:14px;border:1px solid black;border-right-color:white;border-Top-color:white;border-right-color:white;">'+value4.Quantity+'</td><td style="font-size:14px;border:1px solid black;border-Top-color:white;">'+value4.price+'</td></tr>';

})

})

})


row2+='</table>';

$(".pdfouter .tblitems tbody").append(row);
$(table2).insertAfter(".pdfouter .tblitems");
$(".pdfouter #tbl_FD2").append(row2);

$('#html_hdn').val($(".pdfouter").html())
$('#frm_Reports').submit();

}<



row='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white"><p>bookingName : '+value.bookingName+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">postAs :'+value.postAs+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">BookingId :'+value.bookingId+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">Start Date :'+value.Booking_Start+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">FunctionName :'+value.FunctionName+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">Status :'+value.status+'</p></td></tr>'+

'<tr><td colspan=2 style="font-size:14px;border:1px solid black;">FunctionId :'+value.functionId+'</p></td></tr>';



table2='<table id="tbl_FD2" style="width:100%;border-collapse: collapse;margin-top:5em;" ><tr><td colspan=2 style="font-size:14px;border:1px solid black;border-bottom-color: white;">Customer Name :'+value.Customer+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">Phone :'+value.CustPhone+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">Fax :'+value.Fax+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">ContactPerson Name :'+value.ContactName+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">ContactPerson Phone :'+value.ContactPhone+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">OnSiteContact :'+value.OnSiteContact+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">StartTime :'+value.StartTime+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">EndTime :'+value.EndTime+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;border-bottom-color: white">Gaurenteed People :'+value.Gaurenteed+'</p></td></tr>'+

'<tr><td style="font-size:14px;border:1px solid black;border-right-color:white">Exp People :'+value.Expr+'</p></td>'+
'<td style="font-size:14px;border:1px solid black;">Function Room :'+value.functionRoom+'</p></td></tr></table>';



/////////


{"StartDate":"2018-09-19","CustName":"Ford Motor Company","ResDesc":"Anniversary Party","OnSiteContact":"JohnMartin","name":"Danielle Collavito","FunctExpNumPpl":"11","StartTime":"04:00","EndTime":"04:30","bookingName":"Ford 19 sep report booking","functionRoom":"Living Room"}]

///////////////////
ContactName 
ContactPhone 
ContactFax
ContactLocation
ContactEmail
FunctionName
Gaurenteed

///////



RS_FunctionList



RS_FPB_CatergingManagers
RS_FPB_MaketSegments

Function Revenue

$string="select fn.FunctID as functionId,
cst.CustName as CustomerName,
bkg.bookingName,
fName.ResDesc as FunctionName,
fr.functionRoom,
slps.name as salesperson,
fn.StartDate as FunctionDate,
fn.StartTime AS StartTime ,
fn.EndTime AS EndTime ,
fn.statusId,
IFNULL(rmblk.Rate,0) as RoomRent,
IFNULL(sum(ss.price),0) as Food_n_Beverage,
IFNULL(null,0) as CostOf_Food_n_Beverage,
IFNULL(null,0) as Bar_Services,
IFNULL(null,0) as Cost_Of_Bar_Services,
IFNULL(null,0) as Audio_Visual,
IFNULL(null,0) as Cost_Of_Audio_Visual,
IFNULL(null,0) as Room_Setup,
IFNULL(null,0) as Cost_Of_Room_Setup,
IFNULL(null,0) as Miscellaneous,
IFNULL(null,0) as Cost_Of_Miscellaneous,
IFNULL(null,0) as Labor,
IFNULL(null,0) as Cost_Of_Labor,
IFNULL(null,0) as Regatta_SetUp,
IFNULL(null,0) as Cost_Of_RegattaSetUp,
IFNULL(null,0) as FnB_Nonmember,
IFNULL(null,0) as Cost_Of_FnBNonmember,
IFNULL(null,0) as Bar_ServicesNonmember,
IFNULL(null,0) as Cost_Of_BarServices_Nonmember,
IFNULL(null,0) as Room_Setup_Nonmember,
IFNULL(null,0) as Cost_Of_RoomSetup_Nonmember,
IFNULL(null,0) as Labor_Nonmember,
IFNULL(null,0) as Cost_Of_Labor_Nonmember,
IFNULL(null,0) as Service_Revenue_Total,
IFNULL(null,0) as Service_RevenueCost,
IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0) as Subtotal,

IFNULL(null,0) as Cost,

(IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0))*0.20 as ServiceCharge,

IFNULL(null,0) as Discount,
(IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0))*0.07 as Tax,

(IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0))*1.27 as Total,


IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0) as Profit,

IFNULL(dp.Amtrecvd,0) as DepositPaid,
((IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0))*1.27)-IFNULL(sum(dp.Amtrecvd),0) as BalanceDue
from funct fn join custt cst on fn.customerId=cst.CustID 
join FUNCTNAMES fName on fn.FunctName=fName.ResID 
join contacts cnt on cnt.ContactID=fn.OnSiteContact 
join tbl_salesPerson slps on slps.id=fn.SPID
join EVENT bkg on bkg.bookingID = fn.bookingID 
join tbl_functionRoom fr on fr.id=fn.EvtID
join tblRoomEditBlock rmblk on rmblk.bookingID=fn.bookingID
left join tblServiceSummary ss on fn.FunctID = ss.FunctionID 
left join depositt dp on dp.FunctID=fn.FunctID
where fn.StartDate between ".$ParamArray'fn_StartDate']." and ".$ParamArray'fn_EndDate']."
group by fn.FunctID";

$FunctionList = $conn->query($string);
$arr=array();






///////



_.map(_.groupBy(list, 'date'), (value, key) => ({key]: _.groupBy(value, 'foo')}))
I hope you want such result:

var list = { date: "1", foo: "me", result: "meFoo" }, { date: "1", foo: "me2", result: "meYou" }, { date: "1", foo: "me3", result: "meHe" }, { date: "2", foo: "me", result: "meHim" }, { date: "2", foo: "me2", result: "meHim" }],
grouped = _.map(_.groupBy(list, 'date'), (value, key) => ({key]: _.groupBy(value, 'foo')}));

//////console.log(grouped);


///////////


var filteredparam1 = new Array();
var x =objBookingReports.RS_FN_FunctionList;

// x value is "'bookingId','bookingName'"


// x = x.replace(/^"\?/, '');
// x=x.replace(/"+$/,'');
var y = x.replace(/"']/g, "").split(',')  // var y=x];
$.each(jsonData, function(key, value){
filteredparam1.push(objBookingReports.copyObjectProps(value,y))
});
//////console.log(filteredparam1)
}


///////////



{"CustName":"Matt Harrison","name":"Steve Rucci","functionRoom":"Living Room","bookingId":"659","bookingName":"Matt Booking for Lost Business Report Sept 11","postAs":""}]


{"StartDate":"2018-09-12","CustName":"Matt Harrison","name":"Kim Kim","functionRoom":"Living Room","bookingId":"676","bookingName":"Matt Booking 12 sept for Lost Business Report","postAs":"","FunctionName":"Breakfast","status":"4","functionId":"295","Fax":"01212223335","Address1":"1000 main st.","BookingContact":"AlaricSaltzman","ContactPhone":null,"StartTime":"07:00","EndTime":"09:30","Gaurenteed":"26","Expr":"30","Descrip":"BreakFast(Food and Beverages)","Service_time":"9","StatusName":"Lost Business","Revenue":"0.00"},{"StartDate":"2018-09-13","CustName":"Matt Harrison","name":"John Meagher","functionRoom":"West Deck","bookingId":"678","bookingName":"Matt 13 Sept Booking for Lost Business report","postAs":"","FunctionName":"Anniversary Party","status":"4","functionId":"297","Fax":"01212223335","Address1":"1000 main st.","BookingContact":"AlaricSaltzman","ContactPhone":null,"StartTime":"08:00","EndTime":"20:00","Gaurenteed":"10","Expr":"10","Descrip":null,"Service_time":null,"StatusName":"Lost Business","Revenue":"47.00"},{"StartDate":"2018-09-14","CustName":"amy jordan","name":"Gary Lau","functionRoom":"NY End East bar","bookingId":"663","bookingName":"Amy's Booking","postAs":"amy","FunctionName":"Brunch","status":"2","functionId":"282","Fax":"5531135555","Address1":"1000 Main St","BookingContact":"amyJordan","ContactPhone":"","StartTime":"05:30","EndTime":"06:00","Gaurenteed":"1","Expr":"1","Descrip":null,"Service_time":null,"StatusName":"Tentative","Revenue":"0.00"},{"StartDate":"2018-09-15","CustName":"Ford Motor Company","name":"System Administrator","functionRoom":"Living Room","bookingId":"689","bookingName":"ford 15 sep booking ","postAs":"","FunctionName":"Anniversary Party","status":"2","functionId":"308","Fax":"","Address1":"2000 Fairlane Drive","BookingContact":"JohnMartin","ContactPhone":null,"StartTime":"04:00","EndTime":"04:30","Gaurenteed":"12","Expr":"11","Descrip":"AM Break(Food and beverages)","Service_time":"2","StatusName":"Tentative","Revenue":"0.00"},{"StartDate":"2018-09-16","CustName":"sam","name":"James Fedorchak","functionRoom":"Formal Terrace","bookingId":"690","bookingName":"Sam booking 16 sept Booking Pace","postAs":"","FunctionName":"Baby shower","status":"2","functionId":"309","Fax":"","Address1":"","BookingContact":"ShaktiSolanki","ContactPhone":null,"StartTime":"07:00","EndTime":"07:30","Gaurenteed":"12","Expr":"12","Descrip":"Beverage Service(Food and Beverages)","Service_time":"7","StatusName":"Confirmed","Revenue":"0.00"},{"StartDate":"2018-09-17","CustName":"Ford Motor Company","name":"System Administrator","functionRoom":"Living Room","bookingId":"691","bookingName":"ford 17 sep rpt Booking Actualised","postAs":"","FunctionName":"Anniversary Party","status":"1","functionId":"310","Fax":"","Address1":"2000 Fairlane Drive","BookingContact":"JohnMartin","ContactPhone":null,"StartTime":"04:00","EndTime":"04:30","Gaurenteed":"1","Expr":"1","Descrip":"AM Break(Food and beverages)","Service_time":"2","StatusName":"Confirmed","Revenue":"170.00"},{"StartDate":"2018-09-18","CustName":"amy jordan","name":"System Administrator","functionRoom":"NY End East bar","bookingId":"619","bookingName":"Amy's Booking 16","postAs":"","FunctionName":"Bat Mitzvah","status":"2","functionId":"209","Fax":"5531135555","Address1":"1000 Main St","BookingContact":"amyJordan","ContactPhone":"","StartTime":"08:30","EndTime":"09:00","Gaurenteed":"1","Expr":"1","Descrip":null,"Service_time":null,"StatusName":"Tentative","Revenue":"0.00"},{"StartDate":"2018-09-19","CustName":"Ford Motor Company","name":"Danielle Collavito","functionRoom":"Living Room","bookingId":"653","bookingName":"Ford 19 sep report booking","postAs":"","FunctionName":"Anniversary Party","status":"1","functionId":"268","Fax":"","Address1":"2000 Fairlane Drive","BookingContact":"JohnMartin","ContactPhone":null,"StartTime":"04:00","EndTime":"04:30","Gaurenteed":"12","Expr":"11","Descrip":"AM Break(Food and beverages)","Service_time":"2","StatusName":"Confirmed","Revenue":"575.00"}]
//var y='bookingId','bookingName'];
// //////console.log(x);

//'bookingId','bookingName'


/////


copyObjectProps(source, keys) {
let newObject = {}

$.each(jsonData, function(key, value){

})

keys.each(function(key){
//////console.log(key)
newObjectkey] = sourcekey]
})

keys.forEach(function(key) {
newObjectkey] = sourcekey]
})
return newObject
}
///////////	

1076044617


//////console.log(objBookingReports.RS_FN_FunctionList);

let newObject = {}
objBookingReports.RS_FN_FunctionList.forEach(function(key) {
newObjectkey] = valuekey]
})

//////console.log('4')  
////////console.log(newObject)  

//filteredObject.push(objBookingReports.copyObjectProps(value,filteredparam))

//////////


objBookingReports.RS_FN_FunctionList=new Array();

$("#RS_FN_DisplayOnFunctionList > option").each(function() {

objBookingReports.RS_FN_FunctionList.push(this.text)
});



////////

function copyObjectProps(source, keys) {
let newObject = {}
keys.forEach(function(key) {
newObjectkey] = sourcekey]
})
return newObject
}
And use it like:

let filteredObject = copyObjectProps(yourObject, 'D', 'E'])

/////////////
var newObj = { "CustName" : Object"CustName"]}

//////console.log(filteredObject);


var mynewobject ={};
for (var key in jsonData)
{
if (key="CustName") // apply your condition here
mynewobjectkey] = jsonDatakey]
}

//////console.log(mynewobject)

///////

BookingContact
Booking Contact Phone
Booking ID
Booking Name
Booking Post as Name
Customer Alias
Customer Name
Customer Phone
Day of Function
End Time
Expected
FunctID
Function Date 
Function Name 
Function Notes 
Function Post as Name 
Function Room 
Gaurenteed
KnockDown End Time
Manager
On Site Contact
Room Rental
Salesperson
Service Description
Service Time
Set
Setup Start Time
Setup Type
Start Time
Start Time -End Time
Status
Total Revenue




CALL sp_BookingCostAnalysis("2018-9-19","2018-9-19",null,null,null,null)

CALL sp_FunctionDistributionByDate("2018-9-17","2018-9-17",null,null,null,null,'1','1',null,null,null)


and if ( ServiceDescriptionArray is null,1,(if(sd.servdescid is null ,1,find_in_set(sd.servdescid,ServiceDescriptionArray)))) 


Food_n_Bevearges, CostOf_Food_n_Beverage, Bar_Services, CostOf_Bar_Services,as Audio_Visual, CostOf_Audio_Visual, Room_Setup, CostOf_Room_Setup,Miscellaneous,CostOf_Miscellaneous, Labor, CostOf_Labor, Reggetta_SetUp,CostOf_Reggetta_SetUp,Food_Beverages_NonMember,CostOf_Food_Beverages_NonMember,Bar_Sevices_NonMember,CostOf_Bar_Sevices_NonMember, Room_Setup_NonMember, CostOf_Room_Setup_NonMember, Labor_NonMember,CostOf_Labor_NonMember,


///////////////////


Food_n_Bevearges,CostOf_Food_n_Beverage Bar_Services,CostOf_Bar_Services,Audio_Visual, CostOf_Audio_Visual, Room_Setup, CostOf_Room_Setup, Miscellaneous,CostOf_Miscellaneous, Labor,CostOf_Labor, Reggetta_SetUp, CostOf_Reggetta_SetUp, Food_Beverages_NonMember, CostOf_Food_Beverages_NonMember, Bar_Sevices_NonMember, CostOf_Bar_Sevices_NonMember, Room_Setup_NonMember,CostOf_Room_Setup_NonMember, Labor_NonMember,CostOf_Labor_NonMember,

////////


tblCategory
Food & Bevearges
Bar Services
Audio Visual
Room Setup
Miscellaneous
Labor
Reggetta SetUp
Food & Beverages NonMember
Bar Sevices NonMember
Room Setup NonMember
Labor NonMember


DELIMITER $$;

DROP PROCEDURE IF EXISTS `esp_test`.`sp_BookingCostAnalysis`$$

CREATE DEFINER=`neerajkeerp`@`%` PROCEDURE `sp_BookingCostAnalysis`(`startdate` VARCHAR(64),`enddate` VARCHAR(64),`GRCArray` VARCHAR(64),`ServiceHeadersArray` VARCHAR(64),`salesPersonArray` VARCHAR(64),statusArray VARCHAR(64))
BEGIN
select fn.FunctID as functionId,cst.CustName as CustomerName,bkg.bookingName,fName.ResDesc as FunctionName,fr.functionRoom,slps.name as salesperson,fn.StartDate as FunctionDate,fn.StartTime AS StartTime ,fn.EndTime AS EndTime ,
st.status as Status,
@RoomRent:=IFNULL(rmblk.Rate,0) as RoomRent,
if(find_in_set(1,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as Food_n_Bevearges,
if(find_in_set(1,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as CostOf_Food_n_Beverage,
if(find_in_set(2,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as Bar_Services,
if(find_in_set(2,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as CostOf_Bar_Services,
if(find_in_set('3',`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as Audio_Visual,
if(find_in_set(3,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as CostOf_Audio_Visual,
if(find_in_set(4,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as Room_Setup,
if(find_in_set(4,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as CostOf_Room_Setup,
if(find_in_set(5,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as Miscellaneous,
if(find_in_set(5,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as CostOf_Miscellaneous,
if(find_in_set(6,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as Labor,
if(find_in_set(6,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as CostOf_Labor,
if(find_in_set(7,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as Reggetta_SetUp,
if(find_in_set(7,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as CostOf_Reggetta_SetUp,
if(find_in_set(8,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as Food_Beverages_NonMember,
if(find_in_set(8,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as CostOf_Food_Beverages_NonMember,
if(find_in_set(9,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as Bar_Sevices_NonMember,
if(find_in_set(9,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as CostOf_Bar_Sevices_NonMember,
if(find_in_set(10,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as Room_Setup_NonMember,
if(find_in_set(10,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as CostOf_Room_Setup_NonMember,
if(find_in_set(11,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as Labor_NonMember,
if(find_in_set(11,`ServiceHeadersArray`),IFNULL(sum(ss.price),0),'') as CostOf_Labor_NonMember,
@Service_Revenue_Total:=IFNULL(null,0) as Service_Revenue_Total,
@Service_RevenueCost:=IFNULL(null,0) as Service_RevenueCost,
@Subtotal:=IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0) as Subtotal,
IFNULL(null,0) as Cost,
(IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0))*0.20 as ServiceCharge,
IFNULL(null,0) as Discount,
(IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0))*0.07 as Tax,
(IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0))*1.27 as Total
from funct fn 
left join custt cst on fn.customerId=cst.CustID 
left  join FUNCTNAMES fName on fn.FunctName=fName.ResID 
left join contacts cnt on cnt.ContactID=fn.OnSiteContact 
left join tbl_salesPerson slps on slps.id=fn.SPID
left join EVENT bkg on bkg.bookingID = fn.bookingID 
left join tbl_functionRoom fr on fr.id=fn.EvtID
left join tblRoomEditBlock rmblk on rmblk.bookingID=fn.bookingID
left join tblServiceSummary ss on fn.FunctID = ss.FunctionID 
left join depositt dp on dp.FunctID=fn.FunctID
left join tbl_status st on st.id=fn.statusid
left join tbl_GRC_Sections grc on bkg.grcId =grc.id 
left join servdesc sd on ss.Service_time =sd.servdescid 
where fn.StartDate between `startdate` and `enddate` 
and if ( GRCArray is null,1,(if(grc.id is null ,1,find_in_set(grc.id,GRCArray)))) 
and if ( salesPersonArray is null,1,(if(slps.id is null ,1,find_in_set(slps.id,salesPersonArray)))) 
and if ( statusArray is null,1,(if(grc.id is null ,1,find_in_set(st.id,statusArray)))) 
and if ( ServiceHeadersArray is null,1,(if(sd.servdescid is null ,1,find_in_set(sd.servdescid,ServiceHeadersArray)))) 
group by fn.FunctID;
END$$

DELIMITER ;$$


//////////////////


delete from tblFNB_SubMenu2 where ID>435

CALL sp_FunctionDistributionByDate("2018-9-1","2018-9-30",null,null,null,null,null,null,null,null)

CALL sp_FunctionDistributionByDate("NaN-NaN-NaN","NaN-NaN-NaN",,,,,'1,','1,',null,'1,')


CALL sp_FunctionList("2018-9-19","2018-9-19",'2','1')


select * from EVENT 
update EVENT set sectionId=1
select * from servdesc sd
select * from funct
select * from  tblServiceSummary
select * from sections
select * from SYS_REPORTSDESC where CategoryID=1 order by SubCategoryName 
select * from SYS_REPORTSDESC order by SubCategoryName where CaterogyID=1
select * from tbl_ReportSetupCategories order by SetupCategoryName

////////////////////

if(reportType=="Booking Revenue in Excel")
{
var GRCArray = new Array();
var ServiceHeadersArray = new Array();
var salesPersonArray = new Array();
var sectionsArray = new Array();
var statusArray = new Array();
var MarketSegmentArray = new Array();
var ServiceHeadersArray = new Array();

$.each($("inputname='GRCSections]']:checked"), function() {

GRCArray.push($(this).attr('id'))
});

$.each($("inputname='ServiceHeaders]']:checked"), function() {

ServiceHeadersArray.push($(this).attr('id'))
});

$.each($("inputname='sections]']:checked"), function() {
sectionsArray.push($(this).attr('id'))
});

$.each($("inputname='Category]']:checked"), function() {
ServiceHeadersArray.push($(this).attr('id'))
});

$.each($("inputname='salesPerson]']:checked"), function() {
salesPersonArray.push($(this).attr('id'))
});

$.each($("inputname='status]']:checked"), function() {
statusArray.push($(this).attr('id'))
});


objBookingReports.SetupParams={
GRCArray:GRCArray,
ServiceHeadersArray:ServiceHeadersArray,
sectionsArray:sectionsArray,
MarketSegmentArray:MarketSegmentArray,
ServiceHeadersArray:ServiceHeadersArray,
salesPersonArray:salesPersonArray,
statusArray:statusArray
};

}


if(reportType=="Function Distribution By Date")
{

var GRCArray = new Array();
var statusArray = new Array();
var ServiceHeadersArray = new Array();
var ServiceDescriptionArray= new Array();

$.each($("inputname='GRCSections]']:checked"), function() {

GRCArray.push($(this).attr('id'))
});

$.each($("inputname='status]']:checked"), function() {
statusArray.push($(this).attr('id'))
});

$.each($("inputname='ServiceHeaders]']:checked"), function() {
ServiceHeadersArray.push($(this).attr('id'))
});

$.each($("inputname='ServiceDescription]']:checked"), function() {

ServiceDescriptionArray.push($(this).attr('id'))
});

objBookingReports.SetupParams=
{
GRCArray:GRCArray,
statusArray:statusArray,
ServiceHeadersArray:ServiceHeadersArray,
ServiceDescriptionArray:ServiceDescriptionArray
};

}

if(reportType=="Function List")
{

var ServiceHeadersArray = new Array();
var sectionsArray = new Array();

$.each($("inputname='ServiceHeaders]']:checked"), function() {

ServiceHeadersArray.push($(this).attr('id'))
});

$.each($("inputname='sections]']:checked"), function() {
sectionsArray.push($(this).attr('id'))
});

objBookingReports.SetupParams=
{
ServiceHeadersArray:ServiceHeadersArray,
sectionsArray:sectionsArray
};

}


///////

select * from EVENT
select segment from EVENT where bookingId=653

CALL sp_BookingRevenue("2018-9-1","2018-9-30",'1,2','1,2','1,2','1,2','1,2')

CALL sp_BookingRevenue("2018-9-1","2018-9-30",null,'3,',null,null,null)

select * from mrkt


DROP TABLE IF EXISTS `tblmarketSegment`;


SELECT    table_name,   column_name,   data_type,ordinal_position FROM  INFORMATION_SCHEMA.COLUMNS WHERE table_schema = 'esp_test'  AND column_name like  '%service%' ;

select * from tblFoodNBeverages


select * from servdesc

CALL sp_FunctionDistributionByDate("2018-9-1","2018-9-30",null,null,null,null,null,null,null,null)


CALL sp_FunctionDistribution(".$ParamArray'fn_StartDate'].",".$ParamArray'fn_EndDate'].",".$ParamArray'StartTime'].",".$ParamArray'EndTime'].",".$ParamArray'cst_CustID'].",".$ParamArray'slps_id'].",".$GRCArray.",".$ServiceHeadersArray.",".$salesPersonArray.",".$statusArray.",".$MarketSegmentArray.")

////////


if($ParamArray'reportType']=="Function Distribution By Date")
{	
$where_Param=' WHERE ';

foreach($ParamArray as $key => $val) 
{
$key=	str_replace("_", '.', $key);

if($key=='reportType')
continue;
if($val)
{
if($key=='fn.StartDate')
{

$where_Param=$where_Param."".$key." BETWEEN ".$val." AND ".$ParamArray"fn_EndDate"]." AND " ;
}
else if($key=='fn.EndDate')
{
continue;
}
else
{

$where_Param=$where_Param."".$key."='".$val."' AND " ;
}

}

}

$where_Param= rtrim($where_Param," AND ");

$query="select bkg.bookingName,
bkg.postAs,
bkg.bookingId,
fn.StartDate as Booking_Start,
fName.ResDesc as FunctionName,
bkg.status,
fn.FunctID as functionId,
cst.CustName as Customer,
cst.CustName as CustPhone,
cst.CustFax as Fax,
cst.CustAdd1 AS Address1 ,
cnt.FirstName+' '+ cnt.LastName  AS ContactName ,
cnt.Phone as ContactPhone,
cnt.FirstName+' '+ cnt.LastName  AS OnSiteContact ,
fn.StartTime AS StartTime , 
fn.EndTime AS EndTime ,
fn.FunctGtdNumPpl as Gaurenteed,
fn.FunctExpNumPpl as Expr,
fr.functionRoom
from funct fn join custt cst on fn.customerId=cst.CustID 
join FUNCTNAMES fName on fn.FunctName=fName.ResID 
join contacts cnt on cnt.ContactID=fn.OnSiteContact 
join tbl_salesPerson slps on slps.id=fn.SPID
join EVENT bkg on bkg.bookingID = fn.bookingID 
join tbl_functionRoom fr on fr.id=fn.EvtID
join tblRoomEditBlock rmblk on rmblk.bookingID=fn.bookingID
join tbl_status st on st.id=fn.statusid".$where_Param;

//echo $query;

$GetServiceItem = $conn->query($query);

$arr=array();

while ($row_ServiceItem= $GetServiceItem->fetchAll(PDO::FETCH_OBJ))
{

$arr] = $row_ServiceItem;

}
echo json_encode($arr);

exit();






$SetupParams=$ParamArray'SetupParams'];

$GRCArray;
$salesPersonArray;
$ServiceHeadersArray;
$sectionsArray;
$statusArray;
$MarketSegmentArray;

if(!$SetupParams"GRCArray"])
{
$GRCArray='null';
}

else
{
foreach ($SetupParams"GRCArray"] as $key => $value) 
{
$GRCArray.="'".$value.','."'";
}

}

if(!$SetupParams"ServiceHeadersArray"])
{
$ServiceHeadersArray='null';
}
else
{
foreach ($SetupParams"ServiceHeadersArray"] as $key => $value)
{
$ServiceHeadersArray.="'".$value.','."'";
}
}	

if(!$SetupParams"sectionsArray"])
{
$sectionsArray='null';
}
else
{
foreach ($SetupParams"sectionsArray"] as $key => $value)
{
$sectionsArray.="'".$value.','."'";
}
}

if(!$SetupParams"salesPersonArray"])
{
$salesPersonArray='null';
}
else
{
foreach ($SetupParams"salesPersonArray"] as $key => $value)
{
$salesPersonArray.="'".$value.','."'";
}
}


if(!$SetupParams"MarketSegmentArray"])
{
$MarketSegmentArray='null';
}
else
{
foreach ($SetupParams"MarketSegmentArray"] as $key => $value)
{
$MarketSegmentArray.="'".$value.','."'";
}
}



if(!$SetupParams"statusArray"])
{
$statusArray='null';
}
else
{
foreach ($SetupParams"statusArray"] as $key => $value)
{
$statusArray.="'".$value.','."'";
}

}

$GRCArray= rtrim($GRCArray," , ");
$ServiceHeadersArray= rtrim($ServiceHeadersArray," , ");
$salesPersonArray= rtrim($salesPersonArray," , ");
$statusArray= rtrim($statusArray," , ");
$MarketSegmentArray= rtrim($MarketSegmentArray," , ");


// fn_StartDate:yyyymmdd($('#dateFrom').val()),
// fn_EndDate: yyyymmdd($('#dateTo').val()),
// StartTime: $('#RptFD_StartTime').val(),
// EndTime: $('#RptFD_EndTime').val(),
// cst_CustID:$('#RptFD_CustID').val(),
// slps_id:$('#RptFD_Salesperson').val()



$string="CALL sp_FunctionDistributionByDate(".$ParamArray'fn_StartDate'].",".$ParamArray'fn_EndDate'].",".$ParamArray'StartTime'].",".$ParamArray'EndTime'].",".$ParamArray'cst_CustID'].",".$ParamArray'slps_id'].",".$GRCArray.",".$ServiceHeadersArray.",".$salesPersonArray.",".$statusArray.",".$MarketSegmentArray.")";

$FunctionList = $conn->query($string);



}


boking id -653




CALL sp_BookingCostAnalysis("2018-9-1","2018-9-30",null,'1,2','1,2',null)


select * from EVENT
update EVENT set grcId

select * from tbl_salesPerson

select * from tbl_GRC_Sections


CALL sp_BookingCostAnalysis("2018-9-1","2018-9-30",'1,2','1,2','1,2','1,2')
//////////////




select fn.FunctID as functionId,cst.CustName as CustomerName,bkg.bookingName,fName.ResDesc as FunctionName,fr.functionRoom,slps.name as salesperson,fn.StartDate as FunctionDate,fn.StartTime AS StartTime ,fn.EndTime AS EndTime ,
fn.statusId,
@RoomRent:=IFNULL(rmblk.Rate,0) as RoomRent,
@Food_n_Beverage:=IFNULL(sum(ss.price),0) as Food_n_Beverage,
@CostOf_Food_n_Beverage:=IFNULL(null,0) as CostOf_Food_n_Beverage,
@Bar_Services:=IFNULL(null,0) as Bar_Services,
@Cost_Of_Bar_Services:=IFNULL(null,0) as Cost_Of_Bar_Services,
@Audio_Visual:=IFNULL(null,0) as Audio_Visual,
@Cost_Of_Audio_Visual:=IFNULL(null,0) as Cost_Of_Audio_Visual,
@Room_Setup:=IFNULL(null,0) as Room_Setup,
@Cost_Of_Room_Setup:=IFNULL(null,0) as Cost_Of_Room_Setup,
@Miscellaneous:=IFNULL(null,0) as Miscellaneous,
@Cost_Of_Miscellaneous:=IFNULL(null,0) as Cost_Of_Miscellaneous,
@Labor:=IFNULL(null,0) as Labor,
@Cost_Of_Labor:=IFNULL(null,0) as Cost_Of_Labor,
@Regatta_SetUp:=IFNULL(null,0) as Regatta_SetUp,
@Cost_Of_RegattaSetUp:=IFNULL(null,0) as Cost_Of_RegattaSetUp,
@FnB_Nonmember:=IFNULL(null,0) as FnB_Nonmember,
@Cost_Of_FnBNonmember:=IFNULL(null,0) as Cost_Of_FnBNonmember,
@Bar_ServicesNonmember:=IFNULL(null,0) as Bar_ServicesNonmember,
@Cost_Of_BarServices_Nonmember:=IFNULL(null,0) as Cost_Of_BarServices_Nonmember,
@Room_Setup_Nonmember:=IFNULL(null,0) as Room_Setup_Nonmember,
@Cost_Of_RoomSetup_Nonmember:=IFNULL(null,0) as Cost_Of_RoomSetup_Nonmember,
@Labor_Nonmember:=IFNULL(null,0) as Labor_Nonmember,
@Cost_Of_Labor_Nonmember:=IFNULL(null,0) as Cost_Of_Labor_Nonmember,
@Service_Revenue_Total:=IFNULL(null,0) as Service_Revenue_Total,
@Service_RevenueCost:=IFNULL(null,0) as Service_RevenueCost,
@Subtotal:=IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0) as Subtotal,

IFNULL(null,0) as Cost,

(IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0))*0.20 as ServiceCharge,

IFNULL(null,0) as Discount,
(IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0))*0.07 as Tax,

(IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0))*1.27 as Total
from funct fn 
join custt cst on fn.customerId=cst.CustID 
join FUNCTNAMES fName on fn.FunctName=fName.ResID 
join contacts cnt on cnt.ContactID=fn.OnSiteContact 
join tbl_salesPerson slps on slps.id=fn.SPID
join EVENT bkg on bkg.bookingID = fn.bookingID 
join tbl_functionRoom fr on fr.id=fn.EvtID
join tblRoomEditBlock rmblk on rmblk.bookingID=fn.bookingID
left join tblServiceSummary ss on fn.FunctID = ss.FunctionID 
left join depositt dp on dp.FunctID=fn.FunctID
where fn.StartDate between `startdate` and `enddate`
group by fn.FunctID;



//////////////////////////


select * from tbl_ReportSetupCategories

select * from SYS_REPORTSDESC


select IFNULL(rmblk.Rate,0) as RoomRent,
IFNULL(sum(ss.price),0) as Food_n_Beverage,
IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.price),0) as Subtotal
from funct fn join custt cst on fn.customerId=cst.CustID 
join FUNCTNAMES fName on fn.FunctName=fName.ResID 
join contacts cnt on cnt.ContactID=fn.OnSiteContact 
join tbl_salesPerson slps on slps.id=fn.SPID
join EVENT bkg on bkg.bookingID = fn.bookingID 
join tbl_functionRoom fr on fr.id=fn.EvtID
join tblRoomEditBlock rmblk on rmblk.bookingID=fn.bookingID
left join tblServiceSummary ss on fn.FunctID = ss.FunctionID 
left join depositt dp on dp.FunctID=fn.FunctID
where fn.StartDate between '2018-09-1' and '2018-09-19'
group by fn.FunctID;



////////////


declare Food_n_Beverage, CostOf_Food_n_Beverage, Bar_Services, Cost_Of_Bar_Services, Audio_Visual, Cost_Of_Audio_Visual, Room_Setup, Cost_Of_Room_Setup, Miscellaneous, Cost_Of_Miscellaneous, Labor, Cost_Of_Labor, Regatta_SetUp, Cost_Of_RegattaSetUp, FnB_Nonmember, Cost_Of_FnBNonmember, Bar_ServicesNonmember, Cost_Of_BarServices_Nonmember, Room_Setup_Nonmember, Cost_Of_RoomSetup_Nonmember, Labor_Nonmember, Cost_Of_Labor_Nonmember,RoomRent, Service_Revenue_Total, Service_RevenueCost ,Subtotal decimal(19,2);

set Food_n_Beverage=0.00;
set Subtotal=0.00;
set RoomRent=0.00;

set CostOf_Food_n_Beverage= Bar_Services= Cost_Of_Bar_Services= Audio_Visual= Cost_Of_Audio_Visual= Room_Setup= Cost_Of_Room_Setup= Miscellaneous= Cost_Of_Miscellaneous= Labor= Cost_Of_Labor= Regatta_SetUp= Cost_Of_RegattaSetUp= FnB_Nonmember= Cost_Of_FnBNonmember= Bar_ServicesNonmember= Cost_Of_BarServices_Nonmember= Room_Setup_Nonmember= Cost_Of_RoomSetup_Nonmember= Labor_Nonmember= Cost_Of_Labor_Nonmember= RoomRent=Service_Revenue_Total= Service_RevenueCost =Subtotal=0.00;



///////////


$('#EdFunc_Post').prop('disabled',true);

/////

saveCallReport()
{

//////console.log('1');

if(!$('#Act_CR_Categories').val())
{
alert('please select Category')
return;
}

if(!$('#Act_CR_RptDetail').html())
{
alert('please select Description')
return;
}

var ParamArray={
CategoryID:$('#Act_CR_Categories').val(),
Customer:($('#Act_CR_Customer').val() == null) ? 0 : $('#Act_CR_Customer').val(),
Contact:($('#Act_CR_Contact').val() == null) ? 0 : $('#Act_CR_Contact').val(),
Booking:($('#Act_CR_Booking').val() == null) ? 0 : $('#Act_CR_Booking').val(),
Function:($('#Act_CR_Function').val() == null) ? 0 : $('#Act_CR_Function').val(),
Detail:$('#Act_CR_RptDetail').val()
};

//////console.log(ParamArray);

$.ajax({
method : "POST",
url : "../Activity/assets/ajax/ajax.php",
data : {saveCallReport:'1',ParamArray : ParamArray},
success : function(data){
//////console.log(data)

}
});

}



/////////


CallReportModal

$("#billingModal").on('shown.bs.modal', function(){

//////


union all 

select '' as CustName,'' as CustID,'' as Address,'' as Country,'' as MarketSegment,'' as Phone,'Booking Profile' as Phone,''as Fax,'' as Salesperson,'' as ContactName,'' as Title,''AS Address ,'' as Country 

union all 

select '' as CustName,'' as CustID,'' as Address,'' as Country,tbl_booking.startDate,tbl_booking.endDate,tbl_booking.bookingName ,st.status as Status ,sum(fn.revenue)  as Revenue, bkg1.bookingId  ,'','',''
from EVENT 
join funct fn  on bkg1.bookingID = fn.bookingID 
join tbl_status st on st.id=tbl_booking.status 
join custt cst on EVENT.customerId=cst.CustID 
where cst.CustID=`CustID`
group by EVENT.startDate order by EVENT.startDate 
where cst.CustID=`CustID`;







//////////


$.each(jsonData, function(key41, value42) {


row2+='<tr><td colspan=4 style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white"><Center>Customer Information </Center></td></tr>'+

'<tr><td colspan=2 style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white">Customer Name : '+value42.CustName+'</td><td colspan=2 style="font-size:14px;border:1px solid black;border-bottom-color: white">Customer ID :'+value42.CustID+'</td></tr>'+

'<tr><td colspan=2 style="font-size:14px;border:1px solid black;border-right-color:white;">Address : '+value42.Address+'</td><td colspan=2 style="font-size:14px;border:1px solid black;">Country :'+value42.Country+'</td></tr>'+

'<tr><td colspan=2 style="font-size:14px;border:1px solid black;border-right-color:white;">MarketSegment : '+value42.MarketSegment+'</td><td colspan=2 style="font-size:14px;border:1px solid black;">Phone :'+value42.Phone+'</td></tr>'+

'<tr><td colspan=2 style="font-size:14px;border:1px solid black;border-right-color:white;">Room : '+value42.Fax+'</td><td colspan=2 style="font-size:14px;border:1px solid black;margin-bottom:2em;">Expr :'+value42.Salesperson+'</td></tr>';

var groupedData = _.groupBy(jsonData, function(d){return d.Salesperson});

$.each(groupedData, function(key, value) {

$.each(value, function(key2, value2) {

row2+='<tr><td colspan=4 style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;margin-Top:2em;"><Center>Contact Information </Center></td></tr>'+

'<tr><td colspan=2 style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white">Function : '+value2.ContactName+'</td><td colspan=2 style="font-size:14px;border:1px solid black;border-bottom-color: white">Time :'+value2.Title+'</td></tr>'+

'<tr><td colspan=2 style="font-size:14px;border:1px solid black;border-right-color:white;">Room : '+value2.Address+'</td><td colspan=2 style="font-size:14px;border:1px solid black;margin-bottom:4em;">Expr :'+value2.Country+'</td></tr>';


});
});


})


/////////////




// {"CustName":"Ford Motor Company","CustID":"89","Address":"2200 Fairlane Drive","Country":"1","MarketSegment":"4","Phone":"3135551233","Fax":"","Salesperson":"System Administrator","ContactName":"JohnMartin","Title":"CEO"},{"CustName":"Ford Motor Company","CustID":"89","Address":"2200 Fairlane Drive","Country":"1","MarketSegment":"4","Phone":"3135551233","Fax":"","Salesperson":"System Administrator","ContactName":"SallyFields","Title":"Acccountant"}]

/////////////


$.each(groupedData, function(key, value41) {

$.each(value41, function(key, value42) {
//////console.log(value42.Fax);

'<tr><td colspan=4 style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;margin-Top:2em;"><Center>Contact Information </Center></td></tr>'+

'<tr><td colspan=2 style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white">Function : '+value42.ContactName+'</td><td colspan=2 style="font-size:14px;border:1px solid black;border-bottom-color: white">Time :'+value42.Title+'</td></tr>'+

'<tr><td colspan=2 style="font-size:14px;border:1px solid black;border-right-color:white;">Room : '+value42.Address+'</td><td colspan=2 style="font-size:14px;border:1px solid black;margin-bottom:4em;">Expr :'+value42.Country+'</td></tr>';

});
});



/////////


CALL sp_AllServieRequirement('2018-09-11','2018-09-11')



select fn.StartDate ,ss.FunctionID,@StartTime_EndTime :=CONCAT_WS(' - ', ES_ServiceStart,ES_ServiceEnd) AS StartTime_EndTime  ,fName.ResDesc,fr.functionRoom,fn.FunctGtdNumPpl as Gaurenteed,fn.FunctExpNumPpl as Expr, ss.Quantity as Act_Qty,ss.Price as Charge,ss.Item from tblServiceSummary ss 
join funct fn on fn.FunctID = ss.FunctionID
join tbl_Category c on ss.CategoryID=c.CategoryID
join FUNCTNAMES fName on fn.FunctName=fName.ResID 
join tbl_functionRoom fr on fr.id=fn.EvtID
where fn.StartDate between '2018-09-1' and '2018-09-19'
group by fn.StartDate ,ss.FunctionID , @StartTime_EndTime;
Customer Information



select * from Contacts
Booking Contact
Booking Contact Phone
Booking Name
Booking Start

select  cnt.FirstName+' '+ cnt.LastName  AS BookingContact ,cnt.Phone as ContactPhone ,bkg.bookingName,
bkg.startDate as bookingStart from  EVENT bkg join contacts cnt on cnt.ContactID=bkg.bookingContact


CALL sp_CustomerCallReport('2018-09-11','2018-09-19')

select * from  SYS_REPORTSDESC
CustomerRecap



//////////



// var Datejson = _.groupBy(jsonData, function(d){return d.StartDate});
// var Timejson = _.groupBy(value2, function(d){return d.StartTime_EndTime	});

////////console.log(Datejson);

var result = _.chain(jsonData)
.groupBy('StartDate')
.mapObject( StartDate => _.groupBy(StartDate, 'FunctionID'))
.value();


var result2 = _.chain(jsonData)
.groupBy('FunctionID')
.mapObject( FunctionID => _.groupBy(FunctionID,'StartDate' ))
.value();


// var result2 = _.chain(jsonData)
// .groupBy('StartTime_EndTime')
// .mapObject( StartTime_EndTime => _.groupBy(StartTime_EndTime, 'StartDate'))
// .value();

//////console.log(result);
//////console.log(result2);

////////////////////

{"Act_Qty":0,"FunctionID":268,"ResDesc":"Anniversary Party","StartTime_EndTime":"04:00:00 AM - 04:30:00 AM"},
{"Act_Qty":0,"FunctionID":268,"ResDesc":"Anniversary Party","StartTime_EndTime":"04:00:00 AM - 04:30:00 AM"},
{"Act_Qty":0,"FunctionID":268,"ResDesc":"Anniversary Party","StartTime_EndTime":"04:00:00 AM - 04:30:00 AM"},
{"Act_Qty":0,"FunctionID":268,"ResDesc":"Anniversary Party","StartTime_EndTime":"04:00:00 AM - 04:30:00 AM"},
{"Act_Qty":0,"FunctionID":268,"ResDesc":"Anniversary Party","StartTime_EndTime":"04:00:00 AM - 04:30:00 AM"}]


0:
Act_Qty:"0"
Charge:"0"
Expr:"11"
FunctionID:"268"
Gaurenteed:"12"
Item:""
ResDesc:"Anniversary Party"
StartTime_EndTime:"04:00:00 AM - 04:30:00 AM"
functionRoom:"Living Room"



0:
Act_Qty:"0"
Charge:"0"
Expr:"11"
FunctionID:"268"
Gaurenteed:"12"
Item:""
ResDesc:"Anniversary Party"
StartTime_EndTime:"04:00:00 AM - 04:30:00 AM"
functionRoom:"Living Room"


////////

$.each(Timejson, function(key3, value3){

//////console.log(key3)
//////console.log(value3.ResDesc)

$.each(value3, function(key31, value32) {


//////console.log(value32.ResDesc)
$.each(value3, function(key4, value4) {


//////console.log(key4)
//////console.log(value4.ResDesc)

table1+='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white">Function : '+value4.ResDesc+'</td><td style="font-size:14px;border:1px solid black;border-bottom-color: white">Time :'+value4.StartTime_EndTime+'</td></tr>';

// table1+='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;">Room :'+value4.functionRoom+'</td><td style="font-size:14px;border:1px solid black;">Exp/Gtd :'+value4.Expr+'</td></tr>';

// '<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white">Function : '+value2.StartTime_EndTime+'</td><td style="font-size:14px;border:1px solid black;border-bottom-color: white">Time :'+value2.StartTime_EndTime+'</td></tr>'+

// '<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;">Room :'+value2.functionRoom+'</td><td style="font-size:14px;border:1px solid black;">Exp/Gtd :'+value2.Expr+'</td></tr>';


})

})	
})




///////////


CALL sp_AllServieRequirement('2018-09-1','2018-09-17')


//grouping json by StartTime_EndTime

var groupedData = _.groupBy(FunctData, function(d){return d.StartTime_EndTime});


table2='<table><tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">StartTIme-EndTime</td><td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">ActQty.</td><td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">Charge</td><td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">Item</td></tr>';


$.each(groupedData, function(key2, value2) {

table2 += '<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">'+key2+'</td><td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white"><td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white"></td></tr>'
;
$.each(value2, function(key1, value1) {

//////console.log(key1+ value1);

table2 += '<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;"></td><td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">'+value1.Act_Qty
+'<td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">'+value1.Charge
+'</td></tr>';

});
});
table2 +='</table>';

$(table2).insertAfter(".pdfouter .tblitems");


////////////



$.each(jsonData, function(key, value){
row+='<tr><td style="font-size:14px;border:1px solid black;border-right-color:white;border-bottom-color: white;">'+value.StartTime+'-'+value.EndTime+'</td><td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">'+value.Quantity+'<td style="font-size:14px;border:1px solid black;border-Top-color:white;border-bottom-color:white">'+value.Price+'</td></tr>';

})

/////////////


CALL sp_SixPeriodForecast("2018-09-17")

CALL sp_WeeklyForecast("2018-09-17")

select * from funct




select 
sd.Descrip ,
IFNULL(null,0) as LedgerNumber,
0 as GroupTotals, 
sum(ss.Total) as LocalTotals,
sum(ss.Total) as GrandTotals
from tblServiceSummary ss 
join servdesc sd on ss.Service_time=sd.servdescid 
join funct fn on fn.FunctID = ss.FunctionID
join tbl_Category c on ss.CategoryID=c.CategoryID 
where fn.StartDate between "2018-9-1" and "2018-9-1" AND fn.Actualized>0
group by fn.FunctID


UNION ALL
select 'Room Rental','','0.00',sum(fn.revenue) ,sum(fn.revenue) from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-9-1" and "2018-9-1" AND fn.Actualized>0
group by fn.FunctID

UNION ALL
select 'Service Charge','','0.00',((sum(fn.revenue)+sum(ss.Total))*0.02),((sum(fn.revenue)+sum(ss.Total))*0.02) from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-9-1" and "2018-9-1" AND fn.Actualized>0
group by fn.FunctID


UNION ALL
select 'State Tax','','0.00',round(((sum(fn.revenue)+sum(ss.Total))*0.07),2),round(((sum(fn.revenue)+sum(ss.Total))*0.07),2) from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-9-1" and "2018-9-1" AND fn.Actualized>0
group by fn.FunctID


UNION ALL
select 'Tax1','','0.00',round(((sum(fn.revenue)+sum(ss.Total))*0.07),2),round(((sum(fn.revenue)+sum(ss.Total))*0.07),2) from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-9-1" and "2018-9-1" AND fn.Actualized>0
group by fn.FunctID


UNION ALL
select 'Tax2','','0.00','0.00','0.00' from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-9-1" and "2018-9-1" AND fn.Actualized>0
group by fn.FunctID


UNION ALL
select 'Tax3','','0.00','0.00','0.00' from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-9-1" and "2018-9-1" AND fn.Actualized>0
group by fn.FunctID


UNION ALL
select 'Tax4','','0.00','0.00','0.00' from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-9-1" and "2018-9-1" AND fn.Actualized>0
group by fn.FunctID

UNION ALL
select 'Tax5','','0.00','0.00','0.00' from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-9-1" and "2018-9-1" AND fn.Actualized>0
group by fn.FunctID



UNION ALL
select  'Total' ,'',
0 as GroupTotals, 
ROUND(sum(ss.Total) + sum(fn.revenue)+((sum(fn.revenue)+sum(ss.Total))*0.02)+((sum(fn.revenue)+sum(ss.Total))*0.07),2) as LocalTotals,
ROUND(sum(ss.Total) + sum(fn.revenue)+((sum(fn.revenue)+sum(ss.Total))*0.02)+((sum(fn.revenue)+sum(ss.Total))*0.07),2) as GrandTotals
from tblServiceSummary ss 
join servdesc sd on ss.Service_time=sd.servdescid  
join funct fn on fn.FunctID = ss.FunctionID 
where fn.StartDate between "2018-9-1" and "2018-9-1" AND fn.Actualized>0
group by fn.FunctID

///////////


sp_6month

DELIMITER $$;

DROP PROCEDURE IF EXISTS `esp_test`.`sp_SixPeriodForecast`$$

CREATE PROCEDURE `esp_test`.`sp_SixPeriodForecast` (`month` VARCHAR(64))
BEGIN

declare M1 ,M2 ,M3,M4,M5,M6 varchar(10);

set M1= DATE_ADD(`month`  , INTERVAL 1 MONTH);
set M2=DATE_ADD(`month`  , INTERVAL 2 MONTH);
set M3= DATE_ADD(`month`  , INTERVAL 3 MONTH);
set M4=DATE_ADD(`month`  , INTERVAL 4 MONTH);
set M5= DATE_ADD(`month`  , INTERVAL 5 MONTH);
set M6=DATE_ADD(`month`  , INTERVAL 6 MONTH);

SELECT sd.Descrip, 
sum( if( fn.StartDate between `month` and M1, ss.Total, 0 ) ) as `M1`,
sum( if( fn.StartDate between M1 and M2 , ss.Total, 0 ) ) as `M2`,
sum( if( fn.StartDate between M2 and M3, ss.Total, 0 ) ) as `M3`,
sum( if( fn.StartDate between M3 and M4 , ss.Total, 0 ) ) as `M4`,
sum( if( fn.StartDate between M4 and M5, ss.Total, 0 ) ) as `M5`,
sum( if( fn.StartDate between M5 and M6 , ss.Total, 0 ) ) as `M6`
from tblServiceSummary ss 
join servdesc sd on ss.Service_time=sd.servdescid 
join funct fn on fn.FunctID = ss.FunctionID
join tbl_Category c on ss.CategoryID=c.CategoryID 
where fn.StartDate between `month` and DATE_ADD(`month` , INTERVAL 6 MONTH) AND fn.Actualized>0
group by fn.FunctID;


END$$

DELIMITER ;$$


///////

DELIMITER $$;

DROP PROCEDURE IF EXISTS `esp_test`.`sp_SixPeriodForecast`$$

CREATE PROCEDURE `esp_test`.`sp_SixPeriodForecast` (`month` VARCHAR(64))
BEGIN

declare M1 varchar(10);
set M1=MONTHNAME(`month`+ INTERVAL 1 MONTH);
SELECT sd.Descrip, 
sum( if( fn.StartDate between `month` and DATE_ADD(`month`  , INTERVAL 1 MONTH), ss.Total, 0 ) ) as `M1`,
sum( if( fn.StartDate between `month` and DATE_ADD(`month`  , INTERVAL 2 MONTH), ss.Total, 0 ) ) as `M2`,
sum( if( fn.StartDate between `month` and DATE_ADD(`month`  , INTERVAL 3 MONTH), ss.Total, 0 ) ) as `M3`,
sum( if( fn.StartDate between `month` and DATE_ADD(`month`  , INTERVAL 4 MONTH), ss.Total, 0 ) ) as `M4`,
sum( if( fn.StartDate between `month` and DATE_ADD(`month`  , INTERVAL 5 MONTH), ss.Total, 0 ) ) as `M5`,
sum( if( fn.StartDate between `month` and DATE_ADD(`month`  , INTERVAL 6 MONTH), ss.Total, 0 ) ) as `M6`
from tblServiceSummary ss 
join servdesc sd on ss.Service_time=sd.servdescid 
join funct fn on fn.FunctID = ss.FunctionID
join tbl_Category c on ss.CategoryID=c.CategoryID 
group by fn.FunctID;


END$$

DELIMITER ;$$

////////////


DELIMITER $$;

DROP FUNCTION IF EXISTS `esp_test`.`SixPeriodForecast`$$

CREATE FUNCTION `esp_test`.`SixPeriodForecast` () RETURNS varchar(10)
BEGIN

*-
se*lect * from tblServiceSummary 
--
SELECT MONTH("2018-09-17" + INTERVAL 1 MONTH)

SELECT DATE_ADD("2018-09-17" , INTERVAL 6 MONTH)

SELECT @m1:=month("2018-09-17") as m1, case when (@m2:=@m1+6)>12 then (@m2-12) ELSE @m2 END as m2


select 
sd.Descrip ,
sum(ss.Total) as LocalTotals
from tblServiceSummary ss 
join servdesc sd on ss.Service_time=sd.servdescid 
join funct fn on fn.FunctID = ss.FunctionID
join tbl_Category c on ss.CategoryID=c.CategoryID 
where fn.StartDate between "2018-09-17" and DATE_ADD("2018-09-17" , INTERVAL 6 MONTH) AND fn.Actualized>0
group by fn.FunctID


SELECT fr.functionRoom,if( fn.StartTime between '04:00' AND '05:00' , '100%', 0 )  AS '04:00-05:00',
if( fn.StartDate between "2018-09-17" and DATE_ADD("2018-09-17" , INTERVAL 6 MONTH) ) then ss.Total AS '05:00-06:00'
from funct fn join custt cst on fn.customerId=cst.CustID 
join FUNCTNAMES fName on fn.FunctName=fName.ResID 
join tbl_functionRoom fr on fr.id=fn.EvtID 




SELECT 
sd.Descrip, 
sum( if( fn.StartDate between "2018-09-17" and DATE_ADD("2018-09-17" , INTERVAL 6 MONTH), ss.Total, 0 ) ) AS 'a'
from tblServiceSummary ss 
join servdesc sd on ss.Service_time=sd.servdescid 
join funct fn on fn.FunctID = ss.FunctionID
join tbl_Category c on ss.CategoryID=c.CategoryID 
group by fn.FunctID

///////////////////////

declare M1 int;

set M1=MONTH("2018-09-17" + INTERVAL 1 MONTH);

return (M1);
END$$

DELIMITER ;$$


select 
sd.Descrip ,
sum(ss.Total) as LocalTotals
from tblServiceSummary ss 
join servdesc sd on ss.Service_time=sd.servdescid 
join funct fn on fn.FunctID = ss.FunctionID
join tbl_Category c on ss.CategoryID=c.CategoryID 
where fn.StartDate between "2018-09-17" and DATE_ADD("2018-09-17" , INTERVAL 6 MONTH) AND fn.Actualized>0
group by fn.FunctID


SELECT fr.functionRoom,if( fn.StartTime between '04:00' AND '05:00' , '100%', 0 )  AS '04:00-05:00',
if( fn.StartDate between "2018-09-17" and DATE_ADD("2018-09-17" , INTERVAL 6 MONTH) ) then ss.Total AS '05:00-06:00'
from funct fn join custt cst on fn.customerId=cst.CustID 
join FUNCTNAMES fName on fn.FunctName=fName.ResID 
join tbl_functionRoom fr on fr.id=fn.EvtID 
//////////

///////////


DROP FUNCTION IF EXISTS x;

CREATE FUNCTION x (y VARCHAR(255)) RETURNS INT 
RETURN '1';

/////////


CREATE FUNCTION x()   RETURNS CHAR(250)
DECLARE dist CHAR(250);
return dist;	


drop function hello

CREATE FUNCTION hello() RETURNS CHAR(50) DETERMINISTIC
declare a CHAR(50);
SET a='a';
RETURN a;


CREATE FUNCTION func01(value1 INT , monto DECIMAL (10,2))
RETURNS DECIMAL(10,2)
DETERMINISTIC
BEGIN
DECLARE var_name DECIMAL(10,2);
SET var_name = 0;
RETURN var_name;
END



DELIMITER // 
CREATE FUNCTION hello_world() RETURNS TEXT
BEGIN
DECLARE bae INT;
RETURN 'Hello World';
END
//
DELIMITER;




CREATE function hello_world() returns text
BEGIN
declare bae int;
return "hello world";
END




//select * from tblServiceSummary ss




SELECT fn.FunctID
,cst.CustName 
,sum(ss.Total) 
FROM tblServiceSummary ss
JOIN servdesc sd ON ss.Service_time = sd.servdescid
JOIN funct fn ON fn.FunctID = ss.FunctionID
join custt cst on fn.customerId=cst.CustID
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
GROUP BY cst.CustName
UNION ALL
SELECT 'Grand Total'
,'' 
,sum(ss.Total) 
FROM tblServiceSummary ss
JOIN servdesc sd ON ss.Service_time = sd.servdescid
JOIN funct fn ON fn.FunctID = ss.FunctionID
join custt cst on fn.customerId=cst.CustID
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.bookingID




///////////

select * from  tbl_Category

select distinct c.CategoryName, FunctionID, Service_Time ,ES_ServiceStart ,ES_ServiceEnd  ,ES_ServiceStart as M_StartTime ,ES_ServiceEnd as M_EndTime from tblServiceSummary ss join tbl_Category c on ss.CategoryID=c.CategoryID 



////////


select * from funct fn where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.FunctID


select * from custt


/////////////





select 
sd.Descrip ,
IFNULL(null,0) as LedgerNumber,
0 as GroupTotals, 
sum(ss.Total) as LocalTotals,
sum(ss.Total) as GrandTotals
from tblServiceSummary ss 
join servdesc sd on ss.Service_time=sd.servdescid 
join funct fn on fn.FunctID = ss.FunctionID
join tbl_Category c on ss.CategoryID=c.CategoryID 
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.FunctID


UNION ALL
select 'Room Rental','','0.00',sum(fn.revenue) ,sum(fn.revenue) from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.FunctID

UNION ALL
select 'Service Charge','','0.00',((sum(fn.revenue)+sum(ss.Total))*0.02),((sum(fn.revenue)+sum(ss.Total))*0.02) from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.FunctID


UNION ALL
select 'State Tax','','0.00',round(((sum(fn.revenue)+sum(ss.Total))*0.07),2),round(((sum(fn.revenue)+sum(ss.Total))*0.07),2) from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.FunctID


UNION ALL
select 'Tax1','','0.00',round(((sum(fn.revenue)+sum(ss.Total))*0.07),2),round(((sum(fn.revenue)+sum(ss.Total))*0.07),2) from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.FunctID


UNION ALL
select 'Tax2','','0.00','0.00','0.00' from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.FunctID


UNION ALL
select 'Tax3','','0.00','0.00','0.00' from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.FunctID


UNION ALL
select 'Tax4','','0.00','0.00','0.00' from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.FunctID

UNION ALL
select 'Tax5','','0.00','0.00','0.00' from  funct fn 
join  tblServiceSummary ss on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.FunctID



UNION ALL
select  'Total' ,'',
0 as GroupTotals, 
ROUND(sum(ss.Total) + sum(fn.revenue)+((sum(fn.revenue)+sum(ss.Total))*0.02)+((sum(fn.revenue)+sum(ss.Total))*0.07),2) as LocalTotals,
ROUND(sum(ss.Total) + sum(fn.revenue)+((sum(fn.revenue)+sum(ss.Total))*0.02)+((sum(fn.revenue)+sum(ss.Total))*0.07),2) as GrandTotals
from tblServiceSummary ss 
join servdesc sd on ss.Service_time=sd.servdescid  
join funct fn on fn.FunctID = ss.FunctionID 
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.FunctID

////////


select * from tblServiceSummary 

SELECT MONTH("2018-09-17" + INTERVAL 1 MONTH)

SELECT DATE_ADD("2018-09-17" , INTERVAL 6 MONTH)

SELECT @m1:=month("2018-09-17") as m1, case when (@m2:=@m1+6)>12 then (@m2-12) ELSE @m2 END as m2


select 
sd.Descrip ,
sum(ss.Total) as LocalTotals
from tblServiceSummary ss 
join servdesc sd on ss.Service_time=sd.servdescid 
join funct fn on fn.FunctID = ss.FunctionID
join tbl_Category c on ss.CategoryID=c.CategoryID 
where fn.StartDate between "2018-09-17" and DATE_ADD("2018-09-17" , INTERVAL 6 MONTH) AND fn.Actualized>0
group by fn.FunctID



SELECT fr.functionRoom,if( fn.StartTime between '04:00' AND '05:00' , '100%', 0 )  AS '04:00-05:00',
if( fn.StartTime between '05:00' AND '06:00' , '100%', 0 )  AS '05:00-06:00',
if( fn.StartTime between '06:00' AND '07:00' , '100%', 0 )  AS '06:00-07:00',
if( fn.StartTime between '07:00' AND '08:00' , '100%', 0 )  AS '07:00-08:00'
from funct fn join custt cst on fn.customerId=cst.CustID 
join FUNCTNAMES fName on fn.FunctName=fName.ResID 
join tbl_functionRoom fr on fr.id=fn.EvtID 



SELECT fr.functionRoom,if( fn.StartTime between '04:00' AND '05:00' , '100%', 0 )  AS '04:00-05:00',
if( fn.StartTime between '05:00' AND '06:00' , '100%', 0 )  AS '05:00-06:00',
if( fn.StartTime between '06:00' AND '07:00' , '100%', 0 )  AS '06:00-07:00',
if( fn.StartTime between '07:00' AND '08:00' , '100%', 0 )  AS '07:00-08:00'
from funct fn join custt cst on fn.customerId=cst.CustID 
join FUNCTNAMES fName on fn.FunctName=fName.ResID 
join tbl_functionRoom fr on fr.id=fn.EvtID 
where fn.StartDate between "2018-9-17" and "2018-9-17" AND fn.StartTime between '04:00' AND '08:00' GROUP BY fr.functionRoom

////////////////////////

select 
@desc :=sum(ss.Total) as LocalTotals,
round(@desc*3) as GrandTotals
from tblServiceSummary ss 
join servdesc sd on ss.Service_time=sd.servdescid 
join funct fn on fn.FunctID = ss.FunctionID
join tbl_Category c on ss.CategoryID=c.CategoryID 
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.FunctID

select distinct CONCAT_WS('', ES_ServiceStart,ES_ServiceEnd) AS StartTime_EndTime  ,c.CategoryName, FunctionID, Service_Time ,ES_ServiceStart ,ES_ServiceEnd  from tblServiceSummary ss join tbl_Category c on ss.CategoryID=c.CategoryID 

select bkg.bookingName,bkg.postAs,bkg.bookingId,fn.StartDate as Booking_Start,fName.ResDesc as FunctionName,bkg.status,fn.FunctID as functionId,
cst.CustName as Customer,cst.CustName as CustPhone,cst.CustFax as Fax,cst.CustAdd1 AS Address1 , cnt.FirstName+' '+ cnt.LastName  AS ContactName ,cnt.Phone as ContactPhone, cnt.FirstName+' '+ cnt.LastName  AS OnSiteContact ,fn.StartTime AS StartTime , fn.EndTime AS EndTime ,fn.FunctGtdNumPpl as Gaurenteed,fn.FunctExpNumPpl as Expr,fr.functionRoom

select ss.FunctionID,fName.ResDesc,@StartTime_EndTime :=CONCAT_WS(' - ', ES_ServiceStart,ES_ServiceEnd) AS StartTime_EndTime  ,fr.functionRoom,fn.FunctGtdNumPpl as Gaurenteed,fn.FunctExpNumPpl as Expr, ss.Quantity as Act_Qty,ss.Price as Charge,ss.Item from tblServiceSummary ss 
join funct fn on fn.FunctID = ss.FunctionID
join tbl_Category c on ss.CategoryID=c.CategoryID
join FUNCTNAMES fName on fn.FunctName=fName.ResID 
join tbl_functionRoom fr on fr.id=fn.EvtID
group by ss.FunctionID , @StartTime_EndTime

select * from funct


join contacts cnt on cnt.ContactID=fn.OnSiteContact 
join tbl_salesPerson slps on slps.id=fn.SPID
join EVENT bkg on bkg.bookingID = fn.bookingID 

join tblRoomEditBlock rmblk on rmblk.bookingID=fn.bookingID


select 
sd.Descrip ,
IFNULL(null,0) as LedgerNumber,
0 as GroupTotals, 
sum(ss.Total) as LocalTotals,
sum(ss.Total) as GrandTotals
from tblServiceSummary ss join servdesc sd on ss.Service_time=sd.servdescid join funct fn
on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.bookingID
UNION ALL
select  'Total' ,'',
0 as GroupTotals, 
sum(ss.Total) as LocalTotals,
sum(ss.Total) as GrandTotals
from tblServiceSummary ss join servdesc sd on ss.Service_time=sd.servdescid join funct fn
on fn.FunctID = ss.FunctionID
where fn.StartDate between "2018-09-17" and "2018-09-17" AND fn.Actualized>0
group by fn.bookingID

//////////////////////


SELECT fn.FunctID
,cst.CustName 
,sum(ss.Total) 
FROM tblServiceSummary ss
JOIN servdesc sd ON ss.Service_time = sd.servdescid
JOIN funct fn ON fn.FunctID = ss.FunctionID
join custt cst on fn.customerId=cst.CustID
where fn.StartDate between ".$ParamArray'fn_StartDate']." and ".$ParamArray'fn_EndDate']." AND fn.Actualized>0
GROUP BY cst.CustName
UNION ALL
SELECT 'Grand Total'
,'' 
,sum(ss.Total) 
FROM tblServiceSummary ss
JOIN servdesc sd ON ss.Service_time = sd.servdescid
JOIN funct fn ON fn.FunctID = ss.FunctionID
join custt cst on fn.customerId=cst.CustID
where fn.StartDate between ".$ParamArray'fn_StartDate']." and ".$ParamArray'fn_EndDate']." AND fn.Actualized>0
group by fn.bookingID





///////////////

<div class="col-lg-12 col-md-12 col-sm-12 no-padding rightParentContainer" style="height:82%">
<div class="col-lg-12 col-md-12 col-sm-12 form-group">

<div class="col-lg-12 col-md-12 col-sm-12 no-padding reportSetupContainer">


<div id="RS_BokingPaceActualized" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
Display Options:

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Func_Charges" type="checkbox">Catering
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Service_Notes" type="checkbox">Sleep Rooms
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Despoit_Info" type="checkbox">Function Room Rental
</div>

</div>

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">

Caterging To Use for Catering Changes:
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_BA_ServiceSheet" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding">

</div>

</div>

</div>


<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">

Group Report By:

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input type="radio" name="RS_BP_status">status
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input type="radio" name="RS_BP_Salesperson">Salesperson
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input type="radio" name="RS_BP_ReferralSource">Referral Source
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input type="radio" name="RS_BP_CustomerMarketSegment">CustomerMarketSegment
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input type="radio" name="RS_BP_BookingMarketSegment">Booking Market Segment
</div>


</div>

</div>

</div>

</div>
<div id="RS_ProductionReport" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Category to use for Production Report
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<select id="rpt_pr_catagory" name="Rpt_PR_Catagory" class="form-control selectpicker">
</select>

</div>

</div>

</div>
<div id="RS_CompassInvoice" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-6 col-lg-6 col-md-6 col-sm-6 control-label ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
CustID Prefix<input name="Rpt_CI_CustID" class="form-control" type="text">

</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Email Address<input name="Rpt_CI_Email" class="form-control" type="text">

</div>


<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_CI_Loc" type="checkbox">Conf Center Location
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_CI_Svc" type="checkbox">Svc Location
</div>

</div>

</div>

</div>

</div>

<div id="RS_BanquetCheckSum" class="AllRptSetups" style="display: none;"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">AYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">OffSiteAYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Test3</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Test4</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">OffSiteAYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Test7</div></div></div>
<div id="RS_BookingCostAnalysis" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">


<div class="col-xs-3 col-lg-3 col-md-3 col-sm-3">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
GRC Sections:
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_BCA_GRCSections" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Default GRC Sections</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Test Section</div></div>

</div>

</div>


<div class="col-xs-3 col-lg-3 col-md-3 col-sm-3">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Service Categories:
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_BCA_ServiceCategories" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Food &amp; Bevearges</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Bar Services</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Audio Visual</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">Room Setup</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Miscellaneous</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">Labor</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Reggetta SetUp</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="9" type="checkbox">Food &amp; Beverages NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="10" type="checkbox">Bar Sevices NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="11" type="checkbox">Room Setup NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="12" type="checkbox">Labor NonMember</div></div></div>

</div>

</div>


<div class="col-xs-3 col-lg-3 col-md-3 col-sm-3">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
SalesPerson:
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_BCA_SalesPerson" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">System Administrator</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Danielle Collavito</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Gary Lau</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">James Fedorchak</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">John Meagher</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">Kim Kim</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Steve Rucci</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="8" type="checkbox">Web Administrator</div></div>

</div>

</div>

</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">


<div class="col-xs-3 col-lg-3 col-md-3 col-sm-3">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Booking Status:
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_BCA_BookingStatus" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Confirmed</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Tentative</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Inquiry</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">Lost Business</div></div>

</div>

</div>

<div class="col-xs-3 col-lg-3 col-md-3 col-sm-3 control-label">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="RS_BCA_DNActualAmounts" type="checkbox">Do Not Use Actual Amounts
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ShowDiscounts" type="checkbox">Show Discounts
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="RS_BCA_Cost" type="checkbox">Show Service Revenue Ttotal	
</div>

</div>

</div>

</div>

</div>
<div id="RS_BookingDistribution" class="AllRptSetups" style="display: block;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input id="RS_BD_EventHandler" name="RS_BD_EventHandler" type="checkbox" value="SEH">Show Event Handler
</div>
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input id="RS_BD_SleepingRoom" name="RS_BD_SleepingRoom" type="checkbox">Show Sleeping Room Block Info
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input id="RS_BD_FunctionDetail" name="RS_BD_FunctionDetail" type="checkbox">Show Function Detail Info
</div>


</div><table class="table table-border" id="RS_BD_table_ReportsSetup" name="RptSetuptable_Reports">
<tbody>



</tbody>

</table>

</div>

<div id="RS_BookingList" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input id="RS_BL_EventHandler" name="RS_BL_EventHandler" type="checkbox" value="SEH">Confirmed
</div>
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input id="RS_BL_SleepingRoom" name="RS_BL_SleepingRoom" type="checkbox">Tentative
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input id="RS_BL_FunctionDetail" name="RS_BL_FunctionDetail" type="checkbox">Enquiry
</div>


</div><table class="table table-border" id="table_ReportsSetup" name="RptSetuptable_Reports">
<tbody>



</tbody>

</table>

</div>
<div id="RS_BOD" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_BOD_Enquiries" type="checkbox">Show Enquiries
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_BOD_Todays_Date" type="checkbox">Run Using Actual Upto Todays Date
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Use pipe Chacarcter "I" to make a Cartiage Return in extra Notes:
</div>



<div id="RS_BOD_Section" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  ">

<textarea name="TA_BOD" type="text" class="form-control" rows="10" id="TA_BOD" placeholder="Booking Packages" style="resize: none;"></textarea>

</div>

</div>

</div>

</div>

</div>
		
<div id="RS_BookScheduled" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  " style="Padding:3em">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

Template Name :

<input placeholder="Booking Name" class="form-control" type="text" id="RptBS_bookingName" readonly="">

</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class="col-xs-4 col-lg-4 col-md-4 col-sm-4">
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12">
Service Category:
</div>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">
<div id="RS_BS_ServiceCategory" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Food &amp; Bevearges</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Bar Services</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Audio Visual</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">Room Setup</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Miscellaneous</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">Labor</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Reggetta SetUp</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="9" type="checkbox">Food &amp; Beverages NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="10" type="checkbox">Bar Sevices NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="11" type="checkbox">Room Setup NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="12" type="checkbox">Labor NonMember</div></div></div>
</div>
</div>

<div class="col-xs-4 col-lg-4 col-md-4 col-sm-4">
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12">
Fn Room Sections:
</div>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_BS_FunctonRoomSections" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">AYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">OffSiteAYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Test3</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Test4</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">OffSiteAYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Test7</div></div></div>

</div>

</div>

<div class="col-xs-4 col-lg-4 col-md-4 col-sm-4">
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12">
Status:
</div>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_BS_Status" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Confirmed</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Tentative</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Inquiry</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">Lost Business</div></div>

</div>

</div>

</div>

</div>
</div>										
<div id="RS_FR" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-6 col-lg-6 col-md-6 col-sm-6 control-label ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Enquiries" type="checkbox">Show Enquiries
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Todays_Date" type="checkbox">Run Using Actual Upto Todays Date
</div>

GRC Sections:
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_FR_Section" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">AYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">OffSiteAYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Test3</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Test4</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">OffSiteAYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Test7</div></div></div>

</div>


</div>

</div>

</div>

</div>
<div id="RS_FCR" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">


<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  ">

Sections:
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_FCR_Section" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">AYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">OffSiteAYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Test3</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Test4</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">OffSiteAYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Test7</div></div></div>

</div>

</div>



<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">


<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  ">
Service Headers:
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_FCR_ServiceSheet" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Food &amp; Bevearges</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Bar Services</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Audio Visual</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">Room Setup</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Miscellaneous</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">Labor</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Reggetta SetUp</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="9" type="checkbox">Food &amp; Beverages NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="10" type="checkbox">Bar Sevices NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="11" type="checkbox">Room Setup NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="12" type="checkbox">Labor NonMember</div></div></div>

</div>


</div>

</div>

</div>

</div>
<div id="RS_FutureDistribution" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">


<div class="col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label  ">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Sections:
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_FD_GRCSections" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Default GRC Sections</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Test Section</div></div>

</div>

</div>

<div class="col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label  ">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Status:
</div>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_FD_Status" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Confirmed</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Tentative</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Inquiry</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">Lost Business</div></div>

</div>

</div>

<div class="col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label  ">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Service Categories:
</div>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_FD_ServiceCategories" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Food &amp; Bevearges</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Bar Services</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Audio Visual</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">Room Setup</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Miscellaneous</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">Labor</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Reggetta SetUp</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="9" type="checkbox">Food &amp; Beverages NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="10" type="checkbox">Bar Sevices NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="11" type="checkbox">Room Setup NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="12" type="checkbox">Labor NonMember</div></div></div>

</div>
</div>

<div class="col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label  ">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Service Description:
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_FD_ServiceDescription" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding">

</div>

</div>

</div>

</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-6 col-lg-6 col-md-6 col-sm-6 control-label ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_FD_PostasNames" type="checkbox">Hide Post as Names
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_FD_ActualAmounts" type="checkbox">Use Actual Amounts
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_FD_Exp_GTD_Numbers" type="checkbox">Hide Exp/GTD Numbers
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_FD_Function_Notes" type="checkbox">Hide Function Notes
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_FD_Salespersons" type="checkbox">Hide Salesperson
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_FD_Func_Charges" type="checkbox">Hide Item Charges
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_FD_Func_Charges" type="checkbox">Show Item Totals
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_FD_Payment_Methods" type="checkbox">Show Payment Methods
</div>

</div>

<div class=" col-xs-6 col-lg-6 col-md-6 col-sm-6 control-label ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_FD_FunctionsSheet" type="checkbox">Use Service Selections for Functions Sheet
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_FD_ChangeOrderInfo" type="checkbox">Show Change Order Info
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_FD_Despoit_Info" type="checkbox">Show Despoit Information
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_FD_SignatureLines" type="checkbox">Show Signature Lines
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_FD_Signature_Lines" type="checkbox">Show Funtions with No services
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_FD_Item_Charges" type="checkbox">Show Customer Alias
</div>

</div>

</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<button id="btn_close" type="button" class="btn" style="width: 8em;">Close</button>
</div>

</div>

</div>
<div id="RS_FutureRevenue" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Sections:
</div>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_FR_GRCSections" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Default GRC Sections</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Test Section</div></div>

</div>
</div>


<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Srv Catgry:
</div>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_FR_ServiceCategories" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Food &amp; Bevearges</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Bar Services</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Audio Visual</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">Room Setup</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Miscellaneous</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">Labor</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Reggetta SetUp</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="9" type="checkbox">Food &amp; Beverages NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="10" type="checkbox">Bar Sevices NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="11" type="checkbox">Room Setup NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="12" type="checkbox">Labor NonMember</div></div></div>

</div>
</div>


<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
SalesPerson:
</div>
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_FR_SalesPerson" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">System Administrator</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Danielle Collavito</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Gary Lau</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">James Fedorchak</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">John Meagher</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">Kim Kim</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Steve Rucci</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="8" type="checkbox">Web Administrator</div></div>

</div>

</div>




</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label " style="height:2em;">

</div>
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Bkg User Defined Fields:
</div>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">


<div id="RS_FR_BookingUserDefinedFields" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding">

</div>

</div>


</div>

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Bkg Sts:
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">


<div id="RS_FR_BookingStatus" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Confirmed</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Tentative</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Inquiry</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">Lost Business</div></div>

</div>


</div>

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Market Segment:
</div>
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label" style="overflow-y: scroll;height: 8em;border: 1px solid;" <div="" id="RS_FR_MarketSegment"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">AYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">AYC-DontUse</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Private-Member</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">Private-NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Wedding-Member</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">Wedding-NonMember</div></div></div>

</div>

</div>

</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
<input name="Rpt_FR_DNActualAmounts" type="checkbox">Do Not Use Actual Amounts
</div>

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
<input name="Rpt_FR_ShowProfit" type="checkbox">Show Profit
</div>

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
<input name="Rpt_ShowDiscounts" type="checkbox">Show Discounts
</div>

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
<input name="Rpt_FR_Cost" type="checkbox">Show Cost	
</div>

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
<input name="Rpt_FR_ShowProfitMargin" type="checkbox">Show ProfitMargin
</div>

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
<input name="Rpt_ServiceRevenueTotal" type="checkbox">Show Service Revenue Total
</div>

</div>

</div>

</div>
<div id="RS_GRCLog" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class="col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label">

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  ">
GRC Sections:
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_GRC_Sections" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding ">

</div>

</div>

</div>

<div class="col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label">

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  ">
Status:
</div>
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_GRC_Status" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Confirmed</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Tentative</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Inquiry</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">Lost Business</div></div>

</div>
</div>

<div class="col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label">
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  ">
Market Segment:
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_GRC_MarketSegment" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">AYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">AYC-DontUse</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Private-Member</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">Private-NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Wedding-Member</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">Wedding-NonMember</div></div></div>

</div>
</div>

</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label  ">
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  ">
SalesPerson:
</div>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_GRC_SalesPerson" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">System Administrator</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Danielle Collavito</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Gary Lau</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">James Fedorchak</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">John Meagher</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">Kim Kim</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Steve Rucci</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="8" type="checkbox">Web Administrator</div></div>

</div>
</div>

</div>

</div>

</div>

<div id="RS_ManagmentActivity" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-6 col-lg-6 col-md-6 col-sm-6 control-label ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_MA_ActualAmounts" type="checkbox">Use Actual Amounts
</div>

</div>

</div>

</div>

</div>

<div id="RS_FRO" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<label>Select time Interval </label>
</div>
<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
Interval 1 :<input type="time" class="form-control" id="FRO_Interval1" name="FRO_Interval1">
</div>
<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
Interval 2 :<input type="time" class="form-control" id="FRO_Interval2" name="FRO_Interval2">
</div>

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
Interval 3 :<input type="time" class="form-control" id="FRO_Interval3" name="FRO_Interval3">
</div>

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
Interval 4 :<input type="time" class="form-control" id="FRO_Interval4" name="FRO_Interval4">
</div>

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">
Interval 5 :<input type="time" class="form-control" id="FRO_Interval5" name="FRO_Interval5">
</div>


</div><table class="table table-border" id="table_ReportsSetup" name="RptSetuptable_Reports">
<tbody>



</tbody>

</table>

</div>
<div id="RS_SalespersonProduct" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-6 col-lg-6 col-md-6 col-sm-6 control-label ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
GRC Sections:
</div>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_SP_GRCSections" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Default GRC Sections</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Test Section</div></div>

</div>
</div>
<div class=" col-xs-6 col-lg-6 col-md-6 col-sm-6 control-label ">


<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
SalesPerson:
</div>
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_SP_SalesPerson" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">System Administrator</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Danielle Collavito</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Gary Lau</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">James Fedorchak</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">John Meagher</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">Kim Kim</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Steve Rucci</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="8" type="checkbox">Web Administrator</div></div>

</div>


</div>

</div>

</div>

</div>

<div id="RS_CaterginPace" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">


<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
GRC Sections:
</div>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_CP_GRCSections" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Default GRC Sections</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Test Section</div></div>

</div>

</div>

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Funct Room Sectns:
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_CP_FunctonRoomSections" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">AYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">OffSiteAYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Test3</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Test4</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">OffSiteAYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Test7</div></div></div>

</div>



</div>

<div class=" col-xs-4 col-lg-4 col-md-4 col-sm-4 control-label ">


<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
Service Categories:
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_CP_ServiceCategories" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Food &amp; Bevearges</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Bar Services</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Audio Visual</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">Room Setup</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Miscellaneous</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">Labor</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Reggetta SetUp</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="9" type="checkbox">Food &amp; Beverages NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="10" type="checkbox">Bar Sevices NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="11" type="checkbox">Room Setup NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="12" type="checkbox">Labor NonMember</div></div></div>

</div>
</div>

</div>


</div>
</div>						
<div id="RS_SS" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-6 col-lg-6 col-md-6 col-sm-6 control-label ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Func_Charges" type="checkbox">Show Grid of Function Charges
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Service_Notes" type="checkbox">Show Service Notes
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Despoit_Info" type="checkbox">Show Despoit Information
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Payment_Method" type="checkbox">Show Payment Method
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Signature_Lines" type="checkbox">Show Signature Lines
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Func_Charges" type="checkbox">Hide Item Charges
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Func_Charges" type="checkbox">Use Actual Amount
</div>

<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Func_Charges" type="checkbox">Show Change Order Info
</div>


</div>

<div class=" col-xs-6 col-lg-6 col-md-6 col-sm-6 control-label ">

Service Headers:
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_SS_ServiceSheet" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Food &amp; Bevearges</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Bar Services</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Audio Visual</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="4" type="checkbox">Room Setup</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Miscellaneous</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">Labor</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Reggetta SetUp</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="9" type="checkbox">Food &amp; Beverages NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="10" type="checkbox">Bar Sevices NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="11" type="checkbox">Room Setup NonMember</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="12" type="checkbox">Labor NonMember</div></div></div>

</div>


<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  ">
Sections:
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_SS_Section" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  no-padding"><div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">AYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">OffSiteAYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="3" type="checkbox">Test3</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="5" type="checkbox">Test4</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="6" type="checkbox">OffSiteAYC</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="7" type="checkbox">Test7</div></div></div>

</div>


</div>

</div>

</div>

</div>
<div id="RS_AS" class="AllRptSetups" style="display: none;">
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group  ">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">

<div class=" col-xs-6 col-lg-6 col-md-6 col-sm-6 control-label ">

GRC Sections:
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label  " style="overflow-y: scroll;height: 8em;border: 1px solid;">

<div id="RS_AS_GRCSection" class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding"><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="1" type="checkbox">Default GRC Sections</div><div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label "><input id="2" type="checkbox">Test Section</div></div>

</div>


</div>

</div>

</div>

</div>

</div>

</div>


/////////////////


status list for all 

Book Scheduled
Service Category:
Fn Room Sections:
status:

ddl - Category to use for Production Report
grc dropdowns

Function Revenue / Booking Revenue
Bkg User Defined Fields:
Bkg Sts:

Service Requirement
Status:


Function Distribution
Service Description:


Booking Cost Analysis  -UI
Booking Status:


GRC Log
GRC Sections:
Status:


/////////////////////

Booking Pace Revenue
Production Report
Compass Invoice
//$("#RS_BokingPaceActualized").css("display","block");
//$("#RS_CaterginPace").css("display","block");

// $("#RS_BookingDistribution").css("display","block");
//////////////////

Room Occupancy
Booking List
Booking Distribution
Forecast Book
Bookings of the Day
Banquet Check






2,Booking Pace
Production Report
Compass Invoice
Room Occupancy
Booking List
Booking Distribution
Forecast Book1
Bookings of the Day
Banquet Check
Salesperson Product
Catering Pace
Function Revenue
Cancellation Event Report
Master Services List
Service Requirement
Salesman Product
Function Distribution
Management Actitivity
Booking Revenue
Book Scheduled
Booking Cost Analysis
Catering Goal
Sleep Room Goal
GRC Log
Service Sheet
Function List
Forecast Reports
Event List
Annual SpreadSheet
Backlog Report


Salesperson Product
Catering Pace
Function Revenue
Service Requirement
Function Distribution
Management Actitivity
Booking Revenue
Book Scheduled
Booking Cost Analysis
Catering Goal
Sleep Room Goal
GRC Log
Service Sheet
Function List
Forecast Reports
Event List
Annual SpreadSheet
Backlog Report

Cancellation Event Report
Booking Pace
Event List


"RS_AS"
"RS_BanquetCheckSum" 
"RS_BokingPaceActualized" 
"RS_BookingCostAnalysis" 
"RS_BookingDistribution" 
"RS_BookingList" 
"RS_BOD" 
"RS_BookScheduled" 
"RS_CaterginPace" 
"RS_FR" 
"RS_FCR" 
"RS_FutureRevenue" 
"RS_GRCLog" 
"RS_ManagmentActivity" 
"RS_FRO" 
"RS_SalespersonProduct" 
"RS_ServiceRequirement" 
"RS_SS" 
"RS_FutureDistribution" 


<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label no-padding">

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label ">
<input name="Rpt_ss_Func_Charges" type="checkbox">Show Grid of Function Charges
</div>


</div>

///////////////////


SELECT 
fr.functionRoom as RoomName,
(
CASE 
WHEN sum( if( CONCAT_WS('-', fn.StartTime, fn.EndTime) = '".$ParamArray'Interval1']."-".$ParamArray'Interval2']."', CONCAT_WS('-', fn.StartTime, fn.EndTime), 0 ) ) > '0' THEN '100%'
ELSE '0%'
END) as '".$ParamArray'Interval1']."-".$ParamArray'Interval2']."',
(CASE 
WHEN sum( if( CONCAT_WS('-', fn.StartTime, fn.EndTime) = '".$ParamArray'Interval2']."-".$ParamArray'Interval3']."', CONCAT_WS('-', fn.StartTime, fn.EndTime), 0 ) ) > '0' THEN '100%'
ELSE '0%'
END) as '".$ParamArray'Interval2']."-".$ParamArray'Interval3']."',
(CASE 
WHEN sum( if( CONCAT_WS('-', fn.StartTime, fn.EndTime) = '".$ParamArray'Interval3']."-".$ParamArray'Interval4']."', CONCAT_WS('-', fn.StartTime, fn.EndTime), 0 ) ) > '0' THEN '100%'
ELSE '0%'
END) as '".$ParamArray'Interval3']."-".$ParamArray'Interval4']."',
(CASE 
WHEN sum( if( CONCAT_WS('-', fn.StartTime, fn.EndTime) = '".$ParamArray'Interval4']."-".$ParamArray'Interval5']."', CONCAT_WS('-', fn.StartTime, fn.EndTime), 0 ) ) > '0' THEN '100%'
ELSE '0%'
END) as '".$ParamArray'Interval4']."-".$ParamArray'Interval5']."'
from funct fn join custt cst on fn.customerId=cst.CustID 
join FUNCTNAMES fName on fn.FunctName=fName.ResID 
join tbl_functionRoom fr on fr.id=fn.EvtID 



///////


if($('#AvailibilityIndex').is(':visible')) //if the container is visible on the page
{
}

Line 56: url : "../Booking/assets/ajax/ajax_searchCustomerContact.php",
Line 85: url : "../Booking/assets/ajax/ajax_getPaymentMethods.php",
Line 99: url : "../Booking/assets/ajax/ajax_getCustomerDetails.php",
Line 133: url : "../Booking/assets/ajax/ajax_getContactDetails.php",
Line 200: url : "../Customer/assets/ajax/ajax_getContactInfo.php",
Line 395: url : "../Booking/assets/ajax/ajax_getSalesPerson.php",
Line 405: url : "../Booking/assets/ajax/ajax_getFrequency.php",
Line 421: url : "../Customer/assets/ajax/ajax_getContacts.php",
Line 435: url : "../Customer/assets/ajax/ajax_getTaskCategory.php",
Line 450: url : "../Customer/assets/ajax/ajax_getSalesGroup.php",
Line 467: url : "../Booking/assets/ajax/ajax_getCountryName.php",
Line 482: url : "../Customer/assets/ajax/ajax_getReferral.php",
Line 501: url : "../Customer/assets/ajax/ajax_getGroup.php",
Line 517: url : "../Customer/assets/ajax/ajax_getPayment.php",
Line 530: url : "../Customer/assets/ajax/ajax_getMarket.php",
Line 544: url : "../Customer/assets/ajax/ajax_getContactType.php",
Line 558: url : "../Customer/assets/ajax/ajax_getSalutation.php",
Line 573: url : "../Customer/assets/ajax/ajax_getStatus.php",
Line 589: url : "../Booking/assets/ajax/ajax_ForeCasting.php",
Line 601: url : "../Availability/assets/ajax/get_Category.php",
Line 612: url : "../Availability/assets/ajax/ajax_getServiceDescription.php",
Line 622: url : "../Availability/assets/ajax/ajax_spaceholdFunctionRoom.php",
Line 634: url : "../Availability/assets/ajax/ajax_getSetuptype.php",
Line 665: url : "../Availability/assets/ajax/ajax_getFunction.php",

////////////////
FunctionDistribution1
report_servicesheet
salesperson report
productionReport
future pace booking
FunctionList


<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 main-header">
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12">
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label">
<label>Customer</label>
</div>

<div class="col-lg-5 col-md-5 col-sm-5 no-padding">
<input placeholder="Customer" class="form-control" type="text" id="RptFD_customerName" readonly="" style="background-color: #fff;">
</div>
<div class="col-lg-1 col-md-1 col-sm-1">

<div class="col-lg-3 col-md-3 col-sm-3">
<button type="button" class="btn torch-image" alt="Torch" data-toggle="modal" data-target="#BM_CustomersearchModal" id="RptFD_customerSearch"></button>
</div>

</div>

</div>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12">
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label">
<label>Booking Name</label>
</div>           

<div class="col-lg-5 col-md-5 col-sm-5 no-padding">
<input placeholder="Booking Name" class="form-control" type="text" id="RptFD_bookingName" readonly="">
</div>

<div class="col-lg-1 col-md-1 col-sm-1 no-padding">

<div class="col-lg-3 col-md-3 col-sm-3 text-center">
<button type="button" class="btn book-image" alt="Book" data-toggle="modal" data-target="#BS_SearchModal" id="RptFD_bookingSearch"></button>
</div>

</div>
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12">
<div class="col-lg-4 col-md-4 col-sm-4">Salesperson</div>
<div class="col-lg-5 col-md-5 col-sm-5 no-padding">

<select ="NBMdls_Contactperson" name="RptFD_Salesperson" class="form-control selectpicker">
</select>

</div>

<div class="col-lg-3 col-md-3 col-sm-3"></div>
</div>

</div>



///////



<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12">
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label">
<label>Customer</label>
</div>

<div class="col-lg-5 col-md-5 col-sm-5 no-padding">
<input placeholder="Customer" class="form-control" type="text" id="RptFD_customerName" readonly="" style="background-color: #fff;">
</div>
<div class="col-lg-1 col-md-1 col-sm-1">

<div class="col-lg-3 col-md-3 col-sm-3">
<button type="button" class="btn torch-image" alt="Torch" data-toggle="modal" data-target="#BM_CustomersearchModal" id="RptFD_customerSearch"></button>
</div>

</div>

</div>
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12">
<div class="col-xs-12 col-lg-12 col-md-12 col-sm-12 control-label">
<label>Booking Name</label>
</div>           

<div class="col-lg-5 col-md-5 col-sm-5 no-padding">
<input placeholder="Booking Name" class="form-control" type="text" id="RptFD_bookingName" readonly="">
</div>

<div class="col-lg-1 col-md-1 col-sm-1 no-padding">

<div class="col-lg-3 col-md-3 col-sm-3 text-center">
<button type="button" class="btn book-image" alt="Book" data-toggle="modal" data-target="#BS_SearchModal" id="RptFD_bookingSearch"></button>
</div>

</div>
</div>

<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12">
<div class="col-lg-4 col-md-4 col-sm-4">Salesperson</div>
<div class="col-lg-5 col-md-5 col-sm-5 no-padding">

<select ="NBMdls_Contactperson" name="RptFD_Salesperson" class="form-control selectpicker">
</select>

</div>

<div class="col-lg-3 col-md-3 col-sm-3"></div>
</div>




//////////////////////////

_.each(jsonData,function(obj){
var existingObj;

if($.inArray(obj.name,categories) >= 0) {
existingObj = _.find(jsonData,function(o){return o.name === obj.name; });
existingObj.Room_Revenue = parseInt(parseInt(existingObj.Room_Revenue) + parseInt(obj.Room_Revenue)) ;
} else {
groupedObjectsi] = obj;
categoriesi] = obj.name;
i++;
}
});

groupedObjects = _.sortBy(groupedObjects,function(obj){ return obj.Ppl; }).reverse();

_.each(groupedObjects,function(obj){
var output = '';
_.each(obj,function(val,key){
output += key+': '+val+'<br>';         
});
output += '<br>';
(output);
//$('#results').append(output);
});


////////


<tr ><td style="font-size:24px;"><center>Danielle Collavito</center></td></tr>

<tr style="border-spacing: 0 1em;"><td style="font-size:24px;"><center>Ford Motor Company</center></td><td style="font-size:24px;"><center>Anniversary Party</center></td><td style="font-size:24px;"><center>2018-09-19</center></td><td style="font-size:24px;"><center>Confirmed</center></td><td style="font-size:24px;"><center>2018-09-10</center></td><td style="font-size:24px;"><center>11</center></td><td style="font-size:24px;"><center>14</center></td><td style="font-size:24px;"><center>0.00</center></td><td style="font-size:24px;"><center>115.00</center></td><td style="font-size:24px;"><center>129</center></td></tr>

<tr style="border-spacing: 0 1em;"><td style="font-size:24px;"><center>Ford Motor Company</center></td><td style="font-size:24px;"><center>Anniversary Party</center></td><td style="font-size:24px;"><center>2018-09-19</center></td><td style="font-size:24px;"><center>Tentative</center></td><td style="font-size:24px;"><center>2018-09-11</center></td><td style="font-size:24px;"><center>0</center></td><td style="font-size:24px;"><center>30</center></td><td style="font-size:24px;"><center>0.00</center></td><td style="font-size:24px;"><center>null</center></td><td style="font-size:24px;"><center>null</center></td></tr>

<tr ><td style="font-size:24px;"><center>System Administrator</center></td></tr>

<tr style="border-spacing: 0 1em;"><td style="font-size:24px;"><center>Ford Motor Company</center></td><td style="font-size:24px;"><center>Baby shower</center></td><td style="font-size:24px;"><center>2018-09-19</center></td><td style="font-size:24px;"><center>Confirmed</center></td><td style="font-size:24px;"><center>2018-09-10</center></td><td style="font-size:24px;"><center>20</center></td><td style="font-size:24px;"><center>24</center></td><td style="font-size:24px;"><center>0.00</center></td><td style="font-size:24px;"><center>null</center></td><td style="font-size:24px;"><center>null</center></td></tr>

<tr ><td style="font-size:24px;"><center>Danielle Collavito</center></td></tr>

<tr style="border-spacing: 0 1em;"><td style="font-size:24px;"><center>Ford Motor Company</center></td><td style="font-size:24px;"><center>Anniversary Party</center></td><td style="font-size:24px;"><center>2018-09-19</center></td><td style="font-size:24px;"><center>Confirmed</center></td><td style="font-size:24px;"><center>2018-09-10</center></td><td style="font-size:24px;"><center>11</center></td><td style="font-size:24px;"><center>14</center></td><td style="font-size:24px;"><center>0.00</center></td><td style="font-size:24px;"><center>115.00</center></td><td style="font-size:24px;"><center>129</center></td></tr>

<tr style="border-spacing: 0 1em;"><td style="font-size:24px;"><center>Ford Motor Company</center></td><td style="font-size:24px;"><center>Anniversary Party</center></td><td style="font-size:24px;"><center>2018-09-19</center></td><td style="font-size:24px;"><center>Tentative</center></td><td style="font-size:24px;"><center>2018-09-11</center></td><td style="font-size:24px;"><center>0</center></td><td style="font-size:24px;"><center>30</center></td><td style="font-size:24px;"><center>0.00</center></td><td style="font-size:24px;"><center>null</center></td><td style="font-size:24px;"><center>null</center></td></tr>



Booked
:
"2018-09-10"
Date_Confirmed
:
"2018-09-19"
FncRoom_Chrg
:
"14"
Organization
:
"Ford Motor Company"
Ppl
:
"11"
ResDesc
:
"Anniversary Party"
Room_Revenue
:
"129"
Serv_Chrg
:
"0.00"
SlpRm_Chrg
:
"115.00"
Start
:
"2018-09-19"
Status
:
"Confirmed"
name
:
"Danielle Collavito"


////////////

select ss.Quantity as Qty ,ss.Item , ss.ES_ServiceStart as Time, fr.functionRoom from tblServiceSummary ss 
join servdesc sd on ss.Service_time =sd.servdescid  
join funct fn on fn.FunctID = ss.FunctionID 
join tbl_functionRoom fr on fr.id=fn.EvtID
where fn.StartDate between '2018-09-19' and '2018-09-19' 
and ss.Item != "" 
GROUP BY ss.Item WITH ROLLUP
order by  ss.Item


select Quantity ,Item ,sum(Quantity) as total from tblServiceSummary 
group by Item with rollup


SELECT Quantity, Item, count(Quantity) AS sumoption
FROM tblServiceSummary 
GROUP BY Quantity WITH ROLLUP

//////////



$GetServiceSummary = $conn->query("select distinct c.CategoryName, FunctionID, Service_Time ,ES_ServiceStart ,ES_ServiceEnd  ,ES_ServiceStart as M_StartTime ,ES_ServiceEnd as M_EndTime from tblServiceSummary ss join tbl_Category c on ss.CategoryID=c.CategoryID  where FunctionID='".$_POST"FunctionID"]."'");

while ($row_ServiceSummary= $GetServiceSummary->fetchAll(PDO::FETCH_OBJ))
{


// $GetServiceItem = $conn->query("select * ,CAST(price AS DECIMAL(12,2)) as D_price,CAST(Total AS DECIMAL(12,2)) as D_Total from tblServiceSummary ss join servdesc sd on ss.Service_time =sd.servdescid  where Service_Time='".$Service_Time."' AND ES_ServiceStart='".$row_ServiceSummary->ES_ServiceStart."' AND ES_ServiceEnd='".$row_ServiceSummary->ES_ServiceEnd."' AND FunctionID='".$_POST"FunctionID"]."' order by ID ");


//////////



// if($row_ServiceItem->price!=0.00 AND $row_ServiceItem->Quantity!=0.00 AND $row_ServiceItem->Total!=0.00)
// {
// $i=1;
// echo '<tr tabindex="-1" data-secondmenu="'.$i.'">
// <td>'.$row_ServiceItem->Item.'</td>
// <td class="ES_Price editable" contenteditable >'.$row_ServiceItem->D_price.'</td>
// <td class="ES_Qty editable" contenteditable>'.$row_ServiceItem->Quantity.'</td>
// <td class="ES_Total editable" contenteditable >'.$row_ServiceItem->D_Total.'</td>
// </tr>';
// }
// else 
// {
// $i=1;
// echo '<tr tabindex="-1" class="Menu3tr'.$i.'">
// <td colspan="4">'.$row_ServiceItem->Item.'</td>
// </tr>';
// }

//} 

}

}

///////


<td style="font-size:30px;"><center>System Administrator</center></td><td style="font-size:30px;"><center>Ford Motor Company</center></td><td style="font-size:30px;"><center>2018-09-17</center></td><td style="font-size:30px;"><center>Confirmed</center></td><td style="font-size:30px;"><center>2018-09-17</center></td><td style="font-size:30px;"><center>2018-09-17</center></td><td style="font-size:30px;"><center>0</center></td><td style="font-size:30px;"><center>$12.00</center></td><td style="font-size:30px;"><center>$12.00</center></td><td style="font-size:30px;"><center>6</center></td><td style="font-size:30px;"><center>$247.00</center></td><td style="font-size:30px;"><center>$1729.00</center></td>

</tr><td style="font-size:30px;"><center>System Administrator</center></td><td style="font-size:30px;"><center>Ford Motor Company</center></td><td style="font-size:30px;"><center>2018-09-17</center></td><td style="font-size:30px;"><center>Tentative</center></td><td style="font-size:30px;"><center>2018-09-17</center></td><td style="font-size:30px;"><center>2018-09-17</center></td><td style="font-size:30px;"><center>21</center></td><td style="font-size:30px;"><center>$25</center></td><td style="font-size:30px;"><center>$25</center></td><td style="font-size:30px;"><center>6</center></td><td style="font-size:30px;"><center>$247.00</center></td><td style="font-size:30px;"><center>$1729.00</center></td></tr>


/////////


select fn.BookingID ,
fn.StartDate ,
cst.CustName ,
fName.ResDesc ,
cnt.FirstName+' '+ cnt.LastName  AS OnSiteContact ,
slps.name,
fn.FunctExpNumPpl,
fn.revenue as RoomRental,
fn.StartTime,
fn.EndTime,
bkg.bookingName,
fr.functionRoom
from funct fn join custt cst on fn.customerId=cst.CustID  join FUNCTNAMES fName on fn.FunctName=fName.ResID join contacts cnt on cnt.ContactID=fn.OnSiteContact 
join tbl_salesPerson slps on slps.id=fn.SPID
join EVENT bkg on bkg.bookingID = fn.bookingID 
join tbl_status st on st.id = bkg.statusId 
///////////////////////////
select fn.StartDate ,
cst.CustName ,
fName.ResDesc ,
cnt.FirstName+' '+ cnt.LastName  AS OnSiteContact ,
fn.FunctExpNumPpl,
fn.StartTime,
fn.EndTime,
bkg.bookingName,
rmblk.Rate,
rmblk.Block,
fr.functionRoom
from funct fn join custt cst on fn.customerId=cst.CustID 
join FUNCTNAMES fName on fn.FunctName=fName.ResID 
join contacts cnt on cnt.ContactID=fn.OnSiteContact 
join EVENT bkg on bkg.bookingID = fn.bookingID 
join tbl_functionRoom fr on fr.id=fn.EvtID
join tblRoomEditBlock rmblk on rmblk.BookingID=fn.bookingID

////////////////////////

$d = explode("-", $_POST'dateTo']);
$dateTo = $d2]."-".$d0]."-".$d1];

$d1 = explode("-", $_POST'dateFrom']);
$dateFrom = $d2]."-".$d0]."-".$d1];

//////


<div class="pdfouter">

<div class="pdftemplate" style=" width: 73%; border: none; margin: auto;">
<style>

header, footer {
padding: 1em;
color: white;
background-color: #007196;
clear: left;
text-align: center;
}

nav {
float: right;
max-width: 160px;
height: 134px;
padding: 1em;
border: solid #333
}

nav ul {
list-style-type: none;
padding: 0;
}

nav ul a {
text-decoration: none;
}

article {
padding: 1em;
}

</style>


<header>
<h1>I am a header</h1>
</header>

<nav>
<h1>Navigation</h1>
<ul>
<li><a href="/#">Selection 1</a></li>
<li><a href="/#">Selection 2</a></li>
<li><a href="/#">Selection 3</a></li>
</ul>
</nav>

<div>
<table style="width:100%;1px solid black;border-collapse:collapse">
<tr>
<th>Firstname</th>
<th>Lastname</th> 
<th>Age</th>
</tr>
<tr>
<td>Jill</td>
<td>Smith</td> 
<td>50</td>
</tr>
<tr>
<td>Eve</td>
<td>Jackson</td> 
<td>94</td>
</tr>
</table>


</div>

<footer>I am a footer</footer>

</div>

</div>



/////////



$.ajax({
method : "POST",
url : "../Reports/assets/ajax/ajax_Get.php",
async:false,
data : {Param:Param},
success:function(outputData){

$("#BM_RbeTbl tbody tr").remove();	
var jsonData=JSON.parse(outputData);

$.each(jsonData, function( jsonData, value ) {

var rowRoomEditBlock ='<tr>'+
'<td id="RB_Day_'+k+'">'+value._Day+'</td>'+
'</tr>';

$("#BM_RbeTbl tbody").append(rowRoomEditBlock);

})

(data);
output=data;

//bind to template.php

});


$.ajax({
method : "POST",
url : "../Reports/assets/ajax/ajax_Get.php",
async:false,
success:function(data){
var jsonData=JSON.parse(outputData);
$('#html_hdn').val(data)
}
});

/////////


<?php 
include('../../../common/connect.php');

$d = explode("-", $_POST'dateTo']);
$dateTo = "2018-09-05";

$d1 = explode("-", $_POST'dateFrom']);
$dateFrom = "2018-09-04";

$FunctionList = $conn->query("select fn.StartDate ,
cst.CustName ,
fName.ResDesc ,
cnt.FirstName+' '+ cnt.LastName  AS OnSiteContact ,
slps.name,
fn.FunctExpNumPpl,
fn.StartTime,
fn.EndTime,
bkg.bookingName,
fr.functionRoom
from funct fn join custt cst on fn.customerId=cst.CustID  join FUNCTNAMES fName on fn.FunctName=fName.ResID join contacts cnt on cnt.ContactID=fn.OnSiteContact 
join tbl_salesPerson slps on slps.id=fn.SPID
join EVENT bkg on bkg.bookingID = fn.bookingID 
join tbl_functionRoom fr on fr.id=fn.EvtID
where fn.StartDate between '".$dateFrom."' and '".$dateTo."' order by fn.StartDate desc");

$table='<table border=1 style=" border: solid 1px #DDEEEE;border-collapse: collapse;border-spacing: 0;font:normal 13px Arial, sans-serif;" class="zui-table">
<thead style="background-color: #DDEFEF;border: solid 1px #DDEEEE;color: #336B6B;padding: 10px;text-align: left; text-shadow: 1px 1px 1px #fff;">
<tr><th>CustName</th>
<th>ResDesc</th>
<th>OnSiteContact</th>
<th>name</th>
<th>FunctExpNumPpl</th>
<th>StartTime</th>
<th>EndTime</th>
<th>bookingName</th>
<th>functionRoom</th>
<th>StartTime</th>
<th>StartTime</th></tr></thead>';

while($row_FunctionList = $FunctionList->fetchAll(PDO::FETCH_OBJ))
{

$table = $table.
"<tr><td>".$row.$row_FunctionList->CustName."</td>
<td>".$row.$row_FunctionList->ResDesc."</td>
<td>".$row.$row_FunctionList->OnSiteContact."</td>
<td>".$row.$row_FunctionList->name."</td>
<td>".$row.$row_FunctionList->FunctExpNumPpl."</td>
<td>".$row.$row_FunctionList->StartTime."</td>
<td>".$row.$row_FunctionList->EndTime."</td>
<td>".$row.$row_FunctionList->bookingName."</td>
<td>".$row.$row_FunctionList->functionRoom."</td>
<td>".$row.$row_FunctionList->StartTime."</td>
<td>".$row.$row_FunctionList->StartTime."</td></tr>";

}

?>

///////////////////////////////


$FunctionList = $conn->query("select fn.StartDate ,
// cst.CustName ,
// fName.ResDesc ,
//  cnt.FirstName+' '+ cnt.LastName  AS OnSiteContact ,
// slps.name,
// fn.FunctExpNumPpl,
// fn.StartTime,
// fn.EndTime,
// bkg.bookingName,
// fr.functionRoom
// from funct fn join custt cst on fn.customerId=cst.CustID  join FUNCTNAMES fName on fn.FunctName=fName.ResID join contacts cnt on cnt.ContactID=fn.OnSiteContact 
// join tbl_salesPerson slps on slps.id=fn.SPID
// join EVENT bkg on bkg.bookingID = fn.bookingID 
// join tbl_functionRoom fr on fr.id=fn.EvtID
// where fn.StartDate between ".$_POST"dateTo"]." and ".$_POST"dateFrom"]." order by fn.StartDate desc");

// $arr=array();

// while($row_FunctionList = $FunctionList->fetchAll(PDO::FETCH_OBJ))
// {
// $arr] = $row_FunctionList;
// echo json_encode($arr);
// exit();

// }



////////////




// $('#btn_run').click(function(){

// var category=$('#ReportCategories :selected').text();
// var subCategory=$('aselected="selected"]').attr('category');

// if(!subCategory)
// {
// alert('please choose category');
// return;
// }

// ReportsInterface.pdf($('#dateTo').val(),$('#dateFrom').val())

// });



/////

//call watermark content aand image
$mpdf->SetWatermarkText('Chal Yaara Solutions');
$mpdf->showWatermarkText = true;
$mpdf->watermarkTextAlpha = 0.1;
$mpdf->SetHTMLFooter('<div><hr style="margin: 0px 0px 0px 0px; "><div>Chal Yaara Solutions LLP. 266, Block C, Scetor 63, Noida, UP(India).</div></div>');

//$mpdf->WriteHTML($html);


/////


Pdf(category,subCategory)
{
('2');	
var html ='<div><p>Hello esp<p></div>';
objClass_CRUD.GeneratePDF(html);

}


////


$.getScript('https://cdnjs.cloudflare.com/ajax/libs/jspdf/0.9.0rc1/jspdf.min.js');

var doc = new jsPDF();
var specialElementHandlers = {
'#editor': function(element, renderer){ return true; }
};

var margins = {
top: 80,
bottom: 60,
left: 40,
width: 522
};

$.get('../Reports/ReportsInterfaceModal.php', function(content){
doc.fromHTML(content, margins.left, margins.top, 
{'width': margins.width, 'elementHandlers': specialElementHandlers});
doc.output('dataurlnewwindow');
}, 'html');


var html='';

// $.get('../Reports/ReportsInterfaceModal.php', function(content){
// doc.fromHTML(content, margins.left, margins.top, 
// {'width': margins.width, 'elementHandlers': specialElementHandlers});
// doc.output('dataurlnewwindow');
// }, 'html');


// var html; 
// $.get('../Reports/ReportsInterfaceModal.php', function(data) {
// html=data;
// }); 


////////


{"StartDate":"2018-09-04","CustName":"amy jordan","ResDesc":"Bar Mitzvah","OnSiteContact":"amyJordan","name":"Gary Lau","FunctExpNumPpl":"1","StartTime":"09:00","EndTime":"09:30","bookingName":"Amy's Booking","functionRoom":"Formal Dining Room"}]


/////////


class ReportsInterface  extends ReportBase { 

constructor() {
super();
this.fillSubCategory;
}

init()
{
this.Categories();	
}

Categories() {

//fill category 
this.FillSubCategory();	
}

FillSubCategory()
{
if(!this.fillSubCategory)
{
$.getScript('../Reports/assets/js/BookingReports.js', function()
{
this.fillSubCategory=new FillSubCategory("1");
obj.GetSubCategory();
}}}

$(document).ready(function(){

$("#ddlcategory").on('change', function()
{
(new ReportsInterface()).showReportBooking();
})

})


/////////////


<ul class="nav nav-tabs col-lg-12 col-md-12 col-sm-12 col-xs-12 no-padding">
<li class="active col-lg-6 col-md-6 col-sm-6 col-xs-6 text-center no-padding"><a href="" data-toggle="tab" class=""><strong>Categ.</strong></a></li>
<li class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-center no-padding "><a href="" data-toggle="tab" class="" ><strong>Depend.</strong></a></li>
</ul>


/////////////


<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group">
<div class="col-lg-4 col-md-4 col-sm-4">Export Format</div>
<div class="col-lg-5 col-md-5 col-sm-5 no-padding">

<select id="NBMdls_Contactperson" name="NBMdls_Contactperson" class="form-control selectpicker">
<option value=" "></option>
</select>

</div>

<div class="col-lg-3 col-md-3 col-sm-3"></div>
</div>	
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group no-padding">

<div class=" col-xs-3 col-lg-3 col-md-3 col-sm-3 form-group no-padding">
</div>

<div class=" col-xs-3 col-lg-3 col-md-3 col-sm-3 form-group no-padding">
<button id="btn_run" type="button" class="btn" style="width: 8em;" >run</button>
</div>

<div class=" col-xs-3 col-lg-3 col-md-3 col-sm-3 form-group no-padding">
<button id="btn_close" type="button" class="btn" style="width: 8em;" >Close</button>
</div>

<div class=" col-xs-3 col-lg-3 col-md-3 col-sm-3 form-group no-padding">
</div>

</div>



/////////



date
<div class=" col-xs-12 col-lg-12 col-md-12 col-sm-12 form-group no-padding">
<div class=" col-xs-4 col-lg-4 col-md-5 col-sm-5 control-label ">
<label>Date Booked:<label></center>
</div>
<div class=" col-xs-8 col-lg-8 col-md-7 col-sm-7 no-padding">
<input name="dateBooked" placeholder="Date Booked" id="dateBooked" class="form-control" type="text" readonly="">
<p class="error" id="error5"></p>
</div>
</div>

////////////////////////

<div class="col-xs-4 col-lg-4 col-md-4 col-sm-4">
<div class="col-lg-7 col-md-5 col-sm-5 control-label">
<label>Customer<label></center>
</div>
<div class="col-lg-5 col-md-7 col-sm-7 text-right">
<div class="col-lg-6 col-md-6 col-sm-6 text-center"></div>
<div class="col-lg-3 col-md-3 col-sm-3 text-center">
<button type="button" class="btn torch-image" alt="Torch" data-toggle="modal" data-target="#BM_CustomersearchModal" id="customerSearch"></button>
</div>
<div class="col-lg-3 col-md-3 col-sm-3 text-center">
<button type="button" class="btn pin-image" alt="pin" data-toggle="modal"></button>
</div>
</div>
<div class="col-lg-12 col-md-12 col-sm-12 no-padding">
<input placeholder="Customer" class="form-control" type="text" id="customerName" readonly="" style="background-color: #fff;">
</div>
<div class="col-lg-12 col-md-12 col-sm-12">
<span id="errorCustomer" class="error"></span>
</div>
</div>

/////////



class ReportsInterface  extends ReportBase { 

constructor() {

super();
this.Categories();

}

Categories() {

var categories=categories=sessionStorage.getItem("ReportCategories");	

if(categories)
{
var jsonData=JSON.parse(categories);

$.each(jsonData, function( index, value ) {

$("#ReportCategories").append($("<option />").val(value.CategoryID).text(value.CategoryName));

})

// $.getScript('../Reports/assets/js/BookingReports.js', function()
// {
// new BookingReports({CatID:"1"});
// })

}

}


}

$(document).ready(function(){

$("#ReportCategories").on('change', function()
{

if($('#ReportCategories :selected').val()=="1")
{
$.getScript('../Reports/assets/js/BookingReports.js', function()
{
new BookingReports({CatID:"1"});
});
}	


})

})

///////////////


Get(CatID)
{

var BookingParam= new Array();
BookingParam.push({CatID:CatID})

var obj=new Class_CRUD();
var ReportBookingCategories=obj.CRUDFunction("Get","SYS_REPORTSDESC",null,BookingParam);	

(ReportBookingCategories);

if(ReportBookingCategories)
{
var jsonData=JSON.parse(ReportBookingCategories);
$("#accordion").html();
$.each(jsonData, function( index, value ) {

$("#accordion").append($('<li><a id="'+value.subCategoryID+'" style="cursor: pointer;">"'+value.SubCategoryName+'</a></li>'));

})

}

}



static subCategories() {

('subCategories');

var ReportBookingCategories=class_CRUD.CRUDFunction("Get","SYS_REPORTSDESC");	

// var categories;
// if(sessionStorage.getItem("ReportCategories"))
// {
// categories=sessionStorage.getItem("ReportCategories");	
// }

// if(categories)
// {
// var jsonData=JSON.parse(categories);

// $.each(jsonData, function( index, value ) {

// $("#ReportCategories").append($("<option />").val(value.CategoryID).text(value.CategoryName));

// })

// }

}


//////////


i wanted to call class method without creating object or call constructor om document ready event . I tried following different options but nothign worked

var objReportsInterface;

<ul id="accordion">
<li>Codes</li>
<ul>
<li><a id="Sidebar_customerGroups" style="cursor: pointer;">Customer Groups</a></li>
</ul>
</ul>

//////

class ReportsInterface  extends ReportBase { 

var prop;

constructor() {
super();
objReportsInterface=this;

}

subCategories() {}

}

$(document).ready(function(){

$("dropdown").on('change', function()

objReportsInterface.subCategories();

})

})

//////////

var objReportsInterface;

class ReportsInterface  extends ReportBase { 

var prop;

constructor() {
objReportsInterface=this;
this.prop="testprop";
super();
this.Categories();

}

Categories() {

var categories;
if(sessionStorage.getItem("ReportCategories"))
{
categories=sessionStorage.getItem("ReportCategories");	
}

if(categories)
{
var jsonData=JSON.parse(categories);

$.each(jsonData, function( index, value ) {

$("#ReportCategories").append($("<option />").val(value.CategoryID).text(value.CategoryName));

})

}

}


subCategories() {

('subCategories');

// var categories;
// if(sessionStorage.getItem("ReportCategories"))
// {
// categories=sessionStorage.getItem("ReportCategories");	
// }

// if(categories)
// {
// var jsonData=JSON.parse(categories);

// $.each(jsonData, function( index, value ) {



/////////////////
// $("#ReportCategories").append($("<option />").val(value.CategoryID).text(value.CategoryName));

// })

// }

}


}

$(document).ready(function(){

$("#ReportCategories").on('change', function()

objReportsInterface.subCategories();

})

})




// $.getScript('../Reports/assets/js/BookingReports.js', function()
// {
// var bookingReports = new BookingReports({
// categories: categories
// });

// });


////////

{"CategoryID":"1","CategoryName":"Booking"},{"CategoryID":"2","CategoryName":"Catering"},{"CategoryID":"3","CategoryName":"Customer"},{"CategoryID":"4","CategoryName":"Group Rooms"},{"CategoryID":"5","CategoryName":"Lost Business"},{"CategoryID":"6","CategoryName":"Setup"},{"CategoryID":"7","CategoryName":"Traces"}]


///////


$.getScript('../Booking/assets/js/GRC.js', function()

//////////


B.js

function ShowClassB()
{

$.getScript('../ClassB.js', function()
{

var objB = new ClassB("a");

});
}

-------
A.js

var ClassA = function(options){

var x;

this.construct = function("a"){

this.x="a";

};
this.construct("a");

}

$(document).ready(function(){

var objA =new ClassA();
(objA.x);

})

I am working on following reports

Booking - 
Function Booking Reports
Function List Reports
Function Booking Pace Reports
Function DIstribution Reports
Production Reports
Sales Reports


Confirmed.children('td:eq(0)').text())

$("#tblTotal tbody tr.SubTotal_Confirmed td:eq(3)").text($("#tblGRC tbody tr.summary td:eq(3)").text())
$("#tblTotal tbody tr.SubTotal_Confirmed td:eq(4)").text($("#tblGRC tbody tr.summary td:eq(4)").text())
$("#tblTotal tbody tr.SubTotal_Confirmed td:eq(5)").text($("#tblGRC tbody tr.summary td:eq(5)").text())
$("#tblTotal tbody tr.SubTotal_Confirmed td:eq(6)").text($("#tblGRC tbody tr.summary td:eq(6)").text())
$("#tblTotal tbody tr.SubTotal_Confirmed td:eq(7)").text($("#tblGRC tbody tr.summary td:eq(7)").text())

$("#tblTotal tbody tr.TOTALS td:eq(0)").text($("#tblTotal tbody tr.SubTotal_Confirmed td:eq(0)").text())
$("#tblTotal tbody tr.TOTALS td:eq(3)").text($("#tblTotal tbody tr.SubTotal_Confirmed td:eq(3)").text())
$("#tblTotal tbody tr.TOTALS td:eq(4)").text($("#tblTotal tbody tr.SubTotal_Confirmed td:eq(4)").text())
$("#tblTotal tbody tr.TOTALS td:eq(5)").text($("#tblTotal tbody tr.SubTotal_Confirmed td:eq(5)").text())
$("#tblTotal tbody tr.TOTALS td:eq(6)").text($("#tblTotal tbody tr.SubTotal_Confirmed td:eq(6)").text())
$("#tblTotal tbody tr.TOTALS td:eq(7)").text($("#tblTotal tbody tr.SubTotal_Confirmed td:eq(7)").text())




///////


rgb(122, 255, 224)


<tbody>

<tr class="summary" id="RB_tr_4" tabindex="-1"><td style="background: rgb(241, 241, 119);">2018-08-24</td><td style="background: rgb(241, 241, 119);">Ford Motors Company</td><td style="background: rgb(241, 241, 119);">System Administrator</td><td style="background: rgb(241, 241, 119);">8</td><td style="background: rgb(255, 255, 118);">10</td><td style="background: rgb(255, 255, 118);">748.00</td><td style="background: rgb(255, 255, 118);">93.5</td><td style="background: rgb(255, 255, 118);">8</td></tr><tr class="sleepingRooms" style="display: none;"><td style="background: rgb(241, 241, 119);">-]</td><td style="background: rgb(241, 241, 119);"></td><td style="background: rgb(241, 241, 119);"></td><td style="background: rgb(241, 241, 119);">4</td><td style="background: rgb(255, 255, 118);">5</td><td style="background: rgb(255, 255, 118);">168.00</td><td style="background: rgb(255, 255, 118);">42.00</td><td style="background: rgb(255, 255, 118);">4</td></tr><tr class="sleepingRooms" style="display: none;"><td style="background: rgb(241, 241, 119);">-]</td><td style="background: rgb(241, 241, 119);"></td><td style="background: rgb(241, 241, 119);"></td><td style="background: rgb(241, 241, 119);">4</td><td style="background: rgb(255, 255, 118);">5</td><td style="background: rgb(255, 255, 118);">580.00</td><td style="background: rgb(255, 255, 118);">145.00</td><td style="background: rgb(255, 255, 118);">4</td></tr>


</tbody>




rgb(241, 241, 119)
rgb(255, 255, 118)


// ($('#hiddenCustomerName').val());
// (objClass.Salesprsn);
// var CustomerName="";

//objClass_CRUD.newKV(objClass.RoomBlockData,CustomerName,$('#hiddenCustomerName').val())


//////

//var grcData=CRUDFunction("Get","tblRoomEditBlock");

// var Salesprsn="";

// objClass_CRUD.newKV(objClass.RoomBlockData,CustomerName,$('#hiddenCustomerName').val())
// objClass_CRUD.newKV(objClass.RoomBlockData,Salesprsn,objClass.Salesprsn)


// var v = $("#yourid").val();
// $("#yourid optionvalue="+v+"]").text()


// objGRC.GetGRC(objClass.RoomBlockData);

// objClass_CRUD.GetArrayval

// $.each(objClass.RoomBlockData, function( index, value ) {

// objClass_CRUD.newKV(objClass.RoomBlockData,CustomerName,$('#hiddenCustomerName').val())

// })


//////////////



// var rowGRC ='<tr class="summary" id="RB_tr_'+k+'" tabindex="-1">'+
// '<td DateEntered="11/11/11" >'+'11/11/11'+'</td>'+
// '<td id="Customer"'+k+'" name="Customer'+k+'"> '+'Customer'+'</td>'+
// '<td id="Slps"'+k+'" name="Slps'+k+'">'+'Slps'+'</td>'+
// '<td id="RoomNights"'+k+'" name="RoomNights'+k+'">'+'RoomNights'+'</td>'+
// '<td id="Pickups"'+k+'" name="Pickups'+k+'">'+'Pickups'+'</td>'+
// '<td id="AverageRate"'+k+'" name="AverageRate'+k+'">'+'AverageRate'+'</td>'+
// '<td id="22Wed"'+k+'" name="22Wed'+k+'">'+'22Wed'+'</td>'+
// '</tr>';


/////////
// var agreed = row.closest("tr").children('td:eq(7)');
// var Orig = row.closest("tr").children('td:eq(8)');
// var Block = row.closest("tr").children('td:eq(9)');

// if(arr_Rates)
// {
// obj.GetRoomBlockRates(arr_Rates);
// }

// Orig.html(agreed.html())
// Block.html(agreed.html())

////////////


// arr_Rates=({

// Single: $("#BM_RatesTble tbody tr:eq(0)").find("input").val(),
// Double: $("#BM_RatesTble tbody tr:eq(1)").find("input").val(),
// Triple: $("#BM_RatesTble tbody tr:eq(2)").find("input").val(),
// Quad: $("#BM_RatesTble tbody tr:eq(3)").find("input").val(),
// Child: $("#BM_RatesTble tbody tr:eq(4)").find("input").val(),
// Extra: $("#BM_RatesTble tbody tr:eq(5)").find("input").val()

// })


// var rowRoomEditBlock ='<tr id="RB_tr_'+k+'" tabindex="-1" RoomEditBlockID='+value.RoomEditBlockID+' >'+
// '<td id="RB_Day_'+k+'">'+value._Day+'</td>'+
// '<td >'+value._Date+'</td>'+
// '<td>'+value.RoomType+'</td>'+
// '<td>'+value.Adult+'</td>'+
// '<td >'+value.Child+'</td>'+
// '<td >'+'$'+value.Rate+'</td>'+
// '<td>'+value.Agreed+'</td>'+
// '<td>'+value.Orig+'</td>'+
// '<td>'+value.Block+'</td>'+
// '</tr>';	

//$("#tblRoomBlockRates tbody").append(rowRoomEditBlock);

//});



custom css

//$('.RoomBlocktable').parents('div')

$("<style type='text/css'> .height30{ min-height:30% !important; overflow-y:scroll !important;min-height:0% !important;} </style>").appendTo($('.RoomBlocktable').parents('div.table-responsive'));
$('.RoomBlocktable').parents('div.table-responsive').addClass("height30");


// $("<style>")
// .prop("type", "text/css")
// .html("\
// #my-window {\
// position: fixed;\
// z-index: 102;\
// display:none;\
// top:50%;\
// left:50%;\
// }")
// .appendTo("#BM_RbeTbl");


// $("<style id='abc' type='text/css'> .MyClass{ color:#f00 !important; font-weight:bold !important;} </style>").appendTo("#BM_RbeTbl");

// $('<style>.newClass { background: red; }</style>').appendTo("#BM_RbeTbl");
// $('.RoomBlocktable').parents('.table-responsive').removeClass('Function-table');
// $('.RoomBlocktable').parents('.table-responsive').css("min-height","30% !important;");
// $('.RoomBlocktable').parents('.table-responsive').css("overflow-y","scroll !important;");

///////////////////	


var row=$('#tblRoomBlockProfile tr');	
row.find('td:eq(0)').html(value._Day);
row.find('td:eq(1)').html(value._Date);
row.find('td:eq(2)').html(value.RoomType);
row.find('td:eq(3)').html(value.Adult);
row.find('td:eq(4)').html(value.Child);
row.find('td:eq(5)').html(value.Rate);
row.find('td:eq(6)').html(value.Agreed);
row.find('td:eq(6)').html(value.Orig);
row.find('td:eq(7)').html(value.Block);

$("#BM_RbeTbl tbody").append(rowRoomEditBlock);

/////////

var rowRoomEditBlock ='<tr id="RB_tr_'+k+'" tabindex="-1" RoomEditBlockID='+value.RoomEditBlockID+' >'+
'<td id="RB_Day_'+k+'">'+value._Day+'</td>'+
'<td ><input type="text" id="RB_Date_'+k+'" name="RB_Date_'+k+'" class="RB_Date form-control " readonly ></td>'+
'<td><select id="RB_RoomType_'+k+'" class="RB_RoomType form-control blngReciept"/></td>'+
'<td id="RB_Rates_'+k+'"></td>'+
'<td id="RB_Adult_'+k+'" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" >'+value.Adult+'</td>'+
'<td id="RB_Child_'+k+'" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" >'+value.Child+'</td>'+
'<td  onkeypress="return event.charCode >= 48 && event.charCode <= 57" ><input id="RB_Rate_'+k+'" type="text" dir="rtl" placeholder="$0.00" onkeypress="return event.charCode >= 48 && event.charCode <= 57" /></td>'+

'<td id="Agreed_'+k+'" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" >'+value.Agreed+'</td>'+
'<td id="Orig_'+k+'" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" >'+value.Orig+'</td>'+

'<td id="Block_'+k+'" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" >'+value.Block+'</td>'+

'<td id="Pickup_'+k+'" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" >'+value.Pickup+'</td>'+

'<td id="Slippage_'+k+'" onkeypress="return event.charCode >= 48 && event.charCode <= 57" >'+value.Slippage+'</td>'+
'</tr>';	

$("#BM_RbeTbl tbody").append(rowRoomEditBlock);

Get_Row_RoomTypes("#RB_RoomType_"+k+"");

$("#RB_Date_"+k+"").val(mmddyyyy((value._Date)));
$("#RB_RoomType_"+k+"").val(value.RoomType);
$("#RB_Rate_"+k+"").val(value.Rate);
ConverttoDecimal("#RB_Rate_"+k+"")

$(".RB_Date").datepicker({format: 'mm-dd-yyyy'}).on('changeDate', function()
{
$(this).datepicker('hide');
});


$(document).on('click',"#RB_Rates_"+k+"", function (evt) 
{
open_EditBlockRates();
})

$("#RB_Day_"+k+"").text(Day);


k++;


///////////////


<input type="text" class="form-control blockborder" id="BM_AvgR" name="BM_AvgR"> 
</div>
</div>
<div class="col-lg-12 col-md-12 col-sm-12 no-padding">
<div class="col-lg-6 col-md-6 col-sm-6 no-padding"><span class="form-control  blockborder" readonly>Agreed</span></div>
<div class="col-lg-6 col-md-6 col-sm-6 no-padding">
<input type="text" class="form-control blockborder" id="BM_RAgreed BM_AvgR" name="BM_RAgreed"> 
</div>
</div>
<div class="col-lg-12 col-md-12 col-sm-12 no-padding">
<div class="col-lg-6 col-md-6 col-sm-6 no-padding"><span class="form-control blockborder" readonly>Oring Block</span></div>
<div class="col-lg-6 col-md-6 col-sm-6 no-padding">
<input type="text" class="form-control blockborder" id="BM_ROring BM_RAgreed BM_AvgR " name="BM_ROring"> 
</div>
</div>
<div class="col-lg-12 col-md-12 col-sm-12 no-padding">
<div class="col-lg-6 col-md-6 col-sm-6 no-padding"><span class="form-control blockborder" readonly>Block</span></div>
<div class="col-lg-6 col-md-6 col-sm-6 no-padding">
<input type="text" class="form-control blockborder" id="BM_RBlock"  name="BM_RBlock"> 
</div>
</div>
<div class="col-lg-12 col-md-12 col-sm-12 no-padding">
<div class="col-lg-6 col-md-6 col-sm-6 no-padding"><span class="form-control blockborder" readonly>Pickup</span></div>
<div class="col-lg-6 col-md-6 col-sm-6 no-padding">
<input type="text" class="form-control blockborder" id="BM_RPickup " name="BM_RPickup"> 



18002000047
18002587170
www.hp.com/support/sumsung

<?php 
include('../../common/connect.php');

if($_POST"operation"]=="insert")
{
$InputArray = $_POST'inputArray'];
$set_Param="";

print_r($InputArray);
foreach($InputArray as $arr)
{

foreach($arr as $a)
{
$key = array_search ($a, $arr);
$value =$a;

echo $key;
echo $value;
//$set_Param=$set_Param."".$key."=".$value." , " ;

}


// $key = array_search ($arr, $InputArray);
// $value =$arr;

// $set_Param=$set_Param."".$key."=".$value." , " ;

}

$set_Param= rtrim($set_Param," , ");

$finalQuery= "insert into ".$_POST"table"]." set ".$set_Param."";
echo $finalQuery;
// $Insert = $conn->query($finalQuery);

// if($Insert)	
// {
// echo "inserted";
// }
// else
// {
// echo "not inserted";
// }
exit();
}

?>

/////////////////////

// $value = implode(array_slice($InputArray, 0, 1));
// $key = array_search ($value, $InputArray);

// echo $key;
// echo $value;


/////////


var Class_CRUD = function(options){

var vars = { myVar  : 'original Value' };

var root = this;

this.construct = function(options){
$.extend(vars , options);
};

this.myPublicMethod = function(){
(vars.myVar);
myPrivateMethod();
};

var myPrivateMethod = function() {
('accessed private method');
};

this.construct(options);


this.insert= function(){
(vars.myVar);
myPrivateMethod();
};

};


///////////////


var objClass_CRUD = new Class_CRUD();

objClass_CRUD.myPublicMethod();


///////

/*
* USAGE
*/

/*
* Set variable myVar to new value
*/
var newClass_CRUD = new Class_CRUD({ myVar : 'new Value' });

/*
* Call myMethod inside Class_CRUD
*/
newClass_CRUD.myPublicMethod();

///////////



var agreed = row.children('td:eq(7)').text();
var x = row.children('td:eq(7)').html(row.children('td:eq(7)').html()+row.children('td:eq(7)').html());

(agreed);
(x);
(y);
(y1);


//

//7,8,9
//("#Agreed_"+(k-1)+"");	



// $(this).closest('tr').find(".blng_DueDate").each(function() 
// (agreed);

// $("#Orig_"+(k-1)+"").html(agreed);
// $("#Block_"+(k-1)+"").html(agreed);


///////////

hello everyone , lets decide a strict deadline of task including bug fix .Task deadline +testing+ bug fix+(2 days more )

https://mail-gmail-4.tinytake.com/sf/Mjg1ODMyOF84NTc5NTAy

///////


var Avail_tblFnDpst ='<tr id="blng_tr_'+k+'" tabindex="-1" >'+
'<td><input id="AmtDue_'+k+'" type="text" dir="rtl" placeholder="0.00" onkeypress="return event.charCode >= 48 && event.charCode <= 57"/></td>'+
'<td ><input type="text" id="DueDate_'+k+'" readonly></td>'+   
'<td><input id="AmtPaid_'+k+'" type="text" dir="rtl" placeholder="0.00" onkeypress="return event.charCode >= 48 && event.charCode <= 57" /></td>'+
'<td> <input type="text" id="DuePaid_'+k+'" readonly></td>'+
'<td id="Reciept_'+k+'" class="maskedExt" contenteditable></td>'+
'</tr>';

//////////


var bkg_tblFnDpst ='<tr id="blng_tr_'+k+'" tabindex="-1" >'+
'<td><input id="AmtDue_'+k+'" type="text" dir="rtl" placeholder="0.00" onkeypress="return event.charCode >= 48 && event.charCode <= 57"/></td>'+
'<td ><input type="text" id="DueDate_'+k+'" class="blng_DueDate" readonly></td>'+   
'<td><input id="AmtPaid_'+k+'" class="blng_AmtPaid" type="text" dir="rtl" onkeypress="return event.charCode >= 48 && event.charCode <= 57" placeholder="0.00"/></td>'+
'<td> <input type="text" id="DuePaid_'+k+'" class="blng_DuePaid" readonly></td>'+
'<td id="Reciept_'+k+'" class="maskedExt" contenteditable></td>'+
'</tr>';


//////////

Deposit] => Array
(
1] => Array
(
AmtDue] => 0.01
DueDate] => 08-22-2018
AmtPaid] => 0.01
DuePaid] => 08-22-2018
Function] => 15
)

)


///////////


// $(this).closest('tr').find(".blng_DueDate").each(function() 
// {

// if($(this).val()=='' ||$(this).val()==null)
// {
// alert('Please enter the required fields');
// isset1= false;

// if(isset1== false)
// {
// return false;

// }

// }
// else
// {

// values.push($(this).val());
// values.join(",");
// isset1= true;
// }

// });

// $(this).closest('tr').find("select").each(function() 
// {

// if(this.value=='' ||this.value==null)
// {
// alert('Please enter the required fields');
// isset1= false;

// if(isset1== false)
// {
// return false;

// }

// }
// else
// {

// values.push(this.value);
// values.join(",");
// isset1= true;
// }

// });



//////////////////////////


// if
// ($(this).find(".blng_AmtDue").val()=='' ||$(this).find(".blng_AmtDue").val()==null)
// ($(this).find(".blng_DueDate").val()=='' ||$(this).find(".blng_DueDate").val()==null)
// ($(this).find(".blng_AmtPaid").val()=='' ||$(this).find(".blng_AmtPaid").val()==null)
// ($(this).find(".blng_DuePaid").val()=='' ||$(this).find(".blng_DuePaid").val()==null)
// ($(this).find(".blng_Function").val()=='' ||$(this).find(".blng_Function").val()==null)
// {
// alert('Please enter the required fields');
// isset= false;

// if(isset== false)
// {
// return false;

// }

// }
// else
// {


/////////////////////



1.Service item cant be saved in previous date

2.Service item cant be added untill function is saved 
First function will be Saved (and all popup will close)--> Grid comes--> Edit same function --> Add Service item --> only then Service item will be saved 



$(document).on('focusout',"#AmtDue_"+k+"", function (evt) 
{

$(this).html(parseFloat($(this).html()).toFixed(2));

});

$(document).on('focusout',"#AmtPaid_"+k+"", function (evt) 
{

$(this).html(parseFloat($(this).html()).toFixed(2));
});



///////



// $(document).on('focusout',"#AmtDue_"+k+"", function (evt) 
// {

// $(this).html(parseFloat($(this).html()).toFixed(2));

// convertTodecimal();

// });

// $(document).on('focusout',"#AmtPaid_"+k+"", function (evt) 
// {

///////////

$(document).ready( function(e){

$('#input').keydown( function(e){

var s1=$(this).val();

if (s1.length <2) 
{
s1 = '0.0' + s1;
$(this).val(s1);
e.preventdefault();
}

if (s1.length < 5) 
{
s1='';
s1=$(this).val().slice(3);
s1 = '0.' + s1;
$(this).val(s1);
}

});
});



////////

<input id="input" type="text" dir="rtl" />

$(document).ready( function(e){

$('#input').keydown( function(e){

var s1=$(this).val();

if (s1.length < 2) 
{
s1 = '00.' + s1;
$(this).val(s1);
}
else
{

s1=s1.slice(2);
$(this).val(s1);

}

});
});


/////////////////////


if (s1.length < 3) 
{
s1 = '00.' + s1;
$(this).val(s1);
} 
else
{

s2 = s1.slice(3);
$(this).val(s2);

}

/////////


var s1=$(this).val();

if (s1.length < 2) 
{
s1 = '00.' + s1.slice(-2);
$(this).val(s1);
} 

////////////


if( $(this).val().length === 2 ) 
{ 
var value = parseFloat($('#input').val());
alert(parseFloat($('#input').val()).toFixed(2));

}

///////



var value = parseFloat($('#total').text()) + parseFloat($(this).data('amount'))/100
$('#result').text( value.toFixed(2) );



//////


// var RoomBlockRow ='<tr id="blng_tr_'+k+'" tabindex="-1" ><td id="AmtDue_'+k+'" class="decimal_val" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" ></td><td ><input type="text" id="DueDate_'+k+'" readonly></td><td id="AmtPaid_'+k+'" class="decimal_val" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" ></td><td> <input type="text" id="DuePaid_'+k+'" readonly></td><td id="Reciept_'+k+'" class="maskedExt" contenteditable></td></tr>';	

// $("#RoomBlocktable").append(RoomBlockRow);

// $("#FuncDe_Table td").css("line-height","2");

// $("#DueDate_"+k+"").datepicker({format: 'mm-dd-yyyy'}).on('changeDate', function(){
// $(this).datepicker('hide');
// });

// $("#DuePaid_"+k+"").datepicker({format: 'mm-dd-yyyy'}).on('changeDate', function(){
// $(this).datepicker('hide');
// });	

// $(document).on('focusout',"#AmtDue_"+k+"", function (evt) 
// {

// $(this).html(parseFloat($(this).html()).toFixed(2));

// });

// $(document).on('focusout',"#AmtPaid_"+k+"", function (evt) 
// {

// $(this).html(parseFloat($(this).html()).toFixed(2));
// });

// k++;
// return k; 

////////////////


// ($("RB_Date_"+k+"").text())
// (Date($("RB_Date_"+k+"").text()))

//(Date($("RB_Date_"+k+"").text()).getDay()) 
//$("RB_Date_"+k+"").text(Date($("RB_Date_"+k+"").text()).getDay());

///////


function Get_Row_RoomTypes()
{

// $("#RB_RoomType_"+k+"").append($("<option />").val("1").text("Test Room 1"));
// $("#RB_RoomType_"+k+"").append($("<option />").val("1").text("Test Room 2"));
function AddRow()
{

//(Date(startdate).getDay())
//Day	Date	Room Type	Rates	Adult	Child	Rates	Agreed	Orig	Block	Pickup	Slippage

var AddRoomBlockRow ='<tr id="RB_tr_'+k+'" tabindex="-1" >'+
'<td id="RB_Day_'+k+'"></td>'+
'<td ><input type="text" id="RB_Date_'+k+'" name="RB_Date_'+k+'" class="form-control " readonly></td>'+
'<td><select id="RB_RoomType_'+k+'" class="RB_RoomType form-control blngReciept"/></td>'+
'<td id="RB_Rates_'+k+'"></td>'+
'<td id="RB_Adult_'+k+'" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" ></td>'+
'<td id="RB_Child_'+k+'" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" ></td>'+
'<td id="RB_Child_'+k+'" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" ></td>'+
'<td id="RB_Rate_'+k+'" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" ></td>'+
'<td id="Agreed_'+k+'" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" ></td>'+
'<td id="Orig_'+k+'" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" ></td>'+
'<td id="Block_'+k+'" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" ></td>'+
'<td id="Pickup_'+k+'" contenteditable onkeypress="return event.charCode >= 48 && event.charCode <= 57" ></td>'+
'<td id="Slippage_'+k+'" onkeypress="return event.charCode >= 48 && event.charCode <= 57" ></td>'+
'</tr>';	

$("#BM_RbeTbl tbody").append(AddRoomBlockRow);

$("#RB_Day_"+k+"").datepicker({format: 'mm-dd-yyyy'}).on('changeDate', function(){
$(this).datepicker('hide');
});

//$("#RB_RoomType_"+k+"").append($("<option />").val("1").text("Test Room 1"));
//Get_Row_RoomTypes();

}

//////////

// $.ajax({
// method : "POST",
// url : "../Booking/assets/ajax/ajax_Deposit.php",
// data : {Get_Row_RoomTypes :"1"},
// success:function(data){
// Row_RoomTypes_json = JSON.parse(data);

// $.each(getDeposit_json, function( index, value1 ) {

// $("#billFunction_"+k+"").append($("<option />").val(value1.FunctID).text(value1.ResDesc+' - '+value1.startDate+' - '+value1.StartTime+' - '+value1.FunctID));

// });

// k++;

// }
// });

}



/////////


min-height: 100%;


$("#tbl_FoodNBeverages td").css("padding","0px !important");
$('#tbl_FoodNBeverages .table tbody>tr>td').css("padding","0px !important");
$('#FoodNBeverages__form .table tbody>tr>td').css("padding","0px !important");

////////

$('##tbl_FoodNBeverages .table tbody>tr>td').css("padding","0px !important");
$('#FoodNBeverages__form .table tbody>tr>td').css("padding","0px !important");

$('#ES_Cancel').on('click',function(){

ChangeServieDescription==false
ServiceItemSaved==true;
$('#EditServiceModal').modal('hide');

// if(ChangeServieDescription==true)
// {

// var values1 = new Array();

// $("#EditService_Table .ES_Price").each(function()
// {

// $(this).closest('tr').each(function() 
// {

// var i=0;
// var values = new Array();
// var itemname = $(this).find('.itemname').text();
// var Price = $(this).find('.ES_Price').text();
// var Qty = $(this).find('.ES_Qty').text();
// var Total = $(this).find('.ES_Total').text();

// values.push(itemname);
// values.push(Price);
// values.push(Qty);
// values.push(Total);

// values1.push(values);
// i++;

// var Menu2 =$(this).data('secondmenu');
// $(this).nextAll('.Menu3tr'+Menu2+'').each(function() 
// {

// var values = new Array();
// var itemname = $(this).children('td:eq(0)').text();
// var Price = '';
// var Qty = '';
// var Total = '';

// values.push(itemname);
// values.push(Price);
// values.push(Qty);
// values.push(Total);
// values1.push(values);
// i++;
// });

// });

// });

// $.ajax({
// method : "POST",
// url : "../Booking/assets/ajax/ajax_ServiceSummary.php",
// data : {ChangeServieDescription:"ChangeServieDescription",values1 :values1,ES_ServiceTimes:ES_ServiceTimes,ES_ServiceStart:ES_ServiceStart,ES_ServiceEnd:ES_ServiceEnd,FunctionID:FunctionID,ES_Category:ES_Category,previous_Serv_time:previous_Serv_time},
// success:function(data){
alert('data '+data);

// if(data=='updated')
// {
// ChangeServieDescription=false;
// ServiceItemSaved=true;
// $('#EditServiceModal').modal('hide');
// }
// else
// {

// alert('data not inserted');
// }

// }
// });

// }


// if(ServiceItemSaved==false)
// {
// if(confirm("Do you wish to save changes made ?"))
// {

// var rowCount = $('#EditService_Table >tbody >tr').length;

// if(rowCount==0)
// {

// alert("please Add a Service Item");
// return false;
// }

// var values1 = new Array();

// $("#EditService_Table .ES_Price").each(function()
// {

// $(this).closest('tr').each(function() 
// {

// var i=0;
// var values = new Array();
// var itemname = $(this).find('.itemname').text();
// var Price = $(this).find('.ES_Price').val();
// var Qty = $(this).find('.ES_Qty').val();
// var Total = $(this).find('.ES_Total').val();

// values.push(itemname);
// values.push(Price);
// values.push(Qty);
// values.push(Total);

// values1.push(values);
// i++;

// var Menu2 =$(this).data('secondmenu');
// $(this).nextAll('.Menu3tr'+Menu2+'').each(function() 
// {

// var values = new Array();
// var itemname = $(this).children('td:eq(0)').text();
// var Price = '';
// var Qty = '';
// var Total = '';

// values.push(itemname);
// values.push(Price);
// values.push(Qty);
// values.push(Total);
// values1.push(values);
// i++;
// });

// });

// });

// if($('#ES_ServiceTimes :selected').text()=="")
// {
// alert('please select service description ');
// return false;
// }

// else if($('#ES_ServiceStart').val()=='')
// {

// alert('please select service End Time');

// }

// else if($('#ES_ServiceEnd').val()=='')
// {

// alert('please select service End Time');

// } 
// else
// {

// var ES_ServiceTimes=$('#ES_ServiceTimes').val();
// var ES_ServiceStart=$('#ES_ServiceStart').val();
// var ES_ServiceEnd=$('#ES_ServiceEnd').val();
// var ES_Category=$('#ES_Category').val();

// var EdFunc_Date=$('#EdFunc_Date').val();

// var d = new Date();

// var month = d.getMonth()+1;
// var day = d.getDate();

// var CurrentDate = d.getFullYear() + '/' +
// (month<10 ? '0' : '') + month + '/' +
// (day<10 ? '0' : '') + day;

// if(new Date(EdFunc_Date) >= new Date(CurrentDate))
// {

// $.ajax({
// method : "POST",
// url : "../Booking/assets/ajax/ajax_ServiceSummary.php",
// data : {Add:"Add",values1 :values1,ES_ServiceTimes:ES_ServiceTimes,ES_ServiceStart:ES_ServiceStart,ES_ServiceEnd:ES_ServiceEnd,FunctionID:FunctionID,ES_Category:ES_Category},
// success:function(data){
alert('data '+data);

// if(data=='inserted')
// {
// ServiceItemSaved=true;
// $('#EditService_tblbdy').html(''); 			

// $('#EditServiceModal').modal('hide');
// }
// else
// {

alert('data not inserted');
// }

// }
// });

// }
// else
// {

// return false;
// }

// }

// }
// else
// {
// ServiceItemSaved==true;	
// $('#EditServiceModal').modal('hide');
// }
// }

// else
// {
// ServiceItemSaved==true;
// $('#EditServiceModal').modal('hide');
// }

});

///////////////////////


$('#ES_AddServ').on('click',function(){
ServiceStatus='Add';
$('#AddServiceDescription').modal('show'); 	
if(ServiceItemSaved==false)
{
if(confirm("Do you wish to save changes made ?"))
{

var values1 = new Array();

$("#EditService_Table .ES_Price").each(function()
{

$(this).closest('tr').each(function() 
{

var i=0;
var values = new Array();
var itemname = $(this).find('.itemname').text();
var Price = $(this).find('.ES_Price').val();
var Qty = $(this).find('.ES_Qty').val();
var Total = $(this).find('.ES_Total').val();

values.push(itemname);
values.push(Price);
values.push(Qty);
values.push(Total);

values1.push(values);
i++;

var Menu2 =$(this).data('secondmenu');
$(this).nextAll('.Menu3tr'+Menu2+'').each(function() 
{

var values = new Array();
var itemname = $(this).children('td:eq(0)').text();
var Price = '';
var Qty = '';
var Total = '';

values.push(itemname);
values.push(Price);
values.push(Qty);
values.push(Total);
values1.push(values);
i++;
});

});

});

if($('#ES_ServiceTimes :selected').text()=="")
{
alert('please select service description ');
return false;
}

else if($('#ES_ServiceStart').val()=='')
{

alert('please select service End Time');

}

else if($('#ES_ServiceEnd').val()=='')
{

alert('please select service End Time');

} 
else
{

var ES_ServiceTimes=$('#ES_ServiceTimes').val();
var ES_ServiceStart=$('#ES_ServiceStart').val();
var ES_ServiceEnd=$('#ES_ServiceEnd').val();
var ES_Category=$('#ES_Category').val();

var EdFunc_Date=$('#EdFunc_Date').val();

var d = new Date();

var month = d.getMonth()+1;
var day = d.getDate();

var CurrentDate = d.getFullYear() + '/' +
(month<10 ? '0' : '') + month + '/' +
(day<10 ? '0' : '') + day;

if(new Date(EdFunc_Date) >= new Date(CurrentDate))
{

$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_ServiceSummary.php",
data : {Add:"Add",values1 :values1,ES_ServiceTimes:ES_ServiceTimes,ES_ServiceStart:ES_ServiceStart,ES_ServiceEnd:ES_ServiceEnd,FunctionID:FunctionID,ES_Category:ES_Category},
success:function(data){
// alert('data '+data);

if(data=='inserted')
{

$('#AddServiceDescription').modal('show');
$('#EditService_tblbdy').html(''); 			

}
else
{

alert('data not inserted');
}

}
});

}
else
{

return false;
}

}

}
else
{
$('#AddServiceDescription').modal('show');  	
}
}
else
{
$('#AddServiceDescription').modal('show'); 	
}

});

/////////////////////////

Test Booking - Ford 24 aug living Room meeting 

Test case 

1 A. Availability --> Create Booking --> function 1 --> add 1 Service Item and 1 deposit  

1 B. Function agenda -->  Created function 2 --> add 1 Service Item and 1 deposit  -

function summary should reflects(without deposit)  in following:

Availability -->Edit Function--> Summary 
Booking-->Function agenda--> Summary 
Booking-->Function agenda-->  Edit Function-->Summary 

-----------------

2.Go to 
Booking --> Summary :
Booking -->billing -->  Summary :

Service amount , deposit and Amount due of function 1 and function 2 combined should display respectively



//////////


// if(Iframe != "Availability")
// {		
// var Id =$('#functionagendaTable trdata-fa_row="true"]').find('td:eq(1)').attr('id');
// var fnId;

// if(Id!=null)
// {
// fnId =Id.substr(Id.length - 3);
// }

// if(fnId != '' || fnId!=undefined)
// {
// FunctionID=fnId;
// }

// }else  
// {

if(($('#FunctionUpdateFunctionId').val()!="") ||($('#FunctionUpdateFunctionId').val()!=null)||
($('#FunctionUpdateFunctionId').val()!=0)||($('#FunctionUpdateFunctionId').val()!=undefined))

// if ($('#FunctionUpdateFunctionId').val().length > 0) {

// FunctionID=$('#FunctionUpdateFunctionId').val();

// }
// }

/////////////


(Iframe)	
($('#FunctionUpdateFunctionId').val())
// (funId1]);
// ($('#FunctionUpdateFunctionId').val());

// if((funId1] != null)|| (funId1] != ""))
// {
// SetFunctionSummary(funId1]);	
// }
// else
// {

////////

padding: 8px; */


$('tbl_FoodNBeverages td').css("padding","0px")
// var Id =$('#functionagendaTable trdata-fa_row="true"]').find('td:eq(1)').attr('id');
// var fnId =Id.substr(Id.length - 3);

// $('#FunctionUpdateFunctionId').val(fnId);

// SetFunctionSummary(fnId);
// $('.DepositsColumn').css("visibility","hidden");
// $('.AmountDueColumn').css("visibility","hidden");


////////////


echo "select sum(price) as price_sum,CAST(sum(Total) AS DECIMAL(12,2)) as Total_sum from tblServiceSummary ss join tbl_Category c on ss.CategoryID=c.CategoryID join funct f on ss.FunctionID=f.FunctID inner join EVENT tb on tb.BookingId= f.BookingId where tb.BookingId='".$_POST"BookingID"]."' group by ss.CategoryID";
//////

// if(FunctionName && Startdate && FunctionTime && FunctionRoom)
// {
// $("#ES_MeetingDrp").html($("<option />").val('1').text(FunctionName+'|'+Startdate+'|'+FunctionTime+'|'+FunctionRoom));
// }


/////////////


select sum(price) as price_sum,CAST(sum(Total) AS DECIMAL(12,2)) as Total_sum from tblServiceSummary ss join tbl_Category c on ss.CategoryID=c.CategoryID join funct f on ss.FunctionID=f.FunctID inner join EVENT tb on tb.BookingId= f.BookingId where tb.BookingId='364' group by ss.CategoryID

{"price_sum":"30","Total_sum":"180.00"}]

/////////////////////


$("<select>").append(
$("<option>" , {
text: "foo",
value: "bar"
})
).appendTo("td_billFunction_"+k+"");

796549
///////


// $('#BM_BillingFuncTbl tbody').append('<tr id='+value.ResID+'><td>'+value.ResDesc+' - '+value.startDate+' - '+value.StartTime+' - '+value.FunctID+'</td><td class="bookingCustName"></td></tr>');
// blling_FunctionID=value.FunctID;


/////////


// $("#DueDate_"+k+"").val(value.Duedate);
// $("#DuePaid_"+k+"").val(value.Datercvd);

// $("#DueDate_"+k+"").datepicker({format: 'mm-dd-yyyy'}).on('changeDate', function(){
// $(this).datepicker('hide');
// });

// $("#DuePaid_"+k+"").datepicker({format: 'mm-dd-yyyy'}).on('changeDate', function(){
// $(this).datepicker('hide');
// });	


// $(".datepick").datepicker();
// $("#FuncDe_Table td").css("line-height","2");

// $(document).on('focusout',"#AmtDue_"+k+"", function (evt) 
// {
// $(this).html(parseFloat($(this).html()).toFixed(2));
// });

// $(document).on('focusout',"#AmtPaid_"+k+"", function (evt) 
// {
// $(this).html(parseFloat($(this).html()).toFixed(2));
// });


//////////////////


// var totalCharge=0.00;

// $('#tblFunctionSummery .Charges').each(function(i){  

// var charge=parseFloat($(this).text()).toFixed(2);

// if(!isNaN(charge)) 
// {
// totalCharge=parseInt(totalCharge, 10) + parseInt($(this).text(), 10);
// }

// });

// $('#tblFunctionSummery .totalCharge').text('$'+parseFloat(totalCharge).toFixed(2));

var z=0.00,x=0.00,c=0.00;

$('#tblFunctionSummery tbody tr:lt(2)').each(function(i){ 
z +=parseFloat($(this).find('td:eq(1)').text().replace('$','')); 
})

$('#tblFunctionSummery tbody tr:lt(3)').each(function(i){ 
x +=parseFloat($(this).find('td:eq(1)').text().replace('$','')); 
})


$('#tblFunctionSummery tbody tr:lt(13)').each(function(i){ 
c +=parseFloat($(this).find('td:eq(1)').text().replace('$','')); 
})

('z,x,c');

(z);
(x);
(c);


//////////////

// var total_SubTotal=0.00;

// $('#tblFunctionSummery .SubTotal').each(function(i){  

// var SubTotal=parseFloat($(this).text()).toFixed(2);

// if(!isNaN(SubTotal)) 
// {
// total_SubTotal=parseInt(SubTotal, 10) + parseInt($(this).text(), 10);

// showTotalDeposits();

// }

// });

$('#tblFunctionSummery .total_SubTotal').text('$'+parseFloat(total_SubTotal).toFixed(2));



/////////////////


// var Charges =$(this).find('.Charges').text().replace('$','');
// var Discount =$(this).find('.Discount').text().replace('$','');
// var ServiceCharge =$(this).find('.ServiceCharge').text().replace('$','');
// $.ajax({
// method : "POST",
// url : "../Booking/assets/ajax/ajax_Summary.php",
// data : {showTotalDeposits : "showTotalDeposits",FunctionID:FunctionID} ,
// success : function(data)
// {

// var json = JSON.parse(data);

// if(json!=null)
// {
// $('#tblFunctionSummery .Deposits_SubTotal').text('$'+parseFloat(json.AmtRecvd_sum).toFixed(2));
// var AmountDue = Number(parseInt(total_SubTotal, 10)) - Number(parseInt(json.AmtRecvd_sum, 10));
// $('#tblFunctionSummery .AmountDue_SubTotal').text('$'+parseFloat(AmountDue).toFixed(2));

// }


// }

// });




///////////


// var Other =$(this).find('.Other').text().replace('$','');
// var stateTax =$(this).find('.stateTax').text().replace('$','');

// ('Charges');
// (Charges);

// ('Discount');
// (Discount);

// ('ServiceCharge');
// (ServiceCharge);

// ('Other');
// (Other);

// ('stateTax');
// (stateTax);

// $(this).find('.SubTotal').text((parseFloat(Charges) + parseFloat(Discount) + parseFloat(ServiceCharge) + parseFloat(Other) + parseFloat(stateTax)).toFixed(2));


///////////////////////

$("#tbl .className").remove();


544
if(isFutureDate==true)
{

$('.ServItemAct').attr('contenteditable','false');

}
else
{

$('.ServItemAct').attr('contenteditable','true');

}

/////////////////

$.each(json, function( index, value ) {

('value.AmtRecvd_sum');
(value.AmtRecvd_sum);

if(value.AmtRecvd_sum!=null)
{
$('#tblFunctionSummery .Deposits_SubTotal').text('$'+parseFloat(value.AmtRecvd_sum).toFixed(2));
}

});

/////////

Wizard->Daily view(till Lost Business) 


Section
Inquiry
Lost Business



// $('#FuncDe_Save').on('click',function(){
// var values = new Array();
// var i=0;
// var isset=false;
// var values1 = new Array();
// $.each($("inputname='FuncDe_checkbox]']:checked"), function() {
// var values = new Array();
// values.push(i);
// $(this).closest('tr').find("input").each(function(){
// if(this.value=='' ||this.value==null)
// {
// alert('Please enter the required fields');
// isset= false;			
// if(isset== false)
// {
// return false;				
// }				
// }
// else
// {				
// values.push(this.value);
// values.join(",");
// isset= true;
// }
// });
// $(this).closest('tr').find("select").each(function() {
// if(this.value=='' ||this.value==null)
// {
// alert('Please enter the required fields');
// isset1= false;

// if(isset1== false)
// {
// return false;
// }						
// }
// else
// {
// values.push(this.value);
// values.join(",");
// isset1= true;
// }
// });
// values1.push(values);
// i++;
// });
//(values1);

// if(values1==0||values1=='' ||values1==null)
// {
//	('11');
// alert('please select at least one checkbox');
// return false;
// }
// else
// {
//		(values1);

('avail FunctionID'+ FunctionID);

// if(isset==true)
// {

// if(FunctionID)
// {
// $.ajax({
// method : "POST",
// url : "../Booking/assets/ajax/ajax_AddDeposit.php",
// data : {FunctionID:FunctionID,values :values1},
// success:function(data){
alert('data '+data);

// if(data=='inserted')
// {

$('#FuncDe_Table tbody').html('');
// $("#FuncDe_tbl").html('');				
// $('#FuncDe_FuncDeposit').modal("hide");

// }
// else
// {

// }

// }
// });
// }
// else
// {
// alert('Function must be Loaded or saved before creating New Deposits');

// }
// }
// }		


// });



///////////////////////////
////////////////////////////////////

Next Friday deliverable 

Availability - Deposit (with intrgration with Availability  - Summary)

Booking - billing - Deposit  (with intrgration sync with Booking - Summary)

Setup For Packages.

Daily view of Wizard in Availability with validation and insert functionality all checks of once and every options entries
with range and time slotting 
- section with any and ayc
-lost business and inquiry from wizard daily



1.Lost Business - 09 Aug Ford Booking - when change tentative to lost business and back to Tentative , it will show to Availibility Grid (I believe it was working , There could be grid refresh Issue )

Video

https://mail-gmail-4.tinytake.com/sf/MjgxODMyN184NDYxNzM1


2.Actual column for Service items are updating 

Video 

https://mail-gmail-4.tinytake.com/sf/MjgxODMzNV84NDYxNzY3


$(document).on('focusout', " #AmtDue_"+k+" ", function (evt) 
{
//$(" #AmtDue_"+k+" ").text(($(" #AmtDue_"+k+" ").val()).toFixed(2));

$(" #AmtDue_"+k+" ").text($(" #AmtDue_"+k+" ").val().toFixed(2));


});

/////////

// var FuncDecasttable = '<tr id="FuncDe_tr_'+k+'"><td style="padding:0px;"><div class="col-sm-12 col-md-12 col-lg-12 form-control" style="border:none;"><input type="checkbox" name="FuncDe_checkbox]" style="margin:5px;"></div></td><td><input type="number" id="AmtDue_'+k+'" class="form-control FuncDe_AmtDue maskedExt" ></td><td><input type="text" id="DueDate_'+k+'"  class="form-control FuncDe_DueDate maskedExt" readonly></td><td><input type="number" id="AmtPaid_'+k+'" class="form-control FuncDe_AmtPaid maskedExt" ></td><td><input type="text" id="DuePaid_'+k+'" class="form-control FuncDe_DueDate maskedExt" readonly></td><td><input type="number" id="Reciept'+k+'" class="form-control FuncDeReciept"></td></tr>';  



////////////

863


$('#BM_DelInv').on('click',function()
{

('before');
(InvoiceArray);

if(confirm('Do you really want to delete the invoice ?'))
{

for (var i = 0; i < InvoiceArray.length; i++)
{

InvoiceArray.splice(i, 1);

}

('after');
(InvoiceArray);


// $('#tbl_Functions_in_invoice tbody tr').remove();
// $('#BM_InvoiceCreated option:selected').remove();


}

})
///////////////////////////

if(InvoiceArray.length!=0)
{

InvoiceArray.map(function (x) {

x.invoice_Functions.map(function (y) {

if(y==FunctionDetails)
{
('FunctionDetails exists')
return y;
}
else{


$('#tbl_FunctionsBilledToCustomer tbody').append('<tr data-functid='+value.FunctID+'><td><input type="checkbox" id="chk_Billing_Fn" name="chk_Billing_Fn]" class="chk_Billing_Fn" style="margin-left: 0px;"></td><td>'+FunctionDetails+'</td></tr>');


return null;
}

});

});

}

////////////////////


// $.each(InvoiceArray, function (i, ob) {

// if(FunctionDetails!=ob.invoice_Functions)
// {

// ('not equal');

// $('#tbl_FunctionsBilledToCustomer tbody').append('<tr data-functid='+value.FunctID+'><td><input type="checkbox" id="chk_Billing_Fn" name="chk_Billing_Fn]" class="chk_Billing_Fn" style="margin-left: 0px;"></td><td>'+FunctionDetails+'</td></tr>');


// }

// });



//////////////////


// $Functionexist=$conn->query("select FunctionID from tbl_billingFunction where BookingID=".$_POST'BookingID']." AND FunctionID=".$_POST'FunctionID']." ");

// if($Functionexist)
// {

// $updatebillingFunction = $conn->query("update tbl_billingFunction set Actual='".$fn'Actual']."', Status='".$fn'Status']."' where BookingID=".$_POST'BookingID']." and FunctionID=".$_POST'FunctionID'].", FunctionName='".$fn'FunctionName']."' ");

// }
// else
// {
// $InsertbillingFunction = $conn->query("insert into tbl_billingFunction set BookingID=".$_POST'BookingID'].", FunctionID=".$_POST'FunctionID'].", FunctionName='".$fn'FunctionName']."', date='".$fn'date']."', Exp='".$fn'Exp']."', Gtd='".$fn'Gtd']."', Actual='".$fn'Actual']."', Status='".$fn'Status']."'");

// }




///////////////////////


// $updateServiceItem=$conn->query("delete from tbl_billingServiceItems where BookingID=".$_POST'BookingID']." AND FunctionID=".$_POST'FunctionID']." ");


// $deletePreviousServiceItem=$conn->query("delete from tbl_billingServiceItems where BookingID=".$_POST'BookingID']." AND FunctionID=".$_POST'FunctionID']." ");


////////////


// $InsertServiceItem = $conn->query("insert into tbl_billingServiceItems set  BookingID=".$_POST'BookingID'].",FunctionID='".$_POST'FunctionID']."', items='".$ServiceItem'items']."', Qty='".$ServiceItem'Qty']."', Actual='".$ServiceItem'Actual']."'");

//////////


// Array
// (
// 0] => Array
// (
// 0] => Array
// (
// FunctionName] => Meeting
// date] => 2018-08-02
// Exp] => 12
// Gtd] => 12
// Actual] => 13
// Status] => Confirmed
// ServiceItems] => Array
// (
// 0] => Array
// (
// 0] => Array
// (
// items] => Avacado Stuffed Tomato
// Qty] => 4
// Actual] => 0
// )

// )

// 1] => Array
// (
// 0] => Array
// (
// items] => Baby Spinach Salad
// Qty] => 12
// Actual] => 0
// )

// )

// )

// )

// )

// )


///////////////////////////////

foreach($myArray as $item)
{

echo $item;
echo $item'FunctionName'];


foreach($item'ServiceItems'] as $serviceItems)
{

echo $serviceItems'items'];

}
// $InserBilling = $conn->query("insert into depositt set  LocID='".base64_encode($_SESSION'locId'])."', EvtID='1', Amtdue='$item1]', Duedate='$item7]', Amtrecvd='$item3]', Datercvd='$item8]', FunctID='".$_POST'FunctionID']."'");
exit();
}

////////////////////////


Availability->click on Booked Time slot -> Create a new function by clicking on another vacant  grid.-> save function. This booking should be reflected in Existing Booking with corresponding function Agenda.

Availability -> Create a new function-> save function. This booking should be reflected in Existing Booking with corresponding function Agenda

///////////////

// var Functions=new Array();
// $("#BM_BillingFunctionsTbl tr").each(function()
// {

// var ServiceItems=new Array();
// $("#BM_BillingServiceTbl tr").each(function()
// {

// if($(this).find('td:eq(0)').text()!="")
// {
// var ServiceItem= 
// 
// { 
// items: $(this).find('td:eq(0)').text(), 
// Qty: $(this).find('td:eq(1)').text(),
// Actual: $(this).find('td:eq(2)').text()
// }
// ];

// ServiceItems.push(ServiceItem)
// }
// });

// if($(this).find('td:eq(0)').text()!="")
// {
// var Function= 
// 
// { 
// FunctionName: $(this).find('td:eq(0)').text(), 
// date: $(this).find('td:eq(1)').text(),
// Exp: $(this).find('td:eq(2)').text(), 
// Gtd: $(this).find('td:eq(3)').text(),
// Actual: $(this).find('td:eq(4)').text(), 
// Status: $(this).find('td:eq(5)').text(),
// ServiceItems:ServiceItems
// }
// ];

// Functions.push(Function)

// }

// });


///////////////


///////////////////////////////////


//$("#BM_BillingServiceTbl tbody").html(data);

//echo '<tr tabindex="-1" data-secondmenu="'.$i.'">
// echo '<tr tabindex="-1" data-secondmenu="'.$i.'" class="ServItem">
// <td class="itemname">'.$row_ServiceItem->Item.'</td>
// <td class="ServItem_Qty editable">'.$row_ServiceItem->Quantity.'</td>
// <td id="ServItemAct" class="ServItemAct">0</td>
// </tr>';



////////////////////


// var BillingFunction=];

// BillingFunction"FunctionName"] = $(this).find('td:eq(0)').text();
// BillingFunction"date"] = $(this).find('td:eq(1)').text();
// BillingFunction"Exp"] = $(this).find('td:eq(2)').text();
// BillingFunction"Gtd"] = $(this).find('td:eq(3)').text();
// BillingFunction"Actual"] = $(this).find('td:eq(4)').text();
// BillingFunction"Status"] = $(this).find('td:eq(5)').text();

// $("#BM_BillingServiceTbl tr").each(function()
// {
// var Fn_ServiceItem = ];

// Fn_ServiceItem"items"] = $(this).find('td:eq(0)').text();
// Fn_ServiceItem"Qty"] = $(this).find('td:eq(1)').text();
// Fn_ServiceItem"Actual"] = $(this).find('td:eq(4)').text();

// BillingFunction"ServiceItem"] = Fn_ServiceItem;
// });

// Bill"BillingFunction"]=BillingFunction;


// var BillingFunction= 
// 
// { 
// FunctionName: $(this).find('td:eq(0)').text(), 
// date: $(this).find('td:eq(1)').text(),
// Exp: $(this).find('td:eq(2)').text(), 
// Gtd: $(this).find('td:eq(3)').text(),
// Actual: $(this).find('td:eq(4)').text(), 
// Status: $(this).find('td:eq(5)').text()
// }
// ]; 

//Bill

// $("#BM_BillingServiceTbl tr").each(function()
// {
// var Fn_ServiceItem = new array();


// var Fn_ServiceItem= 
// 
// { 
// items: $(this).find('td:eq(0)').text(), 
// Qty: $(this).find('td:eq(1)').text(),
// Actual: $(this).find('td:eq(2)').text()
// }
// ];

Fn_ServiceItem"items"] = $(this).find('td:eq(0)').text();
Fn_ServiceItem"Qty"] = $(this).find('td:eq(1)').text();
Fn_ServiceItem"Actual"] = $(this).find('td:eq(4)').text();

// Bill"ServiceItem"].push(Fn_ServiceItem);
// });


//////////////////



unit testing will done on esp.systems/esp-project

steps
console is clean - 
SpellCheck -  
UI is same as discussed - 
All Controls and their Functionality are working 
All validations are working if required 
All CRUD operations are working if required 
If any Controls/ screens is not functional - please mention before unit Testing


///////////////

// ('FunctActualValue');
// (FunctActualValue);
// ($('BM_BillingServiceTbl trdata-selectedservitem="true"]').find('.ServItemAct'));
// $('BM_BillingServiceTbl trdata-selectedservitem="true"]').find('.ServItemAct').html('123');
// $('BM_BillingServiceTbl trdata-selectedservitem="true"]').find('.ServItemAct').html(FunctActualValue);
// $('.ServItemAct').html('123');

/////////////////

SelectedServItem_Qty =$('trdata-SelectedServItem="true"]').find('td:eq(1)').text();

// ($('trdata-SelectedServItem="true"]').find('td:eq(0)').text());
// ($('trdata-SelectedServItem="true"]').find('td:eq(1)').text());

// (FunctGtdVal);

if(SelectedServItem_Qty==FunctGtdVal)
{

var FunctActualValue=$('#BM_BillingFunctionsTbl tr').find('td:eq(4)').text();

$("#BM_BillingServiceTbl trdata-selectedservitem='true'] .ServItemAct").each(function()
{

($(this).html(FunctActualValue));
})

}

}

///////

if ($('#Use_Qty_val').is(':checked'))
{

if(SelectedServItem_Qty!=FunctGtdVal)
{

('not equal');

$("#BM_BillingServiceTbl trdata-selectedservitem='true'] .ServItemAct").each(function()
{

// ($(this).closest('tr').children('td:eq(1)').text());
// $(this).html($(this).closest('tr').children('td:eq(1)').text());

})

}

}

////////



// ('FunctActualValue');
// (FunctActualValue);
// ($('BM_BillingServiceTbl trdata-selectedservitem="true"]').find('.ServItemAct'));
// $('BM_BillingServiceTbl trdata-selectedservitem="true"]').find('.ServItemAct').html('123');
// $('BM_BillingServiceTbl trdata-selectedservitem="true"]').find('.ServItemAct').html(FunctActualValue);
// $('.ServItemAct').html('123');

//////////


SpellCheck 
UI is same as discussed
All Controls are working
All validations are working
All CRUD operations are working
If any Controls/ screens is not functional - please mention before unit Testing

///////////

('ServItem_Qty');

ServItem_Qty=0;

ServItem_Qty= $(this).find('td:eq(1)').text();
(ServItem_Qty);


////////


// $("#BM_CustomersearchModal").on('hidden.bs.modal', function(){

// if($('#billingModal').hasClass('in'))
// {

// ('billingModal 1 open');	
// $("#billingModal").modal("show");
// $('#BM_BCB').val(json.CustName);			

// }
// else
// {

// ('billingModal 1 open');
// }

// });

//////////


select * from funct order by FunctID desc

select * from EVENT order by bookingId desc


select * ,ts.id as StatusID,ts.status from EVENT tb inner join funct fn on tb.BookingId= fn.BookingId   join FUNCTNAMES functnames on functnames.ResID = fn.FunctName join tbl_status ts on tb.status=ts.id where tb.bookingId=186

select * from tbl_status

select * ,ts.id as statusId,ts.status from EVENT tb inner join funct fn on tb.BookingId= fn.BookingId   join FUNCTNAMES functnames on functnames.ResID = fn.FunctName join tbl_status ts on tb.status=ts.id 

select * from funct order by StartDate desc

select * from funct order by FunctID desc

////////////


<td>'+value.ResDesc+' - '+value.startDate+' - '+value.Gtd+' - '+value.FunctID+'</td><td class="bookingCustName"></td>

///////////


Booking -Billing -screen 2 and screen 3 (untill Produce Check)
Booking-Summary
Availibility -Services -Service item -add Menus and SubMenus for 3 more Categories

https://mail-gmail-4.tinytake.com/sf/Mjc5OTg2Nl84NDAzMjM3


select * from funct where bookingID=181

select * from EVENT tb inner join funct fn on tb.BookingId= fn.BookingId  inner join depositt dp on dp.FunctID = fn.FunctID  join FUNCTNAMES functnames on functnames.ResID = fn.FunctName where tb.BookingId=181


select * from EVENT tb inner join funct fn on tb.BookingId= fn.BookingId  join FUNCTNAMES functnames on functnames.ResID = fn.FunctName where tb.BookingId=181

select * from EVENT order by bookingId desc



select * from EVENT tb inner join funct fn on tb.BookingId= fn.BookingId  join FUNCTNAMES functnames on functnames.ResID = fn.FunctName where tb.BookingId=182


select * from EVENT tb inner join funct fn on tb.BookingId= fn.BookingId  join FUNCTNAMES functnames on functnames.ResID = fn.FunctName where tb.BookingId='182'

select * from EVENT tb inner join funct fn on tb.BookingId= fn.BookingId   join FUNCTNAMES functnames on functnames.ResID = fn.FunctName where tb.BookingId=182

select * from EVENT tb inner join funct fn on tb.BookingId= fn.BookingId   join FUNCTNAMES functnames on functnames.ResID = fn.FunctName

select * from depositt

insert into depositt set  LocID='MTAwMQ==', EvtID='1', Amtdue='9', Duedate='07-28-2018', Amtrecvd='33', Datercvd='07-28-2018', FunctID='664'

//////////////////


All Controls are working 
All validations are working 
All CRUD operations are working
If any Controls/ screens is not functional - please mention before unit Testing 

var blngcasttable1 = '<tr id="blng_tr_'+k+'">

<td>
<input type="number" id="AmtDue_'+k+'" class="form-control blng_AmtDue maskedExt" >
</td>

<td>
<input type="text" id="DueDate_'+k+'"  class="form-control blng_DueDate maskedExt" readonly>
</td>

<td>
<input type="number" id="AmtPaid_'+k+'" class="form-control blng_AmtPaid maskedExt" ></td>


<td>
<input type="text" id="DuePaid_'+k+'" class="form-control blng_DueDate maskedExt" readonly></td>


<td><select id="Function_'+k+'" class="form-control blngReciept"/></td>
<td><input type="text" id="Reciept_'+k+'" class="form-control"></td>
<td><input type="text" id="Notes_'+k+'" class="form-control"></td>

</tr>';  


////////

$GetDespoit= $conn->query("select Amtdue,Duedate,Amtrecvd,Datercvd,ResDesc ,functnames.ResID from depositt dp inner join EVENT bkg on dp.FunctID = bkg.FunctID inner join funct fn on bkg.FunctID = fn.FunctID  join FUNCTNAMES functnames on functnames.ResID = fn.FunctName where bkg.FunctID='".$_POST'FunctID']."'");

// $GetDespoit= $conn->query("select distinct ResDesc ,functnames.ResID from depositt dp inner join EVENT bkg on dp.FunctID = bkg.FunctID inner join funct fn on bkg.FunctID = fn.FunctID  join FUNCTNAMES functnames on functnames.ResID = fn.FunctName where bkg.FunctID='".$_POST'FunctID']."'");


////////

getDeposit();


// $.ajax({
// method : "POST",
// url : "../Booking/assets/ajax/ajax_AddDeposit.php",
// data : {FunctionID:FunctionID,values :values1},
// success:function(data){

// }
// });



////////////////////////


//getDeposit_json = JSON.parse(data);
(getDeposit_json);
$.each(getDeposit_json, function( index, value ) {

//(value);

// $('#BM_BillingFuncTbl tbody').append('<tr id='+value.ResID+'><td>'+value.ResDesc+' - '+value.startDate+' - '+value.StartTime+' - '+value.FunctID+'</td><td class="bookingCustName"></td></tr>');

});

//////////


delete from funct where StartDate='2018-08-03'

delete from EVENT where bookingID in (161,162)

/////

Booking -> Existing Booking -> click Booking Search (with Book Sign)

Enter Booking ID - 39 - Search --result comes- Click on Result

Click Second Tab(Functional Agenda) --> Highlight row -->Click Edit Function 

Can he tell me specific Function Date and existing Room for   Function for Ford  which he is Editing ?

for Ford /25 July  I Edited function room from  Front Porch Room  to living Room .It will throws right Validation "Cannot set Setup Knock down time"  becasue function already created on Living Room 


addSercDesc_EndTime


addSercDesc_OK

1:  Add Service Description-> change Start time and end time is not reflect in Edit service modal.
2:  Number People control have increment and decrement buttons.
3:  Change Serv Description Modal is open after deleting the serv time. - retest
4:  PPL field is not reset in Add serv Time -> Add Service Description modal.
5:  Validation is not working in insert blank row button.
6:  Header is deleted after selecting and deleting rows. - working same in old SOftware
7:  Chnage serv Description-> field are not populating. -retest
8:  Add Service Item -> Select multiple options -> will add multiple rows in edit services modal.
9:  Some fields don't have input controls.
10: Click Delete Serv Time -> will not delete Service Items in table.
11: delete Serv Time -> Add serv time ->start time and end time are not populated.



Add Service Description-> change Start time and end time is not reflect in Edit service modal.


Availibility 

add availibility Diary

funtion Agenda - check all controls - check when no value selected

Default Catering Contact - plz chk on availibility module 

Forecasting ,Summary , Edit Services  - under progress


////////////////


//$('trdata-selectedRow="true"]').children('td:eq(0)').css({border:"1px solid black"});

// $(this).children('td:eq(0)').css({border:"1px solid black"});
// $(this).nextAll('tr').children('td:eq(0)').css({border:"none"});
// $(this).prevAll('tr').children('td:eq(0)').css({border:"none"});

//.hide('');
//$("#EditService_Table tr").not($(this)).attr("data-selectedRow", "false");

////////////////////

// var itemname = row.find('.itemname').val();

// var ES_Qty  = row.find('.ES_Qty').val();
// var ES_Total = row.find('.ES_Total').val();

// (itemname);

// $(this).closest('tr').find("input").each(function() 

// });
// Menu2_itemname=$(this).find('td:eq(2) input').text();
// Menu2_price=$(this).find('td:eq(3) input').text();

//($(this).find('.ES_Price'));
//($(this).find('td:eq(3) input').text());

// $(".ES_Price").each(function() {
//alert($(this).val());
// ($(this).val());
// });

////////////////////
///////////////////////////////


// if($myArray==null)
// {
// $InsertServiceSummary = $conn->query("insert into tblServiceSummary set FunctionID='".$_POST'FunctionID']."', Service_time='".$_POST'ES_ServiceTimes']."' ,ES_ServiceStart='".$_POST'ES_ServiceStart']."',ES_ServiceEnd='".$_POST'ES_ServiceEnd']."'");

// }
// else
// {	
// foreach($myArray as $item)
// {

// $InsertServiceSummary = $conn->query("insert into tblServiceSummary set FunctionID='".$_POST'FunctionID']."', Service_time='".$_POST'ES_ServiceTimes']."' ,ES_ServiceStart='".$_POST'ES_ServiceStart']."',ES_ServiceEnd='".$_POST'ES_ServiceEnd']."', Item='$item2]', price='$item3]', Quantity='$item4]', Total='$item5]' ");

// }
// }


//////////////


$('#ES_Save').on('click',function(){

var values = new Array();
var i=0;
var isset=false;

var values1 = new Array();
$.each($("inputname='ES_checkbox]']:checked"), function() {
var values = new Array();
values.push(i);
$(this).closest('tr').find("input").each(function() 
{

if(this.value.trim()=='' ||this.value.trim()==null)
{
alert('Please enter the required fields');
isset= false;

if(isset== false)
{
return false;

}

}
else
{

values.push(this.value.trim());
values.join(",");
isset= true;
}

});

values1.push(values);

i++;


});
if(values1==0||values1=='' ||values1==null)
{

alert('please select at least one service item First');
return false;

}
else
{

if(isset==true)
{

if($('#ES_ServiceTimes :selected').text()=="")
{
alert('please select service description ');
return false;
}

else if($('#ES_ServiceStart').val()=='')
{

alert('please select service End Time');

}

else if($('#ES_ServiceEnd').val()=='')
{

alert('please select service End Time');

} 
else
{

var ES_ServiceTimes=$('#ES_ServiceTimes :selected').text();
var ES_ServiceStart=$('#ES_ServiceStart').val();
var ES_ServiceEnd=$('#ES_ServiceEnd').val();

$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_ServiceSummary.php",
data : {Add:"Add",values :values1,ES_ServiceTimes:ES_ServiceTimes,ES_ServiceStart:ES_ServiceStart,ES_ServiceEnd:ES_ServiceEnd,FunctionID:FunctionID},
success:function(data){
alert('data '+data);

if(data=='inserted')
{
$('#EditServiceModal').modal('hide');

}
else
{

alert('data not inserted');
}

}
});

}
}
}		


});

////////////////

$("#tbl_FoodNBeverages trdata-menu2-id]").each(function()
{

if($(this).css("background-color") === 'rgb(173, 216, 230)')
{
Menu2_itemname=$(this).find('td:eq(2)').text();
Menu2_price=$(this).find('td:eq(3)').text();

$("#EditService_tblbdy").append('<tr id="ES_tr_'+j+'"><td>'+Menu2_itemname+'</td><td><input step="0.01" type="number" id="ES_Price_'+j+'" class="form-control maskedExt" value="'+Menu2_price+'" ></td><td><input type="number" id="ES_Qty_'+j+'" class="form-control " ></td><td><input type="number" id="ES_Total_'+j+'" class="form-control maskedExt" ></td></tr>');


}
if($(this).data('menu2-id')!=null)
{

var Menu2 =$(this).data('menu2-id');
var Menu3_itemname;

var Menu3RowSelected=false;

$.each($(this).nextAll('.tr'+Menu2+''), function() 
{

if($(this).css("background-color") === 'rgb(173, 216, 230)')
{

("selected row is colored");
Menu3RowSelected=true;	 
Menu3_itemname=$(this).find('td:eq(2)').text();
$("#EditService_tblbdy").append('<tr id="ES_tr_'+j+'"><td>'+Menu2_itemname+'</td><td><input step="0.01" type="number" id="ES_Price_'+j+'" class="form-control maskedExt" value="'+Menu2_price+'" ></td><td><input type="number" id="ES_Qty_'+j+'" class="form-control " ></td><td><input type="number" id="ES_Total_'+j+'" class="form-control maskedExt" ></td></tr>');

}

});



$.each($(this).nextAll('.tr'+Menu2+''), function() 
{

if(Menu3RowSelected==false)
{

("now row is colored");	
Menu3_itemname=$(this).find('td:eq(2)').text();
$("#EditService_tblbdy").append('<tr id="ES_tr_'+j+'"><td>'+Menu3_itemname+'</td><td></td><td><input type="number" id="ES_Qty_'+j+'" class="form-control " ></td><td><input type="number" id="ES_Total_'+j+'" class="form-control maskedExt" ></td></tr>');

}

});


}

});


///////////////

// else
// {
// Menu3_itemname=$(this).find('td:eq(2)').text();
// $("#EditService_tblbdy").append('<tr id="ES_tr_'+j+'"><td>'+Menu3_itemname+'</td><td></td><td></td><td></td><td></td></tr>');

// }


//////////
/////////////////

var row1 =$("#tbl_FoodNBeverages tr").not($(this));


$(row).each(function()
{

//($(this));

// $(this).filter(function(){
// return $(this).css("background") == "lightblue";
// }).addClass('coloredRow');

// $(this).filter(function(){
// return $(this).css("background") != "lightblue";
// }).removeClass('coloredRow');

// if($(this).css("background") == "lightblue")
// {
// ('colored Rows');

// }

// ($(this));
// if($(this).css("background") == "lightblue")
// {

// ("color Rows");
// ($(this));
// }

// if($(this).css('background') == 'lightblue' )
// {
// ('colored row');	
// ($(this));
// }
});

///////////////////////////////
//////////////////////////////////

// var row ;

// if($("#EditService_Table tr").css('background') == 'lightblue' ) 
// {
// row =$(this);
// }

// $("#tracker_table tr#master").click(function(){
// if($(this).css("background-color") == "rgb(255, 255, 255)") { 
// $(this).css("background-color", "#C2DAEF");
// }
// });



//////////////////
///////////////////////////
////////////////////////////////



// var ParentRowMenus = ];
// $(row).each(function() 
// {

// ("menu2-id");	
// ($(this).data("menu2-id"));

// if($(this).data("menu2-id")==null)
// {

// var ParentRow=$(row).prevAll(".Menu2:first");

// ("ParentRowMenus");	
// (ParentRowMenus);

// ((jQuery.inArray(ParentRow.data("menu2-id"), ParentRowMenus) == -1));	


// if(jQuery.inArray(ParentRow.data("menu2-id"), ParentRowMenus) == -1)
// {
// ParentRowMenus.push(ParentRow.data("menu2-id"));

// ("ParentRowMenus");	
// (ParentRowMenus);

// ParentRow_itemname=ParentRow.find('td:eq(2)').text();
// ParentRow_price=ParentRow.find('td:eq(3)').text();


// ("ParentRow_itemname");	
// (ParentRow_itemname);


// $("#EditService_tblbdy").append('<tr id="ES_tr_'+j+'"><td>'+ParentRow_itemname+'</td><td>'+ParentRow_price+'</td><td></td><td></td><td></td></tr>');
// }
// }	
// itemname=$(this).find('td:eq(2)').text();
// price=$(this).find('td:eq(3)').text();

// var FuncDecasttable = '<tr id="ES_tr_'+j+'"><td>'+itemname+'</td><td>'+price+'</td><td></td><td></td><td></td></tr>';  

// $("#EditService_tblbdy").append(FuncDecasttable);

// });


// $(document).on('focusout', "#ES_Qty_"+(j)+"", function (evt) 
// {

// $("#ES_Total_"+(j-1)+"").val(parseFloat(($("#ES_Price_"+(j-1)+"").val())*$("#ES_Qty_"+(j-1)+"").val()).toFixed(2));

// });

// j++;
// k=j;
//$("#FoodNBeverages_Modal").modal('hide');

//});


//return j;	







////////////////////////////////
///////////////////////////////////////
/////////////////////////////////////////////


// var isMouseDown = false;
// $("#our_table td")
// .mousedown(function () {
// isMouseDown = true;
// $(this).toggleClass("highlighted");
// return false; // prevent text selection
// })
// .mouseover(function () {
// if (isMouseDown) {
// $(this).toggleClass("highlighted");
// }
// });

// $(document)
// .mouseup(function () {
// isMouseDown = false;
// });
//$("#our_table td").mousedown(function () {
//$(this).toggleClass("highlighted");	 

//////


'rgb(173, 216, 230)');
//($(this).css("background"));

// if($(this).css("background-color")=== 'rgb(173, 216, 230)')
// {
// ($(this).css("background-color"));
// $(this).css("background-color","white");
// ($(this).css("background-color"));
// }

//////////



$(this).css({background:"none"});
$(this).attr("data-selected", "false");

var isDown = false;  
$(document).mousedown(function() {
isDown = true;      // When mouse goes down, set isDown to true
})
.mouseup(function() {
isDown = false;    
});

$("#tbl_FoodNBeverages tr").attr("data-selected", "false");

$(document).on('mouseover', "#tbl_FoodNBeverages tr", function (evt) 
{

if(isDown) {       

$(this).toggleClass("highlighted");
//.css({background:"lightblue"});
$(this).attr("data-selected", "true");
}

}).on('mousedown', "#tbl_FoodNBeverages tr", function (evt)
{

});

////////////////

$(document).on('mousdown', "#tbl_FoodNBeverages trdata-menu2-id]", function (evt)
{  
isMouseDown = true;
//$(this).css("background", "lightblue");
$(this).css("background", $(this).css("background") === 'lightblue' ? 'white' : 'lightblue');
//toggleClass("highlighted");
return false; // prevent text selection
})
//.mouseover(function () {
.on('mouseover', "#tbl_FoodNBeverages trdata-menu2-id]", function (evt)
{
if (isMouseDown) {
// $(this).css("background", "lightblue");
$(this).css("background", $(this).css("background") === 'lightblue' ? 'white' : 'lightblue');
//.toggleClass("highlighted");
}
})
.on('mouseup', "#tbl_FoodNBeverages trdata-menu2-id]", function (evt)
{
isMouseDown = false;
});

// $(document)
// .mouseup(function () {
// isMouseDown = false;
// });



/////////

var isDown = false;  
$(document).mousedown(function() {
isDown = true;      // When mouse goes down, set isDown to true
})
.mouseup(function() {
isDown = false;    
});

$("#tbl_FoodNBeverages tr").attr("data-selected", "false");

$(document).on('mousdown mouseover', "#tbl_FoodNBeverages tr", function (evt) 
{


if(isDown) {       

$(this).css({background:"lightblue"});
$(this).attr("data-selected", "true");
}

});

/////////////



// var secondRow=row.prev('trdata-menu2-id]');

// if(secondRow==null)
// {


///////////////


// secondRow=$(row).prevAll(".Menu2:last");

// }

// (secondRow)	;

// $(secondRow).each(function() 
// {

// itemname=$(this).find('td:eq(2)').text();
// price=$(this).find('td:eq(3)').text();

// var FuncDecasttable = '<tr id="ES_tr_'+j+'"><td>'+itemname+'</td><td>'+price+'</td><td></td><td></td><td></td></tr>';  

// $("#EditService_tblbdy").append(FuncDecasttable);

// });

// ('menu3');
// (row.data('menu3-id'));

// var itemname= '';
// var price= 0;

//////////////
//if selected row is sub Menu - add Parent Menu 


////////////////////////////////////

// $(document).on('mousedown mouseup', "#tbl_FoodNBeverages td", function (evt) 
// {
// $(this).addClass('selected');
// $(this).siblings().addClass('selected');


// });

// $(document).on({
// mouseenter: function() {
// ('in');
// },
// mouseleave: function() {
// ('out');
// }
// }, '.selector');


// $('td').mouseover(function(){
// ($(this));

// $(this).addClass('hover');
// var valueOfTd = $(this).find('td:first-child').text();
// alert(valueOfTd); // Do here what you want with the value.
// document.location.href = 'https://www.google.com/'+ valueOfTd;

// });



// $(document).on('mousedown mouseup', "#tbl_FoodNBeverages td", function (evt) 
// {
// $(this).addClass('selected');
// $(this).siblings().addClass('selected');


// });



///////////

My delievery

For Next Tuesday


For Next Friday 

////////////////////

For Next Tuesday
Sangeeta 

"Complete Daily view of Wizard in Availability with validation and insert functionality all checks of once any every options entries
with range and time slotting"

Neeraj

In Availibility Only- Service , Summary section

Himanshu
In Booking Only - functional agenda 

////////

For Next Friday 
Neeraj
Booking - Billing Module -First Screen (Except ShowSummary)

Himanshu

////////////////////////

Himanshu 

('menu2 in upper row');

var secondRow=row.prev('trdata-menu2-id]');


// if($(this).hasClass(".ItemName"))
// {
// itemname=$(this).find('.ItemName').text();
// price=$(this).find('.price').text();
// }
// else
// {
//itemname=$(this).find('.selected').text();
//price=$(this).find('.selected').text();
// }

///////


$(secondRow).each(function() 
{

(secondRow.find('td:eq(2)').text());
(secondRow.find('td:eq(3)').text());

});

//////////

else
{

('menu2');
var secondRow=row.data('menu2-id');

(secondRow.find('td:eq(2)').text());
(secondRow.find('td:eq(3)').text());

//(row.data('menu2-id'));

}

//////////
"I entered the services information under the client Ford, put in a breakfast from 8:00 to 10am with 20 peoples and I can not find that service listed in the booking" -- Will Service show in "Summary" Section ? or are you referring to Services -->"View Sumary"  section ?

Locate Item 



2. Availability - Edit Function - Service Module – I entered the services information under the client Ford, put in a breakfast from 8:00 to 10am with 20 peoples and I can not find that service listed in the booking.(does it mean that service not showing in ViewSummary ?) The booking is on July 27 in the Formal Dining room. 

When I search for Ford and pull up the booking on the 27th I can not see the service items or service summary screen with revenue. (is screen "service items" or "service summary" belongs to "summary" from existing Booking ? ,if yes -then I am  still working on this part )


- Add Service Item screen – Not working(is the issue that complete Food Menu not displaying ? if so , I have placed couple of Foood Menu on the list , I will update complete Food Menu List(around 100+) ASAP)

-View Service Summary screen – (working for me)
-Add Service description screen – I believe I mispelled change Service description

Availability -i choose client Ford - go to  July 27 - Formal Dining room - Edit Function -  Service Module – I clicked on Add serv Time - choose from 8:00 to 10am with 20 peoples - click ok - it is populated in Service Times dropdown-- then I save -- data inserted -- then if I clicked on View Service Summary -- it is displaying 
the new Add Service time -

procedure should cover  Add Service Item screen and View Service Summary screen in working status

service summary screen with revenue is i think Summary Screen wth heading Functional charges that is under progress  

I am getting slightly confused by "I can not find that service listed in the booking" . what I understand from old software that 

('#hiddenFunctID');
($('#hiddenFunctID').val());

var FunctID= $('#hiddenFunctID').val();



////////


select *,ts.status as tstatus from EVENT as tb left join custt on tb.customerId = custt.CustID left join contacts as cont on cont.ContactID = tb.bookingContact left join tbl_status as ts on ts.id = tb.status 


select *,ts.status as tstatus from funct as tb left join custt on tb.customerId = custt.CustID left join contacts as cont on cont.ContactID = tb.OnSiteContact left join tbl_status as ts on ts.id = tb.statusId 

select * from funct  where FunctID=426

select *,StartTime as stime, EndTime as etime from funct left join custt on funct.customerId = custt.CustID left join contacts on contacts.ContactID = funct.OnSiteContact left  join FUNCTNAMES functnames on functnames.ResID = funct.FunctName left join tbl_salesPerson on tbl_salesPerson.id = funct.SPID where funct.FunctID = '".$_POST'FunctionUpdateFunctionId']."' and OffSitelocation = '' 

select * from EVENT

insert into EVENT set `locationId` = '',`customerId` = '0',`bookingName` = '',`bookingContact` = '0',`startDate` = '0000-00-00', 
`endDate` = '', 
`dateBooked` = CAST(GETDATE() AS DATE),
`cutOffDate` = '',
`status` = '0', 
`salesPerson` = '0',
`manager` = '', 
`postAs` = '', 
`paymentMthd` = '',
`frequency` = '',
`referralSource` = '', 
`PMS` = '', 
`segment` = '' ,
FunctID='449'




select * from EVENT bkg left join funct fn on bkg.FunctID = FunctID.CustID  

select *,StartTime as stime, EndTime as etime from funct left join custt on funct.customerId = custt.CustID left join contacts on contacts.ContactID = funct.OnSiteContact left  join FUNCTNAMES functnames on functnames.ResID = funct.FunctName left join tbl_salesPerson on tbl_salesPerson.id = funct.SPID left join tbl_functionRoom tfr on tfr.id = funct.EvtID  where OffSitelocation = '' order by FunctID desc limit 1

select * from funct order by FunctID desc limit 1

select FirstName ,LastName customerId ,bookingName,FunctID from EVENT as tb left join custt on tb.customerId = custt.CustID left join contacts as cont on cont.CustID = tb.bookingContact


select * from depositt dp inner join EVENT bkg on dp.FunctID = bkg.FunctID  where FunctID=


select *,ts.status as tstatus from EVENT as tb left join custt on tb.customerId = custt.CustID left join contacts as cont on cont.ContactID = tb.bookingContact left join tbl_status as ts on ts.id = tb.status  

select Amtdue,Duedate,Amtrecvd,Datercvd,ResDesc from depositt dp inner join EVENT bkg on dp.FunctID = bkg.FunctID inner join funct fn on bkg.FunctID = fn.FunctID  join FUNCTNAMES functnames on functnames.ResID = fn.FunctName  where bkg.FunctID=470

select Amtdue,Duedate,Amtrecvd,Datercvd,ResDesc from depositt dp inner join EVENT bkg on dp.FunctID = bkg.FunctID inner join funct fn on bkg.FunctID = fn.FunctID  join FUNCTNAMES functnames on functnames.ResID = fn.FunctName  where bkg.FunctID where bkg.FunctID=470

/////////////
currency converter in Summary 

Pre Next in Edit Function Model 



iske result me date format 

<input type='hidden' name='FunctID_hdn' value=".$row_queryGetData->FunctID."/>					

Availability - inquiry

Daily View / Monthly View

Availability->Both option in Show(i.e. Room and Offsite).

Availability - Edit Function - Service Module
- Add Service Item screen
- Add Service Item screen 
-View Service Summary screen
-Add Service Item screen


formdata = $('#EditFunction_form').serializeArray();
formdata.push({name : "bookingName", value : sessionStorage.getItem('bookingName')});

/////				

Availability - inquiry 
Availability - inquiry 
Daily View / Monthly View 
lost Business with UI and Functionality.
Availability - Edit Function - Service Module (+ 3 inner screens - Add Service Item ,View Service Summary ,Add Service Item ) 

stdClass Object
(
FunctID] => 431
LocID] => 0
EvtID] => 1
customerId] => 1
SPID] => 1
FunctName] => 2
OffSitelocation] => 
FunctActNumPpl] => 0
FunctGtdNumPpl] => 0
FunctExpNumPpl] => 0
SetupType] => 0
FunctInitDate] => 0000-00-00
FunctConfDate] => 0000-00-00
TimeStat] => 0
StartDate] => 2018-07-12
EndDate] => 
cutOffDate] => 
StartTime] => 09:30
EndTime] => 10:00
StartCol] => 08:30
EndCol] => 11:00
RentType] => Hourly
revenue] => 
ContractSent] => 0000-00-00 00:00:00
ContractReceived] => 0000-00-00 00:00:00
SetupTime] => 1.0
KnockDownTime] => 1.0
OnSiteContact] => 1
NumberSet] => 0
Actualized] => 0
UnMovable] => 0
FunctionAltered] => 0
Alteredby] => 0
AlteredTimeStamp] => 0000-00-00 00:00:00
NotesExist] => 0
RoomNightCreated] => 0
BillingGroup] => 0
PostFunctAs] => 
statusId] => 1
created] => 2018-07-12 11:22:49
CustID] => 1
UnivCustID] => 1
CustSrchID] => 1
SalesPersonID] => 1
ContactPersonID] => 1
Email] => amy1@gmail.com
CustName] => amy jordan
Alias] => 
SoundexName] => amy jordan
CustPhone] => 678123456
CustAdd1] => 1000 Main St
CustAdd2] => 1000 Main St
CustCity] => Sarasota
CustState] => FL
CustPostCode] => 34236
CustCntry] => 1
CustBAdd1] => 1000 Main St
CustBAdd2] => 1000 Main St
CustBCity] => Sarasota
CustBState] => FL
CustBPostCode] => 34236
CustBCntry] => 1
FedID] => 1
NProfit] => 1
CustPmtMthd] => 3
CustMarket] => 1
CustReferral] => 0
CustFax] => 5531135555
Chngd] => 2018-05-23 13:01:38
ISActive] => 1
GroupID] => 1
IsAgency] => 1
CreatedOn] => 
ContactID] => 1
UnivContactID] => 
FirstName] => amy
LastName] => Jordan
SoundExLast] => 
Salutation] => 1
Title] => self Contact
Phone] => 
Fax] => 
Addr1] => 1000 Main St.
Addr2] => 
City] => Sarasota
State] => Florida
PostCode] => 34236
Cntry] => 
EmailAddress] => cont@email.com
ContactType] => 2
ResID] => 2
ResDesc] => Baby shower
ResDflt] => 0
id] => 
name] => 
stime] => 09:30:00 AM
etime] => 10:00:00 AM
)
//////////////

I tried to create 3 new module , but they are dependent on Setup , since from Setup the core parameter of functions like Room Booking , pre defined rates are setting

C:--> ESP2000--> ESPSetup.exe --> login with credentials (admin/esp)
DELIMITER $$;

DROP TRIGGER `esp_test`.`trg_bookingID`$$

CREATE TRIGGER `esp_test`.`trg_bookingID` AFTER INSERT on `esp_test`.`funct`
FOR EACH ROW BEGIN

INSERT into funct SET bookingId = new.FunctID ;

END$$

DELIMITER ;$$

/////////////////
bookingId
bookingName
endDate
cutOffDate
manager
paymentMthd
frequency
referralSource
PMS
segment

//////////////////////

Availibility - Edit Function - Service Module(99% done) - Ready for Brian test
Booking - Billing (10% done)(UI - 30% done)
-Add Service Item ( dynamic UI+function)- 90% done - 10% (live deploy/testing) remains
-View Service Summary (dynamic UI+function)- 90% done  - 10% (live deploy/testing) remains
-Add Service Item (dynamic UI+function)- 90% done  - 10% (live deploy/testing) remains (edited)


Inquiry / New fn 
Tentative  -New gn

Availibility Module - Service Module -Add Service Item (UI+function)complete
-View Service Summary (UI+function)complete
-Add Service Item (UI+function)complete
-live testing incomplete

$("#EditServiceModal").on('hidden.bs.modal', function(){

$("#EditService_Table tbody tr").remove();

});


$("#ES_DeleteServ").on('click', function(){

$("#select_id optionvalue='"+$('#ES_ServiceTimes :selected').val()+"']").remove();
$('#ES_ServiceStart').val('');
$('#ES_ServiceEnd').val('');

});	


td{

border: none !important;"
}



// $('.tr1').on('click', function(e) {
// e.preventDefault();
// $(this).nextAll('.tr11').toggle('');
// $(this).nextAll('.tr12').toggle('');
// $(this).nextAll('.tr111').hide('');

// });

// $('.tr11').on('click', function(e) {
// e.preventDefault();
// var elem = $(this).next('.inner_rows')
// elem.toggle('');
// });

// $('.tr12').on('click', function(e) {
// e.preventDefault();
// var elem = $(this).next('.inner_rows')
// elem.toggle('');
// });



// $('.tr2').on('click', function(e) {
// e.preventDefault();
// $(this).nextAll('.tr21').toggle('');
// $(this).nextAll('.tr22').toggle('');
// $(this).nextAll('.tr211').hide('');

// });

// $('.tr21').on('click', function(e) {
// e.preventDefault();
// var elem = $(this).next('.inner_rows')
// elem.toggle('');
// });

// $('.tr22').on('click', function(e) {
// e.preventDefault();
// var elem = $(this).next('.inner_rows')
// elem.toggle('');
// });


--------------------
function AppendSecondMenu(Menu1ID)
{
$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_getFoodnBevr.php",
data : {SecondMenu : "SecondMenu",Menu2ID:Menu1ID} ,
success : function(data)
{

var json = JSON.parse(data);
(json);
var $row = $('trdata-menu-id]');
($row);
$row.append(json.SecondMenu);

}
});

}

//////////////		
// $(this).nextAll('.tr111').hide('');

// $.ajax({
// method : "POST",
// url : "../Booking/assets/ajax/ajax_getFoodnBevr.php",
// data : {SecondMenu : "SecondMenu",Menu2ID:Menu1ID} ,
// async:false,
// success : function(data)
// {

// var json = JSON.parse(data);

// var Menu2Count=json.arr_data_menu2_id.length;
// (Menu2Count);
// for(i=1;i<Menu2Count;i++)
// {

-----------------
// $('trdata-menu-id]').click(function(event) {

// $('#tbl_FoodNBeverages tbody').append('<tr><td>1</td><td>2</td></tr>')
// var Menu1ID= $(this).data('menu-id');
// AppendSecondMenu(Menu1ID);

// });

//////////


// ('Menu1ID'+Menu1ID);
// (json.SecondMenu);
//////////////

//).insertAfter($(this).closest('tr'));
//(json);
// var $row = $('trdata-menu-id]');
// ($row);
//$row.append(json.SecondMenu);

//////////////////


//('trdata-menu-id]');
//$(this).append('<tr><td>1</td><td>2</td></tr>');
//var $row = $('trdata-menu-id]');
//$('<tr><td>1</td><td>2</td></tr>').insertAfter($(this).closest('tr'));

// var Menu1ID=$(this).data('menu-id');
// $(this).on('click',function(){
// ("data-menu-id=");
// AppendSecondMenu(Menu1ID);

// });


// $('.tr12').on('click', function(e) {
// e.preventDefault();
// var elem = $(this).next('.inner_rows')
// elem.toggle('');
// });

// $('.tr121').on('click', function(e) {
// e.preventDefault();
// var elem = $(this).next('.inner_rows')
// elem.toggle('');
// });

// $('.tr2').on('click', function(e) {
// e.preventDefault();
// $(this).nextAll('.tr21').toggle('');
// $(this).nextAll('.tr22').toggle('');
// $(this).nextAll('.tr211').hide('');

// });

// $('.tr21').on('click', function(e) {
// e.preventDefault();
// var elem = $(this).next('.inner_rows')
// elem.toggle('');
// });

// $('.tr22').on('click', function(e) {
// e.preventDefault();
// var elem = $(this).next('.inner_rows')
// elem.toggle('');
// });


/////////////


// $('.tr'+Menu1ID+'1').on('click', function(e) {

// ('.tr'+Menu1ID+'1');
// $(this).nextAll('.tr'+Menu1ID+'1>.ThirdMenu').toggle('');

e.preventDefault();
$('.tr11>.ThirdMenu').toggle('');
elem.toggle('');
// });

// $('.tr'+Menu1ID+'11').on('click', function(e) {
// e.preventDefault();
// var elem = $(this).next('.inner_rows')
// elem.toggle('');
// });


/////////////////	


// $get_Menu11 = $conn->query("select ItemName from tblFNB_SubMenu1 where ServiceID='".$row_FoodNBeverages->ID."'");
//$FinalMenu= $Menu.$k;
// $Menu1='
// <tr id="tr1" class="tr1">
// <td colspan="3"> Coffee </td> 
// </tr>';

// $Menu11='<tr id="tr11" class="tr11 inner_rows" style="">
// <td>+</td>
// <td>td1 </td> 
// <td>td1</td> 
// </tr>';
$Menu111='<tr id="tr111" class="tr111 inner_rows" style="">
<td></td> 
<td>td111 </td> 
<td>td111</td>
</tr>';

$Menu12='<tr id="tr12" class="tr12 inner_rows" style="">
<td>+</td>
<td>td12 </td> 
<td>td12</td> 
</tr>';
$Menu121='<tr id="tr121" class="tr121 inner_rows" style="">
<td></td>
<td>td121 </td> 
<td>td121</td> 
</tr>';

// $Menu2='<tr id="tr2" class="tr2">
// <td colspan="3"> Coffee </td> 
// </tr>';

$Menu21='<tr id="tr21" class="tr21 inner_rows" style="">
<td>+</td>
<td>td2 </td> 
<td>td2</td> 
</tr>';
$Menu211='<tr id="tr211" class="tr211 inner_rows" style="">
<td></td> 
<td>td211 </td> 
<td>td211</td>
</tr>';

$Menu22='<tr id="tr22" class="tr22 inner_rows" style="">
<td>+</td>
<td>td22 </td> 
<td>td22</td> 
</tr>';

$Menu221='<tr id="tr221" class="tr221 inner_rows" style="">
<td>+</td>
<td>td221 </td> 
<td>td221</td> 
</tr>';

// $FinalMenu=$Menu1.$Menu11.$Menu111.$Menu12.$Menu121.
// $Menu2.$Menu21.$Menu211.$Menu22.$Menu221;



////////////
// $a=1;
// while ( $row11= $get_Menu11->fetchAll(PDO::FETCH_OBJ))
// {

// $Menu.$a.$one='<tr id="tr'.$a.'1" class="tr'.$a.'1 inner_rows" style="">
// <td>+</td>
// <td>td'.$a.' </td> 
// <td>td'.$a.'</td> 
// </tr>';

// $a++;
// }	

// $FinalMenu=$Menu1.$Menu11.$Menu111.$Menu12.$Menu121.
// $Menu2.$Menu21.$Menu211.$Menu22.$Menu221;





$FirstMenu='
<tr id="tr1" class="tr1">
<td colspan="3"> Coffee </td> 
</tr>
<tr id="tr11" class="tr11 inner_rows" style="">
<td>+</td>
<td>td1 </td> 
<td>td1</td> 
</tr>
<tr id="tr111" class="tr111 inner_rows" style="">
<td></td> 
<td>td111 </td> 
<td>td111</td>
</tr>

<tr id="tr12" class="tr12 inner_rows" style="">
<td>+</td>
<td>td12 </td> 
<td>td12</td> 
</tr>
<tr id="tr121" class="tr121 inner_rows" style="">
<td></td>
<td>td121 </td> 
<td>td121</td> 
</tr>



<tr id="tr2" class="tr2">
<td colspan="3"> Coffee </td> 
</tr>
<tr id="tr21" class="tr21 inner_rows" style="">
<td>+</td>
<td>td2 </td> 
<td>td2</td> 
</tr>
<tr id="tr211" class="tr211 inner_rows" style="">
<td></td> 
<td>td211 </td> 
<td>td211</td>
</tr>

<tr id="tr22" class="tr22 inner_rows" style="">
<td>+</td>
<td>td22 </td> 
<td>td22</td> 
</tr>
<tr id="tr221" class="tr221 inner_rows" style="">
<td>+</td>
<td>td221 </td> 
<td>td221</td> 
</tr>

';

///////////////////////// 



<table id="tbl_FoodNBeverages" border="1" style="width: 100%;">
<thead>
<tr>
<td style="width: 23.33%;">Service Type</td>
<td style="width: 5%;">Detail</td>
<td style="width: 33.33%;">Item Name</td>
<td style="width: 33.33%;">Price</td>
</tr>
</thead>
<tbody>
</tbody>

</table>
//////////////

<script src="/Neeraj_R_28_05/esp-project/common/js/jquery-3.3.1.min.js"></script>
<script src="/Neeraj_R_28_05/esp-project/common/js/bootstrap.js"></script>
<script src="/Neeraj_R_28_05/esp-project/common/js/jquery.dataTables.min.js"></script>
<script src="/Neeraj_R_28_05/esp-project/common/js/bootstrap-datepicker.js"></script>

///////////

<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

//////////

/* 
$root = $_SERVER'DOCUMENT_ROOT'];
echo $root."/Home/styles.php";
*/

/////////////

/* 
$root = $_SERVER'DOCUMENT_ROOT'].'/esp_git';
echo $root."/Home/styles.php"; */

//////////////

//////////////////

to do 

all alert removed from dashboard - done 
disable inactive links - done , replaced with #
perfect admin - esp - done 

------------

load dashboad on application load - done
changes jquery , images location - done	

customer -inner tab padding
-button container 
-checkbox not visible 
-glyphicons removed

/////////



<div class="col-sm-4 btn-section" style="border:1px solid black;text-align:center;">
<div class="btn-group  col-sm-4" role="group" aria-label="...">
<div class="col-sm-12" style="padding-left:1em;">
<button type="submit" class="btn"   >Save</button>
</div>

<div style="padding-left:1em;">
<button type="button" class="btn" style="padding-left:1em;" >Delete</button>
</div>

<div>
<button type="button" class="btn" style="width: 8em;" >Doc Manager</button>
</div>

<div>
<button type="button" class="btn" style="width: 8em;" >Contract Roles</button>
</div>

</div>
</div>


///////////


git branch -D neeraj
git push

git branch -d -r origin/neeraj
git push

git pull


///////////




<button type="button" class="btn" style="background: url(../common/images/Torch.png);
background-repeat: no-repeat;width: 2.5em;height: 2.5em;" alt="Torch"></button>
<button type="button" class="btn" style="background: url(../common/images/pin.png);
background-repeat: no-repeat;width: 2.5em;height: 2.5em;" alt="pin"></button>

//////////////////




$insert=$conn->query("insert into custt 
(UnivCustID, 
LocID, 
SPID, 
CustSrchID, 
CustName, 
SoundexName, 
CustPhone, 
CustAdd1, 
CustAdd2, 
CustCity, 
CustState, 
CustPostCode, 
CustCntry, 
CustBAdd1, 
CustBAdd2, 
CustBCity, 
CustBState, 
CustBPostCode, 
CustBCntry, 
FedID, 
NProfit, 
CustPmtMthd, 
CustMarket, 
CustReferral, 
CustFax, 
Chngd, 
ISActive, 
NotesExist, 
GroupID, 
IsAgency
)
values
(1, 
1, 
1, 
1, 
'". $_POST'name'] ."', 
'". $_POST'name'] ."', 
'". $_POST'Phone'] ."', 
'". $_POST'Address1'] ."',
'". $_POST'Address2'] ."',
'". $_POST'City'] ."',
'". $_POST'State'] ."',
'". $_POST'siteZip'] ."',
'". $_POST'ddlSiteCountry'] ."',
'". $_POST'BillAddress1'] ."',
'". $_POST'BillAddress2'] ."',
'". $_POST'BillCity'] ."',
'". $_POST'billState'] ."',
'". $_POST'billZip'] ."',
'". $_POST'BillCountry'] ."',
1,
1,
'". $_POST'paymethods'] ."',
'". $_POST'mrkt'] ."',
'". $_POST'ReferralSource'] ."',
'". $_POST'Fax'] ."',
1,
$chkActive  ,
'". $_POST'NotesExist'] ."',
1, 
1
)");


///////////


/* if($insert==1)
{

$cust_ID=$conn->query("select MAX(CustID) from custt");

$insert=$conn->query("insert into contacts set ContactID = 1 , UnivContactID = 1 , LocID = 1 , CustID = ".$cust_ID.", FirstName = ". $_POST'name'] ." , LastName = ". $_POST'name'] ." , SoundExLast = 'SoundExLast' , Salutation = 'Salutation' , 	Title = 'Title' , Phone = 'Phone' , Fax = 'Fax' , Addr1 = 'Addr1' , Addr2 = 'Addr2' , City = 'City' , State = 'State' , 	PostCode = 'PostCode' , Cntry = 'Cntry' , EmailAddress = 'EmailAddress' , ContactType = 'ContactType';");


} */


/////////



/* 		$update=$conn->query("UPDATE `tbl_devices_config` SET `pointto`='".$pointto."',`config_interval`='".$config_interval."',`report_Interval`='".$report_Interval_edit."' , updatedon = CAST(GETDATE() AS DATE) where `bmsmac`='".$BeaconMAC_edit."'");

/* echo "UPDATE `tbl_devices_config` SET `pointto`='".$pointto."',`config_interval`='".$config_interval."',`report_Interval`='".$report_Interval_edit."' , updatedon = CAST(GETDATE() AS DATE) where `bmsmac`='".$BeaconMAC_edit."'"; 

echo 'data updated successfully';
exit; */


////////////		


Cutomer Module - 50% Done

1) customer tab  - 60% 
insert , update done 
working on Customer Search Modal

2) Contacts - 50% 
3) CUstomer Activity - 50% 
4) Booking Profile - 50% 


///////



<div class="form-group col-sm-12">

<label class="radio-inline">
<input type="radio" name="mdlSearch_rbtn_StartWith">Starting With
<label></center>


<label class="radio-inline">
<input type="radio" name="mdlSearch_rbtn_cntain">Containing
<label></center>
/*
SQLyog - Free MySQL GUI v5.02
Host - 5.6.39-cll-lve : Database - esp_test
*********************************************************************
Server version : 5.6.39-cll-lve
*/


create database if not exists `esp_test`;

USE `esp_test`;

/*Table structure for table `tblreservationMethods` */

DROP TABLE IF EXISTS `tblreservationMethods`;

CREATE TABLE `RollingScreens` (
`RollingScreenName` int(11) NOT NULL AUTO_INCREMENT,
`RollingScreenColor` varchar(50) DEFAULT NULL,
PRIMARY KEY (`RollingScreenName`)
) ENGINE=MyISAM AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

/*Data for the table `tblreservationMethods` */

insert into `tblreservationMethods` values 

(9,'Reservation Method1'),

(10,'reservation Method2');



<label class="radio-inline">
<input type="radio" name="mdlSearch_rbtn_Sndslk">Sounds Like
<label></center>

</div>


///////////

SELECT    table_name,   column_name,   data_type,ordinal_position FROM  INFORMATION_SCHEMA.COLUMNS WHERE table_schema = 'esp_test'  AND column_name like  '%customer%' ;

Cutomer Module - 52% Done

1) customer tab  - 63%
Customer Search Modal - UI done 
integratting co

2) Contacts - 50% 
3) Customer Activity - 50% 
4) Booking Profile - 50%

status : customer Search Model -UI done , intgertaing data


///////////



tbl_salesPerson
tbl_status

///////



/*
echo '<script>alert("1")</script>';

exit;


$chkActive =$_POST'chkActive']='active'?'1':'0';

$search=$conn->query("Select * from custt where CustPhone='".$_POST'Phone']."'")->fetchColumn();

if($search==0 || $search=="")
{

$insert=$conn->query("insert into custt 
(UnivCustID,LocID, 	SPID, 	CustSrchID, 	CustName, 	SoundexName, 	CustPhone, 	CustAdd1, 	CustAdd2, 	CustCity, 	CustState, 	CustPostCode, 	CustCntry,  	CustBAdd1, 	CustBAdd2, 	CustBCity, 	CustBState, 	CustBPostCode, 	CustBCntry, 	FedID, 	NProfit, 	CustPmtMthd, 	CustMarket, 	CustReferral, 	CustFax, 	Chngd, 	ISActive, 	NotesExist, 	GroupID, 	IsAgency	)	values	(1, 	1, 	1, 	1, 	'". $_POST'name'] ."', 	'". $_POST'name'] ."',	'". $_POST'Phone'] ."', 	'". $_POST'Address1'] ."',	'". $_POST'Address2'] ."',	'". $_POST'City'] ."',	'". $_POST'State'] ."',	'". $_POST'siteZip'] ."',	'". $_POST'ddlSiteCountry'] ."',	'". $_POST'BillAddress1'] ."',
'". $_POST'BillAddress2'] ."',	'". $_POST'BillCity'] ."',	'". $_POST'billState'] ."',	'". $_POST'billZip'] ."',
'". $_POST'BillCountry'] ."',	1,	1,	'". $_POST'paymethods'] ."',	'". $_POST'mrkt'] ."',	'". $_POST'ReferralSource'] ."',	'". $_POST'Fax'] ."',	1,	$chkActive  ,	'". $_POST'NotesExist'] ."',	1, 	1	)");

}
else
{

$update=$conn->query("update custt 	set	CustName = 	'". $_POST'name'] ."', 	SoundexName = '". $_POST'name'] ."' , 	CustPhone = '". $_POST'Phone'] ."' , 	CustAdd1 = '". $_POST'Address1'] ."' , 	CustAdd2 = '". $_POST'Address2'] ."' , 	CustCity = '". $_POST'City'] ."' , 	CustState = '". $_POST'State'] ."' , 	CustPostCode = '". $_POST'siteZip'] ."' , 	CustCntry = '". $_POST'ddlSiteCountry'] ."' , 	CustBAdd1 = '". $_POST'BillAddress1'] ."' ,	CustBAdd2 = '". $_POST'BillAddress2'] ."' , 	CustBCity = '". $_POST'BillCity'] ."' , 	CustBState = '". $_POST'billState'] ."' , 	CustBPostCode = '". $_POST'billZip'] ."' , 	CustBCntry = '". $_POST'BillCountry'] ."' , 	FedID = 1 , 	NProfit = 1 , 	CustPmtMthd = '". $_POST'paymethods'] ."' , 	CustMarket = '". $_POST'mrkt'] ."' , 	CustReferral = '". $_POST'ReferralSource'] ."' , 	CustFax = '". $_POST'Fax'] ."' , 	Chngd = 1  , 	ISActive = $chkActive , 	NotesExist = '". $_POST'NotesExist'] ."' , 	GroupID = 1 , 	IsAgency = 1	 where CustPhone='".$_POST'Phone']."'");

} */

//////////////



<select name="ddlSiteCountry" class="form-control selectpicker" >

<option value = "">---Select---</option>
<?php 

$search=$conn->query("SELECT * FROM `tbl_salesPerson`");
while ($row_serach=$search->fetchAll(PDO::FETCH_OBJ)) 
{
echo "<option value='".$row_serach->id."'>".$row_serach->name."</option>";
}
?>

</select>

//////////////////


<select name="ddlSiteCountry" class="form-control selectpicker" >

<option value = "">---Select---</option>
<?php 

$search=$conn->query("SELECT * FROM `tbl_salesPerson`");
while ($row_serach=$search->fetchAll(PDO::FETCH_OBJ)) 
{
echo "<option value='".$row_serach->id."'>".$row_serach->name."</option>";
}
?>

</select>


///////////
packages
pin value functionality
roomblock editor dropdown values
booking name pin
bug image 

new booking - pckges - no pkg list
//////////////



<a title="Show list of tickets" data-target="#EditCustomerModal" data-toggle="modal" >New Customers</a>


/////


<script src="../common/js/jquery-3.3.1.min.js"></script>
<script src="../common/js/bootstrap.3.3.7.min.js"></script>


////////////


<!-- Contact Search Modal -->

<!-- Customer Search Modal -->

<!-- Edit Contact -->

<!-- Edit Customer  Modal-->



///////////////


Array ( ECsMdl_CustomerName] => Neeraj verma ECsMdl_Alias] => ECsMdl_Phone] => 09999645181 ECsMdl_Fax] => ECsMdl_Address1] => h 3/6 , krishna nagar , delhi ECsMdl_Address2] => Delhi ECsMdl_State] => Delhi ECsMdl_PostalCode] => 110051 ECsMdl_Country] => ECsMdl_Market] => ECsMdl_Email] => mail.nrj@gmail.com ECsMdl_RefSrce] => ECsMdl_pymntMthd] => ECsMdl_OtherInfo] => ECsMdl_FedID] => ECsMdl_hdn] => 1 ECsMdl_btnOK] => )


///////////////////




<!-- Edit Customer  Modal-->

<div class="modal fade" id="EditCustomerModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-hidden="true"> 
<div class="modal-dialog modal-lg">
<div class="modal-content">
<div class="modal-header">
<button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
<h3 class="modal-title" id="lineModalLabel">Edit Customer</h3>
</div>
<div class="modal-body" style="padding-bottom: 0px;">

<form class="well form-horizontal" action="../Customer/updateCustomer.php" method="post">
<div class="row">
<div class="col-sm-12 col-md-12 col-lg-12  no-padding">
<div class="col-sm-4 col-md-4 col-lg-4 form-group">
<label>Customer Name<label></center>
<input name="ECsMdl_CustomerName" type="" class="form-control" id="" placeholder="Customer Name">
</div>
<div class="col-sm-4 col-md-4 col-lg-4 form-group">
<label>Alias<label></center>
<input name="ECsMdl_Alias" type="" class="form-control" id="ECsMdl_Alias" placeholder="Alias">
</div>
<div class="col-sm-4 col-md-4 col-lg-4 form-group">
<label>Phone<label></center>
<input name="ECsMdl_Phone" type="text" class="form-control" id="ECsMdl_Phone" placeholder="Phone">
</div>
<div class="col-sm-4 col-md-4 col-lg-4 form-group">
<label>Fax<label></center>
<input name="ECsMdl_Fax" type="text" class="form-control" id="ECsMdl_Fax" placeholder="Fax">
</div>
<div class="col-sm-4 col-md-4 col-lg-4 form-group">
<label>Address 1<label></center>
<input  name="ECsMdl_Address1" type="text" class="form-control" id="ECsMdl_Address1" placeholder="Address1">
</div>
<div class="col-sm-4 col-md-4 col-lg-4 form-group">
<label>Address 2<label></center>
<input name="ECsMdl_Address2" type="text" class="form-control" id="ECsMdl_Address2" placeholder="Address 2">
</div>
<div class="col-sm-4 col-md-4 col-lg-4 form-group">
<label>City<label></center>
<input  name="ECsMdl_City" type="text" class="form-control" id="ECsMdl_Address2" placeholder="City">
</div>
<div class="col-sm-4  col-md-4  col-lg-4  form-group">
<label>State<label></center>
<input name="ECsMdl_State" type="text" class="form-control" id="ECsMdl_State" placeholder="State">
</div>
<div class="col-sm-4  col-md-4 col-lg-4  form-group">
<label>Postal Code<label></center>
<input name="ECsMdl_PostalCode" type="text" class="form-control" id="ECsMdl_PostalCode" placeholder="Postal Code">
</div>
<div class="col-sm-4  col-md-4  col-lg-4  form-group">
<label>Country<label></center>
<div class="input-group-addon">
<select name="ECsMdl_Country" class="form-control selectpicker">
<option value = "">---Select---</option>
<?php 

$search=$conn->query("SELECT * FROM `tbl_Country`");
while ($row_serach=$search->fetchAll(PDO::FETCH_OBJ)) 
{
echo "<option value='".$row_serach->id."'>".$row_serach->name."</option>";
}
?>


</select>
</div>
</div>
<div class="col-sm-4  col-md-4  col-lg-4  form-group">
<label>Sales Person<label></center>
<div class="input-group-addon">
<select name="ECsMdl_SalesPerson" class="form-control selectpicker">
<option value=" "></option>
<option value=""></option>    
<option value=""></option>
</select>
</div>
</div>
<div class="col-sm-4  col-md-4  col-lg-4  form-group">
<label>Market Segment<label></center>
<div class="input-group-addon">
<select name="ECsMdl_Market" class="form-control selectpicker">
<option value=" ">Please select your Market</option>
<?php  
$sql=$conn->query("SELECT * FROM mrkt ORDER BY MrktID asc"); 
while ($row = $sql->fetchAll(PDO::FETCH_OBJ)) { 
?>
<option value="<?php =$row->MrktID?>"><?php  echo $row->MrktName ?></option>

<?php  } ?>
</select>
</div>
</div>
<div class="col-sm-4  col-md-4  col-lg-4  form-group">
<label>Email<label></center>
<input name="ECsMdl_Email" type="text" class="form-control" id="ECsMdl_Email" placeholder="Email">
</div>
<div class="col-sm-4  col-md-4  col-lg-4  form-group">
<label>Referral Source<label></center>
<div class="input-group-addon">
<select name="ECsMdl_RefSrce" class="form-control selectpicker">
<option value=" ">Please select your Referral Source</option>
<?php  
$sql=$conn->query("SELECT * FROM refsource ORDER BY refName DESC"); 
while ($row = $sql->fetchAll(PDO::FETCH_OBJ)) { 
?>
<option value="<?php =$row->refID?>"><?php  echo $row->GroupName ?></option>

<?php  } ?>
</select>
</div>
</div>
<div class="col-sm-4  col-md-4  col-lg-4  form-group">
<label>Payment Method<label></center>
<div class="input-group-addon">

<select name="ECsMdl_pymntMthd" class="form-control selectpicker">

<option value=" ">Select your Payment</option>
<?php  
$sql=$conn->query("SELECT * FROM paymethods ORDER BY MethodDesc asc"); 
while ($row = $sql->fetchAll(PDO::FETCH_OBJ)) 
{ 
?>
<option value="<?php =$row->MethodID?>"><?php  echo $row->MethodDesc ?></option>
<?php  } ?>

</select>
</div>
</div>
<div class="col-sm-6 col-md-6 col-lg-6 form-group">
<div class="col-sm-12 col-md-12 col-lg-12 no-padding">
<label>Other Information<label></center>
<textarea name="ECsMdl_OtherInfo" type="text" class="form-control" rows="10" id="ECsMdl_OtherInfo" placeholder="Booking Packages" style="resize: none;">
</textarea>
</div>
</div>
<div class="col-sm-6 col-md-6 col-lg-6 ">
<div class="col-sm-12  col-md-12  col-lg-12">
<label>Federal Id<label></center>
<input name="ECsMdl_FedID" type="" class="form-control" id="ECsMdl_FedID" placeholder="Federal Id">
</div>
<div class="col-sm-6  col-md-6  col-lg-6 checkbox">
<div class="col-sm-12  col-md-12  col-lg-12 form-group">
<label>
<input name="ECsMdl_txExmpt" type="checkbox">Tax Exempt
<label></center>
</div>
<div class="col-sm-12  col-md-12  col-lg-12 form-group">
<label>
<input name="ECsMdl_Active" type="checkbox">Active
<label></center>
</div>
<div class="col-sm-12  col-md-12  col-lg-12 form-group">
<label>
<input name="ECsMdl_SendEmail" type="checkbox">Send Emails
<label></center>
</div>
</div>
<div class="col-sm-6  col-md-6  col-lg-6">
<label>  <label></center>
<input type="hidden" name="ECsMdl_hdn" value="1"/>
<button name="ECsMdl_btnOK" type="submit" class="btn btn-default" style="width: 100%;">Ok</button>



<label>  <label></center>
<button name="ECsMdl_btnCancel" type="button" class="btn btn-default" style="width: 100%;">Cancel</button>
</div>

<script>

$('#ECsMdl_btnOK').submit(function(e) {
e.preventDefault();
$('#EditCustomerModal').modal('toggle'); 
return false;
});


$('#ECsMdl_btnCancel').submit(function(e) {
e.preventDefault();
$('#EditCustomerModal').modal('toggle'); 
return false;
});


</script>

<div class="col-sm-12  col-md-12  col-lg-12 no-padding">
<div class="col-sm-6  col-md-6  col-lg-6  form-group">
<label>  <label></center>
<button name="ECsMdl_btnNew" type="button" class="btn btn-default" data-toggle="modal" data-target="#editcontactModal" style="width: 100%;">New Contact</button>
</div>
<div class="col-sm-6  col-md-6  col-lg-6  form-group">
<label>  <label></center>
<button name="ECsMdl_Apply" type="button" class="btn btn-default" style="width: 100%;">Apply</button>
</div>
</div>
</div>

</div>
</div>

</form>

</div>
<hr>
</div>
</div>
</div>


/////////
scripts


<script src="../common/js/jquery.flot.min.js"></script>

<!-- Morris -->
<script src="../common/js/rapheal.min.js"></script>	
<script src="../common/js/morris.min.js"></script>	

<!-- Colorbox -->
<script src="../common/js/jquery.colorbox.min.js"></script>	

<!-- Sparkline -->
<script src="../common/js/jquery.sparkline.min.js"></script>

<!-- Pace -->
<script src="../common/js/pace.js"></script>

<!-- Popup Overlay -->
<script src="../common/js/jquery.popupoverlay.min.js"></script>

<!-- Slimscroll -->
<script src="../common/js/jquery.slimscroll.min.js"></script>

<!-- Modernizr -->
<script src="../common/js/modernizr.min.js"></script>

<!-- Cookie -->
<script src="../common/js/jquery.cookie.min.js"></script>

<!-- Perfect -->
<script src="../common/js/app_dashboard.js"></script>
<script src="../common/js/app.js"></script>

////////////////	



<li class="nav-header"  data-toggle="collapse" data-target="#Components"> 
<a><span class="menu-icon"><i class="fa fa-tag fa-lg"></i></span>
<span class="text">Components</span>
<span class="menu-hover"></span></a>

<ul class="nav nav-list collapse " id="Components" >
<li><a title="Show list of tickets"  href="/#"  >Calender</a></li>

</ul>

</li>

///////////////



<!--Modal-->
<div class="modal fade" id="newFolder">
<div class="modal-dialog">
<div class="modal-content">
<div class="modal-header">
<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
<h4>Create new folder</h4>
</div>
<div class="modal-body">
<form>
<div class="form-group">
<label for="folderName">Folder Name<label></center>
<input type="text" class="form-control input-sm" id="folderName" placeholder="Folder name here...">
</div>
</form>
</div>
<div class="modal-footer">
<button class="btn btn-sm btn-success" data-dismiss="modal" aria-hidden="true">Close</button>
<a href="index.php#" class="btn btn-danger btn-sm">Save changes</a>
</div>
</div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->
</div><!-- /.modal -->

////////////////		



<li class="nav-header"  data-toggle="collapse" data-target="#test"> 

<a id="SideBar_Dashboard">
<span class="menu-icon"><i class="fa fa-desktop fa-lg"></i></span>
<span class="text">Dashboard</span>
<span class="menu-hover"></span> 
</a>
</li>  

<li class="nav-header"  data-toggle="collapse" data-target="#Availibility">
<a id="SideBar_Availibility" >
<span class="menu-icon">
<i class="fa fa-file-text fa-lg"></i> 
</span>
<span class="text">
Availibility
</span>

</a>

<ul class="nav nav-list collapse " id="Availibility" >
<li><a title="Show list of tickets" href="/#">Sign in</a></li>

</ul>

</li> 



////////



<li class="nav-header"  data-toggle="collapse" data-target="#Reports">
<a id="SideBar_Reports">
<span class="menu-icon">
<i class="fa fa-file-text fa-lg"></i> 
</span>

<span class="text">
Reports
</span>

</a>
<ul class="nav nav-list collapse " id="Reports" >
<li><a title="Show list of tickets" href="/#" >Reports Menu</a></li>
</ul>

</li> 


///////////






$("#SideBar_Availibility").click(function()
{
$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")

var iframeAvailibility = $("#IFrame_Availibility");
iframeAvailibility.css("display","inline");
iframeAvailibility.attr("src", iframeAvailibility.data("src"));

$("#IFrame_Home").css("display","none");
$("#IFrame_Customer").css("display","none");
$("#IFrame_Booking").css("display","none");

});


$("#SideBar_Customer").click(function()
{

$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")

var iframeCustomer = $("#IFrame_Customer");
iframeCustomer.css("display","inline");
iframeCustomer.attr("src", iframeCustomer.data("src"));

$("#IFrame_Home").css("display","none");
$("#IFrame_Availibility").css("display","none");
$("#IFrame_Booking").css("display","none");

});



$(document).ready(function(){

alert('222');

$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")

var iframeHome = $("#IFrame_Home");
iframeHome.css("display","inline");
iframeHome.attr("src", iframeHome.data("src"));

$("#IFrame_Customer").css("display","none");
$("#IFrame_Availibility").css("display","none");
$("#IFrame_Booking").css("display","none");


})


$("#SideBar_Dashboard").click(function()
{

$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")

var iframeHome = $("#IFrame_Home");
iframeHome.css("display","inline");
iframeHome.attr("src", iframeHome.data("src"));

$("#IFrame_Customer").css("display","none");
$("#IFrame_Availibility").css("display","none");
$("#IFrame_Booking").css("display","none");

});


$("#Booking_Home").click(function()
{

$(".holds-the-iframe").css("background","url(../common/images/loader.gif) center top no-repeat")

var iframeBooking = $("#IFrame_Booking");
iframeBooking.css("display","inline");
iframeBooking.attr("src", iframeBooking.data("src"));

$("#IFrame_Home").css("display","none");
$("#IFrame_Customer").css("display","none");
$("#IFrame_Availibility").css("display","none");

});



///////

booking index



<script>

$(function(){
alert('function on booking index');

$('#btn_ECsMdl').click(function(){

alert('#btn_ECsMdl');	
})


})

</script>	

////////////////
////////////////
////////////////
////////////////




<!-- content goes here -->
<form class="well form-horizontal">
.
<fieldset>

<div class="col-sm-12">

<div class="col-sm-6">

<!-- Text input-->

<div class="form-group">
<label class="col-sm-2 control-label">Name<label></center>  
<div class="col-sm-7 inputGroupContainer">
<div >
<input  name="name" placeholder="First Name" class="form-control"  type="text">
</div>
</div>

<div class="col-sm-3">

<button type="button" class="btn" style="background: url(../common/images/Torch.png);
background-repeat: no-repeat;width: 2.5em;height: 2.5em;" alt="Torch" ></button>

<button type="button" class="btn" style="background: url(../common/images/pin.png);
background-repeat: no-repeat;width: 2.5em;height: 2.5em;" alt="pin"></button>
</div>

</div>

<!-- Text input-->
<div class="form-group">
<label class="col-sm-2 control-label" >Phone<label></center> 
<div class="col-sm-10 inputGroupContainer">
<div >
<input name="Phone" placeholder="Phone" class="form-control"  type="text">
</div>
</div>
</div>

<!-- Text input-->
<div class="form-group">
<label class="col-sm-2 control-label">Fax<label></center>  
<div class="col-sm-10 inputGroupContainer">
<div >

<input name="Fax" placeholder="E-Mail Address" class="form-control"  type="text">
</div>
</div>
</div>

<!-- Text input-->
<div class="form-group">
<label class="col-sm-2 control-label">EMail<label></center>  
<div class="col-sm-10 inputGroupContainer">
<div >
<input name="EMail" placeholder="EMail" class="form-control" type="text">
</div>
</div>
</div>

<!-- Text input-->

<div class="form-group">
<label class="col-sm-2 control-label">Website<label></center>  
<div class="col-sm-10 inputGroupContainer">
<div >
<input name="Website" placeholder="Website" class="form-control" type="text">
</div>
</div>
</div>


<!-- lower group--->
<div class="Cust_lower_Tab tab-pane active" id="b_tab" style="border : 1px solid grey;">
<!-- Nav tabs -->
<ul class="nav nav-tabs col-sm-12">
<li class="active col-sm-6"><a href="#Site_Address" data-toggle="tab">Site Address</a></li>
<li class="col-sm-6"><a href="#Biilling_Address " data-toggle="tab">Biilling Address</a></li>

</ul>

<!-- Nav tabs content -->
<div class="tab-content">
<div id="Site_Address" class="tab-pane active">

<form class="well form-horizontal" action=" " method="post"  id="Site_Address_form">

<div class="form-group">
<label class="col-sm-3 control-label">Address1<label></center>  
<div class="col-sm-9 inputGroupContainer">
<div >
<input  name="Address1" placeholder="Address1" class="form-control"  type="text">
</div>
</div>
</div>

<!-- Text input-->
<div class="form-group">
<label class="col-sm-3 control-label" >Address2<label></center> 
<div class="col-sm-9 inputGroupContainer">
<div >
<input name="Address2" placeholder="Address2" class="form-control"  type="text">
</div>
</div>
</div>

<!-- Text input-->
<div class="form-group">
<label class="col-sm-3 control-label">City<label></center>  
<div class="col-sm-9 inputGroupContainer">
<div >
<input name="City" placeholder="City" class="form-control"  type="text">
</div>
</div>
</div>

<!-- Text input-->
<div class="form-group">
<label class="col-sm-3 control-label">State / Zip<label></center>  
<div class="col-sm-9 inputGroupContainer">

<div class="col-sm-4" style="padding:0px;">
<input name="siteState" placeholder="State" class="form-control" type="text" >
</div>

<div class="col-sm-8" style="padding-right:0px;">
<input name="siteZip" placeholder="zip" class="form-control" type="text">
</div>

</div>
</div>

<!-- Text input-->

<div class="form-group">
<label class="col-sm-3 control-label">Country<label></center>  
<div class="col-sm-9 inputGroupContainer">
<div >
<select name="ddlSiteCountry" class="form-control selectpicker" >

<option value = "">---Select---</option>
<?php 

$search=$conn->query("SELECT * FROM `tbl_Country`");
while ($row_serach=$search->fetchAll(PDO::FETCH_OBJ)) 
{
echo "<option value='".$row_serach->id."'>".$row_serach->name."</option>";
}
?>

</select>

</div>
</div>
</div>


</div>
<div id="Biilling_Address" class="tab-pane">


<div class="form-group">
<label class="col-sm-3 control-label">Address1<label></center>  
<div class="col-sm-9 inputGroupContainer">
<div >

<input  name="BillAddress1" placeholder="Address1" class="form-control"  type="text">
</div>
</div>
</div>

<!-- Text input-->
<div class="form-group">
<label class="col-sm-3 control-label" >Address2<label></center> 
<div class="col-sm-9 inputGroupContainer">
<div >
<input name="BillAddress2" placeholder="Address2" class="form-control"  type="text">
</div>
</div>
</div>

<!-- Text input-->
<div class="form-group">
<label class="col-sm-3 control-label">City<label></center>  
<div class="col-sm-9 inputGroupContainer">
<div >
<input name="BillCity" placeholder="City" class="form-control"  type="text">
</div>
</div>
</div>

<!-- Text input-->
<div class="form-group">
<label class="col-sm-3 control-label">State / Zip<label></center>  
<div class="col-sm-9 inputGroupContainer">

<div class="col-sm-4" style="padding:0px;">
<input name="billState" placeholder="State" class="form-control" type="text" >
</div>

<div class="col-sm-8" style="padding-right:0px;">
<input name="billZip" placeholder="zip" class="form-control" type="text">
</div>

</div>
</div>

<!-- Text input-->

<div class="form-group">
<label class="col-sm-3 control-label">Country<label></center>  
<div class="col-sm-9 inputGroupContainer">
<div >

<input name="BillCountry" placeholder="Country" class="form-control" type="text">
</div>
</div>
</div>


</form>



</div>

</div>    

Good Morning Sir , 

I have recreated 1 Future and 1 Present Date Booking for Ford

video link (https://mail-gmail-4.tinytake.com/sf/MjgyMzAzNF84NDc2MDM0)
----------------------
1. For Future Date( Ford 10 Aug living room meeting  )- 
Functions -Actual Column - Non Editable 
Service Items - Actual Column  - Editable

Actualize Current Function /Apply Current Function   --> validation Error
-----------------------
2. For Present Date (  Ford 8 aug Ballroom meeting ) -

Functions / Service Items  -Actual Column - Editable 
Actualize Current Function / Apply Current Function - will work 

Please Let me know if me and Brian are on same page

Thank you




/////////


</div

//////////
sam delete
delete from funct where customerId=89
delete from EVENT where customerId=89
///////

delete from funct where customerId=87
delete from EVENT where customerId=87
///////////
unit testing 

(put NA if any step not required)
console is clean - 
SpellCheck -  
UI is same as discussed - 
All Controls and their Functionality are working 
All validations are working if required 
All CRUD operations are working if required 
If any Controls/ screens is not functional - please mention before unit Testing
other developer functionality in module

////



var Class_CRUD = function(options){

var vars = { myVar  : 'original Value' };

var root = this;

this.construct = function(options){
$.extend(vars , options);
};

this.myPublicMethod = function(){
(vars.myVar);
myPrivateMethod();
};

var myPrivateMethod = function() {
('accessed private method');
};

this.construct(options);


this.insert= function(){
(vars.myVar);
myPrivateMethod();
};

};
//////////

$.ajax({
method : "POST",
url : "../Booking/assets/ajax/ajax_getContactDropdown.php",
async: false,
data : {id : bookingID},
success : function(data){
$('#bookingcontactDropdown').html(data);
$('#EdFunc_SiteContact').html(data);
$('#defaultCatering').html(data);
}
});

$.ajax({
method : "POST",
async : false,
url : "../Booking/assets/ajax/ajax_getBookingData.php",
data : {id : bookingID},
success : function(data){

var json = JSON.parse(data);
var sd = json.startDate;
var sda = sd.split("-");
var sdate = sda1]+"-"+sda2]+"-"+sda0];

var ed = json.endDate;
var eda = ed.split("-");
var edate = eda1]+"-"+eda2]+"-"+eda0];

var db = json.dateBooked;
var dbo = db.split("-");
var dbooking = dbo1]+"-"+dbo2]+"-"+dbo0];


$('#defaultCatering').val(json.bookingContact).prop('selected',true);
$('#hiddenBookingIDUpdate').val(json.bookingId);
$('#hiddenCustomerIDUpdate').val(json.customerId);
$('#customerName').val(json.CustName);
$('#bookingName').val(json.bookingName);	
$('#bookingcontactDropdown').val(json.bookingContact).prop('selected',true);
$('#startDAte').val(sdate);	
$('#endDate').val(edate);
$('#dateBooked').val(dbooking);
$('#bookingStatus').val(json.status).prop('selected',true);
$('#salesPerson').val(json.salesPerson).prop('selected',true);
$('#bookingManager').val(json.manager).prop('selected',true);
$('#postAs').val(json.postAs);
$('#paymentMethod').val(json.paymentMthd).prop('selected',true);
$('#bookingFrequency').val(json.frequency).prop('selected',true);
$('#referralSource').val(json.referralSource).prop('selected',true);
$('#bookingPms').val(json.PMS);
$('#bookingSegment').val(json.segment).prop('selected',true);
$('#BS_SearchModal').modal('hide');
$('#BS_SearchModal .close').click();
$('#BM_BCB').val(json.CustName);

$('#hiddenFunctID').val(GetFunctID(json.bookingId));
sessionStorage.setItem('custmrName', json.CustName);
sessionStorage.setItem('AvCustID', json.customerId);
sessionStorage.setItem('bookingID', json.bookingId);
sessionStorage.setItem('bookingName', json.bookingName);
sessionStorage.setItem('date', sdate);
sessionStorage.setItem('customerId',json.customerId);

}
});
functionAgendaData(bookingID); 

///////////


class Matrix { // extends Object {
constructor() {
// super();
this.assign();
}
assign() {
('assign')
}
}


$(document).ready(function(){
objClass=new Matrix();
objClass.assign();

}) 

//////////////

delete from funct where customerId=89
delete from EVENT where customerId=89

Ford custID=89



delete from funct where customerId=89
delete from EVENT where customerId=89

//////////

Service Charge - .02
State Tax - .07

//////////////

Neeraj
Pwh53m0$

////////



///////

28-09 services
Library - -Labour	2.00	$0.00	0.40	$0.00	0.18	$2.58
west Deck - RegettaSetup	21.00	$0.00	4.20	$0.00	1.85	$27.05
Bar - AudioVisual	31.00	$0.00	6.20	$0.00	2.73	$39.93

/////////
fn.StartDate ,ss.FunctionID,@StartTime_EndTime :=CONCAT_WS(' - ', ES_ServiceStart,ES_ServiceEnd) AS StartTime_EndTime  ,fName.ResDesc,fr.functionRoom,fn.FunctGtdNumPpl as Gaurenteed,fn.FunctExpNumPpl as Expr, ss.Quantity as Act_Qty,ss.Price as Charge,ss.Item 

cst.CustName as Customer,
fn.StartDate as BkgStrt,
bkg.status,
bkg.bookingName as Booking,
bkg.postAs as PostAs,
fn.Actualized,
IFNULL(sum(rmblk.Block),0) as RmNgt,
IFNULL(sum(rmblk.Rate),0) as FncRm,
IFNULL(sum(ss.price),0) as Catering,
IFNULL(sum((rmblk.Block)*(rmblk.Rate)),0) as SlRm,
IFNULL(sum((rmblk.Slippage)*(rmblk.Rate)),0) as Slippage,
IFNULL(sum(rmblk.Rate)+sum(ss.price)+sum((rmblk.Block)*(rmblk.Rate)),0) as Total



st.CustName,
cst.CustID, 
CONCAT_WS('', cst.CustAdd1, cst.CustAdd2) AS Address,
cst.CustCntry as Country,
cst.CustMarket as MarketSegment,
cst.CustPhone as Phone,
cst.CustFax as Fax,
slps.name as Salesperson,
cnt.FirstName+' '+ cnt.LastName  AS ContactName,
cnt.Title,
CONCAT_WS('',cnt.Addr1, cnt.Addr2) AS Address,
cnt.Cntry as Country 


bkg.bookingName,
bkg.postAs,
bkg.bookingId,
fn.StartDate as Booking_Start,
fName.ResDesc as FunctionName,
bkg.status,
fn.FunctID as functionId,
cst.CustName as Customer,
cst.CustName as CustPhone,
cst.CustFax as Fax,
cst.CustAdd1 AS Address1 ,
cnt.FirstName+' '+ cnt.LastName  AS ContactName ,
cnt.Phone as ContactPhone,
cnt.FirstName+' '+ cnt.LastName  AS OnSiteContact ,
fn.StartTime AS StartTime , 
fn.EndTime AS EndTime ,
fn.FunctGtdNumPpl as Gaurenteed,
fn.FunctExpNumPpl as Expr,
fr.functionRoom ,
c.CategoryName,
ss.Service_time,
ss.Item,
ss.Quantity,
ss.price,
sd.servdescid



fn.FunctID as functionId,cst.CustName as CustomerName,bkg.bookingName,fName.ResDesc as FunctionName,fr.functionRoom,slps.name as salesperson,fn.StartDate as FunctionDate,fn.StartTime AS StartTime ,fn.EndTime AS EndTime ,
st.status as Status,
@RoomRent:=IFNULL(rmblk.Rate,0) as RoomRent,
if(find_in_set(1,`ServiceHeadersArray`),IFNULL(sum(ss.Food_n_BeveargesTotal),0),'') as Food_n_Bevearges,
if(find_in_set(1,`ServiceHeadersArray`),IFNULL(sum(ss.Food_n_BeveargesTotal),0),'') as CostOf_Food_n_Beverage,
if(find_in_set(2,`ServiceHeadersArray`),IFNULL(sum(ss.BarServicesTotal),0),'') as Bar_Services,
if(find_in_set(2,`ServiceHeadersArray`),IFNULL(sum(ss.BarServicesTotal),0),'') as CostOf_Bar_Services,
if(find_in_set(3,`ServiceHeadersArray`),IFNULL(sum(ss.AudioVisualTotal),0),'') as Audio_Visual,
if(find_in_set(3,`ServiceHeadersArray`),IFNULL(sum(ss.AudioVisualTotal),0),'') as CostOf_Audio_Visual,
if(find_in_set(4,`ServiceHeadersArray`),IFNULL(sum(ss.RoomSetupTotal),0),'') as Room_Setup,
if(find_in_set(4,`ServiceHeadersArray`),IFNULL(sum(ss.RoomSetupTotal),0),'') as CostOf_Room_Setup,
if(find_in_set(5,`ServiceHeadersArray`),IFNULL(sum(ss.MiscellaneousTotal),0),'') as Miscellaneous,
if(find_in_set(5,`ServiceHeadersArray`),IFNULL(sum(ss.MiscellaneousTotal),0),'') as CostOf_Miscellaneous,
if(find_in_set(6,`ServiceHeadersArray`),IFNULL(sum(ss.LaborTotal),0),'') as Labor,
if(find_in_set(6,`ServiceHeadersArray`),IFNULL(sum(ss.LaborTotal),0),'') as CostOf_Labor,
if(find_in_set(7,`ServiceHeadersArray`),IFNULL(sum(ss.RegettaSetupTotal),0),'') as Reggetta_SetUp,
if(find_in_set(7,`ServiceHeadersArray`),IFNULL(sum(ss.RegettaSetupTotal),0),'') as CostOf_Reggetta_SetUp,
if(find_in_set(8,`ServiceHeadersArray`),IFNULL(sum(ss.FnBNonMemberTotal),0),'') as Food_Beverages_NonMember,
if(find_in_set(8,`ServiceHeadersArray`),IFNULL(sum(ss.FnBNonMemberTotal),0),'') as CostOf_Food_Beverages_NonMember,
if(find_in_set(9,`ServiceHeadersArray`),IFNULL(sum(ss.BarSevicesNonMemberTotal),0),'') as Bar_Sevices_NonMember,
if(find_in_set(9,`ServiceHeadersArray`),IFNULL(sum(ss.BarSevicesNonMemberTotal),0),'') as CostOf_Bar_Sevices_NonMember,
if(find_in_set(10,`ServiceHeadersArray`),IFNULL(sum(ss.RoomSetupNonMemberTotal),0),'') as Room_Setup_NonMember,
if(find_in_set(10,`ServiceHeadersArray`),IFNULL(sum(ss.RoomSetupNonMemberTotal),0),'') as CostOf_Room_Setup_NonMember,
if(find_in_set(11,`ServiceHeadersArray`),IFNULL(sum(ss.LaborNonMemberTotal),0),'') as Labor_NonMember,
if(find_in_set(11,`ServiceHeadersArray`),IFNULL(sum(ss.LaborNonMemberTotal),0),'') as CostOf_Labor_NonMember,
@Service_Revenue_Total:=IFNULL(null,0) as Service_Revenue_Total,
@Service_RevenueCost:=IFNULL(null,0) as Service_RevenueCost,
@Subtotal:=IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.Total),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0) as Subtotal,
IFNULL(null,0) as Cost,
(IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.Total),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0))*0.20 as ServiceCharge,
IFNULL(null,0) as Discount,
(IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.Total),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0))*0.07 as Tax,
(IFNULL(rmblk.Rate,0) +IFNULL(sum(ss.Total),0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0) +IFNULL(null,0)+IFNULL(null,0)+IFNULL(null,0) +IFNULL(null,0))*1.27 as Total




////////////


select * from EVENT 
select * from servdesc sd
select * from funct
select * from  tblServiceSummary ss join tbl_Category c on ss.CategoryID=c.CategoryID
select * from  EVENT
select * from sections
select * from SYS_REPORTSDESC where CategoryID=1 order by SubCategoryName 
select * from SYS_REPORTSDESC order by SubCategoryName where CaterogyID=1
select * from tbl_ReportSetupCategories order by SetupCategoryName
select * from  tbl_Category
select * from tblFoodNBeverages
select * from tblFNB_SubMenu1
select * from tblFNB_SubMenu2 order by ID
select * from  servdesc
select * from tblFNB_SubMenu2 where ID>434
select * from tblServiceSummary ss join servdesc sd on ss.Service_time=sd.servdescid 
select * from servdesc where servdescid in (6,11,12,26,34)

/////


fn.FunctID as functionId,
cst.CustName as CustomerName,
bkg.bookingName,
fName.ResDesc as FunctionName,
fr.functionRoom,
slps.name as salesperson,
fn.StartDate as FunctionDate,
fn.StartTime AS StartTime ,
fn.EndTime AS EndTime ,
fn.statusId,

bkg.StartDate,
cst.CustName as CustomerName,
bkg.bookingName

//////////////////

join funct fn on fn.FunctID = ss.FunctionID
join tbl_Category c on ss.CategoryID=c.CategoryID
join FUNCTNAMES fName on fn.FunctName=fName.ResID 
join tbl_functionRoom fr on fr.id=fn.EvtID

left join custt cst on fn.customerId=cst.CustID 
left  join FUNCTNAMES fName on fn.FunctName=fName.ResID 
left join contacts cnt on cnt.ContactID=fn.OnSiteContact 
left join tbl_salesPerson slps on slps.id=fn.SPID
left join EVENT bkg on fn.bookingID =bkg.bookingID 
left join tbl_functionRoom fr on fr.id=fn.EvtID
left join tblRoomEditBlock rmblk on rmblk.bookingID=fn.bookingID
left join tblServiceSummary ss on fn.FunctID = ss.FunctionID 
left join depositt dp on dp.FunctID=fn.FunctID
left join tbl_status st on st.id=fn.statusid
left join tbl_GRC_Sections grc on bkg.grcId =grc.id 
left join servdesc sd on ss.Service_time =sd.servdescid

/////////

and if ( StartTime is null,1,fn.StartTime=StartTime) 
and if ( EndTime is null,1,fn.EndTime=EndTime)
and if ( cst_CustID is null,1,cst.CustID=cst_CustID) 
and if ( slps_id is null,1,slps.id =slps_id ) 
and if ( GRCArray is null,1,(if(grc.id is null ,1,find_in_set(grc.id,GRCArray)))) 
and if ( salesPersonArray is null,1,(find_in_set(slps.id,salesPersonArray))) 
and if ( statusArray is null,1,(find_in_set(st.id,statusArray))) 
and if ( ServiceHeadersArray is null,1,(find_in_set(ss.CategoryID,ServiceHeadersArray)))
and if ( ServiceDescriptionArray is null,1,(find_in_set(sd.servdescid,ServiceDescriptionArray)))

and if ( GRCArray is null,1,(if(grc.id is null ,1,find_in_set(grc.id,GRCArray)))) 
and if ( salesPersonArray is null,1,(find_in_set(slps.id,salesPersonArray))) 
and if ( statusArray is null,1,(find_in_set(st.id,statusArray)))


and if ( GRCArray is null,1,(find_in_set(grc.id,GRCArray))) 
and if ( salesPersonArray is null,1,(find_in_set(slps.id,salesPersonArray)))
and if ( statusArray is null,1,(find_in_set(st.id,statusArray))) 
and if ( marketSegmentArray is null,1,(find_in_set(bkg.segment,marketSegmentArray))) 
and if ( ServiceHeadersArray is null,1,(find_in_set(sd.servdescid,ServiceHeadersArray)))

and if ( ServiceHeadersArray is null,1,(find_in_set(sd.servdescid,ServiceHeadersArray))) 
and if ( sectionArray is null,1,(find_in_set(bkg.sectionId,sectionArray)))




///////

pivot 

SELECT 
hostid, 
sum( if( itemname = 'A', itemvalue, 0 ) ) AS A,  
sum( if( itemname = 'B', itemvalue, 0 ) ) AS B, 
sum( if( itemname = 'C', itemvalue, 0 ) ) AS C 
FROM 
bob 
GROUP BY 
hostid;

////////


SELECT  
COUNT(CASE WHEN bkg.status='1' THEN bkg.status ELSE NULL  END ) AS 'confirmed',
COUNT(CASE WHEN bkg.status='2' THEN bkg.status ELSE NULL  END ) AS 'Tentative',
COUNT(CASE WHEN bkg.status='3' THEN bkg.status ELSE NULL  END ) AS 'Inquiry',
COUNT(CASE WHEN bkg.status='4' THEN bkg.status ELSE NULL  END ) AS 'Lost Business'
FROM   EVENT bkg 
//////////


SELECT 
bkg.status,
count( if( bkg.status = '1', bkg.bookingId, 0 ) ) AS 'confirmed',
count( if( bkg.status = '2', bkg.bookingId, 0 ) ) AS 'Tentative'
FROM 
EVENT bkg

/////////	

DELIMITER $$;

CREATE TRIGGER myTrigger AFTER UPDATE ON EVENT
FOR EACH ROW
BEGIN
if NEW.status <=> OLD.status THEN
select 'changes';
END IF;
END$$

DELIMITER ;$$

//////////

DELIMITER $$;
DROP TRIGGER `esp_test`.`trg_StatusChange`$$
CREATE TRIGGER `esp_test`.`trg_StatusChange` AFTER UPDATE on `esp_test`.`tbl_booking`
FOR EACH ROW BEGIN
if NEW.status <=> OLD.status THEN
insert into tbl_bkgStatusChange set bookingId =OLD.bookingId , NewStatus = NEW.status ,Date=OLD.StartDate;
END IF;
END$$
DELIMITER ;$$

//////////////

mysql declare variable

SET @m = '2018-09-17';

SELECT sd.Descrip, 
sum( if( fn.StartDate between '' and DATE_ADD(@m  , INTERVAL 1 MONTH), ss.Total, 0 ) ) as `M1`,
from tblServiceSummary ss 
left join servdesc sd on ss.Service_time=sd.servdescid 
left join funct fn on ss.FunctionID=fn.FunctID 
left join tbl_Category c on ss.CategoryID=c.CategoryID 
left join EVENT bkg on fn.bookingID =bkg.bookingID 

////////////	


DROP TABLE IF EXISTS `tbl_SleepingRoomsChange`;

/////////

BookingID 654,0,MTAwMQ==,89,Ford 21 sep report booking,131,2018-09-21,2018-09-21,NULL,2018-09-10,0000-00-00,2,,,,,,,,1,NULL,1

CREATE TABLE `tbl_SleepingRoomsChange` (
`id` int(11) NOT NULL AUTO_INCREMENT,
`DateChgd` date ,
`Chgd By` int(50) DEFAULT NULL,
`FieldChgd` varchar(50) DEFAULT NULL,
`ChgdFrom` varchar(50) DEFAULT NULL,
`ChgdTo` varchar(50) DEFAULT NULL,

PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;

///////

/////////


WebDefaultSection

var objClass_CRUD;

class SetupBase { 

constructor() {
objClass_CRUD = new Class_CRUD();

}

GetReportsInterface() {

var reportsInterface = new ReportsInterface();
reportsInterface.init();

}

}	

//////////

multifunction -

ford 19 sep Dance Terrace Booking 


Ford 18 Oct BEO -835

//////////



table size query 


SELECT 
t.NAME AS TableName,
s.Name AS SchemaName,
p.rows AS RowCounts,
SUM(a.total_pages) * 8 AS TotalSpaceKB, 
CAST(ROUND(((SUM(a.total_pages) * 8) / 1024.00), 2) AS NUMERIC(36, 2)) AS TotalSpaceMB,
SUM(a.used_pages) * 8 AS UsedSpaceKB, 
CAST(ROUND(((SUM(a.used_pages) * 8) / 1024.00), 2) AS NUMERIC(36, 2)) AS UsedSpaceMB, 
(SUM(a.total_pages) - SUM(a.used_pages)) * 8 AS UnusedSpaceKB,
CAST(ROUND(((SUM(a.total_pages) - SUM(a.used_pages)) * 8) / 1024.00, 2) AS NUMERIC(36, 2)) AS UnusedSpaceMB
FROM 
sys.tables t
INNER JOIN      
sys.indexes i ON t.OBJECT_ID = i.object_id
INNER JOIN 
sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id
INNER JOIN 
sys.allocation_units a ON p.partition_id = a.container_id
LEFT OUTER JOIN 
sys.schemas s ON t.schema_id = s.schema_id
WHERE 
t.NAME NOT LIKE 'dt%' 
AND t.is_ms_shipped = 0
AND i.OBJECT_ID > 255 
GROUP BY 
t.Name, s.Name, p.Rows
ORDER BY 
t.RowCounts desc

//////////////////////
SQL server 2008 data search	

DECLARE @MyValue NVarChar(4000) = 'library';

SELECT S.name SchemaName, T.name TableName
INTO #T
FROM sys.schemas S INNER JOIN
sys.tables T ON S.schema_id = T.schema_id;

WHILE (EXISTS (SELECT * FROM #T)) BEGIN
DECLARE @SQL NVarChar(4000) = 'SELECT * FROM $$TableName WHERE (0 = 1) ';
DECLARE @TableName NVarChar(1000) = (
SELECT TOP 1 SchemaName + '.' + TableName FROM #T
);
SELECT @SQL = REPLACE(@SQL, '$$TableName', @TableName);

DECLARE @Cols NVarChar(4000) = '';

SELECT
@Cols = COALESCE(@Cols + 'OR CONVERT(NVarChar(4000), ', '') + C.name + ') = CONVERT(NVarChar(4000), ''$$MyValue'') '
FROM sys.columns C
WHERE C.object_id = OBJECT_ID(@TableName);

SELECT @Cols = REPLACE(@Cols, '$$MyValue', @MyValue);
SELECT @SQL = @SQL + @Cols;

EXECUTE(@SQL);

DELETE FROM #T
WHERE SchemaName + '.' + TableName = @TableName;
END;

DROP TABLE #T;

////////

isset($_POST'act'])
Ford - 137804
630 -van meter 
99690 - shwing BEO max data (from sleping room)
99229

/////////

office 365
lew@netwurxtg.onmicrosoft.com
Esp@12345

Bodman PLC, - Sarah
Bretz, Daniel J.

24 Hour Report
Booking Cost Analysis
Booking Distribution
Booking Revenue in Excel
Booking Schedule in Word
Function Distribution by Date
Function List
Function Revenue in Excel
Function Room Occupancy
Sales Report By Salesperson
Service Sheet


/////////////////

https://www.esp.systems/esp-project















//////

$('.sys').find('input[type=text],select')

$_POST'length']=(isset($_POST'length']) ? ($_POST'length']) : null)

////////////////////////////////
dropdowns

function getFunctions() function getFunctions1()function getSalesPerson()function getfrequency()function getTaskCategory()function getContacts()	function getContacts(id)function getReferral()function getCountry()function getSalesGroup()function getSUTYPES()function getServDesc()function getServDesc(CategoryVal)function getCategory()function getSalutation()function getContactType()function getMarket()function getCustGroups()
function getStatus()function paymethods()function getrestype()function getroomtypes()
getGRCSections() ,getServiceDescriptions()
////////////////

jsonData = _.filter( jsonData, function(item){ 
if (item.frdid > 0 ){
return item;
} 
})

////////////

//////////////////////

$arr=array();

foreach($result->fetchAll(PDO::FETCH_OBJ) as $row)
{
$arr] = $row;

}
echo json_encode($arr);
exit();

}	

//////////
brackets , replace
]

///////////////
close all modals

$('.modal').modal('hide') 
$('.modal-backdrop').remove()

////////////////


///////////

sql backup path
c:\Program Files\Microsoft SQL Server\MSSQL10_50.SQLEXPRESS\MSSQL\Backup\


////////////////
var out = JSON.parse(CRUD("select funct.evtid,EVENT.CustID,EvtName,CustName,CustPhone from FUNCT funct left join EVENT on EVENT.EvtID = funct.evtid left join CUSTT on EVENT.CustID = CUSTT.CustID where funct.FunctID= "+funId+""))0];

var query="";

$.each(JSON.parse(CRUD(query)), function( index, value ) {

})


var custid = JSON.parse(CRUD("select EVENT.CustID from EVENT where EVENT.evtid= "+fabookingId+""))0].CustID;

jquery rtrim


string.replace(/\s+$/, '!')

///////////////

ltrim==
orderby = ' order by '+groupby.replace(/^,/, '');

------------------

/////////////
Esp key
EC3-85B7-AED7-21AC-064A-000A


//////////////
html to csv -js
function html_csv(tbl, filename) {
var csv = [];
//var rows = document.querySelectorAll("table tr");
var rows = $(tbl).find('tr');

for (var i = 0; i < rows.length; i++) {
var row = [], cols = rows[i].querySelectorAll("td, th");
for (var j = 0; j < cols.length; j++) 
row.push(cols[j].innerText);
csv.push(row.join(","));		
}

// Download CSV
download_csv(csv.join("\n"), filename);


var csvFile=csv.join("\n");
var downloadLink;
csvFile = new Blob([csv], {type: "text/csv"});
downloadLink = document.createElement("a");
downloadLink.download = filename;
downloadLink.href = window.URL.createObjectURL(csvFile);
downloadLink.style.display = "none";
document.body.appendChild(downloadLink);
downloadLink.click();
}



/////////////////////////



/////////////
1 april

Just notes on the below items:

- The function distribution by date report still doesn’t look like what it currently looks like, in its current form on the web version it reads more like a function list, I’ve attached again what the report currently looks like for us in the OG version. In looking back at past emails I think I may have screwed this up by sending you the function list report instead of the function distribution by date, my apologies, correct version for the week of January 18-24 is attached.


As relates to the inventory quantity I will need to get on the phone with Brian because I am currently unable to access the setup menu, I receive an error message that read Invalid procedure call or argument (Utility.glo-ShellTo Setup) so I cannot take a screen shot of the OG version showing that current inventory is loaded into the old system and needs to be updated in to the new system. But every item under setup has a quantity because that is how we track inventory and if we need to rent things on high inventory days. It looks to me in your screenshot as if the zero you’re showing is related to the service item charge which is zero we don’t charge for furniture but the count of items is not zero



Summary of charges on 1/14 in Pechet is showing correctly thank you, I still think there’s work needing to be done to get that screen to show properly, some cells show 2 decimal places, some show none it should be standard across the board each time we open that screen for ease of reading and so it pull accurately onto a customer’s bill/invoice.



Brian, in the interim I also need a service call on OG ESP, we have a new conference planner and for some reason none of the reports show up in her ESP. We’ve removed the software and redownloaded it but still not showing up so she cannot run any reporting, if we can schedule a call on that as and fixing my inability to access the setup funcsions as well I’d be most appreciative.

//////////////////////////////////////


Lewis, below is a screenshot of the setup window, in legacy version the 2nd turquoise column allows us to enter an inventory count, see second screenshot for an example:


Inventory on hand is where we keep track



If this is not something you can access, would a list of the items with their inventory count be helpful to load into web version?



/////////////////////



2. multi day events.
3. Prospective Customer lists would be great. - where customer want this list to be displayed

7. It would be nice if for the booking we had the option of adding the person who is taking care of the invoice. In the Customer Tab there is an option for contact type, but in the booking there is no option to show who is paying the bill. --- is the person for invoice will be ,salesperson , catering salesperson , contacttype or any new profile 

12. A "red flag" alert on certain customers would be nice. We currently add notes to the customer tab but when another sales person is trying to book and event it would be nice if there was some sort of alert that could be seen from any page regarding that customer.

14. If you have two function rooms listed and you have two room setups you cannot select out of
the list because it just adds the number 2 to the selection.
Need to discuss point 12 and 14 this in detail 



//////////////////////////////

https://mail-gmail-4.tinytake.com/sf/MzQ0MDIwM18xMDI5OTIwNg


https://mail-gmail-4.tinytake.com/sf/MzQ0NDE0Nl8xMDMxNjg2Ng


https://www.youtube.com/watch?v=WUpb865g11Q&feature=youtu.be
https://www.youtube.com/watch?v=W2j3V-hGwZg&feature=youtu.be

/////////////////////


cross origin / cors

// Allow from any origin
if (isset($_SERVER['HTTP_ORIGIN'])) {
header("Access-Control-Allow-Origin: {$_SERVER['HTTP_ORIGIN']}");
header('Access-Control-Allow-Credentials: true');
header('Access-Control-Max-Age: 86400');    // cache for 1 day

}

// Access-Control headers are received during OPTIONS requests
if ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {

if (isset($_SERVER['HTTP_ACCESS_CONTROL_REQUEST_METHOD']))
header("Access-Control-Allow-Methods: GET, POST, OPTIONS");         

if (isset($_SERVER['HTTP_ACCESS_CONTROL_REQUEST_HEADERS']))
header("Access-Control-Allow-Headers:        {$_SERVER['HTTP_ACCESS_CONTROL_REQUEST_HEADERS']}");

exit(0);
}

////////////////////////



14044730167

freelancer profile 

Greetings

My Name is Neeraj ,working since 7 years on development on wordpress, Android ,.net ,PHP , MYSQL , Bootstrap .
I would like to share my work 
1.https://www.esp.systems (credentials -> company-harvard , username -  admin , password-esp)
(client - harvard medical university , florida)

ESP2000 is  Web Extensions sales, catering and event management softwares.for small hotel, a large 25 hotel chain, a private club, law firm, conference center or corporate meeting facility, maximizing your sales and marketing dollars or your meeting services budget is critical.it huge database of over 300 tables and more than 5 gb of records 

my database schema
https://drive.google.com/file/d/1lYy2knYHqWnwEJ216vlVdT_EOPHWoxZZ/view?usp=sharing

2. ECommerce Aplication(Django,python) 
http://chilidogtags.com/product_info.php?products_id=43
it is Pet shop ecommerce site made in in django and python

3.StopLoss algorithem on python(quantconnect,python) 
https://www.quantconnect.com/terminal/

4. Stock Prices Future Prediction
http://chilidogtags.com/product_info.php?products_id=43
To examine a number of different forecasting techniques to predict future stock returns based on past returns and numerical news indicators to construct a portfolio of multiple stocks in order to diversify the risk
it is Pet shop ecommerce site made in in django and python

I would like to start things off by suggesting we can schedule a interview over phone to discuss the Projects 


My Skype : bs24neeraj
/////

please contact me on s.k.p.e (bs24neeraj)  or w.t.s.a.p. (+91 9999645181) 


/////

Greetings

My Name is Neeraj ,working since 3 years on development on Django,Python ,ML,Scipy,Numpy,Matplotlib ,Pandas,Sklearn,Jupyter

I would like to share my work 

Django ECommerce Aplication 
http://chilidogtags.com/product_info.php?products_id=43
it is Pet shop ecommerce site made in in django and python

1. Gladiator Machine Learning projects
skills : Python 3 ,Scipy,Numpy,Matplotlib ,Pandas,Sklearn,Jupyter

2. Money Ball Machine Learning projects

data analysis is employed to discover that teams that had a roster containing players with a high on base percentage (OBP) did very well in the regular season. Using this knowledge the General Manager was able to create a very successful team on a shoestring budget 

3. Stock Prices Machine Learning projects


4.Handwritten Text Recognition with TensorFlow Machine Learning projects

I would like to start things off by suggesting we can schedule a interview over phone to discuss the Projects 


/////

Greetings

My Name is Neeraj ,working since 3 years on development on Django,Python ,ML,Scipy,Numpy,Matplotlib ,Pandas,Sklearn,Jupyter

I would like to share my work 

StopLoss algorithem on python 

1.I have made it on quantconnect platform using python 
https://youtu.be/rK0lYRuuXJc
https://www.quantconnect.com/terminal/

2. Stock Prices Future Prediction
To examine a number of different forecasting techniques to predict future stock returns based on past returns and numerical news indicators to construct a portfolio of multiple stocks in order to diversify the risk. We do this by applying supervised learning methods for stock price forecasting by interpreting the seemingly chaotic market data.

http://chilidogtags.com/product_info.php?products_id=43
it is Pet shop ecommerce site made in in django and python

3. Gladiator Machine
skills : Python 3 ,Scipy,Numpy,Matplotlib ,Pandas,Sklearn,Jupyter

4. Money Ball 
data analysis is employed to discover that teams that had a roster containing players with a high on base percentage (OBP) did very well in the regular season. Using this knowledge the General Manager was able to create a very successful team on a shoestring budget with players that had a high OBP.



4.Handwritten Text Recognition with TensorFlow Machine Learning projects

I would like to start things off by suggesting we can schedule a interview over phone to discuss the Projects 


////////


tamara0@seafoodpn.com - ndt2fx12
shubh@seafoodpn.com
zuria82@seafoodpn.com
shacoria@vspiderf.com
mercury716@vspiderf.com -- node.js
ballard@vspiderf.com
edag@vspiderf.com
nyamal35@oallenlj.com
ayame96@oallenlj.com - Developer for a social media website and app.
henriette35@oallenlj.com
renesha@oallenlj.com
techart555@oallenlj.com
kiti@coin-one.com
remmel.5@ffwebookun.com - quantconnect
caleb88@genderuzsk.com
-----------------------------------------

If anyone facing "UPWORK PROFILE APPROVED ISSUE". I will help you to get Approval in Few Hours by upwork.com with your desire skills.
s-k-y-p=e live:sonam.svits or whats app +91-9630315999

If anyone Facing UPWORK PROFILE REJECTED issue.I will help you to get approved your rejected account.My skye id:- ksyp_ak@outlook.com


Accnt - sorting , search by column name -- on first 2 columns
Ledger -column done till debit , credit 

///////


mTableLayout.addView(tr, trParams);

for (int i1 = 0; i1 < mTableLayout.getChildCount(); i1++) {
View child = mTableLayout.getChildAt(i1);

if (child instanceof TableRow) {

TableRow t = (TableRow) child;
TextView firstTextView = (TextView) t.getChildAt(0);
TextView secondTextView = (TextView) t.getChildAt(1);
String firstText = firstTextView.getText().toString();
String secondText = secondTextView.getText().toString();
}
}
////////////


As an example we may fetch data at 3:30 before the markets close - by placing the "fetch routine" in a module it will not be a huge under taking to change the code"
User Avatar
^^ not sure if these are any helpful responses for you but those are the what I got. If you have any questions or queries we can ask them to clarify 

//////////


using System.Net;
using Newtonsoft.Json;

// In Initialize
Schedule.On(
DateRules.EveryDay(), 
TimeRules.AfterMarketOpen("SPY", -20), () =>
{
using (var client = new WebClient())
{
var json = client.DownloadString("http://myserver/getdata");
p[]p[]
var mySymbols = JsonConvert.DeserializeObject<List<string>>(json);

foreach (var symbol in mySymbols) {
Debug(Time + ": " + symbol);
}
}
});



////////



import numpy as np
import datetime

class BasicTemplateAlgorithm(QCAlgorithm):

def Initialize(self):

self.SetStartDate(2019,8,1)  #Set Start Date
self.SetEndDate(2019,8,5)    #Set End Date
self.SetCash(100000)           #Set Strategy Cash

self.UniverseSettings.Resolution = Resolution.Minute
self.AddUniverse(self.CoarseSelectionFunction)
self.AddEquity("AAPL",Resolution.Minute)

self.__numberOfSymbols = 30
self.w = 1.0/self.__numberOfSymbols

self.entry_minute = 30
self.exit_minute = 15
self.bigStocks = None

self.Schedule.On(self.DateRules.EveryDay("AAPL"),
self.TimeRules.AfterMarketOpen("AAPL",self.entry_minute),
Action(self.EnterPosition))

self.Schedule.On(self.DateRules.EveryDay("AAPL"),
self.TimeRules.BeforeMarketClose("AAPL",self.exit_minute),
Action(self.ExitPosition))

def CoarseSelectionFunction(self, coarse):
# self.Debug("coarse")
selected = [x for x in coarse if (x.HasFundamentalData) and (float(x.Price) > 2)]
sortedByDollarVolume = sorted(selected, key=lambda x: x.DollarVolume, reverse=True)
self.bigStocks = [ x.Symbol for x in sortedByDollarVolume[:self.__numberOfSymbols] ]
return self.bigStocks
---------------------------
httpd.exe - Entry Point Not Found
---------------------------
The procedure entry point zend_hash_merge@@32 could not be located in the dynamic link library php7ts.dll. 
---------------------------
OK   
---------------------------

def EnterPosition(self):
# self.Debug("Enter")

self.entry_price = {}
if self.bigStocks is None: return
for stock in self.bigStocks:
history = self.History(stock, self.entry_minute, Resolution.Minute)
if 'close' in history.columns:
delta = (history['close'][-1] - history['close'][0])/history['close'][-1]
self.direction = np.sign(delta)
if self.direction > 0:
self.SetHoldings(stock, self.direction * self.w)
self.entry_price[stock] = history['close'][-1]

def ExitPosition(self):
# self.Debug("end of day")
for stock in self.entry_price:
self.Liquidate(stock)

def OnData(self, data):
pass

php artisan serve --host www.campaignserver.com --port 80	
npm init
npm install react react-dom --save
npm install webpack webpack-dev-server webpack-cli --save
npm install babel-core babel-loader babel-preset-env 
babel-preset-react html-webpack-plugin --save-dev

react 

https://github.com/facebook/create-react-app
https://stackoverflow.com/questions/54041071/react-password-eye-icon-for-multiple-fields




Access to fetch at '' from origin '' has been blocked by CORS policy:
No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs,
set the request's mode to 'no-cors' to fetch the resource with CORS disabled.



/////////



//   return  fetch('https://jsonplaceholder.typicode.com/posts', {
// 	method: 'POST',
// 	body: JSON.stringify({
// 		title: 'New title added',
// 		body: 'New body added. Hello body.',
// 		userId: 2
// 	}),
// 	headers: {
//     'X-CSRFToken':'{{csrf_token()}}',
// 		"Content-type": "application/json; charset=UTF-8"
// 	}
// }).then(response => {
// 		return response.json()
// 	}).then(json => {
// 		this.setState({
// 			user:json
// 		});
//   });


//     return fetch('http://www.campaignserver.com/postapi', { // Added the trailing slash here 
//   method: 'post',
//   credentials: "same-origin", // Added this line
//   headers: {
//     'Accept': 'application/json',
//     'Content-Type': 'application/json',
//     'X-CSRFToken':'{{csrf_token()}}', // getting token from cookies
//   }
// }).then (function (response) {console.log(response.json())})




// return fetch('http://www.campaignserver.com/getapi', { // Added the trailing slash here 
//   method: 'GET',
//   credentials: "same-origin", // Added this line
//   headers: {
//     'Accept': 'application/json',
//     'Content-Type': 'application/json',
//     'X-CSRFToken':'{{csrf_token()}}', // getting token from cookies
//   }
// }).then(response => {
//   console.log(response);

// });

//   fetch('http://www.campaignserver.com/posts', {
//       method: 'POST',
//       headers: {
//         'Accept': 'application/json',
//         'Content-Type': 'application/json',
//         'X-CSRF-TOKEN': '{{csrf_token()}}'
//       }
//  }).then(res => res.json())
//  .then(data => console.log(data))
//  .catch(err => console.log(err));

//   fetch('http://www.campaignserver.com/posts', {
//     method: 'POST',
//     credentials: 'include',
//     headers: {
//       'X-CSRF-TOKEN': '{{csrf_token()}}'
//     }
//   })
//  .then(function(data) {
//   console.log(data);
// })


// fetch('http://www.campaignserver.com/posts', {
//   method: 'POST',
//   headers: {
//     'Accept': 'application/json',
//     'X-CSRF-TOKEN': '{{csrf_token()}}'
//   },
// }).then (function (response) {return response.json()})
//   .then(function (json) {/* Here is your json */})
//   .catch(function (error) {/*Handle error*/});


//     var data = new FormData();
//     const signupdata = {
//       email: this.state.email,
//       password: this.state.password

//     };


//   var  targetUrl = 'http://www.campaignserver.com/posts'
// fetch(targetUrl, {
//   method: "POST"
//   ,
// })
// .then(function(data) {
//       console.log(data);
//     })


// const proxyurl = "https://cors-anywhere.herokuapp.com/";
// const url = 'http://www.campaignserver.com/posts'; // site that doesn’t send Access-Control-*


// data.append("signupdata", JSON.stringify(signupdata));
// fetch(url, {
//     method: "POST",
//     body: data
// }, {mode: 'cors'})
//   .then(function(data) {
//     console.log(data);
//   })
//   .catch(function(error) {
//     console.log(error);
//   }); 


// console.log(signupdata);
// fetch('http://www.campaignserver.com/posts', {
//     method: "POST",
//     body: data
// })
// console.log(data);

// $input = $request->all();

// return ($input);
// return User::create([
//     'name' => Input::get('name'),
//     'email' => Input::get('lastname'),
// ]);
// return $user;


// return User::create([
//     'name' => Input::get('name'),
//     'email' => Input::get('lastname'),
// ]);
// return $user;



//return ($request);
//return $request->input();


// var url = "D:/1.bat"
// var WindowName = 'Run_File';
// var WindowOptions =
//     'width=400,height=200, left=180,top=80, toolbar=no, location=no, directories=no, status=yes, scrollbars=yes,resize=no,menubar=no';

//  window.open(url, WindowName, WindowOptions);






// window.open('file:///C:/Windows/notepad.exe')

// window.open('file:///D:/1.bat')


// var child_process = require('child_process');

// child_process.exec('D:\\1.bat', function(error, stdout, stderr) {
//     console.log(stdout);
// });


//   const signupdata = {
//     email: this.state.email,
//     password: this.state.password

//     };

//   return fetch('http://www.campaignserver.com/verifymail', { 
//   method: 'post',
//   credentials: "same-origin", 
//   headers: {
//     'Accept': 'application/json',
//     'Content-Type': 'application/json',
//   },
//   		body: JSON.stringify(signupdata),
// }).then (function (response) {
//   console.log(response.status)


//   if( response.status=='201')
// {

//   alert('Verification mail sent');


// }

// })


// pm2.start({
//     script: 'npm -- run bat',
//     autorestart : false 
//   }, (err, apps) => {
//     pm2.disconnect()
//     if (err) { throw err }
//   })


//////////





//   return  fetch('https://jsonplaceholder.typicode.com/posts', {
// 	method: 'POST',
// 	body: JSON.stringify({
// 		title: 'New title added',
// 		body: 'New body added. Hello body.',
// 		userId: 2
// 	}),
// 	headers: {
//     'X-CSRFToken':'{{csrf_token()}}',
// 		"Content-type": "application/json; charset=UTF-8"
// 	}
// }).then(response => {
// 		return response.json()
// 	}).then(json => {
// 		this.setState({
// 			user:json
// 		});
//   });


//     return fetch('http://www.campaignserver.com/postapi', { // Added the trailing slash here 
//   method: 'post',
//   credentials: "same-origin", // Added this line
//   headers: {
//     'Accept': 'application/json',
//     'Content-Type': 'application/json',
//     'X-CSRFToken':'{{csrf_token()}}', // getting token from cookies
//   }
// }).then (function (response) {console.log(response.json())})




// return fetch('http://www.campaignserver.com/getapi', { // Added the trailing slash here 
//   method: 'GET',
//   credentials: "same-origin", // Added this line
//   headers: {
//     'Accept': 'application/json',
//     'Content-Type': 'application/json',
//     'X-CSRFToken':'{{csrf_token()}}', // getting token from cookies
//   }
// }).then(response => {
//   console.log(response);

// });

//   fetch('http://www.campaignserver.com/posts', {
//       method: 'POST',
//       headers: {
//         'Accept': 'application/json',
//         'Content-Type': 'application/json',
//         'X-CSRF-TOKEN': '{{csrf_token()}}'
//       }
//  }).then(res => res.json())
//  .then(data => console.log(data))
//  .catch(err => console.log(err));

//   fetch('http://www.campaignserver.com/posts', {
//     method: 'POST',
//     credentials: 'include',
//     headers: {
//       'X-CSRF-TOKEN': '{{csrf_token()}}'
//     }
//   })
//  .then(function(data) {
//   console.log(data);
// })


// fetch('http://www.campaignserver.com/posts', {
//   method: 'POST',
//   headers: {
//     'Accept': 'application/json',
//     'X-CSRF-TOKEN': '{{csrf_token()}}'
//   },
// }).then (function (response) {return response.json()})
//   .then(function (json) {/* Here is your json */})
//   .catch(function (error) {/*Handle error*/});


//     var data = new FormData();
//     const signupdata = {
//       email: this.state.email,
//       password: this.state.password

//     };


//   var  targetUrl = 'http://www.campaignserver.com/posts'
// fetch(targetUrl, {
//   method: "POST"
//   ,
// })
// .then(function(data) {
//       console.log(data);
//     })


// const proxyurl = "https://cors-anywhere.herokuapp.com/";
// const url = 'http://www.campaignserver.com/posts'; // site that doesn’t send Access-Control-*


// data.append("signupdata", JSON.stringify(signupdata));
// fetch(url, {
//     method: "POST",
//     body: data
// }, {mode: 'cors'})
//   .then(function(data) {
//     console.log(data);
//   })
//   .catch(function(error) {
//     console.log(error);
//   }); 


// console.log(signupdata);
// fetch('http://www.campaignserver.com/posts', {
//     method: "POST",
//     body: data
// })
// console.log(data);



// $input = $request->all();

// return ($input);
// return User::create([
//     'name' => Input::get('name'),
//     'email' => Input::get('lastname'),
// ]);
// return $user;


// return User::create([
//     'name' => Input::get('name'),
//     'email' => Input::get('lastname'),
// ]);
// return $user;



//return ($request);
//return $request->input();




///////////////



<?php 

namespace App\Http\Controllers;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Input;
use App\User;

class HomeController extends Controller
{

// public function __construct()
// {
//     $this->middleware('auth');
// }

public function index()
{
return view('home');
}

public function postapi(Request $request)
{
return  response()->json($request->input('email'));
}

public function getapi()
{
User::create([
'email' => Input::get('email'),
'password' => Input::get('password')
]);
return redirect('http://localhost:3000/login');

}

public function signin()
{

try {

$user = User::where('email',$request->get('email_address'), true)
->where('password',$request->get('password'), true)
->get();

return redirect('http://localhost:3000/DashBoard');

} catch (\Exception $e) {

return Redirect::back()->withErrors(['invalid Credentials']);
}


User::create([
'email' => Input::get('email'),
'password' => Input::get('password')
]);
return redirect('http://localhost:3000/login');

}



}

//////////////



<?php 

namespace App\Http\Controllers;
use Illuminate\Http\Request;
use Mail;

use App\Http\Requests;
use App\Http\Controllers\Controller;

class MailController extends Controller {
public function basic_email() {
$data = array('name'=>"Virat Gandhi");
Mail::send(['text'=>'mail'], $data, function($message) {
$message->to('mail.nrj@gmail.com', 'Tutorials Point')->subject
('Laravel Basic Testing Mail');
$message->from('mail.nrj@gmail.com','Virat Gandhi');
});
echo "Basic Email Sent. Check your inbox.";
}

public function verifymail(Request $request)
{
$data = [
'email' =>$request->input('email'),
'password' => $request->input('password')
];

Mail::send('mail',["data1"=>$data], function($message) {
$message->to('mail.nrj@gmail.com', 'Tutorials Point')->subject
('Laravel HTML Testing Mail');
$message->from('mail.nrj@gmail.com','Virat Gandhi');
});

return  response()->json([
'message' => 'HTML Email Sent. Check your inbox.'
], 201);

}


// public function html_email() {
//    $data = array('name'=>"Virat Gandhi");
//    Mail::send('mail', $data, function($message) {
//       $message->to('mail.nrj@gmail.com', 'Tutorials Point')->subject
//          ('Laravel HTML Testing Mail');
//       $message->from('mail.nrj@gmail.com','Virat Gandhi');
//    });
//    echo "HTML Email Sent. Check your inbox.";
// }


public function attachment_email() {
$data = array('name'=>"Virat Gandhi");
Mail::send('mail', $data, function($message) {
$message->to('arti.m@aviktechnosoft.com', 'Tutorials Point')->subject
('Laravel Testing Mail with Attachment');
$message->attach('D:\1.JPG');
});
echo "Email Sent with attachment. Check your inbox.";
}
}

//////////




echo "<script>var run=new ActiveXObject('WSCRIPT.Shell').Run(mkdir foo);</script>";

echo '<script>var wshShell = new ActiveXObject("WScript.Shell"); wshShell.Run("D:\\1.bat");</script>';

exec('c:\WINDOWS\system32\cmd.exe /c START D:\1.bat');

$path_to_file="D:\1.bat";
system("cmd /c C:" . $path_to_file);

//create the names collection and add documents to it
db.names.insert({'name' : 'Don Draper'});
db.names.insert({'name' : 'Peter Campbell'});
db.names.insert({'name' : 'Betty Draper'});
db.names.insert({'name' : 'Joan Harris'});

mongo <server>:<port>/<database> --eval "db.<some_collection>.drop();"
mongo 127.0.0.1:27017/<database> --eval "db.<some_collection>.drop();"
mongo --eval 'use db1'
mongo a.js


mongo.exe 127.0.0.1:27017/admin --eval "db=db.getSiblingDB('client1_db');db.createCollection('myTestCollection')" -- working 




// echo "<script>var nrc = require('node-run-cmd');nrc.run('mkdir C:/foo');alert('q');</script>";

// Artisan::call("php artisan make:controller cooController --plain");

// Artisan::command('my:command', function () {
//     // Here you can use Eloquent
//     $user = User::find(1);

//     // Or execute shell commands
//     $output = shell_exec('./script.sh var1 var2');
// });

// $input="layer";
// exec('c:\WINDOWS\system32\cmd.exe /c START %cd%\create_clientDB.bat input ');
// $bat_file = "test.bat ".escapeshellarg($var1)." ".escapeshellarg($var2)." ".escapeshellarg($var3)." ".escapeshellarg($var4)


///////

var cmd=require('node-cmd');

cmd.get(
'pwd',
function(err, data, stderr){
console.log('the current working dir is : ',data)
}
);

//cmd.run('touch example.created.file');

// cmd.get(
//     'ls',
//     function(err, data, stderr){
//         console.log('the current dir contains these files :\n\n',data)
//     }
// );

// cmd.get(
//     `
//         git clone https://github.com/RIAEvangelist/node-cmd.git
//         cd node-cmd
//         ls
//     `,
//     function(err, data, stderr){
//         if (!err) {
//            console.log('the node-cmd cloned dir contains these files :\n\n',data)
//         } else {
//            console.log('error', err)
//         }

//     }
// );


// const pm2 = require('pm2');

// pm2.start({
//     script: 'npm -- run monitorTheWeather',
//     autorestart : false 
//   }, (err, apps) => {
//     pm2.disconnect()
//     if (err) { throw err }
//   })


// npm.command.run('dev', (err) => {  });

//     const { spawn } = require('child_process');
// const bat = spawn('cmd.exe', ['/c', 'my.bat']);

// bat.stdout.on('data', (data) => {
//   console.log(data.toString());
// });

// bat.stderr.on('data', (data) => {
//   console.error(data.toString());
// });

// bat.on('exit', (code) => {
//   console.log(`Child exited with code ${code}`);
// });


//    var nrc = require('node-run-cmd');nrc.run('mkdir C:/foo');alert('q');
// var objShell = new ActiveXObject("Shell.Application");
//     objShell.ShellExecute("cmd.exe", "C: cd C:\\pr main.exe blablafile.txt auto", "C:\\WINDOWS\\system32", "open", "1");

//     var exec = require('child_process').exec, child;

// child = exec('cat *.js bad_file | wc -l',
//     function (error, stdout, stderr) {
//         console.log('stdout: ' + stdout);
//         console.log('stderr: ' + stderr);
//         if (error !== null) {
//              console.log('exec error: ' + error);
//         }
//     });
//  child();


//   var run=new ActiveXObject('WSCRIPT.Shell').Run("npm run bat");


//npm.command.run('npm run bat', (err) => { });


//  var child_process = require('child_process');
// child_process.exec("npm run bat",{stdio:[0,1,2]});

//     const exec  = require('child_process').exec;
//  var a  = exec('npm run bat');
//npm.command.run('bat', (err) => {  });
//   const profiledata = {
//     email: this.state.email,
//     password: this.state.password
//     };


////////


$.ajax({

type:'POST',

url:'http://localhost:3000/profile',

data:{ password:Input::get('password'), email:Input::get('email')},

success:function(data){

alert(data.success);

}

});

////


{
"_id": 1,
"name": {
"name": "Joe Bloggs",
"il8n": "en" 
}
}	  

/////////

mongo.exe --eval "db=db.getSiblingDB('%1');db.users.insert({contact_details: { 'company_name': '', 'email': ''},username: '',password: '',api_keys: { v3: {key: '', name: 'internal'  } },db_key: '',language:'en',timezone:'Asia\Kolkata',db_name:'',db_host_primary:'',db_host_secondary:''  });db.accounts.insert({ email: '', password: '', locale: 'en_US', timezone: 'Asia\Kolkata', 'creation_date': "%fullstamp%", 'registration_ip': '', activated: 'false', source: '', activation_request: { token: '', company_name:'Test', db_created: 'false', expiration_date: '' } })"
pause



mongodb://mongodb0.example.com:27017/admin


echo "<script>var connectionString = 'mongodb://localhost:27017';var client = new MongoClient(connectionString);var server = client.GetServer();console.log(server.Ping());</script>";

print_r(DB::connection());
// $mongo = new MongoDB\Client('mongodb://localhost:27017');
// $dbs = $mongo->listDatabases();



var connectionString = "mongodb://localhost";
var client = new MongoClient(connectionString);
var server = client.GetServer();
server.Ping();


http://www.campaignserver.com/getapi?email="mail.nrj@gmail.com"&password="1"


          // $user =  User::create([
            //         'email' => Input::get('email'),
            //         'password' => Input::get('password')
            //     ])->get();
            
            // $clientdbname=str_replace(".","",Input::get('email')).'xxx';
            // $company_name='Test';
            // $email=Input::get('email');
            
            // $db_key='xxxx';
            // $db_name=str_replace(".","",Input::get('email')).'xxx';
            // $db_host_primary=str_replace(".","",Input::get('email')).'xxx';
            // $db_host_secondary=str_replace(".","",Input::get('email')).'xxx';

            // $creation_date=str_replace(".","",Input::get('email')).'xxx';
            // $registration_ip=str_replace(".","",Input::get('email')).'xxx';
            
            // $bat_file = "c:\WINDOWS\system32\cmd.exe /c START %cd%\create_clientDB.bat ".escapeshellarg($clientdbname);
            // $output = null;
            // exec($bat_file, $output);


            
	$a=DB::connection("mongodb://localhost:27017/mailnrj@gmailcom_token");

	print_r($a);

	DB::connection("Mongo connection name")->collection('table name')

	$users = DB::connection('mysql2')->select(...);

	https://laracasts.com/discuss/channels/general-discussion/change-database-name-of-connection-on-the-fly

	https://fideloper.com/laravel-multiple-database-connections



	$users = Config::where('db_name', '=', $request->db_name)->first();

	$contacts = \DB::collection($users->db_name.'.contacts')->get();

	return response()->json($contacts);


	/////////

	$users = Config::where('db_name', '=', $request->db_name)->first();

	if ($users) {
	\Config::set('database.connections.mongodb.database',$users->db_name);
	}
	// retrun DB::connection()->getDatabaseName()
	$contacts = \DB::collection('contacts')->get();

	return response()->json($contacts);

/////////

config(['database.connections.mynewconnection' => {settings here}]);
DB::purge('mynewconnection');
DB::setDefaultConnection('mynewconnection');

//////


            $users = Config::where('db_name', '=', 'mailnrj@gmailcom_token')->first();
            $contacts = \DB::collection('accounts')->get();
            
            print_r($contacts);

////////


            Artisan::call('migrate', ['--database' => $new_connection]);

///////

RegisterUser() - This registers the user with username/password.
CreateDatabase($name , $user_id) - This should create your database and store it's name in a table, and then assign it to the User ID you created in Register User.

/////////


            // $a=DB::connection("mongodb://localhost:27017/mailnrj@gmailcom_token");

            //  1.create client db and account 

            // $clientdb = "email_token"; 
            // $bat_file = "c:\WINDOWS\system32\cmd.exe /c START %cd%\create_clientDB.bat ".escapeshellarg($clientdb);
            // $output = null;
            // exec($bat_file, $output);


            //2. send new clientdb string in emailapp

            // $companydb = 'mailapp'; 
            // $db_host_primary='mongodb://localhost:27017/'.$clientdb;
            // $client_constr = "c:\WINDOWS\system32\cmd.exe /c START %cd%\client_constr.bat ".escapeshellarg($companydb)." ".escapeshellarg($db_host_primary);
            // $output1 = null;
            // exec($client_constr, $output1);

			working 

/////////			 Config::set("database.connections.mongodb", [
                "host" => "localhost",
                'port' => env('DB_PORT', 27017),
                "database" => "mailnrj@gmailcom_token",
                'username' => env('DB_USERNAME'),
                'password' => env('DB_PASSWORD'),
            ]);
            $contacts = \DB::collection('accounts')->get();
            
            return response()->json($contacts);

            //////////

            
                // if (Auth::attempt(array('username' => 'mail.nrj@gmail.com', 'password' => '1'))){
                //     return "success";
                // }else{
                //     return "Wrong Credentials";
                // }
                // die;

                // $user = \DB::collection('users')->where('username','mail.nrj@gmail.com', true)
                // ->where('password','1', true)
                // ->get();
                
                // return  response()->json([
                //     'user' => $user
                // ], 200);



////////////


class Main extends Component {
   constructor(props) {
      this.state = {
         data: 'some default data',
      }
   }

   updateData(data) {
      this.setState({ data });
   }

   render() {
     return <div>
        <Header />
        {React.cloneElement(this.props.children, { data: this.state.data, setData: this.updateData })}
     </div>
   }
}

class MainPage extends Component {

   render() {
      return <div>
         <input type="text" onChange={e => this.props.setData({ field: e.target.value })} />
         <Link to="/DisplayResults">Go to Results</Link>
      </div>
   }
}

class DisplayResults extends Component {
   render() {
       return <div>
         {this.props.data.field}
       </div>
   }
}

 $arr=array("company_name" => CName,"CAddress" => CAddress,"CWebsite" => CWebsite);

                            return json_encode($arr);

                            // json_encode('Error:'$error[ 'message']);

                            // return json_encode('Error:');
                            
                            //response()->json(array("company_name" => CName,"CAddress" => CAddress,"CWebsite" => CWebsite));


//////////
System.Net.Internals.SocketExceptionFactory+ExtendedSocketException: No such device or address at System.Net.Dns.InternalGetHostByName(String hostName) 

/////////



    // fetch('http://www.campaignserver.com/signin', { 
    // method: 'post',
    // credentials: "same-origin", 
    // headers: {
    // 'Accept': 'application/json',
    // 'Content-Type': 'application/json',
    // },
    //   body: JSON.stringify(signindata),
    // })




////////////////////////








import React, { Component } from "react";
import { Button, FormGroup, FormControl, FormLabel } from "react-bootstrap";
import "../login/login.css";
import {Helmet} from "react-helmet";
import Signin from '../login/signin';

export default class profile extends Component {
  constructor(props) {
    super(props);

  var email="";
  var clientdb="";
  if(sessionStorage.getItem("email"))
  {
  email=sessionStorage.getItem("email")
  }
  if(sessionStorage.getItem("clientdb"))
  {
    clientdb=sessionStorage.getItem("clientdb")
  }
 
  this.state = {
  user: email,
  password: "",
  name: "",
  address: "",
  website: "",
  clientdb:clientdb
  };
    

  }

  validateForm() {
    return this.state.email.length > 0 && this.state.password.length > 0;
  }

  handleChange = event => {
    this.setState({
      [event.target.id]: event.target.value
    });
  }

  handleSubmit2 = event => {
    event.preventDefault();

    const profiledata = {
    email: this.state.user,
    password: this.state.password,
    CName: this.state.name,
    CAddress: this.state.address,
    CWebsite: this.state.website,
    clientdb:this.state.clientdb,
    };

    return fetch('http://www.campaignserver.com/profileupdate', { 
    method: 'post',
    credentials: "same-origin", 
    headers: {
    'Accept': 'application/json',
    'Content-Type': 'application/json',
    },
      body: JSON.stringify(profiledata),
    }).then(response =>  response.json())
    .then(resData => {
      console.log(resData);
      if( resData.status=='200')
      {
        window.location.href = '/Dashboard'; 
  
      }
    })
  }


  render() {
    return (
      <div className="Login">
        <div>  <a href="/">Back</a></div>
        <Helmet>

<link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css"/>
<script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<meta name="csrf-token" content="{{ csrf_token() }}"></meta>
</Helmet>



  <form onSubmit={this.handleSubmit2}>
  <FormLabel>Personal Info</FormLabel> 
  <br/>
  <FormGroup controlId="profile" bsSize="large">
  <FormLabel>username</FormLabel> <FormControl autoFocus type="email" value={this.state.email} onChange={this.handleChange} /> <FormControl type="text" value={this.state.user}  disabled/>

  <FormLabel>password</FormLabel> 
  <FormControl autoFocus type="text" value={this.state.password} onChange={this.handleChange} /> 
  <br/>
  <FormLabel>Company Details</FormLabel> 
  <br/>
  <FormLabel>Name</FormLabel> <FormControl  type="text" value={this.state.name} onChange={this.handleChange} />
  <FormLabel>Address</FormLabel> <FormControl  type="text" value={this.state.address} onChange={this.handleChange}/>
  <FormLabel>Website</FormLabel> <FormControl type="text" value={this.state.website} onChange={this.handleChange}/>
  </FormGroup>
  <Button block bsSize="large" type="submit" >
  Update Details
  </Button> 
  </form>

      </div>
    );
  }
}

/////////

  // Config::set("database.connections.mongodb", [
                        //     "host" => "localhost",
                        //     'port' => env('DB_PORT', 27017),
                        //     "database" => "mailapp",
                        //     'username' => env('DB_USERNAME'),
                        //     'password' => env('DB_PASSWORD'),
                        // ]);

                        //     $user = User::where('username', '=', $request->input('email'))->update(array("company_name" => $request->input('CName'),"CAddress" => $request->input('CAddress'),"CWebsite" => $request->input('CWebsite')));
                        //     ->first();

                        //     if($user)
                        //     {
                        //         return  response()->json([
                        //             'profile_active' => true
                        //             ], 200);
                
                        //     }
/////////////////


            $a='mail.nrj@gmail.com';

             //$accounts = \DB::collection('accounts')->where('email', '=',''+$request->input('email')+'')->update(array("profile_active" => 'true'));


            //\DB::collection('accounts')->where('email',$a, true)->update(array("profile_active" => 'true'));


        $accounts->profile_active = '111';
        $accounts->save();


            
            //\DB::collection('accounts')->where('email',$a, true)->update(array("profile_active" => 'true'));


           // $accounts=DB::select('select * from accounts where email = $a')->get();

            // $accounts = DB::collection('accounts')
            // ->where('email', '$a') 
            // ->update(array("profile_active" => '143'));

             //$accounts = \DB::collection('accounts')->where('email', '=',''+$request->input('email')+'')->update(array("profile_active" => 'true'));
////////


DB::connection('mongodb')->collection('migrations')->get();

/////

DB::disconnect('mongodb'); // Connection name
Config::set('database.connections.mongodb.database', $request->input('clientdb')); 


/////////////



import React from 'react';
import Avatar from '@material-ui/core/Avatar';
import Button from '@material-ui/core/Button';
import CssBaseline from '@material-ui/core/CssBaseline';
import TextField from '@material-ui/core/TextField';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import Checkbox from '@material-ui/core/Checkbox';
import Link from '@material-ui/core/Link';
import Grid from '@material-ui/core/Grid';
import LockOutlinedIcon from '@material-ui/icons/LockOutlined';
import Typography from '@material-ui/core/Typography';
import { makeStyles } from '@material-ui/core/styles';
import Container from '@material-ui/core/Container';
import Paper from '@material-ui/core/Paper';
import Box from '@material-ui/core/Box';
import  { Component } from "react";
import "./login.css";
import ReactDOM from 'react-dom';

function Copyright() {
    return (
      <Typography variant="body2" color="textSecondary" align="center">
        {'Copyright © '}
        <Link color="inherit" href="https://material-ui.com/">
          Your Website
        </Link>{' '}
        {new Date().getFullYear()}
        {'.'}
      </Typography>
    );
  }

const useStyles = makeStyles(theme => ({
    '@global': {
      body: {
        backgroundColor: theme.palette.common.white,
      },
    },
    paper: {
      marginTop: theme.spacing(8),
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
    },
    avatar: {
      margin: theme.spacing(1),
      backgroundColor: 
    },
    form: {
      width: '100%', // Fix IE 11 issue.
      marginTop: theme.spacing(3),
    },
    submit: {
      margin: theme.spacing(3, 0, 2),
    },
  }));

export default class signup extends Component {
 constructor(props) {
   super(props);

   this.state = {
    firstName: "",
     email: "",
     password: "",
     lname: ""
   };
 }

 validateForm() {
   return this.state.email.length > 0 && this.state.password.length > 0;
 }

 handleChange = event => {
   this.setState({
     [event.target.id]: event.target.value
   });
 }

 handleSubmit2 = event => {
   event.preventDefault();

   //Name: this.state.firstName+' '+this.state.lname,
    
   const signupdata = {
    email: this.state.email,
    password: this.state.password
    };

    //console.log(JSON.stringify(signupdata))
    //{"email":"mail.nrj@gmail.com","password":"1"}

   return fetch('http://www.campaignserver.com/verifymail1', { 
   method: 'post',
   credentials: "same-origin", 
   headers: {
     'Accept': 'application/json',
     'ContentType': 'application/json',
   },
   		body: {"email":"mail.nrj@gmail.com","password":"1"},
 }).then(response =>  response.json())
 .then(resData => {
    console.log(resData);
//  sessionStorage.setItem("email",resData.email);
//  sessionStorage.setItem("clientdb",resData.clientdb);
//  window.location.href = '/profile'; 

 })
 
 //.then (function (response) {
 //  console.log(response)
//    if( response.status=='201')
//  {

//    return (
//      ReactDOM.render(<div>Verification Mail sent</div>, document.getElementById('root')));

//  }

 //})

 }

 render() {
  const classes = makeStyles();

    return (
        <Container  maxWidth="xs">
          <CssBaseline />
          <div className={classes.paper}>
            <Avatar className={classes.avatar}>
              <LockOutlinedIcon />
            </Avatar>
            <Typography component="h1" variant="h5">
              Sign up
            </Typography>
            <form className={classes.form} noValidate onSubmit={this.handleSubmit2}>
              <Grid container spacing={2}>
                <Grid item xs={12} sm={6}>
                  <TextField
                    autoComplete="fname"
                    name="firstName"
                    variant="outlined"
                    required
                    fullWidth
                    id="firstName"
                    label="First Name"
                    autoFocus
                    value={this.state.firstName} onChange={this.handleChange}
                  />
                </Grid>
                <Grid item xs={12} sm={6}>
                <TextField
                    autoComplete="lname"
                    name="lastName"
                    variant="outlined"
                    required
                    fullWidth
                    id="lastName"
                    label="Last Name"
                    autoFocus
                    value={this.state.lastName} onChange={this.handleChange}
                  />

                </Grid>
                <Grid item xs={12}>
                  <TextField
                    variant="outlined"
                    required
                    fullWidth
                    id="email"
                    label="Email Address"
                    name="email"
                    autoComplete="email"
                    value={this.state.email} onChange={this.handleChange}
                  />
                </Grid>
                <Grid item xs={12}>
                <TextField
                    variant="outlined"
                    required
                    fullWidth
                    id="password"
                    label="password"
                    name="password"
                    autoComplete="password"
                    value={this.state.password} onChange={this.handleChange}
                  />

                </Grid>
                <Grid item xs={12}>
                  <FormControlLabel
                    control={<Checkbox value="allowExtraEmails" color="primary" />}
                    label="I want to receive inspiration, marketing promotions and updates via email."
                  />
                </Grid>
              </Grid>
              <Button
                type="submit"
                fullWidth
                variant="contained"
                color="primary"
                className={classes.submit} 
              >
                Sign Up
              </Button>
              <Grid container justify="flex-end">
                <Grid item>
                  <Link href="/#" variant="body2">
                    Already have an account? Sign in
                  </Link>
                </Grid>
              </Grid>
            </form>
          </div>
          <Box mt={5}>
            <Copyright />
          </Box>
        </Container>
      );


//    return (
//      <div className="Login">
//        <div>  <a href="/">Back</a></div>
//        <Helmet>

// <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrapcss"/>
// <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
// <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
// <meta name="csrftoken" content="{{ csrf_token() }}"></meta>
// </Helmet>

//        <form onSubmit={this.handleSubmit}>
//          <FormGroup controlId="email" bsSize="large">
//            <FormLabel>Email</FormLabel>

//            <FormControl
//              autoFocus
//              type="email"
//              value={this.state.email}
//              onChange={this.handleChange}
//            />
//          </FormGroup>
//          <FormGroup controlId="password" bsSize="large">
//            <FormLabel>Password</FormLabel>

// <PasswordMask
//  id="password"
//  name="password"
//  placeholder="Enter password"
//  value={this.state.password}
//              onChange={this.handleChange}
//              type="password"
// />

//          </FormGroup>
//          <Button
//            block
//            bsSize="large"
//            disabled={!this.validateForm()}
//            type="submit"
//          >
//            Sign Up
//          </Button>
//        </form>
//      </div>
//    );






 }
}


////////



import React from 'react';
import Avatar from '@material-ui/core/Avatar';
import Button from '@material-ui/core/Button';
import CssBaseline from '@material-ui/core/CssBaseline';
import TextField from '@material-ui/core/TextField';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import Checkbox from '@material-ui/core/Checkbox';
import Link from '@material-ui/core/Link';
import Paper from '@material-ui/core/Paper';
import Box from '@material-ui/core/Box';
import Grid from '@material-ui/core/Grid';
import LockOutlinedIcon from '@material-ui/icons/LockOutlined';
import Typography from '@material-ui/core/Typography';
import  { Component } from "react";
import "./login.css";
import { withStyles } from '@material-ui/core/styles';
import Signup from './signup';
import Dash from './dash';
import { BrowserRouter as Router, Route} from "react-router-dom";
import ReactDOM from 'react-dom';
import Profile from '../user_account/profile';

function Copyright() {
  return ( <Typography variant="body2" color="textSecondary" align="center">{'Copyright © '}<Link color="inherit" href="https://material-ui.com/"> Mail App </Link>{' '} {new Date().getFullYear()} {'.'}</Typography>);
   }

const styles = theme => 
({
root: { height: '100vh',},
image: { backgroundImage: 'url(/img/splash.gif)', backgroundRepeat: 'no-repeat',backgroundSize: 'cover', backgroundPosition: 'center',
width: '15vh',height: '100vh',},
paper: { margin: theme.spacing(8, 4),display: 'flex',flexDirection: 'column',alignItems: 'center',},
avatar: { margin: theme.spacing(1),},
form: { width: '100%',  marginTop: theme.spacing(1),},
submit: {  margin: theme.spacing(3, 0, 2),},
});

function signup() { return ( ReactDOM.render(<Signup />, document.getElementById('root')));}
function Profile1() { return (ReactDOM.render(<Profile />, document.getElementById('root')));}
function Dash1() {return (ReactDOM.render(<Dash />, document.getElementById('root')));}

  class signin extends Component {
  constructor(props) {
  super(props);
  this.state = {email: "", password: ""};
  this.loggedIn = sessionStorage.getItem('email') === 'true';

  }

  validateForm() { return this.state.email.length > 0 && this.state.password.length > 0;}

  handleSubmit = event => {
     event.preventDefault();
    const signindata = { email: this.state.email, password: this.state.password };

    return fetch('http://www.campaignserver.com/signin',{
      method: 'post',
      credentials: "same-origin", 
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        },
        body: JSON.stringify(signindata),
    })
    .then(response =>  response.json())
    .then(resData => {

    if( resData.message=='fail') { alert(resData.desc);}

    if( resData.message=='success')
    {
      sessionStorage.setItem("email",resData.email);
      sessionStorage.setItem("clientdb",resData.clientdb);

      if(resData.profile_active=='true')
      {window.location.href = '/dash';}
      else  { window.location.href = '/profile'; 
      }
    
  }
    })

  }

  handleChange = event => { this.setState({[event.target.id]: event.target.value });}

  render() {

    const { classes } = this.props;
    return (
      <div className="Login">
      <Router>
      <Route path="/signin" component={signin} />
      <Route path="/signup" component={signup} />
      <Route path = "/profile" component = {Profile1} />
      <Route path="/Dash" component={Dash1} />
      </Router>

    <Grid container  className={classes.root}>
    <CssBaseline />
    <Grid item xs={false} sm={4} md={7} className={classes.image} /> 
    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square> <div className={classes.paper}>
    <Avatar className={classes.avatar}> <LockOutlinedIcon /> </Avatar> 
    <Typography component="h1" variant="h5"> Sign in </Typography>
    <form className={classes.form} noValidate onSubmit={this.handleSubmit}>
    <TextField variant="outlined" margin="normal" required fullWidth id="email" label="Email Address" name="email" autoComplete="email" autoFocus type="email" value={this.state.email} onChange={this.handleChange} />
    <TextField variant="outlined" margin="normal" required fullWidth name="password" label="Password" type="password" id="password" autoComplete="current-password" value={this.state.password} onChange={this.handleChange} type="password" /> <FormControlLabel control={<Checkbox value="remember" color="primary" />} label="Remember me" /> 
    <Button type="submit" fullWidth variant="contained" color="primary" className={classes.submit} disabled={!this.validateForm()} > Login </Button>
    <Grid container> <Grid item xs> <Link href="/#" variant="body2"> Forgot password? </Link> </Grid> 
    <Grid item> <Link href="/signup" variant="body2"> {"Don't have an account? Sign Up"} </Link> </Grid>
    </Grid> <Box mt={5}> <Copyright /> </Box> 
    </form> </div> </Grid> </Grid>

      </div>
    );
  }
}


export default withStyles(styles)(signin);


///////////






/////////



import React from 'react';
import Avatar from '@material-ui/core/Avatar';
import Button from '@material-ui/core/Button';
import CssBaseline from '@material-ui/core/CssBaseline';
import TextField from '@material-ui/core/TextField';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import Checkbox from '@material-ui/core/Checkbox';
import Link from '@material-ui/core/Link';
import Grid from '@material-ui/core/Grid';
import LockOutlinedIcon from '@material-ui/icons/LockOutlined';
import Typography from '@material-ui/core/Typography';
import { makeStyles } from '@material-ui/core/styles';
import Container from '@material-ui/core/Container';
import Paper from '@material-ui/core/Paper';
import Box from '@material-ui/core/Box';
import  { Component } from "react";
import "./login.css";
import ReactDOM from 'react-dom';
import { withStyles } from '@material-ui/core/styles';
function Copyright() {
    return (
      <Typography variant="body2" color="textSecondary" align="center">
        {'Copyright © '}
        <Link color="inherit" href="https://material-ui.com/">
          Your Website
        </Link>{' '}
        {new Date().getFullYear()}
        {'.'}
      </Typography>
    );
  }

  const styles = theme => 
  ({
    '@global': {
      body: {
        backgroundColor: 'theme.palette.common.white',
      },
    },
    paper: {
      marginTop: theme.spacing(8),
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
    },
    avatar: { margin: theme.spacing(1),},
    form: {
      width: '100%', 
      marginTop: theme.spacing(3),
    },
  
  });

  class signup extends Component {
 constructor(props) {
   super(props);

   this.state = {
     email: "",
     password: ""
   };
 }

 validateForm() {
   return this.state.email.length > 0 && this.state.password.length > 0;
 }

 handleChange = event => {
   this.setState({
     [event.target.id]: event.target.value
   });
 }

 handleSubmit = event => {
   event.preventDefault();

   const signupdata = {
   email: this.state.email,
   password: this.state.password
   };

   return fetch('http://www.campaignserver.com/verifymail',{
    method: 'post',
    credentials: "same-origin", 
    headers: {
      'Accept': 'application/json',
      'Content-Type': 'application/json',
      },
      body: JSON.stringify(signupdata),
  }).then (function (response) {
   
   if( response.status=='201')
 {

   return (
     ReactDOM.render(<div>Verification Mail sent</div>, document.getElementById('root')));

 }

 })

 }

 render() {

const { classes } = this.props;
    return (
        <Container  maxWidth="xs">
          <CssBaseline />
          <div className={classes.paper}>
          <Avatar className={classes.avatar}> <LockOutlinedIcon /> </Avatar> 
            <Typography component="h1" variant="h5">
            Let’s Get Started
            </Typography>
            <form className={classes.form} noValidate onSubmit={this.handleSubmit}>
              <Grid container spacing={2}>
                <Grid item xs={12} sm={6}>
                  <TextField
                    autoComplete="fname"
                    name="firstName"
                    variant="outlined"
                    required
                    fullWidth
                    id="firstName"
                    label="First Name"
                    autoFocus
                    value={this.state.firstName} onChange={this.handleChange}
                  />
                </Grid>
                <Grid item xs={12} sm={6}>
                <TextField
                    autoComplete="lname"
                    name="lastName"
                    variant="outlined"
                    required
                    fullWidth
                    id="lastName"
                    label="Last Name"
                    autoFocus
                    value={this.state.lastName} onChange={this.handleChange}
                  />

                </Grid>
                <Grid item xs={12}>
                  <TextField
                    variant="outlined"
                    required
                    fullWidth
                    id="email"
                    label="Email Address"
                    name="email"
                    autoComplete="email"
                    value={this.state.email} onChange={this.handleChange}
                  />
                </Grid>
                <Grid item xs={12}>
                <TextField
                    variant="outlined"
                    required
                    fullWidth
                    id="password"
                    label="password"
                    name="password"
                    autoComplete="password"
                    value={this.state.password} onChange={this.handleChange}
                  />

                </Grid>
                <Grid item xs={12}>
                  <FormControlLabel
                    control={<Checkbox value="allowExtraEmails" color="primary" />}
                    label="I want to receive inspiration, marketing promotions and updates via email."
                  />
                </Grid>
              </Grid>
              <Button
                type="submit"
                fullWidth
                variant="contained"
                color="primary"
                className={classes.submit} 
              >
                Sign Up
              </Button>
              <Grid container justify="flex-end">
                <Grid item>
                  <Link href="/" variant="body2">
                    Already have an account? Sign in
                  </Link>
                </Grid>
              </Grid>
            </form>
          </div>
          <Box mt={5}>
            <Copyright />
          </Box>
        </Container>
      );
  
 }
}

export default withStyles(styles)(signup);


//////


var dateVar = new Date()
var offset = dateVar.getTimezoneOffset();
document.cookie = "offset="+offset;
PHP:

echo $_COOKIE['offset'];
Use this to convert the offset to the friendly timezone name in PHP. Javascript returns the offset in minutes, while this PHP function expects the input to be in seconds - so multiply by 60. The third parameter is a boolean value of whether or not you are in Daylight Savings Time. Read the manual and update the code to fit your needs.

echo timezone_name_from_abbr("", intval($_COOKIE['offset'])*60, 0);

////////

REM mongo.exe --eval "db=db.getSiblingDB('%1');db.users.insert({contact_details: { company_name: '', email: '%2'},username: '%2',password: '%3',api_keys: { v3: {key: '', name: 'internal'  } },db_key: '',language:'en',profile_active: 'false',timezone:'Asia\Kolkata',db_name:'%5',db_host_primary:'%4',db_host_secondary:'',CAddress:'',CWebsite:''});"
REM exit

REM mongo.exe --eval "db=db.getSiblingDB('%1');db.accounts.insert({ email: '%2', password: '%3', locale: 'en_US', timezone: 'Asia\Kolkata', 'creation_date': '%fullstamp%', 'registration_ip': '', activated: 'false', source: '',profile_active: 'false', activation_request: { token: '', company_name:'Test', db_created: 'true', expiration_date: '' } })"
REM exit


//////


//.escapeshellarg($clientdb)." ".
//2. send new clientdb string in emailapp

$companydb = 'mailapp'; 

$client_constr = "c:\WINDOWS\system32\cmd.exe /c START %cd%\client_constr.bat ".escapeshellarg($companydb)." ".escapeshellarg($email)." ".escapeshellarg($password)." ".escapeshellarg($db_host_primary)." ".escapeshellarg($clientdb);
$output1 = null;
exec($client_constr, $output1);

//////

var txt = "";
txt += "<p>Browser CodeName: " + navigator.appCodeName + "</p>";
txt += "<p>Browser Name: " + navigator.appName + "</p>";
txt += "<p>Browser Version: " + navigator.appVersion + "</p>";
txt += "<p>Cookies Enabled: " + navigator.cookieEnabled + "</p>";
txt += "<p>Browser Language: " + navigator.language + "</p>";
txt += "<p>Browser Online: " + navigator.onLine + "</p>";
txt += "<p>Platform: " + navigator.platform + "</p>";
txt += "<p>User-agent header: " + navigator.userAgent + "</p>";



mongo.exe --eval "db=db.getSiblingDB('%5');db.accounts.insert({ email: '%1', password: '%2', locale: '%3', timezone: '%4', 'creation_date': '%9', 'registration_ip': '', activated: 'false', source: '%7', activation_request: { token: '%8', company_name:'Test', db_created: 'true', expiration_date: '%10' } })"
exit


'companydb'



        $db_name = [];
        \DB::collection('users')->where('username','mail.nrj@gmail.com', true).find().forEach(function(u) { result.push(u.db_name) })


$list_console = array();
foreach($user as $infogame)
{
$list_console[] = \DB::collection('users')->where('username', $infogame->username)->first();
}


        $a=response()->json($user);


 $location = json_decode($a);
//$status = $location->status;

/////////

$user = \DB::collection('users')->where('username','mail.nrj@gmail.com', true)->get();

$array = $user->map(function($obj){
return (array) $obj;
})->toArray();

return $array[0]['username'];

/////////

1

Model

<?php 

namespace App;
use Jenssegers\Mongodb\Eloquent\Model as Eloquent;

class new_artciels extends Eloquent
{
  protected $collection = 'new_artciels';}
Controller

use App\new_artciels;
this should work for you.


/////////


   CurrentDB = new Mongo.Collection("111");


            db.createCollection( <name>,
            {
            capped: <boolean>,
            autoIndexId: <boolean>,
            size: <number>,
            max: <number>,
            storageEngine: <document>,
            validator: <document>,
            validationLevel: <string>,
            validationAction: <string>,
            indexOptionDefaults: <document>,
            viewOn: <string>,              // Added in MongoDB 3.4
            pipeline: <pipeline>,          // Added in MongoDB 3.4
            collation: <document>,         // Added in MongoDB 3.4
            writeConcern: <document>
            }
            )


///////////            
 \DB::createCollection('producers1');
         https://www.quackit.com/mongodb/tutorial/mongodb_create_a_collection.cfm

$bat_file = "c:\WINDOWS\system32\cmd.exe /c START %cd%\create_User_Accounts.bat ".escapeshellarg($email)." ".escapeshellarg($password)." ".escapeshellarg($language)." ".escapeshellarg($timezone)." ".escapeshellarg($dbname)." ".escapeshellarg($db_host_primary)." ".escapeshellarg($useragent)." ".escapeshellarg($timestamp)." ".escapeshellarg($token)." ".escapeshellarg($creation_date)." ".escapeshellarg($expiration_date);

////////


            //\DB::createCollection('producers1');
            //https://www.quackit.com/mongodb/tutorial/mongodb_create_a_collection.cfm

                        
            mongo.exe --eval "db=db.getSiblingDB('companydb');db.users.insert({contact_details: { company_name: 'Test', email: '%1'},username: '%1',password: '%2',api_keys: { v3: {key: 'xxx', name: 'internal'  } },db_key: 'xxxx',language:'%3',profile_completed: 'false',timezone:'%4',db_name:'%5',db_host_primary:'%6',db_host_secondary:'',CAddress:'',CWebsite:''});db.accounts.insert({ email: '%1', password: '%2', locale: '%3', timezone: '%4', creation_date: '%10', registration_ip: 'xxx', activated: 'false', source: 'xxx', activation_request: { token: '%9', company_name:'Test', db_created: 'true', expiration_date: '%11' } });"

            exit



            $output = null;
            exec($bat_file, $output);


           $data = array('name' => 'Ryan', 'email' => 'test@ryan.com');
           
         //  $jsn={'contact_details': '1'};

           //$arr=json_decode($jsn, true);

           //\DB::collection('users')->insert($arr);

           //\DB::collection('users')->where('username','mail.nrj@gmail.com', true);

           // \DB::users.insert();

            //\DB::createCollection("users", {'contact_details': '1'});

            // \DB::createCollection("accounts", { email: $email, password: $password, locale: $locale, timezone: $timezone, creation_date: $creation_date, registration_ip: 'xxx', activated: 'false', source: 'xxx', activation_request: { token: $token, company_name:'Test', db_created: 'true', expiration_date: $expiration_date } } );    
            
           //\DB::createCollection("users");

           //$data2[] = ['label' => $label,'value' => $budget->sum($label)];

///////


            \DB::collection('users')->insert( [ 'contact_details'=>[ 'company_name'=>'test','email'=>$email ],'username'=>$email,'password'=>$password,'api_keys'=>['v3'=>[ 'key'=>'xxx','name'=>'internal' ]],'db_key'=>'xxxx','language'=>$language,'profile_completed'=>false,'timezone'=>'timezone','db_name'=>$dbname,'db_host_primary'=>$db_host_primary,'db_host_secondary'=>'db_host_secondary','cmpnyaddress'=>'cmpnyaddress','cmpnyWebsite'=>'cmpnyWebsite' ]);

            \DB::collection('accounts')->insert( [ 'email'=>$email,'password'=>$password,'locale'=>'en-us','timezone'=>$timezone,'creation_date'=>$creation_date,'registration_ip'=>'xxx','activated'=>'false','source'=>'xxx','activation_request'=>[ 'token'=>$token,'company_name'=>'Test','db_created'=>true,'expiration_date'=>$expiration_date ] ]);

///////////////



  //  return fetch('http://www.campaignserver.com/verifymail',{
  //   method: 'post',
  //   credentials: "same-origin", 
  //   headers: {
  //     'Accept': 'application/json',
  //     'Content-Type': 'application/json',
  //     },
  //     body: JSON.stringify(signupdata),
  // })
  // .then(response =>  response.json())
  // .then(resData => {
  //   console.log(resData);
  //     return (
  //        ReactDOM.render(<div>Verification Mail sent</div>, document.getElementById('root')));
  // })


//    return fetch('http://www.campaignserver.com/verifymail',{
//     method: 'post',
//     credentials: "same-origin", 
//     headers: {
//       'Accept': 'application/json',
//       'Content-Type': 'application/json',
//       },
//       body: JSON.stringify(signupdata),
//   }).then (function (response) {
   
//    if( response.status=='201')
//  {

//    return (
//      ReactDOM.render(<div>Verification Mail sent</div>, document.getElementById('root')));

//  }

//  })

///////////


Auth::routes(['verify' => true]);
Auth::routes();
Route::get('/home', 'HomeController@index')->name('home');

Route::get('/home', 'HomeController@index')->name('home');
Route::get('/contacts', 'MarketingController@templates');
Route::get('/templates', 'MarketingController@templates');
Route::get('getapi', 'HomeController@getapi');

Route::post('postapi', 'HomeController@postapi');
Route::resource('posts', 'API\PostAPIController');

Route::get('test', 'HomeController@test');
Route::post('companyprofile', 'AccountController@companyprofile');
Route::post('clientprofile', 'AccountController@clientprofile');

//////

 public function clientprofile(Request $request)
        {

            //company update

              Config::set("database.connections.mongodb", [
                    "host" => "localhost",
                    'port' => env('DB_PORT', 27017),
                    "database" => $request->input('clientdb'),
                    'username' => env('DB_USERNAME'),
                    'password' => env('DB_PASSWORD'),
                ]);

        $accounts = \DB::collection('accounts')->where('email',$request->input('email'), true)->update(array("profile_active" => 'true'));

        return  response()->json([
        'accounts' =>$accounts
        ], 200);

            }


  // $accounts->update(array("password" => $request->input('password')));


 //////////////

 

        //$accounts = \DB::createCollection('accounts');
        

            //check if users collection exists  and user exixts with mail id  
            \DB::createCollection('users');
            $users = \DB::collection('users');

            //  if account collection exists and account exixts and activated --- return account exixts
            
        $accounts = \DB::collection('accounts')->where('email',$email, true)->first();

        if(count($accounts)>0)
        {
            if($accounts['activated']=="false")
            {
                $data = ['email' =>$request->input('email'),'token' => $accounts['activation_request']['token']];
               
                Mail::send('mail',["data1"=>$data], function($message)  use ($data){
                $message->to($data['email'], 'Verification Mail')->subject('Verification Mail');
                $message->from('mail.nrj@gmail.com','Admin');});
    
                return  response()->json(['message' =>'success','desc' =>'success'], 200);
          
            }
           else
           {
            return  response()->json(['message' =>'fail','desc' =>'user already activated'], 200);
           }
        }
        else
        {
            $password=md5(Input::get('password'));
            $timezone = timezone_name_from_abbr("", intval(Input::get('language'))*60, 0);
            $language=(Input::get('language'));
            $dbname = 'e_'.substr(md5(Input::get('email')),0,10);
            $db_host_primary='mongodb://www.campaignserver.com:27017/';
            $useragent=Input::get('useragent');
            $timestamp=Input::get('timestamp');
            $token=$email.'_'.md5($timestamp);
            $creation_date=Input::get('creation_date');
            $expiration_date=Input::get('expiration_date');

            \DB::collection('users')->insert( [ 'contact_details'=>[ 'company_name'=>'test','email'=>$email ],'username'=>$email,'password'=>$password,'api_keys'=>['v3'=>[ 'key'=>'xxx','name'=>'internal' ]],'db_key'=>'xxxx','profile_completed'=>false,'timezone'=>'timezone','db_name'=>$dbname,'db_host_primary'=>$db_host_primary,'db_host_secondary'=>'db_host_secondary','cmpnyaddress'=>'cmpnyaddress','cmpnyWebsite'=>'cmpnyWebsite']);

            $accounts = \DB::collection('accounts')->where('email',$email, true)->first();

                if(count($accounts)>0)
                {
                    if($accounts[0]['activated']==true)
                    {
                        return  response()->json(['message' =>'fail','desc' =>'user already Activated'], 200);
                    }

                }
                else
                {                   

                    $accounts->insert( [ 'email'=>$email,'password'=>$password,'locale'=>$language,'timezone'=>$timezone,'creation_date'=>$creation_date,'registration_ip'=>'xxx','activated'=>'false','source'=>'xxx','activation_request'=>[ 'token'=>$token,'company_name'=>'Test','db_created'=>true,'expiration_date'=>$expiration_date ] ]);
                }
            $data = ['email' =>$request->input('email'),'token' => $token];

            Mail::send('mail',["data1"=>$data], function($message)  use ($data){
            $message->to($data['email'], 'Verification Mail')->subject('Verification Mail');
            $message->from('mail.nrj@gmail.com','Admin');});

            return  response()->json(['message' =>'success','desc' =>'success'], 200);

        }
        
        return  response()->json(['message' =>'success','desc' =>$user], 200); 


https://codepen.io/reallygoodemails/pen/EXwVOz
https://codepen.io/jalasem/pen/RZrLMo
https://codepen.io/reallygoodemails/pen/bpNQOw 

//////////

//Your React component
fetchExternalHTML: function(fileName) {
  Ajax.getJSON('/myAPI/getExternalHTML/' + fileName).then(
    response => {
      this.setState({
        extHTML: response
      });
    }, err => {
      //handle your error here
    }
  );
}

/////

w3c - https://gist.github.com/tristanlins/6585391

/////////

      var nodemailer = require('nodemailer');

var transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: 'mail.nrj@gmail.com',
    pass: 'ndt2gx123'
  }
});

var mailOptions = {
  from: 'mail.nrj@gmail.com',
  to:  'mail.nrj@gmail.com',
  subject: 'Sending Email using Node.js',
  text: 'That was easy!'
};

transporter.sendMail(mailOptions, function(error, info){
  if (error) {
    console.log(error);
  } else {
    console.log('Email sent: ' + info.response);
  }
});


///////////




<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <title>Reset password</title>
  <style type="text/css" rel="stylesheet" media="all">
    /* Base ------------------------------ */
    *:not(br):not(tr):not(html) {
      font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
    }
    body {
      width: 100% !important;
      height: 100%;
      margin: 0;
      line-height: 1.4;
      background-color: #F5F7F9;
      color: #839197;
      -webkit-text-size-adjust: none;
    }
    a {
      color: #414EF9;
    }
    /* Layout ------------------------------ */
    .email-wrapper {
      width: 100%;
      margin: 0;
      padding: 0;
      background-color: #F5F7F9;
    }
    .email-content {
      width: 100%;
      margin: 0;
      padding: 0;
    }
    /* Masthead ----------------------- */
    .email-masthead {
      padding: 25px 0;
      text-align: center;
    }
    .email-masthead_logo {
      max-width: 400px;
      border: 0;
    }
    .email-masthead_name {
      font-size: 16px;
      font-weight: bold;
      color: #839197;
      text-decoration: none;
      text-shadow: 0 1px 0 white;
    }
    /* Body ------------------------------ */
    .email-body {
      width: 100%;
      margin: 0;
      padding: 0;
      border-top: 1px solid #E7EAEC;
      border-bottom: 1px solid #E7EAEC;
      background-color: #FFFFFF;
    }
    .email-body_inner {
      width: 570px;
      margin: 0 auto;
      padding: 0;
    }
    .email-footer {
      width: 570px;
      margin: 0 auto;
      padding: 0;
      text-align: center;
    }
    .email-footer p {
      color: #839197;
    }
    .body-action {
      width: 100%;
      margin: 30px auto;
      padding: 0;
      text-align: center;
    }
    .body-sub {
      margin-top: 25px;
      padding-top: 25px;
      border-top: 1px solid #E7EAEC;
    }
    .content-cell {
      padding: 35px;
    }
    .align-right {
      text-align: right;
    }
    /* Type ------------------------------ */
    h1 {
      margin-top: 0;
      color: #292E31;
      font-size: 19px;
      font-weight: bold;
      text-align: left;
    }
    h2 {
      margin-top: 0;
      color: #292E31;
      font-size: 16px;
      font-weight: bold;
      text-align: left;
    }
    h3 {
      margin-top: 0;
      color: #292E31;
      font-size: 14px;
      font-weight: bold;
      text-align: left;
    }
    p {
      margin-top: 0;
      color: #839197;
      font-size: 16px;
      line-height: 1.5em;
      text-align: left;
    }
    p.sub {
      font-size: 12px;
    }
    p.center {
      text-align: center;
    }
    /* Buttons ------------------------------ */
    .button {
      display: inline-block;
      width: 200px;
      background-color: #87ceeb;
      border-radius: 3px;
      color: #ffffff;
      font-size: 15px;
      line-height: 45px;
      text-align: center;
      text-decoration: none;
      -webkit-text-size-adjust: none;
      mso-hide: all;
    }
    .button--green {
      background-color: #28DB67;
    }
    .button--red {
      background-color: #FF3665;
    }
    .button--blue {
      background-color: #87ceeb;
    }
    /*Media Queries ------------------------------ */
    @media only screen and (max-width: 600px) {
      .email-body_inner,
      .email-footer {
        width: 100% !important;
      }
    }
    @media only screen and (max-width: 500px) {
      .button {
        width: 100% !important;
      }
    }
  </style>
</head>
<body>
  <table class="email-wrapper" width="100%" cellpadding="0" cellspacing="0">
    <tr>
      <td align="center">
        <table class="email-content" width="100%" cellpadding="0" cellspacing="0">
          <!-- Logo -->
          <tr>
            <td >
            <div style="max-width:640px;margin:0 auto;box-shadow:0px 1px 5px rgba(0,0,0,0.1);border-radius:4px;overflow:hidden"><div style="margin:0px auto;max-width:640px;background:#7289DA url(https://cdn.discordapp.com/email_assets/f0a4cc6d7aaa7bdf2a3c15a193c6d224.png) top center / cover no-repeat;"><table role="presentation" cellpadding="0" cellspacing="0" style="font-size:0px;width:100%;background:#7289DA url(https://cdn.discordapp.com/email_assets/f0a4cc6d7aaa7bdf2a3c15a193c6d224.png) top center / cover no-repeat;" align="center" border="0" background="https://cdn.discordapp.com/email_assets/f0a4cc6d7aaa7bdf2a3c15a193c6d224.png"><tbody><tr><td style="text-align:center;vertical-align:top;direction:ltr;font-size:0px;padding:57px;"><div style="cursor:auto;color:white;font-family:Whitney, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif;font-size:36px;font-weight:600;line-height:36px;text-align:center;">Reset password</div></td></tr></tbody></table></div>
            </td>
          </tr>
          <!-- Email Body -->
          <tr>
            <td class="email-body" width="100%">
              <table class="email-body_inner" align="center" width="570" cellpadding="0" cellspacing="0">
                <!-- Body content -->
                <tr>
                  <td class="content-cell">
                    <h1>We have recieved your Request to change your Account Password.</h1>

                    <p>If you didnt make this request . Just ignore this mail .Otherwise , please the Button below to change your password.</p>
                    <!-- Action -->
                    <table class="body-action" align="center" width="100%" cellpadding="0" cellspacing="0">
                      <tr>
                        <td align="center">
                          <div>
                            <p class="sub"><a href="http://www.campaignserver.com/verifymail?token={{$data1['token']}}" >{{$data1['token']}}</a></p>
                          </div>
                        </td>
                      </tr>
                    </table>
                    <p>Thanks,<br>The Campaign Pulse Team</p>
                   
                  </td>
                </tr>
              </table>
            </td>
          </tr>
          <tr >
            <td>
              <table class="email-footer button-blue " align="center" width="570" cellpadding="0" cellspacing="0">
                <tr>
                  <td class="content-cell ">
                    <p class="sub center">
                      Company Address 1
                      <br>Company Address 2
                    </p>
                  </td>
                </tr>
              </table>
            </td>
          </tr>
        </table>
      </td>
    </tr>
  </table>
</body>
</html>

////////



Access to XMLHttpRequest at '' from origin '' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: The 'Access-Control-Allow-Origin' header contains multiple values '', but only one is allowed.

///

https://codepen.io/mikepro4/pen/pvKYZG

////////



<div className="group">
    <input type="text"/><span className="style.highlight"></span><span className="style.bar"></span>
    <label>Email</label>
  </div>

  <div className="group">
    <input type="text"/><span className="style.highlight"></span><span className="style.bar"></span>
    <label>Password</label>
  </div>
https://www.muicss.com/docs/v1/react/textarea

/////////



<Grid direction="column" > <div className={classes.paper } className={classes.root}>


<TextField 
            fullWidth={true}
            multiline={true}
            rows={10}
            label="
            Whoops! Shouldn’t Have Sent That
            From typos to broken links, there are so many ways an email can go wrong. Watch our Email Testing Training webinar for tips on how to test your emails and prevent mistakes in the first place."
        />

 </div> </Grid>

 //////


 if (!email || invalidEmail(email)) {
    this.setState({
      validEmail: true,
    });
  } else {
    this.setState({
      validEmail: false,
    });
  }

  //////

  
  console.log(new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,15}/g).test('sddsfdgsg'))
  console.log(new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,15}/g).test('arulgetsolute@gmail.com'))
  console.log(new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,15}/g).test('arulgetsolute@gmail.'))

<div style={{position: 'relative', display: 'inline-block'}}>
      <SearchIcon style={{position: 'absolute', right: 0, top: 15, width: 20, height: 20}}/>
      <TextField
           hintText="Search by Name"
           onChange={_.debounce((event, value) => this.handleSearch(value), 500)}
        />
</div>
<Icon style={styles.searchIcon} name="ios-search" size={20} color="#000"/>

/////



<TextField
          label="Password"
          margin="normal" 
          type="email" value={this.state.email} onChange={this.handleChange}
         
        />
 
import Visibility from "@material-ui/icons/Visibility";
import AccountCircle from "@material-ui/icons/AccountCircle";
import CancelSharp from '@material-ui/core/cancel-sharp';       

///////


validatePass = (e) => {


  if ( new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,15}/g).test(e.target.value) ) {
    this.setState({
      validEmail: false
    });
  }
  else {
    this.setState({
      validEmail: true
    });
  }

  console.log(this.state.validEmail);
}


{/* 
hevlatica:{ fontfamily: 'Helvetica Neue', fontsize: '29px', fontstyle: 'normal', fontvariant:' normal',fontweight: '400', lineheight: '30px;' }, */}

//////


  //pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).*" --  at least 1 number, 1 lower case and 1 upper case letter 

//1 uppercase 1 special character and 1 lowercase [duplicate] --- ^(?=.{8,})(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+*!=]).*$
//  ((?=.*\d)(?=.*[A-Z])(?=.*\W).{8,8})
 
//at least 8 characters, 1 number, 1 upper and 1 lowercase [duplicate] -- /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/


        <IconButton color="inherit">
            <Badge badgeContent={4} color="secondary">
              <NotificationsIcon />
            </Badge>
          </IconButton>

///////


<Router>
  <Switch>  
  <DashboardLayoutRoute path="/layout2" component={UserPage} />  
  </Switch> 

<Route path="/signin" component={signin} />
<Route path="/signup" component={signup} />
<Route path = "/profile" component = {Profile1} />
<Route path="/Dash" component={Dash1} />
<Route path="/forgetpassword" component={forgetpassword1} />
<Route path="/resetpassword" component={resetpassword1} />

</Router>

/////////



/**/



import React, { Component } from 'react';  
import { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';  
import Signup from './login/signup';
import ReactDOM from 'react-dom';
import Forgetpassword from './login/forgetpassword';
import Resetpassword from './login/resetpassword';
import Profile from './user_account/profile';
import Dash from './login/dash';
import Signin from './login/signin';
import Welcome from './welcome';
import DashboardLayoutRoute from "./DashboardLayout";  
import UserPage from './UserPage';   

function userPage() { return ( ReactDOM.render(<UserPage />, document.getElementById('root')));}

function welcome() { return ( ReactDOM.render(<Welcome />, document.getElementById('root')));}
function signin() { return ( ReactDOM.render(<Signin />, document.getElementById('root')));}
function signup() { return ( ReactDOM.render(<Signup />, document.getElementById('root')));}
function Profile1() { return (ReactDOM.render(<Profile />, document.getElementById('root')));}
function Dash1() {return (ReactDOM.render(<Dash />, document.getElementById('root')));}
function forgetpassword1() {return (ReactDOM.render(<Forgetpassword />, document.getElementById('root')));}
function resetpassword1() {return (ReactDOM.render(<Resetpassword />, document.getElementById('root')));}
 
class App extends Component {  
  render() {  
    return (  
      <Router>  
      <Switch>   
      <DashboardLayoutRoute path="/layout2" component={userPage} />  
      </Switch>  
      <Route path="/" component={welcome} />
      <Route path="/signin" component={signin} />
      <Route path="/signup" component={signup} />
      <Route path = "/profile" component = {Profile1} />
      <Route path="/Dash" component={Dash1} />
      <Route path="/forgetpassword" component={forgetpassword1} />
      <Route path="/resetpassword" component={resetpassword1} />
      </Router>  
    );  
  }  
}  
  
export default App;  

////////////////




working 


import React, { Component } from 'react';  
import { Route } from 'react-router-dom';  
import clsx from 'clsx';
import { makeStyles } from '@material-ui/core/styles';
import CssBaseline from '@material-ui/core/CssBaseline';
import Drawer from '@material-ui/core/Drawer';
import AppBar from '@material-ui/core/AppBar';
import Toolbar from '@material-ui/core/Toolbar';
import List from '@material-ui/core/List';
import Typography from '@material-ui/core/Typography';
import Divider from '@material-ui/core/Divider';
import IconButton from '@material-ui/core/IconButton';
import Badge from '@material-ui/core/Badge';
import Container from '@material-ui/core/Container';
import Grid from '@material-ui/core/Grid';
import Paper from '@material-ui/core/Paper';
import Link from '@material-ui/core/Link';
import MenuIcon from '@material-ui/icons/Menu';
import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';
import NotificationsIcon from '@material-ui/icons/Notifications';
import ReactDOM from 'react-dom';
import Select from '@material-ui/core/Select';
import InputLabel from '@material-ui/core/InputLabel';
import Menu from '@material-ui/core/Menu';
import MenuItem from '@material-ui/core/MenuItem';
import Button from '@material-ui/core/Button';
import { mainListItems, secondaryListItems } from './DashBoard/listItems';
import Chart from './DashBoard/Chart';
import Deposits from './DashBoard/Deposits';
import Orders from './DashBoard/Orders';


function Copyright() {
  return (
    <Typography variant="body2" color="textSecondary" align="center">
      {'Copyright © '}
      <Link color="inherit" href="https://material-ui.com/">
        MailApp
      </Link>{' '}
      {new Date().getFullYear()}
      {'.'}
    </Typography>
  );
}

const drawerWidth = 240;

const useStyles = makeStyles(theme => ({
  root: {
    display: 'flex',
  },
  toolbar: {
    paddingRight: 24, // keep right padding when drawer closed
  },
  toolbarIcon: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'flex-end',
    padding: '0 8px',
    ...theme.mixins.toolbar,
  },
  appBar: {
    zIndex: theme.zIndex.drawer + 1,
    transition: theme.transitions.create(['width', 'margin'], {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.leavingScreen,
    }),
  },
  appBarShift: {
    marginLeft: drawerWidth,
    width: `calc(100% - ${drawerWidth}px)`,
    transition: theme.transitions.create(['width', 'margin'], {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.enteringScreen,
    }),
  },
  menuButton: {
    marginRight: 36,
  },
  menuButtonHidden: {
    display: 'none',
  },
  title: {
    flexGrow: 1,
  },
  drawerPaper: {
    position: 'relative',
    whiteSpace: 'nowrap',
    width: drawerWidth,
    transition: theme.transitions.create('width', {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.enteringScreen,
    }),
  },
  drawerPaperClose: {
    overflowX: 'hidden',
    transition: theme.transitions.create('width', {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.leavingScreen,
    }),
    width: theme.spacing(7),
    [theme.breakpoints.up('sm')]: {
      width: theme.spacing(9),
    },
  },
  appBarSpacer: theme.mixins.toolbar,
  content: {
    flexGrow: 1,
    height: '100vh',
    overflow: 'auto',
  },
  container: {
    paddingTop: theme.spacing(4),
    paddingBottom: theme.spacing(4),
  },
  paper: {
    padding: theme.spacing(2),
    display: 'flex',
    overflow: 'auto',
    flexDirection: 'column',
  },
  fixedHeight: {
    height: 240,
  },
}));

function logout() {

  sessionStorage.removeItem("email");
  sessionStorage.removeItem("clientdb");

//   return (
//   ReactDOM.render(<App />, document.getElementById('root')));
  
}


const DashboardLayout = ({children, ...rest}) => {  
  return (  
    <div className="page page-dashboard">  
      <div className="sidebar">This is the Second Layout</div>  
      <div className="main">{children}</div>  
    </div>  
  )  
}  
  
const DashboardLayoutRoute = ({component: Component, ...rest}) => {  


const classes = useStyles();
const [open, setOpen] = React.useState(true);
const handleDrawerOpen = () => {
setOpen(true);
};
const handleDrawerClose = () => {
setOpen(false);
};
const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);

const [anchorEl, setAnchorEl] = React.useState(null);
const handleClick = event => { setAnchorEl(event.currentTarget);};
const handleClose = () => {setAnchorEl(null);};


    return (
    <div className={classes.root}>
      <CssBaseline />
     
      <Drawer
        variant="permanent"
        classes={{paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)}}
        open={open}
      >
        <div className={classes.toolbarIcon}>
        
      <Button aria-controls="simple-menu" aria-haspopup="true" onClick={handleClick}> Neeraj Verma </Button>

      <Menu  id="simple-menu" anchorEl={anchorEl} keepMounted  open={Boolean(anchorEl)}  onClose={handleClose}  >
        <MenuItem onClick={handleClose}>Account Details</MenuItem>
        <MenuItem onClick={handleClose}>Setup Guide</MenuItem>
        <MenuItem onClick={handleClose}>Sign Out of Account</MenuItem>
      </Menu>

        </div>
        <Divider />
        <Divider />
        <List>{mainListItems}</List>
      </Drawer>
      <main className={classes.content}>
        <div className={classes.appBarSpacer} />
        <Container maxWidth="lg" className={classes.container}>
          <Grid container spacing={3}>
           
          <Route {...rest} render={matchProps => (  
      <DashboardLayout>  
          <Component {...matchProps} />  
      </DashboardLayout>  
    )} />  

          </Grid>
        </Container>
        <Copyright />
      </main>
    </div>
  );



};  
  
export default DashboardLayoutRoute;  


//////



// export default function Dashboard() {



// }

////////////////



  handleSubmit = event => {
    event.preventDefault();

    const companyprofile = {email: this.state.email,password: this.state.password,cmpnyname: this.state.name,cmpnyaddress: this.state.address,cmpnyWebsite: this.state.website};

    return fetch('http://www.campaignserver.com/updateprofile', { 
    method: 'post', credentials: "same-origin",  headers: {'token':sessionStorage.getItem("token"),'Accept': 'application/json','Content-Type': 'application/json'},
      body: JSON.stringify(companyprofile),
    }).then(response =>  response.json())
    .then(resData => {
      window.location.href = '/dash'; 

    })
  }


  ///////






  import React from 'react';
import Avatar from '@material-ui/core/Avatar';
import Button from '@material-ui/core/Button';
import CssBaseline from '@material-ui/core/CssBaseline';
import TextField from '@material-ui/core/TextField';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import Checkbox from '@material-ui/core/Checkbox';
import Link from '@material-ui/core/Link';
import Paper from '@material-ui/core/Paper';
import Box from '@material-ui/core/Box';
import Grid from '@material-ui/core/Grid';
import LockOutlinedIcon from '@material-ui/icons/LockOutlined';
import Typography from '@material-ui/core/Typography';
import  { Component } from "react";
import "../login/login.css";
import { withStyles } from '@material-ui/core/styles';
import ReactDOM from 'react-dom';
import { CardMedia } from '@material-ui/core';
import DoneIcon from '@material-ui/icons/Done';
import CloseIcon from '@material-ui/icons/Close';
import PasswordField from 'material-ui-password-field';
import Divider from '@material-ui/core/Divider';

function Copyright() {
return ( <Typography variant="body2" color="textSecondary" align="center">{'Copyright © '}<Link color="inherit" href="https://material-ui.com/"> Mail App </Link>{' '} {new Date().getFullYear()} {'.'}</Typography>);
}

const styles = theme => 
({root: { height: '100vh',margin: theme.spacing(8,padding: theme.spacing(8},
image: { backgroundImage: 'url(/img/newlogo.png)', backgroundRepeat: 'no-repeat',backgroundSize: 'cover', backgroundPosition: 'center',
width: '45vh',height: '18vh',},
paper: { margin: theme.spacing(8, 4),display: 'flex',flexDirection: 'column',alignItems: 'center',},
avatar: { margin: theme.spacing(1),},
form: { width: '100%',  marginTop: theme.spacing(1),},
submit: {  margin: theme.spacing(1, 0, 1),width: '50%'},
});

class profile extends Component {
constructor(props) {
super(props);


let username=sessionStorage.getItem("username"),email=sessionStorage.getItem("email");

this.state = {username:username,email: email, password: "",contactno:"",company_name:"",companyadd:"",companywebsite:"",validEmail: null};
this.loggedIn = sessionStorage.getItem('email') === 'true';

}

validateForm() { return this.state.email.length > 0 && this.state.password.length > 0;}

  handleSubmit = event => {
    event.preventDefault();

    const companyprofile = {username: this.state.username,email: this.state.email,Password: this.state.Password,cmpnyname: this.state.cmpnyname,cmpnyaddress: this.state.cmpnyaddress,cmpnyWebsite: this.state.cmpnyWebsite};

    return fetch('http://www.campaignserver.com/updateprofile', { 
    method: 'post', credentials: "same-origin",  headers: {'token':sessionStorage.getItem("token"),'Accept': 'application/json','Content-Type': 'application/json'},
      body: JSON.stringify(companyprofile),
    }).then(response =>  response.json())
    .then(resData => {
     
     console.log(resData)

     if(resData.profile_completed=='true')
     {
       window.location.href = '/Home'; 
     }

    })
  }

handleChange = event => { this.setState({[event.target.id]: event.target.value });}

validateEmail = (e) => 
{ if ( new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,15}/g).test(e.target.value) ) { this.setState({   validEmail: false  });}
  else {    this.setState({   validEmail: true });}
}

validateForm() {  
   
//   return (this.state.validEmail && this.state.validpwd && this.state.pwdmatch); }
//  handleChange = event => { this.setState({  [event.target.id]: event.target.value});
return true;
}


render() {

  let emailicon = null;

  if( this.state.validEmail==true)
  {
    emailicon = < CloseIcon />;
  }
  else if( this.state.validEmail==false)
  {
    emailicon = <DoneIcon/>;
    
  }
  

const { classes } = this.props;
return (
<div className="Profile" style={{fontFamily: 'Helvetica'}} >

<Grid item xs={12} container  component={Paper} square >

<Typography> <h1>Account Details</h1> </Typography> 
</Grid>
<Grid item xs={12} container  component={Paper} square >


<Grid item xs={5} style={{paddingRight:'12em',paddingLeft:'7em'}}> 


<Typography component="small" > <h2>Your Account </h2></Typography> 


<Typography component="small" > <h2>Company Info</h2>  </Typography> 


</Grid>

<Grid item xs={7} container direction="column" > 

<form  className={classes.form} noValidate onSubmit={this.handleSubmit}>


<div style={{height: '3em' }}>
<p margin="normal"  style={{textalign: 'center' ,color:'red' }}>  {this.state.Error}</p>
</div>

<Typography component="small" > Personal Info </Typography> 
<br/>
<TextField margin="normal" required fullWidth id="username" label="User Name" name="username" value={this.state.username}  disabled/> 

<TextField margin="normal"  required fullWidth id="email" label="Email Address" name="email" autoComplete="email"  type="text" value={this.state.email} onChange={this.handleChange} disabled/> 



<TextField margin="normal"  required fullWidth id="Password" label="Password" name="Password"  type="text" value={this.state.Password} onChange={this.handleChange} onBlur={this.validatepwd} /> 

<Typography component="small" > Company Info </Typography> 

<TextField margin="normal"  required fullWidth id="cmpnyname" label=" Name" name="cmpnyname" value={this.state.cmpnyname} onChange={this.handleChange}/> 


<TextField margin="normal"  required fullWidth id="cmpnyaddress" label=" Address" name="cmpnyaddress" type="text" value={this.state.cmpnyaddress} onChange={this.handleChange} /> 

<TextField margin="normal"  required fullWidth id="cmpnyWebsite" label="WebSite" name="cmpnyWebsite"  type="text" value={this.state.cmpnyWebsite} onChange={this.handleChange} onBlur={this.validatepwd} /> 



<Button  margin="normal" type="submit" fullWidth variant="contained" color="primary" className={classes.submit} disabled={!this.validateForm()}  style={{marginLeft:'8em'}} > Update </Button>



</form> 

  </Grid>
 </Grid>


</div>
);
}
}


export default withStyles(styles)(profile);

////////////


// export default class profile extends Component {
// constructor(props) {
//   super(props);

//   var email="", clientdb="";
//   if(sessionStorage.getItem("email"))  { email=sessionStorage.getItem("email")    }
//   if(sessionStorage.getItem("clientdb"))  { clientdb=sessionStorage.getItem("clientdb")    }
  
//     this.state = { email: "", password: "", name: "", address: "",website: "", clientdb:clientdb};

// }

//   validateForm() {   return this.state.email.length > 0 && this.state.password.length > 0; }

//   handleSubmit = event => {
//     event.preventDefault();

//     const companyprofile = {email: this.state.email,password: this.state.password,cmpnyname: this.state.name,cmpnyaddress: this.state.address,cmpnyWebsite: this.state.website};

//     return fetch('http://www.campaignserver.com/updateprofile', { 
//     method: 'post', credentials: "same-origin",  headers: {'token':sessionStorage.getItem("token"),'Accept': 'application/json','Content-Type': 'application/json'},
//       body: JSON.stringify(companyprofile),
//     }).then(response =>  response.json())
//     .then(resData => {
//       window.location.href = '/dash'; 

//     })
//   }

//   handleChange = event => {
//     this.setState({
//       [event.target.id]: event.target.value
//     });
//   }

//   render() {
//     return (
//       <div className="Login">
        
//         <div>  <a href="/">Back</a></div>
//         <Helmet>

// <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css"/>
// <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
// <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
// <meta name="csrf-token" content="{{ csrf_token() }}"></meta>
// </Helmet>

// <form onSubmit={this.handleSubmit}> 
// <FormGroup controlId="email" bsSize="large"> 
// <FormLabel>Email</FormLabel> <FormControl autoFocus type="email" value={this.state.email} onChange={this.handleChange} />
// </FormGroup> 
// <FormGroup controlId="password" bsSize="large"> 
// <FormLabel>Password</FormLabel> <PasswordMask id="password" name="password" placeholder="Enter password" value={this.state.password} onChange={this.handleChange} type="password" /> </FormGroup>

// <FormGroup controlId="name" bsSize="large"> 
// <FormLabel>name</FormLabel> <FormControl autoFocus type="text" value={this.state.name} onChange={this.handleChange} /> </FormGroup>

// <FormGroup controlId="address" bsSize="large"> 
// <FormLabel>address</FormLabel> <FormControl autoFocus type="text" value={this.state.address} onChange={this.handleChange} /> </FormGroup>

// <FormGroup controlId="website" bsSize="large"> 
// <FormLabel>website</FormLabel> <FormControl autoFocus type="text" value={this.state.website} onChange={this.handleChange} /> </FormGroup>

// <Button block bsSize="large" disabled={!this.validateForm()} type="submit" > Update </Button>
// </form>
//       </div>
//     );
//   }
// }


////////

username -your name
sendgrid - campaing Pulse  
password - mask 
token - total md5
template after verify mail
bug 

///////////
 
<TextField margin="normal"  required fullWidth id="confirmpassword" label="Confirm Password" name="confirmpassword" autoComplete="confirmpassword"  type="text" value={this.state.confirmpassword} onChange={this.handleChange} onBlur={this.cnfrmpwd} InputProps={{ endAdornment: cpwdicon }}/> 

<TextField margin="normal"  required fullWidth id="confirmpassword" label="Password" name="password" autoComplete="password"  type="text" value={this.state.password} onChange={this.handleChange} onBlur={this.validatepwd} InputProps={{ endAdornment: pwdicon }}/> 

<TextField margin="normal"  required fullWidth id="confirmpassword" label="Confirm Password" name="confirmpassword" autoComplete="confirmpassword"  type="text" value={this.state.confirmpassword} onChange={this.handleChange} onBlur={this.cnfrmpwd} InputProps={{ endAdornment: cpwdicon }}/> 

<TextField margin="normal"  required fullWidth id="confirmpassword" label="Confirm Password" name="confirmpassword" autoComplete="password"  type="text" value={this.state.confirmpassword} onChange={this.handleChange} onBlur={this.validatepwd} InputProps={{ endAdornment: pwdicon }}/>  */}

<PasswordField margin="normal" fullWidth required name="confirmpassword" label="Confirm Password" type="confirmpassword" id="confirmpassword" autoComplete="current-password" value={this.state.confirmpassword}  onBlur={this.cnfrmpwd} InputProps={{ endAdornment: cpwdicon }}/> 

/////////////


but why we are not using the theme which I have shared
: We use the same font and size
 And database collection name should be symetrical which we have discussed
 small case and there are multiple words in it we use _
 like a_b
 please use mailing content as sendgrid or sendinblue as of now
password bug - done 
resend activation link 

<script type="text/jsx" src="./lander.js"></script>

import   './js/1.js';
<script src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.min.js'></script>



               {/* <Pie data={state} options={{ title:{ display:true, text:'Average Rainfall per month', fontSize:20 }, legend:{ display:true, position:'right' } }} />
                */}


                <Doughnut data={state} options={{ title:{ display:true, text:'Average Rainfall per month', fontSize:20 }, legend:{ display:true, position:'right' } }} />
 <Line data={state} options={{ title:{ display:true, text:'Average Rainfall per month', fontSize:20 }, legend:{ display:true, position:'right' } }} />

 <Bar data={state} options={{ title:{ display:true, text:'Average Rainfall per month', fontSize:20 }, legend:{ display:true, position:'right' } }} />

// import React from 'react';  
// import { Route } from 'react-router-dom';  
// import clsx from 'clsx';
// import CssBaseline from '@material-ui/core/CssBaseline';
// import Drawer from '@material-ui/core/Drawer';
// import List from '@material-ui/core/List';
// import Typography from '@material-ui/core/Typography';
// import Divider from '@material-ui/core/Divider'; 
// import Link from '@material-ui/core/Link';
// import Menu from '@material-ui/core/Menu';
// import MenuItem from '@material-ui/core/MenuItem';
// import Button from '@material-ui/core/Button';
// import { mainListItems } from './DashBoard/listItems';

///////




{/* 
<PasswordField margin="normal" fullWidth required name="password" label="Password" type="password" id="password" autoComplete="current-password" placeholder='Password' value={this.state.password} onChange={this.handleChange} onBlur={this.validatepwd} InputProps={{ endAdornment: pwdicon }}/>  */}

<TextField margin="normal"   fullWidth id="password" label="Password" name="password" autoComplete="password" autoFocus value={this.state.password} onChange={this.handleChange} /> 


<TextField margin="normal"   fullWidth id="cnf_password" label="Password" name="cnf_password" autoComplete="cnf_password" autoFocus value={this.state.cnf_password} onChange={this.handleChange} /> 


///////////

font style and size changed 
database collection made symetrical 
 mailing content changed as sendgrid 
new dashboard implemented as per argon theme 
///////////

//create db / collection for client from php
// client collection dynamic 
pm2 - to start react automatically -later
templates - ext html - test 
no query string / ?   - url masking  - test
dashboard head static
http://localhost:3000/ - replace name , port - virtual  - done for react 
connection --- admincontroller -- methods / naming 
constants  - ip / regex etc
extra files 
controllers hirarchy 
function / events naming - handleSubmit    
laravel cntroller - method , camel case , php standerds


//////////


Fold folds the innermost uncollapsed region at the cursor:

Ctrl + Shift + [ on Windows and Linux
Ctrl + Shift + ] on Windows and Linux
Ctrl + K, Ctrl + 0 (zero) on Windows and Linux
Ctrl + K, Ctrl + J on Windows and Linux

////////


import BeforeVerfication from '../templates/email_templates/BeforeVerfication.html';
var BeforeVerficationHtml = { __html: BeforeVerfication };



return (ReactDOM.render(
  <div dangerouslySetInnerHTML={BeforeVerficationHtml} />, document.getElementById('root')))

 }





// window.history.replaceState("http://example.ca", "Sample Title", "http://example.com");
// console.log( window.location.href );  

this.props.history.push('/');



const assert = require('assert');
const urlmask = require('url-mask');
const url = 'http://user:secret@github.com/';

let masked = urlmask(url);
assert.equal('http://www.google.com/', masked);
console.log(`masked url using defaults: ${masked}`);
 
//
// Additional options can be specified not to mask the username
// or use a different masking character
//
masked = urlmask(url, { maskUsername: false });
assert.equal('http://user:*****@github.com/', masked);
console.log(`masked url overriding maskUsername option: ${masked}`);
 
masked = urlmask(url, { maskCharacter: '-' });
assert.equal('http://-----:-----@github.com/', masked);
console.log(`masked url overriding maskCharacter option: ${masked}`);


const rules = [
  ['https://www.example.com/?token=1', 'https://example.com/bar/'],
  [/^^([^/]*)\/.php$ \/product.php?id=$1 [L], 'https://www.google.com/$1', ['v'], false]
]


RewriteRule 

^([^/]*)\.php$ /product.php?id=$1 [L]
 
console.log(urlRewrite('https://www.example.com/foo/a?q=1', rules))

console.log(urlRewrite('https://www.example.com/?token=1', rules))


//https://example.com/bar/a?q=1
//https://assets.example.com/a/b.png?a=1&v=2



const rules = [
  ['https://www.example.com/foo/', 'https://example.com/bar/'],
  [/^https:\/\/www\.example\.com\/(.*\.png)$/, 'https://assets.example.com/$1?a=1', ['v'], false]
]
 
console.log(urlRewrite('https://www.example.com/foo/a?q=1', rules))

console.log(urlRewrite('https://www.example.com/a/b.png?v=2&c=3#h', rules))


//////rewrite rules

https://www.brontobytes.com/knowledgebase/149/htaccess-RewriteRule-Examples.html?language=english&currency=7

////////

<Switch>
<Route
path="/"
exact
render={props => (
<Redirect
to={{
pathname: "/invite-members/123",
state: { from: props.location }
}}
/>
)}
/>

</Switch>

//////


window.history.pushState(state object, title, URL)

//window.location.href="https://reqres.in/api/users?page=2";

const rules = [
  ['https://www.example.com/foo/', 'https://example.com/bar/'],
  [/^https:\/\/www\.example\.com\/(.*\.png)$/, 'https://assets.example.com', ['v'], false]
]

console.log(urlRewrite('https://www.example.com/a/b.png?v=2&c=3#h', rules))

var url=
window.history.pushState("https://reqres.in/api/users?page=2",null,window.location.href.split('?')[0])

console.log(window.location.href)
RewriteCond %{QUERY_STRING} ^id=([0-9]*)$
RewriteRule ^book\.php$ /book/%1? [L]

RewriteRule ^test?$ test.php

//////

RewriteEngine On

RewriteRule ^test?$ test.php
RewriteRule ^test/([0-9]+)/([0-9]+) test.php?id=$1

/path/?token=xxxx  to  /path/token/xxxx

"http://www.campaignserver.com/verifymail?token={{$data1['token']}}"

//////

const Child = ({ match }) => (
  <div>
    <h3>ID: {match.params.id}</h3>
  </div>
)

<Route path="/resetpassword/:id" component={Child}/>
 /////////

Namespace files / directories (UpperCamelCase)   ---->  namespace FastFood\Page;
Constants (UPPERCASE_UNDERSCORED) ----> const TYPE_MAIN = "order-type-main";
Classes (PascalCase) ----> class OrderPage 
Properties (camelCase) ----> $this->getName()
variabes (lowercase_underscored(for multiple words) ---->   int $first_number,
Methods (camelCase) ----> public function sampleMethod {}

Databases

Tables -- PascalCase ---->
Columns -- camelCase ---->

private OtherClass $menu;
  
/////////

REACT_APP_API_ENDPOINT=http://www.my-app.dev
127.0.0.1:2000 my-app.dev


///////

sub routing 
https://stackoverflow.com/questions/34182806/multiple-route-file-instead-of-one-main-route-file-in-laravel-5

//////
laravel constants 

return [
    'langs' => [
        'es' => 'www.domain.es',
        'en' => 'www.domain.us'
        // etc
    ]
];
Config::get('constants.langs.en');

///////////////

const rules = [
  ['^abc/([0-9]+)/([0-9]+)', 'abc.php?id=$1']
]
 
urlRewrite('https://www.example.com/foo/a?q=1', rules)
// -> 'https://example.com/bar/a?q=1'
 
urlRewrite('https://www.example.com/a/b.png?v=2&c=3#h', rules)


window.location.href="https://reqres.in/api/users?page=2";
////////////


return fetch('http://www.campaignserver.com/postapi', { 
  method: 'post', credentials: "same-origin",  headers: {'token':'token34','Accept': 'application/json','Content-Type': 'application/json'},
    body: JSON.stringify(signindata),
  }).then(response =>  response.json())
  .then(resData => {
   
   console.log(resData)

   if(resData.profile_completed==='true')
   {
     window.location.href = '/Home'; 
   }

  })


resend_activation = event => {
 
 var dateVar = new Date(),md5 = require('md5'),language = require('browser-language'), moment = require( 'moment' ), currentDate = moment().utc().format("YY-MM-DD HH:MM:SS"), expirationdate = moment().add(3, 'M').utc().format("YY-MM-DD HH:MM:SS");const timestamp = require('time-stamp');
 
  return fetch('http://www.campaignserver.com/create_User_Accounts',{method: 'post', credentials: "same-origin",headers: { 'Accept': 'application/json','Content-Type': 'application/json'}, body: JSON.stringify( { email: this.state.email, password: md5(this.state.password), offset: dateVar.getTimezoneOffset(), language:navigator.language, useragent:navigator.userAgent, timestamp:timestamp.utc(), creation_date:currentDate, expiration_date:expirationdate })}).then(response =>  response.json())
  .then(resData => {

  if( resData.message==='fail') {alert(resData.desc);}
  if( resData.message==='success') { return (ReactDOM.render(<div>Verification Mail sent</div>, document.getElementById('root')));}

  })
 
  }

  ////////

  
resend_activation = event => {
 
 var dateVar = new Date(),md5 = require('md5'),language = require('browser-language'), moment = require( 'moment' ), currentDate = moment().utc().format("YY-MM-DD HH:MM:SS"), expirationdate = moment().add(3, 'M').utc().format("YY-MM-DD HH:MM:SS");const timestamp = require('time-stamp');
 
  return fetch('http://www.campaignserver.com/create_User_Accounts',{method: 'post', credentials: "same-origin",headers: { 'Accept': 'application/json','Content-Type': 'application/json'}, body: JSON.stringify( { email: this.state.email, password: md5(this.state.password), offset: dateVar.getTimezoneOffset(), language:navigator.language, useragent:navigator.userAgent, timestamp:timestamp.utc(), creation_date:currentDate, expiration_date:expirationdate })}).then(response =>  response.json())
  .then(resData => {

  if( resData.message==='fail') {alert(resData.desc);}
  if( resData.message==='success') { return (ReactDOM.render(<div>Verification Mail sent</div>, document.getElementById('root')));}

  })
 
  }

  //////
in hosts

127.0.0.1 www.CampaignPulse.com
127.0.0.1 www.CampaignServer.com

127.0.0.1 www.campaignpulse.com
127.0.0.1 www.campaignpulse.com
127.0.0.1 www.campaignserver.com


/////////

Schema::create('painters', function(Blueprint $table)
		{
			$table->increments('id');
			$table->string('username')->unique();
			$table->text('bio');
			$table->timestamps();
		});

 ///////

php artisan --version 

///////

https://www.doctrine-project.org/projects/doctrine-mongodb-odm/en/1.2/reference/introduction.html

1. .Env files (Dev, staging, prod) : use .Env.example
2. Doc block
3. Exceptional handling


//////////


"doctrine/orm":"2.2.0",
    "doctrine/doctrine-bundle":"dev-master",
    "doctrine/mongodb-odm":"dev-master#846e8f54ac7c35ed6be91444f0e540a746d48caf",
    "doctrine/mongodb-odm-bundle":"dev-master",

    php artisan cache:clear

    To get the current memory_limit value, run:

php -r "echo ini_get('memory_limit').PHP_EOL;"


            //return $upOne = dirname(__DIR__, 3);
            
            //__DIR__.'.\.';

            //vendor\autoload.php
            //C:\laravel-mailapp\vendor\autoload.php


composer dumpautoload


/////

  if ( ! file_exists($file = dirname(__DIR__, 3).'\vendor\autoload.php')) {
                throw new RuntimeException('Install dependencies to run this script.');
            }

            $loader = require_once $file;

            //$loader->add('Documents', dirname(__DIR__, 3));
            $connection = new Connection();
            $config = new Configuration();

            return $config;

            $config->setProxyDir(dirname(__DIR__, 3). '/Proxies');
            $config->setProxyNamespace('Proxies');
            $config->setHydratorDir(dirname(__DIR__, 3). '/Hydrators');
            $config->setHydratorNamespace('Hydrators');
            $config->setDefaultDB('doctrine_odm');
            $config->setMetadataDriverImpl(AnnotationDriver::create(dirname(__DIR__, 3). '/Documents'));
            AnnotationDriver::registerAnnotationClasses();
            $dm = DocumentManager::create($connection, $config);


////////////


    $connection = new Connection();
    $config = new Configuration();

    $config->setProxyDir(dirname(__DIR__, 3). '/Proxies');
    $config->setProxyNamespace('Proxies');
    $config->setHydratorDir(dirname(__DIR__, 3). '/Hydrators');
    $config->setHydratorNamespace('Hydrators');
    $config->setDefaultDB('doctrine_odm');
    $config->setMetadataDriverImpl(AnnotationDriver::create(dirname(__DIR__, 3). '/Documents'));
    AnnotationDriver::registerAnnotationClasses();
    $dm = DocumentManager::create($connection, $config);

    $employee = new Employee();
    $employee->setName('Employee');
    $employee->setSalary(50000);
    $employee->setStarted(new DateTime());

    $dm->persist($employee);
    $dm->flush();



//////


<?php 
namespace App;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ODM\MongoDB\Mapping\Annotations as ODM;
use DateTime;

/** @ODM\MappedSuperclass */
abstract class BaseEmployee
{
    /** @ODM\Id */
    private $id;

    /** @ODM\Field(type="int", strategy="increment") */
    private $changes = 0;

    /** @ODM\Field(type="collection") */
    private $notes = array();

    /** @ODM\Field(type="string") */
    private $name;

    /** @ODM\Field(type="int") */
    private $salary;

    /** @ODM\Field(type="date") */
    private $started;

    /** @ODM\Field(type="date") */
    private $left;

    /** @ODM\EmbedOne(targetDocument="Address") */
    private $address;

    public function getId() { return $this->id; }

    public function getChanges() { return $this->changes; }
    public function incrementChanges() { $this->changes++; }

    public function getNotes() { return $this->notes; }
    public function addNote($note) { $this->notes[] = $note; }

    public function getName() { return $this->name; }
    public function setName($name) { $this->name = $name; }

    public function getSalary() { return $this->salary; }
    public function setSalary($salary) { $this->salary = (int) $salary; }

    public function getStarted() { return $this->started; }
    public function setStarted(DateTime $started) { $this->started = $started; }

    public function getLeft() { return $this->left; }
    public function setLeft(DateTime $left) { $this->left = $left; }

    public function getAddress() { return $this->address; }
    public function setAddress(Address $address) { $this->address = $address; }
}



/** @ODM\Document */
class Manager extends BaseEmployee
{
    /** @ODM\ReferenceMany(targetDocument="Documents\Project") */
    private $projects;

    public function __construct() { $this->projects = new ArrayCollection(); }

    public function getProjects() { return $this->projects; }
    public function addProject(Project $project) { $this->projects[] = $project; }
}

/** @ODM\EmbeddedDocument */
class Address
{
    /** @ODM\Field(type="string") */
    private $address;

    /** @ODM\Field(type="string") */
    private $city;

    /** @ODM\Field(type="string") */
    private $state;

    /** @ODM\Field(type="string") */
    private $zipcode;

    public function getAddress() { return $this->address; }
    public function setAddress($address) { $this->address = $address; }

    public function getCity() { return $this->city; }
    public function setCity($city) { $this->city = $city; }

    public function getState() { return $this->state; }
    public function setState($state) { $this->state = $state; }

    public function getZipcode() { return $this->zipcode; }
    public function setZipcode($zipcode) { $this->zipcode = $zipcode; }
}

/** @ODM\Document */
class Project
{
    /** @ODM\Id */
    private $id;

    /** @ODM\Field(type="string") */
    private $name;

    public function __construct($name) { $this->name = $name; }

    public function getId() { return $this->id; }

    public function getName() { return $this->name; }
    public function setName($name) { $this->name = $name; }
}

///////////<?php 

namespace App;

use Doctrine\ODM\MongoDB\Mapping\Annotations as ODM;

/** @ODM\Document */
class User 
{
    /** @ODM\Id */
    private $id;

    /** @ODM\Field(type="string") */
    private $name;

    /** @ODM\Field(type="string") */
    private $email;

    /** @ODM\ReferenceMany(targetDocument="BlogPost", cascade="all") */
    private $posts = array();

    public function setName($name)
    {
        $this->$name=$name;
    }
}


/////////


 public function test()
        {

            $connection = new Connection();
            
            $config = new Configuration();
            $config->setProxyDir(__DIR__ . '/Proxies');
            $config->setProxyNamespace('Proxies');
            $config->setHydratorDir(__DIR__ . '/Hydrators');
            $config->setHydratorNamespace('Hydrators');
            $config->setDefaultDB('abc');
            $config->setMetadataDriverImpl(AnnotationDriver::create(__DIR__ . '/Documents'));
            
            AnnotationDriver::registerAnnotationClasses();
            $dm = DocumentManager::create($connection, $config);

            $employee = new Employee();
            $employee->setName('abcd');
            $employee->setSalary(50000);
            $employee->setStarted(new DateTime());

            $address = new Address();
            $address->setAddress('555 Doctrine Rd.');
            $address->setCity('Nashville');
            $address->setState('TN');
            $address->setZipcode('37209');
            $employee->setAddress($address);

            $project = new Project('New Project');
            $manager = new Manager();
            $manager->setName('Manager');
            $manager->setSalary(100000);
            $manager->setStarted(new DateTime());
            $manager->addProject($project);

            $dm->persist($employee);
            $dm->persist($address);
            $dm->persist($project);
            $dm->persist($manager);
            $dm->flush();

        }


////////

working 

 public function test()
        {

            $connection = new Connection();
            
            $config = new Configuration();
            $config->setProxyDir(__DIR__ . '/Proxies');
            $config->setProxyNamespace('Proxies');
            $config->setHydratorDir(__DIR__ . '/Hydrators');
            $config->setHydratorNamespace('Hydrators');
            $config->setDefaultDB('abc');
            $config->setMetadataDriverImpl(AnnotationDriver::create(__DIR__ . '/Documents'));
            
            AnnotationDriver::registerAnnotationClasses();
            $dm = DocumentManager::create($connection, $config);

            $user = new User();
            $user->setName('emp1');
            $user->setSalary(50000);
            $user->setStarted(new DateTime());

            $dm->persist($user);
            $dm->flush();

        }

        ///////

<?php 

namespace App;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ODM\MongoDB\Mapping\Annotations as ODM;
use DateTime;

/** @ODM\Document */
class  User
{
    /** @ODM\Id */
    private $id;

    /** @ODM\Field(type="int", strategy="increment") */
    private $changes = 0;

    /** @ODM\Field(type="collection") */
    private $notes = array();

    /** @ODM\Field(type="string") */
    private $name;

    /** @ODM\Field(type="int") */
    private $salary;

    /** @ODM\Field(type="date") */
    private $started;

    /** @ODM\Field(type="date") */
    private $left;

    /** @ODM\EmbedOne(targetDocument="Address") */
    private $address;

    public function getId() { return $this->id; }

    public function getChanges() { return $this->changes; }
    public function incrementChanges() { $this->changes++; }

    public function getNotes() { return $this->notes; }
    public function addNote($note) { $this->notes[] = $note; }

    public function getName() { return $this->name; }
    public function setName($name) { $this->name = $name; }

    public function getSalary() { return $this->salary; }
    public function setSalary($salary) { $this->salary = (int) $salary; }

    public function getStarted() { return $this->started; }
    public function setStarted(DateTime $started) { $this->started = $started; }

    public function getLeft() { return $this->left; }
    public function setLeft(DateTime $left) { $this->left = $left; }

    public function getAddress() { return $this->address; }
    public function setAddress(Address $address) { $this->address = $address; }
}

/////////







            // public function setUserName($username){$this->$username=$username;}
// // public function setEmail($email){$this->$email=$email;}
// // public function setPassword($password){$this->$password=$password;} 
// // public function setTimezone($timezone){$this->$timezone=$timezone;} 
// // public function setDBname($dbname){$this->$dbname=$dbname;}
// // public function setDB_host_primary($db_host_primary){$this->$db_host_primary=$db_host_primary;} 
// // public function setDB_host_secondary($db_host_secondary){$this->$db_host_secondary=$db_host_secondary;}
// // public function setCompanyAddress($companyaddress){$this->$companyaddress=$companyaddress;} 
// // public function setCompanyWebsite($companywebsite){$this->$companywebsite=$companywebsite;}
// // public function setDB_Key($db_key){$this->$db_key=$db_key;}


            
            $user->setSalary(50000);
            $user->setStarted(new DateTime());



            //     // $this->username=$request->get('username');$this->email=$request->get('email');$this->password=($request->get('password'));$this->timezone = timezone_name_from_abbr("", intval($request->get('language'))*60, 0);$this->language=($request->get('language'));$this->dbname = 'e_'.substr(md5($request->get('email')),0,10);$this->db_host_primary='mongodb://www.campaignserver.com:81:27017/'; $this->key=$request->get('key');$this->name=$request->get('name');$this->db_key=$request->get('db_key');$this->db_host_secondary=$request->get('db_host_secondary');$this->companyaddress=$request->get('cmpnyaddress'); $this->companywebsite=$request->get('cmpnyWebsite');



    /** @ODM\Field(type="int", strategy="increment") */
    private $changes = 0;

    /** @ODM\Field(type="collection") */
    private $notes = array();

    /** @ODM\Field(type="int") */
    private $salary;

    /** @ODM\Field(type="date") */
    private $started;

    /** @ODM\Field(type="date") */
    private $left;

    /** @ODM\EmbedOne(targetDocument="Address") */
    private $address;

    ////////

    
// public function __construct()
// {

//     // $this->username=$request->get('username');$this->email=$request->get('email');$this->password=($request->get('password'));$this->timezone = timezone_name_from_abbr("", intval($request->get('language'))*60, 0);$this->language=($request->get('language'));$this->dbname = 'e_'.substr(md5($request->get('email')),0,10);$this->db_host_primary='mongodb://www.campaignserver.com:81:27017/'; $this->key=$request->get('key');$this->name=$request->get('name');$this->db_key=$request->get('db_key');$this->db_host_secondary=$request->get('db_host_secondary');$this->companyaddress=$request->get('cmpnyaddress'); $this->companywebsite=$request->get('cmpnyWebsite');

// }

// public function setUserName($username){$this->$username=$username;}
// // public function setEmail($email){$this->$email=$email;}
// // public function setPassword($password){$this->$password=$password;} 
// // public function setTimezone($timezone){$this->$timezone=$timezone;} 
// // public function setDBname($dbname){$this->$dbname=$dbname;}
// // public function setDB_host_primary($db_host_primary){$this->$db_host_primary=$db_host_primary;} 
// // public function setDB_host_secondary($db_host_secondary){$this->$db_host_secondary=$db_host_secondary;}
// // public function setCompanyAddress($companyaddress){$this->$companyaddress=$companyaddress;} 
// // public function setCompanyWebsite($companywebsite){$this->$companywebsite=$companywebsite;}
// // public function setDB_Key($db_key){$this->$db_key=$db_key;}

// }

/////////

react constants
import Const from '../constants';
validateEmail = (e) => 
{ if ( new RegExp(Const.REG_VALID_EMAIL).test(e.target.value) ) { this.setState({   validEmail: false  });}
  else {    this.setState({   validEmail: true });}
}

//////////



/** @ODM\Id */
    private $id;

    /** @ODM\Field(type="int", strategy="increment") */
    private $changes = 0;

    /** @ODM\Field(type="collection") */
    private $notes = array();

    /** @ODM\Field(type="string") */
    private $name;

    /** @ODM\Field(type="int") */
    private $salary;

    /** @ODM\Field(type="date") */
    private $started;

    /** @ODM\Field(type="date") */
    private $left;

    /** @ODM\EmbedOne(targetDocument="Address") */
    private $address;

 ///////

 

// namespace App;

// use Illuminate\Database\Eloquent\Model;

// class Accounts extends Model
// {

//     public function __construct($request)
// {

//     $this->token=$request->get('token');$this->email=$request->get('email');$this->password=($request->get('password'));$this->timezone = timezone_name_from_abbr("", intval($request->get('language'))*60, 0);$this->language=($request->get('language'));$this->creation_date = $request->get('creation_date');$this->registration_ip=$request->get('registration_ip');;$this->activated=$request->get('activated');$this->source=$request->get('source');$this->db_created='false';$this->expiration_date=$request->get('expiration_date');

// }


// }

//////


        // $accounts=\DB::collection('accounts')->insert( [ 'email'=>$this->email,'password'=>$this->password,'locale'=>$this->language,'timezone'=>$this->timezone,'creation_date'=>$this->creation_date,'registration_ip'=>$this->registration_ip,'activated'=>$this->activated,'source'=>$this->source,'activation_request'=>[ 'token'=>$this->token,'db_created'=>false,'expiration_date'=>$this->expiration_date] ]);
 ////////


  $this->centralDB_Connection();
        $this->user=new User($request);
        $this->accounts=new Accounts($request);

        if($user->where('contact_details.email',$email, true)->first())
        {
            return  response()->json(['message' =>Config::get('constants.messages.USER_EXIST')], 200); 
        }
   
        $user_inserted=$this->user_Collection->insert(['contact_details'=>[ 'company_name'=>$this->user->company_name,'email'=>$this->user->email ],'username'=>$this->user->username,'password'=>$this->user->password,'api_keys'=>['v3'=>[ 'key'=>$this->user->key,'name'=>$this->user->internal ]],'db_key'=>$this->user->db_key,'profile_completed'=>false,'timezone'=>$this->user->timezone,'db_name'=>$this->user->dbname,'db_host_primary'=>$this->user->db_host_primary,'db_host_secondary'=>$this->user->db_host_secondary,'cmpnyaddress'=>$this->user->cmpnyaddress,'cmpnyWebsite'=>$this->user->cmpnyWebsite]);

        if($user_inserted)
        {
        if($this->mongodb_Connection->hasTable('accounts')==false){ \DB::createCollection('accounts');}

        if($this->accounts_Collection->where('email',$this->email, true)->first())
        {
            return  response()->json(['message' =>Config::get('constants.messages.ACCOUNT_EXIST')], 200); 
        }

        $account_inserted==$this->accounts_Collection->insert( [ 'email'=>$this->accounts->email,'password'=>$this->accounts->password,'locale'=>$this->accounts->language,'timezone'=>$this->accounts->timezone,'creation_date'=>$this->accounts->creation_date,'registration_ip'=>$this->accounts->registration_ip,'activated'=>$this->accounts->activated,'source'=>$this->accounts->source,'activation_request'=>[ 'token'=>$this->accounts->token,'db_created'=>false,'expiration_date'=>$this->accounts->expiration_date] ]);

<Grid item xs={12}  container  component={Paper} square  direction="column"
  
  justify="center" >

 //////////
react multi classnames
  className={`${classes.input} ${classes.submit}`} 

//////////

            // $config->setDefaultDB('companydb');
            // $dm = DocumentManager::create($connection, $config);
            // $activation_request = $dm->getRepository(ActivationRequest::class)->findBy(array('token' => $token));

 ////////


 

            $activation_request = $dm->getRepository('ActivationRequest')->findBy(array('token' => $token));


            // = $dm->createQueryBuilder()->field('_id')->equals("ObjectId(516c0061975a299edc44b419)")  
            // ->getQuery()
            // ->execute()->count(); 

            
            
            $qb = $dm->createQueryBuilder();
            $qb->select('username')->from('companydb:User ', 'username');
            $query = $qb->getQuery();
            $result = $query->getResult(); 

            

$qb->from()->document('User', 'u');
$qb->where()->eq()->field('u.username')->literal('dtl');

$query = $qb->getQuery();


            $qb = $dm->createQueryBuilder()->field('User','_id')->equals("ObjectId(516c0061975a299edc44b419)")  
            ->getQuery()
            ->execute()->count(); 
            

            $qb->from()->document('User', 'u');
            $qb->where()->eq()->field('u.username')->literal('dtl');

            $query = $qb->getQuery();
            

            $collection = $dm->getDocumentCollection(Document::User);
            $ab = $collection->createAggregationBuilder();
            $qb = $dm->createQueryBuilder($collection);
            $users = $qb->findBy(array('username' => '11'));
          

            $user = new User();
            $user->setUserName('11');
            $dm->persist($user);
            $dm->flush();
            $users = $dm->getRepository('User')->findBy(array('username' => '11'));
            
            $answers=$dm
                ->createQueryBuilder('Bundle1:User')
                ->field('_id')->equals("ObjectId(516c0061975a299edc44b419)")  
                ->getQuery()
                ->execute()->count();  

            $activation_request = $dm->getRepository('ActivationRequest')->findBy(array('token' => $token));
           
           $user = $dm->getRepository('User')->findOneBy(array('username' => 'jwage'));

            $user = new User();
            $user->setUserName('11');
            $dm->persist($user);
            $dm->flush();
            return  response()->json(['message' =>'success'], 200);

///////////

Accounts 
{"_id":"5d972034e10c00007a004825","email":"mail.nrj@gmail.com","activation_request":[{"$ref":"ActivationRequest","$id":"5d972034e10c00007a004826","$db":"companydb"}]}

ActivationRequest
{"_id":"5d97258de10c00007a00482b","token":"b88cd0faa0b34430bdec9bcaa4953fdc","db_created":false,"expiration_date":"20-01-04 11:01:20"}

//////////

 $user = $this->dm->createQueryBuilder(Accounts::class)
            ->field('email')->equals('mail.nrj@gmail.com')
            ->getQuery()
            ->getSingleResult();
            return  (response()->json(['message' =>(($user->getEmail())) ], 201));

            $qb = $this->dm->createQueryBuilder(Accounts::class)
            ->eagerCursor(true);
            $query = $qb->getQuery();
            $cursor = $query->execute(); 

///////////

  $actv_req = $this->dm->createQueryBuilder(ActivationRequest::class)->getQuery()
            ->getSingleResult();
            
            $qb = $this->dm->createQueryBuilder(Accounts::class)
            ->field('activation_request')->references($actv_req)->getQuery()
            ->getSingleResult();

            return  (response()->json(['message' =>(($qb->getEmail()))], 201));

//////

 // $Id = $this->dm->getRepository(Accounts::class)->findOneBy(array('activation_request[0].token' => $token));

 $user = $this->dm->createQueryBuilder(Accounts::class)
            ->field('activation_request.token')->equals('b88cd0faa0b34430bdec9bcaa4953fdc')
            ->getQuery()
            ->getSingleResult();
            return  (response()->json(['message' =>(($user->getEmail()))], 201));

            $qb = $this->dm->createQueryBuilder(Accounts::class)
            ->eagerCursor(true);
            $query = $qb->getQuery();
            $cursor = $query->execute(); 

            $query = $this->dm->createQuery('Cms\Model\Param');
            $query->field('productTypes.code')->equals('car');
            $result = $query->execute();
            var_dump($result);

            $Id = $this->dm->getRepository(Accounts::class)->findOneBy(array('activation_request.token' => $token))->getId();


            //db.post.find({'author': DBRef("user", ObjectId('foo'))})

            // $repo =  $this->dm->getRepository(Accounts::class);
            // $repo->createQueryBuilder()
            // ->field("activation_request.token")
            // ->equals($token)
            // ->getQuery()
            // ->execute();

           
            
            $accounts =$accounts_Collection->where('activation_request.token',$token, true)->get();

//////


 $users = \DB::collection('users')->where('contact_details.email',$accounts[0]['email'], true)->get();
            $dbname = $users[0]['db_name'];
            $bat_file = "c:\WINDOWS\system32\cmd.exe /c START %cd%\create_clientDB.bat ".escapeshellarg($dbname)." ".escapeshellarg($creation_date);
            $output = null;
            exec($bat_file, $output);


//////////            
            db.post.find({'author': DBRef("user", ObjectId('foo'))})

////////


    //$user->'keyname'; or $user->'filedname' instead of $user[0];

            $arr=(array)($accounts->getActivationRequest()[0]);

             return  var_dump($arr ["App"] ["ActivationRequesttoken"]);

//////////

$accounts = $this->dm->createQueryBuilder(Accounts::class)->field('email')->equals($request->get('email'))->field('password')->equals($request->get('password'))->getQuery()->getSingleResult();
            
            $arr=(array)($accounts->getActivationRequest()[0]);
            
            $token=null;
            $counter = 0;
            foreach ($arr as $key => $value) {
                if($counter==3)
                {
                    $token= "$value";
                }
                ++$counter;

            }

            return  response()->json(['message' =>($token)], 400);



https://pear.php.net/manual/en/standards.sample.php 
https://www.open-emr.org/wiki/index.php/How_to_Document_Your_Code_Properly


///////////



<?php 

namespace App\Http\Controllers;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Input;
use App\User, Redirect, DB, Config,RuntimeException;
use Doctrine\MongoDB\Connection;
use Doctrine\ODM\MongoDB\Configuration;
use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\Driver\AnnotationDriver;
use DateTime;
use Mail;
use App\ContactDetails,App\ApiKey,App\Accounts;

class HomeController extends AdminController
{ 

    public function index()
    {
        return view('home');
    }

    public function postapi(Request $request)
    {
        $this->user=new User($request);
        return  response()->json(['user' =>$this->user->email], 200); 
    }

    public function test()
        {

            $this->centralDB_Connection();

            $contact_details = $this->dm->createQueryBuilder(ContactDetails::class)->field('email')->equals('mail.nrj@gmail.com')->getQuery()->getSingleResult();

                $user = $this->dm->createQueryBuilder(User::class)->field('contact_Details')->references($contact_details)->getQuery()->getSingleResult();

                print_r($user->profile_completed);



            $accounts = $this->dm->createQueryBuilder(Accounts::class)->field('email')->equals('mail.nrj@gmail.com')->getQuery()->getSingleResult();

            $arr=(array)($accounts->getActivationRequest()[0]);
            
            $counter = 0;
            foreach ($arr as $key => $value) {
                if($counter==3)
                {
                    echo "$value";
                }
                ++$counter;

            }

             return  null;


        $data = ['email' =>'mail.nrj@gmail.com','token' =>'111'];

        Mail::send('mail',["data1"=>$data], function($message)  use ($data){
        $message->to($data['email'], 'Verification Mail')->subject('Verification Mail');
        $message->from('mail.nrj@gmail.com','Admin');});

        return  response()->json(['message' =>Config::get('constants.messages.SUCCESS'),'desc'  =>Config::get('constants.messages.SUCCESS')], 200);


            $connection = new Connection();
            
            $config = new Configuration();
            $config->setProxyDir(__DIR__ . '/Proxies');
            $config->setProxyNamespace('Proxies');
            $config->setHydratorDir(__DIR__ . '/Hydrators');
            $config->setHydratorNamespace('Hydrators');
            $config->setDefaultDB('a');
            $config->setMetadataDriverImpl(AnnotationDriver::create(__DIR__ . '/Documents'));
            
            AnnotationDriver::registerAnnotationClasses();
            $dm = DocumentManager::create($connection, $config);

            $user = new User();
            $user->setUserName('emp1');
            $user->setSalary(50000);
            $user->setStarted(new DateTime());

            $dm->persist($user);
            $dm->flush();

        }

}

///////////////


 try {
        // Validate the value...
    } catch (Exception $e) {
        report($e);

        return false;
    }

 ////////

 try {

  $this->buildXMLHeader();

} catch (\Exception $e) {

    return $e->getMessage();
}

/////////

try {

} catch (Exception $e) {
return  response()->json(['message' =>$e], 200);  
}

/////////

http://www.campaignserver.com:81/verifymail/b88cd0faa0b34430bdec9bcaa4953fdc


font-weight: 600;
    text-align: left;
    font-family: 'Montserrat', sans-serif;
    font-size: 24px;
  /////////


  
<Typography>
      <Link href={dudUrl} >
      Create New Account
      </Link>
      
      <Link href={dudUrl}  >
      Forgot Password
      </Link>
    </Typography>

Here is your client ID
254369086651-6d0scbrqfdprfie5kolon7m3g86eigkg.apps.googleusercontent.com
Here is your client secret
B4TQqnz-giVq3oAC_vle92R0 


"Not a valid origin for the client: http://www.campaignpulse.com has not been whitelisted for client ID 254369086651-rulj9o4720315estvq00o7filrm529kh.apps.googleusercontent.com. Please go to https://console.developers.google.com/ and whitelist this origin for your project's client ID."

/////////





        try {

            $email=$request->get('email');

        $accounts = \DB::collection('accounts')->where('email',$request->input('email'), true)->get();

        $data = ['email' =>$request->input('email'),'token' => $accounts[0]['activation_request']['token']] ;

        Mail::send('forgetpassword',["data2"=>$data], function($message)  use ($data){
        $message->to($data['email'], 'Reset Password Mail')->subject('Reset Password');
        $message->from('mail.nrj@gmail.com','Admin');});

        return  response()->json(['message' =>Config::get('constants.messages.SUCCESS'),'token' =>$data['token']], 200);

        } catch (Exception $e) {
            return  response()->json(['message' =>$e], 200);  
        }

/////////////////




<?php 

namespace App\Http\Controllers;
use Illuminate\Http\Request, App\User, Redirect, DB, Config,App\ContactDetails,App\Accounts ,App\ActivationRequest, Mail,App\Http\Controllers\Admin\AdminController;

    /**
     * [AccountController class contains functions for updating User Profile and Pass Recovery for Registered User ]
     */

class AccountController extends AdminController
{
    public function __construct(Request $request)
    {
    parent::__construct($request);
    }

    /**
     * [update_profile  function  updates User's email,username,cmpnyname,cmpnyaddress and cmpnyWebsite fields for Registerd User  and updates User Collection ]
     
    *  @param   Request  $request  [$request variable get email,username,cmpnyname,cmpnyaddress and cmpnyWebsite fields from api]
    *
    * @return  [Json]   [return Json object containing TOKEN_MISMATCH/profile_completed message ]
    */
    public function update_profile(Request $request)
    {   
        $this->centralDB_Connection();
        $token=$request->header('token');

        if($token)
        {
            try {

            $contact_details = $this->dm->createQueryBuilder(ContactDetails::class)->field('email')->equals($request->get('email'))->getQuery()->getSingleResult();

            $user_updated = $this->dm->createQueryBuilder(User::class)->findAndUpdate()
            ->field('contact_Details')->references($contact_details)->field('username')->set($request->input('username'))->set($request->input('cmpnyname'))->field('cmpnyaddress')->set($request->input('cmpnyaddress'))->field('cmpnyWebsite')->set($request->input('cmpnyWebsite'))->field('profile_completed')->set(true)->getQuery()->execute();

            return  response()->json(['profile_completed' =>'true'], 200);  

            } catch (Exception $e) {
                return  response()->json(['exception' =>$e], 200);  
            }

            }
            else
            {
            return  response()->json(['accounts'  =>Config::get('constants.messages.TOKEN_MISMATCH')], 200);   
            }

    }


    /**
     * [forget_password function send a Reset Password Mail to User after Validating Users Email]
     *
     *  @param   Request  $request  [$request variable gets email from api]
     *
     *  @return  [Json]   [return Json object containing SUCCESS/FAIL message ]
     */
    public function forget_password(Request $request)
    {
        $this->centralDB_Connection();

            try {
                    $accounts = $this->dm->createQueryBuilder(Accounts::class)->field('email')->equals($request->get('email'))->getQuery()->getSingleResult();

                    $arr=(array)($accounts->getActivationRequest()[0]);            
                    $token=null; $counter = 0;

                    foreach ($arr as $key => $value)
                    { if($counter==3) { $token= "$value"; }  ++$counter; }

                    $data = ['email' =>$accounts->GetEmail(),'token' => $token ] ;

                    Mail::send('forgetpassword',["data2"=>$data], function($message)  use ($data){
                    $message->to($data['email'], 'Reset Password Mail')->subject('Reset Password');
                    $message->from('mail.nrj@gmail.com','Admin');});

                    return  response()->json(['message' =>Config::get('constants.messages.SUCCESS'),'token' =>$data['token']], 200);

            }

            catch (Exception $e) {
                return  response()->json(['exception' =>$e], 200);  
            }

        

    }
       
    /**
     * [reset_password function updates a New Password  to User Collection After Validating token Value]
     *
     * @param   Request  $request  [$request description]
     *
     *  @param   Request  $request  [$request variable gets token from api]
     *
     * @return  [Json]   [return Json object containing SUCCESS/OLD_PASSWORD message ]
     */
    public function reset_password(Request $request)
    {

        try {

            $this->centralDB_Connection();
            $accounts =null;$activation_Request=new ActivationRequest();    
            $activation_Request->setToken($request->input('token')); 
    
            $activation_request = $this->dm->createQueryBuilder(ActivationRequest::class)->field('token')->equals($activation_Request->getToken())->getQuery()->getSingleResult();
    
            return  response()->json(['message'=>$request->input('token')], 200);

            if($activation_request)
            {
            $accounts = $this->dm->createQueryBuilder(Accounts::class)->field('activation_request')->references($activation_request)->set($request->input('password'))->set($request->input('password'))->getQuery()->execute();

            }

            if($accounts)
            {
            $contact_details = $this->dm->createQueryBuilder(ContactDetails::class)->field('email')->equals($accounts->GetEmail())->getQuery()->getSingleResult();

            $user_updated = $this->dm->createQueryBuilder(User::class)->findAndUpdate()
            ->field('contact_Details')->references($contact_details)->field('password')->set($request->input('password'))->getQuery()->execute();

            if($user_updated)
            {
            return  response()->json(['message'=>Config::get('constants.messages.SUCCESS')], 200);
            }
   
            } 
            
        } catch (Exception $e) {
        return  response()->json(['message' =>$e], 200);  
        }

    }

}

http://www.campaignpulse.com/img/newlogo.png

odm crud , Doc block, Exceptional handling, Remove unwanted files/Code, Naming convention done 

////////

// import React, { Component } from 'react';  
// import { BrowserRouter as Router, Route,  Switch } from 'react-router-dom';
// import DashboardLayoutRoute from "./DashboardLayout";  
// import Signup from './login/signup';
// import ReactDOM from 'react-dom'; 
// import Forgetpassword from './login/forgetpassword';
// import Resetpassword from './login/resetpassword';
// import Profile from './user_account/profile';
// import DashBoard from './Home';
// import Signin from './login/signin';
// import Welcome from './welcome'; 
// import Home from './Home'; 
// import Dash from './dash/dash.js'; 

// function signIn() { return ( ReactDOM.render(<Signin />, document.getElementById('root')));}
// function signUp() { return ( ReactDOM.render(<Signup />, document.getElementById('root')));}
// function dashBoard() {return (ReactDOM.render(<DashBoard />, document.getElementById('root')));}
// function forgetPassword() {return (ReactDOM.render(<Forgetpassword />, document.getElementById('root')));}
// function welcomePage() {return (ReactDOM.render(<Welcome />, document.getElementById('root')));}

// const RESET_PASSWORD = ({ match }) => (

//  ReactDOM.render(<Resetpassword id={match.params.id}/>, document.getElementById('root'))

// )

// class App extends Component {  
//   render() {  
//     return (  
//       <Router> 

//         <Switch>   
//           <DashboardLayoutRoute path="/Profile" component={Profile} />  
//           <DashboardLayoutRoute path="/Home" component={Home} />  
//         </Switch> 
//         <Route path="/" component={welcomePage} />
//         <Route path="/signin" component={signIn} />
//         <Route path="/signup" component={signUp} />
//         <Route path="/forgetpassword" component={forgetPassword} />
//         <Route path="/dash" component={dashBoard} />
//         <Route path="/resetpassword/:token" component={RESET_PASSWORD}/>

//       </Router>  
//     );  
//   }  
// }  
  
// export default App;  

/////////



  
  
  
//   import React from 'react';
// import Button from '@material-ui/core/Button';
// import TextField from '@material-ui/core/TextField';
// import Paper from '@material-ui/core/Paper';
// import Grid from '@material-ui/core/Grid';
// import Typography from '@material-ui/core/Typography';
// import  { Component } from "react";
// import "../styles.css";
// import { withStyles } from '@material-ui/core/styles';
// import ReactDOM from 'react-dom';
// import { CardMedia } from '@material-ui/core';
// import DoneIcon from '@material-ui/icons/Done';
// import CloseIcon from '@material-ui/icons/Close';
// import ForgetPassword from '../templates/ForgetPassword.html';
// import Const from '../constants';

// var ForgetPasswordHtml = { __html: ForgetPassword };

// const STYLES = theme => 
// ({root: { height: '100vh',margin: theme.spacing(8,padding: theme.spacing(8},
// image: { backgroundImage: 'url(/img/newlogo.png)', backgroundRepeat: 'no-repeat',backgroundSize: 'cover', 
// width: '40vh',height: '7vh',},
// paper: { margin: theme.spacing(8, 4),display: 'flex',flexDirection: 'column',alignItems: 'center',},
// avatar: { margin: theme.spacing(1),},
// form: { width: '100%',  marginTop: theme.spacing(1),},
// submit: { marginTop: '2em',width: '100%'},
// margin: {marginTop: '2em'}
// });

// class ResetPassword extends Component {
// constructor(props) {
// super(props);

// this.state = {email: "", password: "",validEmail: null};
// this.loggedIn = sessionStorage.getItem('email') === 'true';

// }

// validateForm() { return this.state.validEmail ; }

// handleSubmit = event => {
//   event.preventDefault();

//   return fetch('http://www.campaignserver.com:81/forgetpassword', { 
//   method: 'post', credentials: "same-origin",  headers: {'Accept': 'application/json','Content-Type': 'application/json'},
//     body: JSON.stringify({email: this.state.email}),
//   }).then(response =>  response.json())
//   .then(resData => {
//     console.log(resData);

//     if( resData.message===Const.MESSAGES.SUCCESS) { return (ReactDOM.render(
//       <div dangerouslySetInnerHTML={ForgetPasswordHtml} />, document.getElementById('root')));}
//     else {console.log(resData.message); }


//   })
// }




// handleChange = event => { this.setState({[event.target.id]: event.target.value });}

// validateEmail = (e) => 
// { if ( new RegExp(Const.REGEX.REG_VALID_EMAIL).test(e.target.value) ) { this.setState({   validEmail: false  });}
//   else {    this.setState({   validEmail: true });}
// }

// render() {

//   let email_icon = null;

//   if( this.state.validEmail===true)
//   {
//     email_icon = < CloseIcon />;
//   }
//   else if( this.state.validEmail===false)
//   {
//     email_icon = <DoneIcon/>;
    
//   }
  

// const { classes } = this.props;
// return (
// <div className="Login">

// <Grid container  component={Paper} square >

// <Grid container direction="column" > <div className={classes.paper } className={classes.root}>

// <form className={classes.form} noValidate onSubmit={this.handleSubmit}>
// <CardMedia   className={classes.image} />


// <Typography className={classes.margin}  component="h1"  > <strong>Reset Password </strong> </Typography>

// <Typography  className={classes.margin}  component="h3"  > To reset your password, please provide your Campaign Pulse username. </Typography> 

// <TextField className={classes.margin}  required fullWidth id="email" label="Email" name="email" autoComplete="email" autoFocus type="email" value={this.state.email} onChange={this.handleChange} onBlur={this.validateEmail}  InputProps={{ endAdornment: email_icon }}/> 

// <Button  className={classes.margin , classes.submit} type="submit" fullWidth variant="contained" color="primary" className={classes.submit} > Send Reset Instructions </Button>

// </form> </div> </Grid>

//  </Grid>

// </div>
// );
// }
// }


// export default withStyles(STYLES)(ResetPassword);



////////


         <li className="nav-item"><a className="nav-link" href="#/admin/maps"><i className="ni ni-pin-3 text-orange"></i>Maps</a></li>
         <li className="nav-item"><a className="nav-link" href="#/admin/user-profile"><i className="ni ni-single-02 text-yellow"></i>User Profile</a></li>
         <li className="nav-item"><a className="nav-link" href="#/admin/tables"><i className="ni ni-bullet-list-67 text-red"></i>Tables</a></li>
         <li className="nav-item"><a className="nav-link" href="#/auth/login"><i className="ni ni-key-25 text-info"></i>Login</a></li>
         <li className="nav-item"><a className="nav-link" href="#/auth/register"><i className="ni ni-circle-08 text-pink"></i>Register</a></li>


         
      <hr className="my-3"/>
      <h6 className="navbar-heading text-muted">Documentation</h6>
      <ul className="mb-md-3 navbar-nav">
         <li className="nav-item"><a className="nav-link" href="#/documentation/overview"><i className="ni ni-spaceship"></i>Getting started</a></li>
         <li className="nav-item"><a className="nav-link" href="#/documentation/colors"><i className="ni ni-palette"></i>Foundation</a></li>
         <li className="nav-item"><a className="nav-link" href="#/documentation/alerts"><i className="ni ni-ui-04"></i>Components</a></li>
      </ul>


      //////

      
		
		//this.addClass('disabled');

		this.btn.setAttribute("disabled", "disabled");
		//this.btn.removeAttribute("disabled");
///////




{/*   




import ReactDOM from 'react-dom';
import React, { Component } from "react";
import { Button} from "react-bootstrap";
import "../styles.css";
import Typography from '@material-ui/core/Typography';
import Grid from '@material-ui/core/Grid';
import Paper from '@material-ui/core/Paper';
import { CardMedia } from '@material-ui/core';
import PasswordField from 'material-ui-password-field';
import { withStyles } from '@material-ui/core/styles';
import ResetPasswordPage from '../templates/ResetPassword.html';

import Const from '../constants';

var ResetPasswordHtml = { __html: ResetPasswordPage };

const STYLES = theme =>
	({
		root: {
			height: '100vh',
			margin: theme.spacing(8,
			padding: theme.spacing(8
		},
		image: {
			backgroundImage: 'url(/img/newlogo.png)',
			backgroundRepeat: 'no-repeat',
			backgroundSize: 'cover',
			width: '40vh',
			height: '7vh',
		},
		paper: {
			margin: theme.spacing(8, 4),
			display: 'flex',
			flexDirection: 'column',
			alignItems: 'center',
		},
		avatar: {
			margin: theme.spacing(1)
		},
		form: {
			width: '100%',
			marginTop: theme.spacing(1),
		},
		submit: {
			marginTop: '2em',
			width: '100%'
		},
		margin: {
			marginTop: '2em'
		}
	});


class ResetPassword extends Component {
	constructor(props) {
		super(props);

		this.state = {
			token: this.props.token,
			password: "",
			validPwd: null
		};

	}

	handleSubmit = event => {
			event.preventDefault();
			var md5 = require('md5');

			return fetch(Const.URL.SERVER_BASE_URL + Const.URL.RESETPASSWORD, {
					method: 'post',
					credentials: "same-origin",
					headers: {
						'token': this.state.token,
						'Accept': 'application/json',
						'Content-Type': 'application/json'
					},
					body: JSON.stringify({
						password: md5(this.state.password)
					}),
				}).then(response => response.json())
				.then(resData => {

						if (resData.message === Const.MESSAGES.SUCCESS) {
							return (ReactDOM.render( <
								div dangerouslySetInnerHTML = {
									ResetPasswordHtml
								}
								/>, document.getElementById('root')));}
								else {
									console.log(resData.message);
								}

							})
						}

						handleChange = event => {
							this.setState({
								[event.target.id]: event.target.value
							});
						}

						validatePassword = (e) => {
							this.setState({
								validPwd: null
							})
							if (e.target.value.length > 0) {
								if (new RegExp(Const.REGEX.REG_VALID_PWD).test(e.target.value)) {
									this.setState({
										validPwd: true
									});
									this.setState({
										Error: ''
									})
								} else {
									this.setState({
										validPwd: false
									});
									this.setState({
										Error: Const.MESSAGES.VALID_PASSWORD
									})
								}
							}

						}
render() {
const { classes } = this.props;
let pwdicon = null;
return (

<div className="Login">
   <Grid container  component={Paper} square >
      <Grid container direction="column" >
         <div className={classes.paper } className={classes.root}>
            <form className={classes.form} noValidate onSubmit={this.handleSubmit}>
               <CardMedia   className={classes.image} />
               <Typography className={classes.margin}  component="h1"  > <strong>Reset Password </strong> </Typography>
               <Typography  className={classes.margin}  component="h3"  > Please Type New Password. </Typography>
               <PasswordField  className={classes.margin}  fullWidth required name="password" label="Password" type="password" id="password" autoComplete="current-password" value={this.state.password} onChange={this.handleChange} onBlur={this.validatePassword} InputProps={{ endAdornment: pwdicon }}/>
               <Button style={{marginTop:'2em'}} className={classes.margin} type="submit" fullWidth variant="contained"> Reset Password </Button>
            </form>
         </div>
      </Grid>
   </Grid>
</div>


);
}
}


export default withStyles(STYLES)(ResetPassword); */}

//////

componentDidMount() {
    console.log('componentDidMount')
}
	justify="center" direction="row"
    

   ////////

   <List component="nav" aria-label="main mailbox folders">
        <ListItem button>
          <ListItemIcon>
            <InboxIcon />
          </ListItemIcon>
          <ListItemText primary="Inbox" />
        </ListItem>
        <ListItem button>
          <ListItemIcon>
            <DraftsIcon />
          </ListItemIcon>
          <ListItemText primary="Drafts" />
        </ListItem>
      </List>
      <Divider />
      <List component="nav" aria-label="secondary mailbox folders">
        <ListItem button>
          <ListItemText primary="Trash" />
        </ListItem>
        <ListItemLink href="#simple-list">
          <ListItemText primary="Spam" />
        </ListItemLink>
      </List>

      //////

      
<Modal show='true'>
          <p>Modal</p>
          <p>Data</p>
        </Modal>
        <button type="button" onClick={this.showModal}>
          open
        </button>

/////////


$qb = $this->dm->createQueryBuilder();
$qb->delete('Services', 's');
$qb->where('s.project = :project');
$qb->setParameter('project', $project);


$this->createQueryBuilder('product')
    ->where('product.id in (:ids)')
    ->setParameter('ids', $ids)
    ->delete()
    ->getQuery()
    ->execute();



	userRegistered(){
		ReactDOM.render( <div dangerouslySetInnerHTML = {
						BeforeVerficationHtml
						}
						/>, document.getElementById('root')
						)

	this.sendVerifyMail();

	}
	abc= event => {

		console.log('abc')
	}


//////

                    db.collection_name.update({ _id: 1234 }, { $unset : { description : 1} })

                    db.example.update({}, {$unset: {words:1}}, false, true);
//////


                $this->dm->createQueryBuilder(ActivationRequest::class)
                ->remove()
                ->field('token')
                ->equals($activation_Request->getToken())
                ->getQuery()
                ->execute();


                db.User.remove({})
                db.Accounts.remove({})
                db.ActivationRequest.remove({})
                db.ApiKey.remove({})
                db.ContactDetails.remove({})



                    $this->dm->createQueryBuilder(ActivationRequest::class)
                            ->updateMany()
                            ->field('token')->pull($activation_Request->getToken())
                            ->getQuery()
                            ->execute();



                // $this->dm->createQueryBuilder(ActivationRequest::class)
                //     ->updateOne()
                //     ->field('token')->popFirst()
                //     ->field('token')->equals($activation_Request->getToken())
                //     ->getQuery()
                //     ->execute();

                ////

/** @Field(type="string") */
private $filename;

/** @NotSaved(type="int") */
private $length;

/** @NotSaved(type="string") */
private $md5;

/** @NotSaved(type="date") */
private $uploadDate;

/** @ReferenceOne(targetDocument="Documents\User") */
private $uploadedBy;


/** @Date */

//////


fetch('https://jsonplaceholder.typicode.com/todos/1')
		.then(response => response.json())
		.then(json => {

			this.setState({ tableData: [{"title":json.title}]  });
		})


        	const data = (this.state.tableData);
		console.log(this.state.tableData)
		// [{
		//   name: 'Tanner Linsley',
		//   age: 26,
		//   friend: {
		// 	name: 'Jason Maurer',
		// 	age: 23,
		//   }
		// }]
	   
		const columns = [{
		  Header: 'title',
		  accessor: 'title' // String-based value accessors!
		}]
	   
		return <ReactTable
		  data={data}
		  columns={[
			{
				columns: [
					{
						Header: 'title',
						accessor: 'title',
					}
				],
			}
		]}
		/>
/////////


{/* 
<ReactTable  aria-label="simple table" 
		  data={data}
		  columns={[
			{
				columns: [
					{
						Header: 'title',
						accessor: 'title',
					}
				],
			}
		]}
		/> */}

///////////        


			// Object.values(json).map((obj) => {
			// 	console.log(obj)
				
			// 	// completed: true
			// 	// id: 195
			// 	// title: "rerum ex veniam mollitia voluptatibus pariatur"
			// 	// userId: 10

			// })
/** @ODM\Field(strategy="INCREMENT", type="int") */


///////

        try 
        {

            //get token --> email from contact details-->listid from users --> list name from contactlist

            $user=$this->dm->createQueryBuilder(User::class)
                        ->field('user_token')
                        ->equals($user_token)
                        ->getQuery()
                        ->getSingleResult();

                    $arr=(array)($user->getContactDetails()[0]);            
                    $counter = 0;
                    $email = 0;
                    
                    foreach ($arr as  $value)
                    { if($counter==2) { $email= "$value"; }  ++$counter; }

            $users = $this->dm->createQueryBuilder(Users::class)
                                    ->field('email')->equals($email)
                                    ->getQuery()
                                    ->getSingleResult();

            $list_id=$users->getList_id();

            $contact_list = $this->dm->createQueryBuilder(Contact_List::class)
                                    ->field('list_id')->equals($list_id)
                                    ->getQuery()
                                    ->getSingleResult();

            $list_names=$contact_list->getName();

            return response()->json(
                                    ['list_names' => $list_names],
                                     200);

///////

 this.setState({ tableData: [{"title":json.title}]  });

var json1 = {"active":{"label":"Active","value":"12"},"automatic":{"label":"Automatic","value":"8"},"waiting":{"label":"Waiting","value":"1"},"manual":{"label":"Manual","value":"3"}};
//fetch('https://jsonplaceholder.typicode.com/todos')			

//console.log(this.state.tableData);




          {data.map(row => (
            <TableRow key={row.list_names}>
              <TableCell component="th" scope="row">
                {row.list_names}
              </TableCell>
              <TableCell align="right">{row.list_names}</TableCell>
              <TableCell align="right">{row.list_names}</TableCell>
			  <TableCell align="right">':'</TableCell>
            </TableRow>
          ))}

///

 //array_push($arr,['0'=>3]);

// $this->dm->createQueryBuilder(Users::class)->update()>field('list_id')->push(array('key1' => 'key1')) ->field('email')->equals($email)->getQuery()->execute(); 
            

//->addToSet(array('0'=>3))
//$user_listAdded=$users->addList_id(array('0'=>3));

//->field('list_id')->push('some text')
//array_push($contact_List->getList_id(),$arr_list);

/////////


$user_token = 'e7fda39d9f';

        try 
        {
            //get token --> email from contact details-->listid from users --> list name from contactlist

            $user=$this->dm->createQueryBuilder(User::class)
                        ->field('user_token')
                        ->equals($user_token)
                        ->getQuery()
                        ->getSingleResult();

                    $arr=(array)($user->getContactDetails()[0]);  
                    
                    $counter = 0;
                    $email = 0;
                    
                    foreach ($arr as  $value)
                    { if($counter==5) { $email= "$value"; }  ++$counter; }
                    
            $this->clientDB_Connection("e_056365a097");

            $users = $this->dm->createQueryBuilder(Users::class)
                                   ->field('email')
                                    ->equals('mail.nrj@gmail.com') 
                                    ->getQuery()
                                    ->getSingleResult();

            $list_id=$users->getList_id();


            $list_names=array();
           

            foreach ($list_id[0] as $i=>$v)
            {
            
               $contact_list = $this->dm->createQueryBuilder(Contact_List::class)
                                    ->field('list_id')->equals($v)
                                    ->getQuery()
                                    ->getSingleResult();

                  array_push($list_names,array('name'=>$contact_list->getName(),'name1'=>$contact_list->getName()));
                  array_push($list_names,array('name'=>$contact_list->getName(),'name1'=>$contact_list->getName()));
                  
            }
            
             return response()->json(['arr_list_names' => $list_names],200);

        } 
        catch (Exception $e)
        {
                return response()->json(['exception' => $e], 200);
        }

///////


            //create new user here 

            // password : "2ac9cb7dc02b3c0083eb70898e549b63" companyaddress : "c-246 , aviktechnosoft" companywebsite : "www.aviktechnosoft.com" language : "en" dbname : "e_056365a097" db_host_primary : "xxx" name : "internal" profile_completed : false contact_Details : api_key : 
            
                // getSource() 
                // getEmail(
                // getPassword(
                // getActivated()
                // getCreation_date()
                // getLanguage()
                // getTimezone()
                // getActivationRequest()
        
///////


            //$user->setDb_host_primary($accounts->get('key'));
            //$user->setDb_host_secondary($accounts->get('db_host_secondary')); 
            //$user->setUserName($accounts->get('username'));
            // $user->setCompanyAddress($accounts->get('company_address'));
            //$user->setCompanyWebsite($accounts->get('company_website')); 
            // $user->setToken($accounts->get('email'),$request->get('timestamp'));

            // token: md5(token),
            // company_address: 'c-246 , aviktechnosoft',
            // company_website: 'www.aviktechnosoft.com',
            // key:'xxx',
            // name:'internal',


/////////

       // $activation_request=new ActivationRequest();
        // if($request->get('token'))
        // {
             
        // }

               
        // if($request->get('expiration_date'))
        // {
           
        // }

    // $token;
    // $db_created;
    // $expiration_date;

    //     $activation_request->setDb_created(false); 
    //     $activation_request->setToken($request->get('token'));
    //     $activation_request->setExpiration_date($request->get('expiration_date'));


        // $user->addContactDetails(array("ContactDetails"=>$contact_details));
        // $user->addApiKeys(array("ApiKey"=>$api_key));  

/////////


 public function company_Account(Request $request)
    {
        if (!$request->isMethod('post'))
        {
            return;
        }
        //$contact_details = new ContactDetails();
        $api_key = new ApiKey();            
        $accounts = new Accounts();        
        if($request->get('email'))
        {
            $contact_detail_exist = $this->dm->createQueryBuilder(ContactDetails::class)
                                    ->field('email')->equals($request->get('email'))
                                    ->getQuery()
                                    ->getSingleResult();
            if($contact_detail_exist)
            {
                return  response()->json(['message' =>Config::get('constants.messages.USER_EXIST')], 200); 
            }
            else
            {
                
                $accounts->setEmail($request->get('email'));                
            }         
        }
        if($request->get('company_name'))
        {
            //$contact_details->setCompanyName($request->get('company_name')); 
        }
        
            $accounts->setPassword($request->get('password'));
       
        if($request->get('key') && $request->get('name'))
        {
           // $api_key->addv3(array("v3"=>array('key'=>$request->get('key'),'name'=>$request->get('name'))));
        }

        // $user->addContactDetails(array("ContactDetails"=>$contact_details));
        if($request->get('language'))
        {
            
            $accounts->setLanguage($request->get('language'));
            $accounts->setTimezone(timezone_name_from_abbr("", intval($request->get('language'))*60, 0));
        }
                   
        if($request->get('source'))
        {
            $accounts->setSource($request->get('source')); 
        }
        if($request->get('activated'))
        {
            $accounts->setActivated($request->get('activated')); 
        }
        if($request->get('creation_date'))
        {
            $accounts->setCreation_date($request->get('creation_date')); 
        }

 
        $accounts->setToken($accounts->getEmail());

        $accounts->addActivationRequest(array("activation_request"=>array('token'=>$accounts->getToken(),
        'db_created'=>false,'expiration_date'=>$request->get('expiration_date'))));

        try 
        {
            //$this->dm->persist($user);
            $this->dm->persist($accounts);
            $this->dm->flush();
            return  response()->json(['message' =>Config::get('constants.messages.SUCCESS'),'token' =>$accounts->getToken() ], 200);
        } 
        catch (Exception $e) 
        {
            return  response()->json(['message' =>$e], 200);  
        }    
    } 

 //////

 
                // $contact_details = $this->dm->createQueryBuilder(ContactDetails::class)
                //                             ->field('email')
                //                             ->equals($accounts->getEmail())
                //                             ->getQuery()
                //                             ->getSingleResult();  
                                      
                // $user = $this->dm->createQueryBuilder(User::class)
                //     ->field('contact_Details')
                //     ->references($contact_details)
                //     ->getQuery()
                //     ->getSingleResult();
   
  ////////



  public function test()    { 
               $user_token = 'e7fda39d9f';        try         {                        $user=$this->dm->createQueryBuilder(User::class)                        ->field('user_token')                        ->equals($user_token)                        ->getQuery()                        ->getSingleResult();            $arr=(array)($user->getContactDetails()[0]);                                $counter = 0;            $email = 0;                                foreach ($arr as  $value)            {                 if($counter==5) { $email= "$value"; }  ++$counter;             }                                $this->clientDbConnection("e_056365a097");            $users = $this->dm->createQueryBuilder(Users::class)                                   ->field('email')                                    ->equals('mail.nrj@gmail.com')                                     ->getQuery()                                    ->getSingleResult();            $list_id=$users->getList_id();            $list_names=array();            foreach ($list_id[0] as $i=>$v)            {                           $contact_list = $this->dm->createQueryBuilder(Contact_List::class)                                    ->field('list_id')->equals($v)                                    ->getQuery()                                    ->getSingleResult();                array_push($list_names,array('name'=>$contact_list->getName(),'name1'=>$contact_list->getName()));                array_push($list_names,array('name'=>$contact_list->getName(),'name1'=>$contact_list->getName()));                              }                        return response()->json(['arr_list_names' => $list_names],200);        }         catch (Exception $e)        {            return response()->json(['exception' => $e], 200);        }    }

 ///////

     
        $qb = $this->dm->createQueryBuilder()
        ->field('embed.v1')->equals('v1')
        ->select('embed.v2')
        ->limit(2);
/////


        $qb = $this->dm->getRepository(get_class($d1))->createQueryBuilder()
                ->field('embed.v1')->equals('v1')
                ->select('embed.v2')
                ->limit(2);
        $results = $qb->find()->getQuery()->execute();
        foreach ($results as $r) {
            $this->assertNull($r->embed->v1);
            $this->assertNotNull($r->embed->v2);
            $this->assertNull($r->embed->v3);
        }

////////

  $qb = $this->dm->createQueryBuilder(User::class)
    ->select('password');
$query = $qb->getQuery();
$users = $query->execute();

foreach ($users as $r) {

    //print_r($r);

    echo $r->getPassword();
    echo '<br/>';
}

/////////

setActiveTab(e) {
      console.log(e.target);
  }
////////



            // $contact_detail_exist = $this->dm->createQueryBuilder(ContactDetails::class)
            //                         ->field('email')->equals($request->get('email'))
            //                         ->getQuery()
            //                         ->getSingleResult();
            // if($contact_detail_exist)
            // {
            //     return  response()->json(['message' =>Config::get('constants.messages.USER_EXIST')], 200); 
            // }
            // else
            // {
                
            //     //$contact_details->setEmail($request->get('email'));
                               
            // } 

///////////

  // if($request->get('company_name'))
        // {
        //    // $contact_details->setCompanyName($request->get('company_name')); 
        // }
        
 //////

 
        //$user = new User();
        //$contact_details = new ContactDetails();
        //$api_key = new ApiKey();   
        // if($request->get('key') && $request->get('name'))
        // {
        //    // $api_key->addv3(array("v3"=>array('key'=>$request->get('key'),'name'=>$request->get('name'))));
        // }

        //$user->addContactDetails(array("ContactDetails"=>$contact_details));
        // $user->addContactDetails(array("ContactDetails"=>$contact_details));
        // $user->addApiKeys(array("ApiKey"=>$api_key)); 
         //$this->dm->persist($user);    

         //////


         
      <Table aria-label="simple table" >
        <TableHead>
          <TableRow>
            <TableCell>Campaigns</TableCell>
            <TableCell >Recipents</TableCell>
            <TableCell >Openers</TableCell>
            <TableCell >Clickers</TableCell>
			<TableCell >Unsub</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>

		{
			
			data.map(( listValue) => {
          return (
            <TableRow
                      hover
                      onClick={event => this.handlerowClick(event, listValue.name)}
                      role="checkbox"
                    >
                      <TableCell padding="checkbox">
                        <Checkbox
                          checked={false}
                        /></TableCell>
              <TableCell>{listValue.name}</TableCell>
            </TableRow>

          );
		})}
        </TableBody>
      </Table>

       
<TextField margin="normal"  required fullWidth id="email" label="Search by email Address" name="email_search" autoComplete="email_search"  type="text" value={this.state.email_search} />


//////



// import React from 'react';
// import Button from '@material-ui/core/Button';
// import Checkbox from '@material-ui/core/Checkbox';
// import TextField from '@material-ui/core/TextField';
// import Paper from '@material-ui/core/Paper';
// import Grid from '@material-ui/core/Grid';
// import  { Component } from "react";
// import "../styles.css";
// import { withStyles } from '@material-ui/core/styles';
// import Const from '../constants';
// import Table from '@material-ui/core/Table';
// import TableBody from '@material-ui/core/TableBody';
// import TableCell from '@material-ui/core/TableCell';
// import TableHead from '@material-ui/core/TableHead';
// import TableRow from '@material-ui/core/TableRow';
// import List from '@material-ui/core/List';
// import ListItem from '@material-ui/core/ListItem';
// import ListItemText from '@material-ui/core/ListItemText';
// import  Mdl_ContactList from "../Modals/Mdl_ContactList.js";
// import MaterialTable from 'material-table';
// import InputLabel from '@material-ui/core/InputLabel';
// import MenuItem from '@material-ui/core/MenuItem';
// import FormHelperText from '@material-ui/core/FormHelperText';
// import FormControl from '@material-ui/core/FormControl';
// import Select from '@material-ui/core/Select';
// import {Helmet} from "react-helmet";

// const styles = theme =>
// 	({
// 		root: {
// 			height: '100vh',
// 			margin: theme.spacing(2,
// 			padding: theme.spacing(2
// 		},
// 		image: {
// 			backgroundImage: 'url(/img/newlogo.png)',
// 			backgroundRepeat: 'no-repeat',
// 			backgroundSize: 'cover',
// 			backgroundPosition: 'center',
// 			width: '45vh',
// 			height: '18vh',
// 		},
// 		paper: {
// 			margin: theme.spacing(8, 4),
// 			display: 'flex',
// 			flexDirection: 'column',
// 			alignItems: 'center',
// 		},
// 		avatar: {
// 			margin: theme.spacing(1)
// 		},
// 		form: {
// 			width: '100%',
// 			marginTop: theme.spacing(1),
// 		},
// 		submit: {
// 			margin: theme.spacing(1, 0, 1),
// 			width: '50%'
// 		},
// 	});

// class Contacts extends Component {
// 	constructor(props) {
// 		super(props);

// 		this.state = {
// 			user_token: sessionStorage.getItem('token'),
// 			disabled:true,
// 			createList:false,
// 			show: false ,
// 			listName:'',
// 			rows:[],
//       tableData:[],
//           columns: [
//       { title: 'Email', field: 'email' },
//       { title: 'FIRSTNAMe', field: 'surname' },
//       { title: 'Birth Year', field: 'birthYear', type: 'numeric' },
//       {
//         title: 'Birth Place',
//         field: 'birthCity',
//         lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },
//       },
//     ],
//     data: [
//       { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },
//       {
//         name: 'Zerya Betül',
//         surname: 'Baran',
//         birthYear: 2017,
//         birthCity: 34,
//       },
//     ],
//     age: '',
//     name: 'hai',
// 		};
// 		this.loggedIn = sessionStorage.getItem('email') === 'true';
// 		this.get_ContactList();
// 	}

// 	showModal = () => {
// 		this.setState({ show: true });
// 	  };
	
// 	hideModal = () => {
// 		this.setState({ show: false });
// 		this.setState({
// 						createList: false
// 					 });
// 	  };

// 	get_ContactList =() => {

// 		fetch(Const.URL.SERVER_BASE_URL + Const.URL.GET_CONTACTLIST, {
// 			method: 'post',
// 			credentials: "same-origin",
// 			headers: {
// 				'user_token': this.state.user_token,
// 				'Accept': 'application/json',
// 				'Content-Type': 'application/json'
// 			},
// 		})
// 		.then(response => response.json())
// 		.then(json => {

// 			var arr = [];
// 			Object.keys(json).forEach(function(key) {
// 				arr.push(json[key]); //
// 				});
// 			this.setState({ tableData: arr[0]});

// 		})

// 	}

// 	saveContactList = event => {

// 		event.preventDefault();
		
// 		const CONTACT_LIST = {listName: this.state.listName};
// 		console.log(CONTACT_LIST);
// 		return fetch(Const.URL.SERVER_BASE_URL + Const.URL.ADD_CONTACTLIST, {
// 				method: 'post',
// 				credentials: "same-origin",
// 				headers: {
// 					'user_token': this.state.user_token,
// 					'Accept': 'application/json',
// 					'Content-Type': 'application/json'
// 				},
// 				body: JSON.stringify(CONTACT_LIST),
// 			}).then(response => response.json())
// 			.then(resData => {
// 				console.log(resData)
// 				if (resData.message === Const.MESSAGES.SUCCESS) {
// 					this.get_ContactList();
// 				}

// 				this.hideModal();
// 			})
// 	}

// 	handleChange = event => {
// 		this.setState({
// 			[event.target.id]: event.target.value
// 		});
// 	}

// 	validateEmail = (e) => {
// 		if (new RegExp(Const.REGEX.REG_VALID_EMAIL).test(e.target.value)) {
// 			this.setState({
// 				validEmail: false
// 			});
// 		} else {
// 			this.setState({
// 				validEmail: true
// 			});
// 		}
// 	}

// 	validateForm() {

// 		return ( this.state.disabled);
// 	}

// 	 createData(type, name,count) {
// 		return { type, name,count};
// 	  }

	  
// 	Create = (e) => {

// 		if(this.state.createList)
// 		{
// 			this.setState({
// 				createList: false
// 			});
			
// 		}
// 		else
// 		{
// 			this.setState({
// 				createList: true
// 			});
			
			
// 		}
	
// 	  }

// 	  handlerowClick = (e) => {

// 	  }
	  
 
// render() {

// const { classes } = this.props;

// //const data = this.state.tableData;
// //console.log(this.state.tableData)
// let data1= this.state.tableData;

// // console.log(data['email'])

// // if(data1)
// // {
// // 	console.log(1)
// // }
// // else
// // {
// // 	console.log(2)
// // }

//     const columns= [
//       { title: 'Email', field: 'email' },
//       { title: 'FirstName', field: 'surname' },
//       { title: 'Birth Year', field: 'birthYear', type: 'numeric' },
//       {
//         title: 'Birth Place',
//         field: 'birthCity',
//         lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },
//       },
//     ];

//      const data= [
//       { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },
//       {
//         name: 'Zerya Betül',
//         surname: 'Baran',
//         birthYear: 2017,
//         birthCity: 34,
//       },
//     ];
 



//     const values = [
//      {
//       age: '',
//       name: 'hai',
     
//      }];

// const handleChange = (e) => {
//   };


// return (
// <div className="Profile"  style={{fontFamily: 'Montserrat, sans-serif'}}  >
// <Helmet>
// <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons"/>
// 	</Helmet>

// <Grid container  component={Paper} square >
// <Grid item xs={12}  container  className={classes.root}>

// <Grid item xs={6} style={{ height:'1vh'}}>

// <h1>Contacts</h1>

// <Select
//           value={values.age}
//           onChange={handleChange}
//           inputProps={{
//             name: 'age',
//             id: 'filled-age-simple',
//           }}
//         >
//           <MenuItem value="">
//             <em>None</em>
//           </MenuItem>
//           <MenuItem value={10}>Ten</MenuItem>
//           <MenuItem value={20}>Twenty</MenuItem>
//           <MenuItem value={30}>Thirty</MenuItem>
//         </Select>
    
// </Grid>
//    <Grid item xs={6} container  alignItems="flex-start" justify="flex-end" direction="row"  style={{ height:'1vh'}}>
    
// <span  justify="right" direction="column"
// alignItems="right">

// <Button  margin="normal" type="submit"  variant="contained"  onClick={this.showModal} > Add Contacts </Button></span>

//       <List component="nav" aria-label="main mailbox folders" style={{ position: 'absolute',zIndex: '1',right: '9em',top: '8em' ,display:this.state.createList?'block':'none' }}>
//         <ListItem button>
//           <ListItemText primary="New List" onClick={this.showModal}/>

//         </ListItem>
//         <ListItem button>
//           <ListItemText primary="New Segment" />
//         </ListItem>
//       </List>

// </Grid>

//  <MaterialTable
//    style={{ width: '100%',marginTop: '8em' }}
//       columns={columns}
//       data={data}
//       title=" "
      
//       editable={{
//         onRowAdd: newData =>
//           new Promise(resolve => {
//             setTimeout(() => {
//               // resolve();
//               // const data = [...data];
//               // data.push(newData);
//               // setState({ ... data });
//             }, 600);
//           }),
//         onRowUpdate: (newData, oldData) =>
//           new Promise(resolve => {
//             setTimeout(() => {
//               // resolve();
//               // const data = [...data];
//               // data[data.indexOf(oldData)] = newData;
//               // setState({ ... data });
//             }, 600);
//           }),
//         onRowDelete: oldData =>
//           new Promise(resolve => {
//             setTimeout(() => {
//               // resolve();
//               // const data = [...data];
//               // data.splice(data.indexOf(oldData), 1);
//               // setState({ ... data });
//             }, 600);
//           }),
//       }}

//     />


//    </Grid>
// </Grid>

// <Mdl_ContactList show={this.state.show} handleClose={this.hideModal}>
// <p>Create a New Contact</p>

// <TextField margin="normal"  required fullWidth id="email" label="Email" name="Email"   type="text" value={this.state.Email} onChange={this.handleChange} />

// <TextField margin="normal"  required fullWidth id="FirstName" label="First Name" name="FirstName"   type="text" value={this.state.FirstName} onChange={this.handleChange} />


// <TextField margin="normal"  required fullWidth id="LastName" label="Last Name" name="LastName" autoComplete="Last  Name"  type="text" value={this.state.LastName} onChange={this.handleChange} />

// <TextField margin="normal"  required fullWidth id="phoneNumber" label="phoneNumber" name="phoneNumber" autoComplete="phoneNumber"  type="text" value={this.state.phoneNumber} onChange={this.handleChange} />
// <span  justify="right" direction="column"
// alignItems="right">
// <Button  margin="normal" type="submit"  onClick={this.save_ContactList}  variant="contained" > Save List </Button><Button  margin="normal" type="submit" variant="contained"  onClick={this.hideModal} > Cancel </Button> </span>

// </Mdl_ContactList>
		
// </div>
// );
// }
// }


// export default withStyles(styles)(Contacts);

///////


columns: [
      { title: 'Email', field: 'email' },
      { title: 'FirstName', field: 'firstName' },
      { title: 'Last Name', field: 'lastName', },
      { title: 'Phone No', field: 'phoneno' },
      {
        title: 'Birth Place',
        field: 'birthCity',
        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },
      },
    ],
    data: [
      { email:'varun@gmail.com', firstName: 'Varun', lastName: 'Tanwar', phoneno: '09876543212',birthCity: 63 }
    ],

    
    //setState({data: Object.assign({}, ...data.from(data, ([k, v]) => ({[k]: 'v'}) )) } )
    //setState({[data.list_id]: 4})

    //Object.fromEntries = arr => Object.assign({}, ...data.from(data, ([k, v]) => ({[k]: 'v'}) ));////////



    /////////


    useEffect(() => {
    // Your code here
  }, []);
For componentDidUpdate

useEffect(() => {
    // Your code here
  }, [yourDependency]);
For componentWillUnmount

useEffect(() => {
    // componentWillUnmount
    return () => {
       // Your code here
    }
  }, [yourDependency]);



///////




    // setState({
    //   ...state,
    //   listName: "test"
    // })


    // setState(
    //   prevState => ({
    //     ['email']: !prevState['email']
    //   }),
    //   () => console.log(`this.state`, state)
    // );


    // setState(prevState => {
    //   // Object.assign would also work
    //   return {...prevState, ...updatedValues};
    // });

    
    //console.log(state.email);

    


    import React from 'react';
import MaterialTable from 'material-table';
import {Helmet} from "react-helmet";
import Const from '../constants';
import Select from '@material-ui/core/Button';
import Button from '@material-ui/core/Button';
import TextField from '@material-ui/core/TextField';
import Paper from '@material-ui/core/Paper';
import Grid from '@material-ui/core/Grid';
import  { Component } from "react";
import "../styles.css";
import { withStyles } from '@material-ui/core/styles';


const styles = theme =>
	({
		root: {
			height: '100vh',
			margin: theme.spacing(2,
			padding: theme.spacing(2
		},
		image: {
			backgroundImage: 'url(/img/newlogo.png)',
			backgroundRepeat: 'no-repeat',
			backgroundSize: 'cover',
			backgroundPosition: 'center',
			width: '45vh',
			height: '18vh',
		},
		paper: {
			margin: theme.spacing(8, 4),
			display: 'flex',
			flexDirection: 'column',
			alignItems: 'center',
		},
		avatar: {
			margin: theme.spacing(1)
		},
		form: {
			width: '100%',
			marginTop: theme.spacing(1),
		},
		submit: {
			margin: theme.spacing(1, 0, 1),
			width: '50%'
		},
	});

class Contacts extends Component {
	constructor(props) {
		super(props);

		this.state = {
			user_token: sessionStorage.getItem('token'),
			disabled:true,
			createList:false,
			show: false ,
			listName:'',
			rows:[],
      tableData:[],
          columns: [
      { title: 'Email', field: 'email' },
      { title: 'FIRSTNAMe', field: 'surname' },
      { title: 'Birth Year', field: 'birthYear', type: 'numeric' },
      {
        title: 'Birth Place',
        field: 'birthCity',
        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },
      },
    ],
    data: [
      { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },
      {
        name: 'Zerya Betül',
        surname: 'Baran',
        birthYear: 2017,
        birthCity: 34,
      },
    ],
    age: '',
    name: 'hai',
		};
		this.loggedIn = sessionStorage.getItem('email') === 'true';
		//this.get_ContactList();
  }
  

  componentDidMount() {
    console.log('componentDidMount')
    this.getContacts()
    console.log(this.state.tableData);
}


	showModal = () => {
		this.setState({ show: true });
	  };
	
	hideModal = () => {
		this.setState({ show: false });
		this.setState({
						createList: false
					 });
	  };


    getContacts= (e) => {

    let abc=null;
    return fetch(Const.URL.SERVER_BASE_URL + Const.URL.GET_CONTACTS, {
      method: 'post',
      async:false,
      credentials: "same-origin",
      headers: {
        'user_token': this.state.user_token,
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
    }).then(response => response.json())
    .then((result) =>
    

    this.setState({ tableData: [{"title":'abc'}]  })

    )

    }


	get_ContactList =() => {

		fetch(Const.URL.SERVER_BASE_URL + Const.URL.GET_CONTACTLIST, {
			method: 'post',
			credentials: "same-origin",
			headers: {
				'user_token': this.state.user_token,
				'Accept': 'application/json',
				'Content-Type': 'application/json'
			},
		})
		.then(response => response.json())
		.then(json => {

			var arr = [];
			Object.keys(json).forEach(function(key) {
				arr.push(json[key]); //
				});
			this.setState({ tableData: arr[0]});

		})

	}

	saveContactList = event => {

		event.preventDefault();
		
		const CONTACT_LIST = {listName: this.state.listName};
		console.log(CONTACT_LIST);
		return fetch(Const.URL.SERVER_BASE_URL + Const.URL.ADD_CONTACTLIST, {
				method: 'post',
				credentials: "same-origin",
				headers: {
					'user_token': this.state.user_token,
					'Accept': 'application/json',
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(CONTACT_LIST),
			}).then(response => response.json())
			.then(resData => {
				console.log(resData)
				if (resData.message === Const.MESSAGES.SUCCESS) {
					this.get_ContactList();
				}

				this.hideModal();
			})
	}

	handleChange = event => {
		this.setState({
			[event.target.id]: event.target.value
		});
	}

	validateEmail = (e) => {
		if (new RegExp(Const.REGEX.REG_VALID_EMAIL).test(e.target.value)) {
			this.setState({
				validEmail: false
			});
		} else {
			this.setState({
				validEmail: true
			});
		}
	}

	validateForm() {

		return ( this.state.disabled);
	}

	 createData(type, name,count) {
		return { type, name,count};
	  }

	  
	Create = (e) => {

		if(this.state.createList)
		{
			this.setState({
				createList: false
			});
			
		}
		else
		{
			this.setState({
				createList: true
			});
			
			
		}
	
	  }

	  handlerowClick = (e) => {

	  }
	  
 
render() {

const { classes } = this.props;

//const data = this.state.tableData;
//console.log(this.state.tableData)
let data1= this.state.tableData;

// console.log(data['email'])

// if(data1)
// {
// 	console.log(1)
// }
// else
// {
// 	console.log(2)
// }

    const columns= [
      { title: 'Email', field: 'email' },
      { title: 'FirstName', field: 'surname' },
      { title: 'Birth Year', field: 'birthYear', type: 'numeric' },
      {
        title: 'Birth Place',
        field: 'birthCity',
        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },
      },
    ];

     const data= [
      { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },
      {
        name: 'Zerya Betül',
        surname: 'Baran',
        birthYear: 2017,
        birthCity: 34,
      },
    ];
 



    const values = [
     {
      age: '',
      name: 'hai',
     
     }];

const handleChange = (e) => {
  };


return (
<div className="Profile"  style={{fontFamily: 'Montserrat, sans-serif'}}  >
<Helmet>
<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons"/>
	</Helmet>

<Grid container  component={Paper} square >
<Grid item xs={12}  container  className={classes.root}>

<Grid item xs={6} style={{ height:'1vh'}}>

<h1>Contacts</h1>


    
</Grid>
   <Grid item xs={6} container  alignItems="flex-start" justify="flex-end" direction="row"  style={{ height:'1vh'}}>
    
<span  justify="right" direction="column"
alignItems="right">

<Button  margin="normal" type="submit"  variant="contained"  onClick={this.showModal} > Add Contacts </Button></span>

    
</Grid>

 <MaterialTable
   style={{ width: '100%',marginTop: '8em' }}
      columns={columns}
      data={data}
      title=" "
      
      editable={{
        onRowAdd: newData =>
          new Promise(resolve => {
            setTimeout(() => {
               resolve();
               const data = [...data];
               data.push(newData);
              this.setState({ ... data });
            }, 600);
          }),
        onRowUpdate: (newData, oldData) =>
          new Promise(resolve => {
            setTimeout(() => {
              // resolve();
              // const data = [...data];
              // data[data.indexOf(oldData)] = newData;
              // setState({ ... data });
            }, 600);
          }),
        onRowDelete: oldData =>
          new Promise(resolve => {
            setTimeout(() => {
              // resolve();
              // const data = [...data];
              // data.splice(data.indexOf(oldData), 1);
              // setState({ ... data });
            }, 600);
          }),
      }}

    />


   </Grid>
</Grid>


</div>
);
}
}


export default withStyles(styles)(Contacts);





// export default function Contacts() {

//   const [state, setState] = React.useState({
//     columns: [
//       { title: 'Email', field: 'email' },
//       { title: 'FirstName', field: 'firstname' },
//       { title: 'Last Name', field: 'surname', },
//       { title: 'Phone No', field: 'phoneno' }
//     ],
//     data: [
//       { email:'varun@gmail.com', firstname: 'Varun', surname: 'Tanwar', phoneno: '09876543212'}
//     ],
//       user_token: sessionStorage.getItem('token'),
// 			disabled:true,
// 			createList:false,
// 			show: false ,
// 			listName:'anc',
// 			rows:[],

//   });

 
//   React.useEffect(() => {
    

//     const listName = '2';
//     setState({ ...state, listName });


//     console.log(state.listName);


//     const newstate = {...state};
//     newstate.listName= 'nmae';
//     setState(newstate);


// //     setTimeout(() => {setState({listName: 'nmae'}, function(){
// //       console.log(state.listName, '1'); 
// // });
// // }, 10)

//     setState({ listName: "test" }, () => 
//     console.log(state.listName));

//     console.log(state.listName);

//   }, []);

//   const  updateContacts= (e) => {

//   console.log(state.data);
//   }

//       const values = [
//      {
//       age: '',
//       name: 'hai',
     
//      }];

//      const handleChange = (event) => {
//   setState({
//     [event.target.id]: event.target.value
//   });
//   };


//   const  addContact= (data) => {

//     console.log(data);

// 		return fetch(Const.URL.SERVER_BASE_URL + Const.URL.ADD_CONTACTS, {
// 				method: 'post',
// 				credentials: "same-origin",
// 				headers: {
// 					'user_token': state.user_token,
// 					'Accept': 'application/json',
// 					'Content-Type': 'application/json'
// 				},
// 				body: JSON.stringify({'data':data,'list_id':'12'}),
// 			}).then(response => response.json())
// 			.then(resData => {
// 				console.log(resData)
// 				// if (resData.message === Const.MESSAGES.SUCCESS) {
// 				// 	this.get_ContactList();
// 				// }

// 				//this.hideModal();
// 			})
// 	}

//   const  getContacts= (e) => {

//     //console.log(state.data);
//     let abc=null;
//     return fetch(Const.URL.SERVER_BASE_URL + Const.URL.GET_CONTACTS, {
//       method: 'post',
//       credentials: "same-origin",
//       headers: {
//         'user_token': state.user_token,
//         'Accept': 'application/json',
//         'Content-Type': 'application/json'
//       },
//     }).then(response => response.json())
//     .then((result) =>
    
//     setState({
//       ...state,
//       listName: "test"
//     }))

    
//     }


//   const  deleteContact= (e) => {

//   console.log(state.data);
//   }

    
//   return (

// <div  style={{fontFamily: 'Montserrat, sans-serif'}}  >
// <Helmet>
// <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons"/>
// </Helmet>

//  <Select
//           value={values.age}
//           onChange={handleChange}
//           inputProps={{
//             name: 'age',
//             id: 'filled-age-simple',
//           }}
//         />


// <MaterialTable
// style={{ paddingTop:'6.5em',paddingLeft:'1em'}}
//       title="Contacts"
//       columns={state.columns}
//       data={state.data}
//       editable={{
//         onRowAdd: newData =>
//           new Promise(resolve => {
//             setTimeout(() => {
//               resolve();
//               const data = [...state.data];
//               data.push(newData);
//               setState({ ...state, data });
//               addContact(newData);
//             }, 600);
//           }),
//         onRowUpdate: (newData, oldData) =>
//           new Promise(resolve => {
//             setTimeout(() => {
//               resolve();
//               const data = [...state.data];
//               data[data.indexOf(oldData)] = newData;
//               setState({ ...state, data });
//               updateContacts();
//             }, 600);
//           }),
//         onRowDelete: oldData =>
//           new Promise(resolve => {
//             setTimeout(() => {
//               resolve();
//               const data = [...state.data];
//               data.splice(data.indexOf(oldData), 1);
//               setState({ ...state, data });
//               deleteContact();
//             }, 600);
//           }),
//       }}
//     />
//     </div>
    
//   );
// }



/////////////



import React from 'react';
import Button from '@material-ui/core/Button';
import TextField from '@material-ui/core/TextField';
import Paper from '@material-ui/core/Paper';
import Grid from '@material-ui/core/Grid';
import  { Component } from "react";
import "../styles.css";
import { withStyles } from '@material-ui/core/styles';
import Const from '../constants';
import Table from '@material-ui/core/Table';
import TableBody from '@material-ui/core/TableBody';
import TableCell from '@material-ui/core/TableCell';
import TableHead from '@material-ui/core/TableHead';
import TableRow from '@material-ui/core/TableRow';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemText from '@material-ui/core/ListItemText';
import 'react-table/react-table.css'

const styles = theme =>
	({
		root: {
			height: '100vh',
			margin: theme.spacing(2,
			padding: theme.spacing(2
		},
		image: {
			backgroundImage: 'url(/img/newlogo.png)',
			backgroundRepeat: 'no-repeat',
			backgroundSize: 'cover',
			backgroundPosition: 'center',
			width: '45vh',
			height: '18vh',
		},
		paper: {
			margin: theme.spacing(8, 4),
			display: 'flex',
			flexDirection: 'column',
			alignItems: 'center',
		},
		avatar: {
			margin: theme.spacing(1)
		},
		form: {
			width: '100%',
			marginTop: theme.spacing(1),
		},
		submit: {
			margin: theme.spacing(1, 0, 1),
			width: '50%'
		},
	});

class Contacts extends Component {
	constructor(props) {
		super(props);

		this.state = {
			user_token: sessionStorage.getItem('token'),
			disabled:true,
			createList:false,
			show: false ,
			rows:[],
			tableData:[]
		};
		this.loggedIn = sessionStorage.getItem('email') === 'true';

		this.get_ContactList();


	}

	showModal = () => {
		this.setState({ show: true });
	  };
	
	hideModal = () => {
		this.setState({ show: false });
		this.setState({
						createList: false
					 });
	  };

	get_ContactList =() => {

		//fetch('https://jsonplaceholder.typicode.com/todos')
		fetch(Const.URL.SERVER_BASE_URL + Const.URL.GET_CONTACTS, {
			method: 'post',
			credentials: "same-origin",
			headers: {
				'user_token': this.state.user_token,
				'Accept': 'application/json',
				'Content-Type': 'application/json'
			},
		})
		.then(response => response.json())
		.then(json => {

			var arr = [];

			Object.keys(json).forEach(function(key) {
				arr.push(json[key]);
				});
			this.setState({ tableData: arr  });

		})

	}

	save_ContactList = event => {

		event.preventDefault();

		this.setState({
			disabled: false
		});

		return fetch(Const.URL.SERVER_BASE_URL + Const.URL.ADD_CONTACTS, {
				method: 'post',
				credentials: "same-origin",
				headers: {
					'user_token': this.state.user_token,
					'Accept': 'application/json',
					'Content-Type': 'application/json'
				},
				body: JSON.stringify({listName: this.state.listName}),
			}).then(response => response.json())
			.then(resData => {
				console.log(resData)
				if (resData.message === Const.MESSAGES.SUCCESS) {

					this.getContactList(resData.user);
				}

				this.setState({
					disabled: true
				});


				this.setState({

					rows : [
					this.createData('Global', 'All Contacts', 0)
					]
					});

	
			})
	}

	handleChange = event => {
		this.setState({
			[event.target.id]: event.target.value
		});
	}

	validateEmail = (e) => {
		if (new RegExp(Const.REGEX.REG_VALID_EMAIL).test(e.target.value)) {
			this.setState({
				validEmail: false
			});
		} else {
			this.setState({
				validEmail: true
			});
		}
	}

	validateForm() {

		return ( this.state.disabled);
	}

	 createData(type, name,count) {
		return { type, name,count};
	  }

	  
	Create = (e) => {

		if(this.state.createList)
		{
			this.setState({
				createList: false
			});
			
		}
		else
		{
			this.setState({
				createList: true
			});
			
			
		}
	
	  }
 
render() {

const { classes } = this.props;


const data = (this.state.tableData);
	

console.log(data);

return (
<div className="Profile"  style={{fontFamily: 'Montserrat, sans-serif'}}  >
<Grid container  component={Paper} square >
<Grid item xs={12}  container  className={classes.root}>

<Grid item xs={6} style={{ height:'1vh'}}>

<h1>Contact Lists</h1>
<TextField margin="normal"  required fullWidth id="email" label="Search by email Address" name="email_search" autoComplete="email_search"  type="text" value={this.state.email_search} />

</Grid>
   <Grid item xs={6} container  alignItems="flex-start" justify="flex-end" direction="row"  style={{ height:'1vh'}}>
    
<span  justify="right" direction="column"
alignItems="right">

<Button  margin="normal" type="submit" color='primary'  variant="contained"  onClick={this.Create} > Create </Button> <Button  margin="normal" type="submit"  color='primary'   variant="contained"  > Add Accounts </Button></span>

      <List component="nav" aria-label="main mailbox folders" style={{ position: 'absolute',zIndex: '1',right: '9em',top: '8em' ,display:this.state.createList?'block':'none' }}>
        <ListItem button>
          <ListItemText primary="New List" onClick={this.showModal}/>

        </ListItem>
        <ListItem button>
          <ListItemText primary="New Segment" />
        </ListItem>
      </List>

</Grid>


      <Table aria-label="simple table" >
        <TableHead>
          <TableRow>
            <TableCell>Type</TableCell>
            <TableCell align="right">Name</TableCell>
            <TableCell align="right">Count</TableCell>
            <TableCell align="right">Action</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>

          {data.map(row => (
            <TableRow key={row.title}>
              <TableCell component="th" scope="row">
                {row.title}
              </TableCell>
              <TableCell align="right">{row.userId}</TableCell>
              <TableCell align="right">{row.completed}</TableCell>
			  <TableCell align="right">':'</TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
   </Grid>
</Grid>

		
</div>
);
}
}


export default withStyles(styles)(Contacts);

/////


<select className="form-control" onChange={handleChange} >
          <option>---select---</option>
            {
            this.state.contactsList &&
            this.state.contactsList.map((h, i) => 
            (<option key={i} value={h.list_id}>{h.name}</option>))
            }
</select>

///////////

const  handleChange1 = (e) => {

	console.log(e.target.value);
	
	
  };



return (
<div className="Profile"  style={{fontFamily: 'Montserrat, sans-serif'}}  >
<Helmet>
<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons"/>
	</Helmet>

<Grid container  component={Paper} square >
<Grid item xs={12}  container  className={classes.root}>

<Grid item xs={6} style={{ height:'1vh'}}>

<h1>Contacts</h1>

<select onChange={handleChange1} value={value}>
          {options.map(item => (
            <option key={item.value} value={item.value}>
              {item.name}
            </option>
          ))}
        </select>

        /////////////

getDb_host_secondary() /getname / internal
companydb-centralDB
mail in method
loader in reset password
forgetpassword slow
Namespace files / directories (UpperCamelCase)   ---->  namespace FastFood\Page;
topbar static

populate list from db 
get list then contacts baes on list 

/////////


                //if  listid match by input --> get that extract that listid 
                // if($list==$request->get('list_id'))
                // {
                //     $selected_listid=$list[0];
                //     //$u->getFirstName()
                // }
                    
                }


                // foreach ($arr_list as $list) {

                //     //if  listid match by input --> get that extract that listid 
                //     if($list=='2')
                //     {
                //       //  print_r($u->getFirstName());
                //     }
                        
                //     }

///////////


//get contacts by selected listid

            $users = $this->dm->createQueryBuilder(Users::class)
                        ->field('list_id.[0]')
                        ->equals($selected_listid)
                        ->select('email')
                        ->select('firstname')
                        ->select('surname')
                        ->select('phoneno')
                        ->getQuery()->execute();

           

            foreach ($users as $u) {
  
                array_push($list_users,array('email'=>$u->getEmail(),
                'firstname'=>$u->getFirstName(),
                'surname'=>$u->getSurName(),
                'phoneno'=>$u->getPhoneNo()
            ));  
            
            }            
                  
               
            
            $user=$this->dm->createQueryBuilder(User::class)
                        ->field('user_token')
                        ->equals($user_token)
                        ->getQuery()
                        ->getSingleResult();

            $arr=(array)($user->getContactDetails()[0]);                    
            $counter = 0;
            $email = 0;
                    
            foreach ($arr as  $value)
            { 
                if($counter==5)
                { 
                    $email= "$value"; 
                }  
                ++$counter; 
            }                    
            $this->clientDbConnection($user->getDbName());
            $users = $this->dm->createQueryBuilder(Users::class)
                                    ->field('email')
                                    ->equals($email)
                                    ->getQuery()
                                    ->getSingleResult();
            $list_id=$users->getListId();
            $list_names=array();           
            foreach ($list_id[0] as $i=>$v)
            {            
               $contact_list = $this->dm->createQueryBuilder(Contacts::class)
                                    ->field('list_id')->equals($v)
                                    ->getQuery()
                                    ->getSingleResult();


                array_push($list_names,array('email'=>$contact_list->getName(),
                'firstname'=>$contact_list->getName(),
                'surname'=>$contact_list->getName(),
                'phoneno'=>$contact_list->getName()
            ));                                    
            }            
            return response()->json(['arr_list_names' => $list_names],200);


            /////


            $user=$this->dm->createQueryBuilder(User::class)
                        ->field('user_token')
                        ->equals($user_token)
                        ->getQuery()
                        ->getSingleResult();

            // $arr=(array)($user->getContactDetails()[0]);                    
            // $counter = 0;
            // $email = 0;
                    
            // foreach ($arr as  $value)
            // { 
            //     if($counter==5)
            //     { 
            //         $email= "$value"; 
            //     }  
            //     ++$counter; 
            // } 

///////



        // $contact_List = new ContactList();
        // $contact_List->setName($request->get('listName'));
        // $contact_List->setIsFolder(1);
        // $contact_List->setClientId(0);
        // $contact_List->setListParent(0);
        // $contact_List->setListOrder(1);
        // $contact_List->setEntered(Carbon::now()->toDateTimeString());

        // $users=$this->dm->createQueryBuilder(Users::class)
        //                 ->field('email')
        //                 ->equals($email)
        //                 ->getQuery()
        //                 ->getSingleResult();
                        
        // $arr=$users->getListId();
        // $incerement_id=(int)(end($arr[0]))+1;
        // array_push($arr[0],$incerement_id);
        // $contact_List->setListId($incerement_id);
        // $this->dm->persist($contact_List);
        // $this->dm->flush();            
        // $this->dm->createQueryBuilder(Users::class)
        //                 ->update()
        //                 ->field('email')
        //                 ->equals($email)
        //                 ->field('list_id')->set($arr)
        //                 ->getQuery()
        //                 ->execute();

        //     if(true)
        //     {
        //         return response()->json(['message' =>Config::get('constants.messages.SUCCESS')], 200);
        //     }
                

////////

	saveContactList = event => {

		event.preventDefault();
		
		const CONTACT_LIST = {listName: this.state.listName};
		console.log(CONTACT_LIST);
		return fetch(Const.URL.SERVER_BASE_URL + Const.URL.ADD_CONTACTLIST, {
				method: 'post',
				credentials: "same-origin",
				headers: {
					'user_token': this.state.user_token,
					'Accept': 'application/json',
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(CONTACT_LIST),
			}).then(response => response.json())
			.then(resData => {
				console.log(resData)
				if (resData.message === Const.MESSAGES.SUCCESS) {
					this.getContactsByList();
				}

				this.hideModal();
			})
	}

    //old changes

    .Profile-root-21 {
    height: 100vh;
    margin: 0px 64px 64px 64px;
    padding: 40px 64px 64px 64px;
}

//////////



            // $user=$this->dm->createQueryBuilder(User::class)
            //             ->field('user_token')
            //             ->equals($user_token)
            //             ->getQuery()
            //             ->getSingleResult();

            // $arr=(array)($user->getContactDetails()[0]);                    
            // $counter = 0;
            // $email = 0;
                    
            // foreach ($arr as  $value)
            // { 
            //     if($counter==5)
            //     { 
            //         $email= "$value"; 
            //     }  
            //     ++$counter; 
            // }                    
            // $this->clientDbConnection($user->getDbName());
            // $users = $this->dm->createQueryBuilder(Users::class)
            //                         ->field('email')
            //                         ->equals($email)
            //                         ->getQuery()
            //                         ->getSingleResult();
            // $list_id=$users->getListId();
            // $list_names=array();           
            // foreach ($list_id[0] as $i=>$v)
            // {            
            //    $contact_list = $this->dm->createQueryBuilder(Contacts::class)
            //                         ->field('list_id')->equals($v)
            //                         ->getQuery()
            //                         ->getSingleResult();


            //     array_push($list_names,array('email'=>$contact_list->getName(),
            //     'firstname'=>$contact_list->getName(),
            //     'surname'=>$contact_list->getName(),
            //     'phoneno'=>$contact_list->getName()
            // ));                                    
            // }            
            // return response()->json(['arr_list_names' => $list_names],200);

            ///////

        // $contact_list = $this->dm->createQueryBuilder(ContactList::class)
        //  ->findAndUpdate()
        //  ->field('client_id')->equals(0)
        // ->returnNew()
        // ->field('name')->set($request->get('listname'))
        // ->field('list_id')->inc(1)
        // ->getQuery()
        // ->execute();
        
        // $counter = $dm->createQueryBuilder('Documents\Counter')
        // ->findAndUpdate()
        // ->returnNew()
        // ->field('name')->equals('order_number')
        // ->field('count')->inc(1)
        // ->getQuery()
        // ->execute();

///////////



						{/* <Table className="table table-hover" style={{width:'100%'}}>
							<TableHead>
								<TableRow>
									<TableCell><div className="checkbox" style={{marginBottom:'-10px'}}><label><input type="checkbox" value=""/></label></div></TableCell>
									<TableCell>ID</TableCell>
									<TableCell >Name</TableCell>
									<TableCell >Number of Contacts</TableCell>
									<TableCell >Action</TableCell>			
								</TableRow>
							</TableHead>
							<TableBody>		
								<TableRow>
									<TableCell><div className="checkbox"><label><input type="checkbox" value=""/></label></div></TableCell>
									<TableCell>#1</TableCell>
									<TableCell>list1</TableCell>
									<TableCell>5 Contacts</TableCell>
									<TableCell>
										<div class="dropdown">
											<select type="button" className="btn allBtn dropdown-toggle">
												<option>Dropdown Example</option>
												<option>Subscriber Manager</option>
												<option>List Settings</option>
												<option>Duplicate</option>
												<option>Add a Subscriber</option>
												<option >Import Subscriber</option>
												<option>Copy Paste Subscriber</option>
												<option>Rename</option>
												<option>Delete</option>
											</select>											
										</div>
									</TableCell>                
								</TableRow>        
							</TableBody>
							<TableBody>		
								<TableRow>
									<TableCell><div className="checkbox"><label><input type="checkbox" value=""/></label></div></TableCell>
									<TableCell>#2</TableCell>
									<TableCell>list2</TableCell>
									<TableCell>4 contacts</TableCell>
									<TableCell>
										<div class="dropdown">
											<select type="button" className="btn allBtn d" data-toggle="dropdown">
												<option>Dropdown Example</option>
												<option>Subscriber Manager</option>
												<option>List Settings</option>
												<option>Duplicate</option>
												<option>Add a Subscriber</option>
												<option >Import Subscriber</option>
												<option>Copy Paste Subscriber</option>
												<option>Rename</option>
												<option>Delete</option>
											</select>			
										</div>
									</TableCell>                
								</TableRow>        
							</TableBody>
							<TableFooter>
								<TableRow>
									<TableCell><div className="checkbox" style={{marginBottom:'-10px'}}><label><input type="checkbox" value=""/></label></div></TableCell>
									<TableCell>ID</TableCell>
									<TableCell >Name</TableCell>
									<TableCell >Number of Contacts</TableCell>
									<TableCell >Action</TableCell>			
								</TableRow>
							</TableFooter>
						</Table> */}

<TextField  className={classes.input}  variant='outlined' style={{padding:'0px'}} margin="normal"  required fullWidth id="password" label="Password" name="password" autoComplete="password"  type="password" value={this.state.password} onChange={this.handleChange} onBlur={this.validatePwd} InputProps={{ endAdornment: pwdicon }}/>
							

db.copyDatabase("companydb","CentralDB","localhost")
use CentralDB
db.dropDatabase();

/////////


 $user=$this->dm->createQueryBuilder(User::class)
                            ->field('user_token')
                            ->equals("8a79fcb1f3")
                            ->getQuery()
                            ->getSingleResult();

            return response()->json(
                                    ['profile_completed' => true,
                                     'username' => $user->getLanguage()],
                                    200);


            $this->clientDbConnection("e_056365a097");

            return Carbon::now()->addMonths(3)->toDateTimeString();

            $qb = $this->dm->createQueryBuilder(ContactList::class)
            ->sort('listorder', 'desc')
            ->limit(1)->getQuery()->getSingleResult();

            $max_list_id=$qb->getListId();

            return ($max_list_id+1);

            $users = $this->dm->createQueryBuilder(Users::class)
                        ->getQuery()->execute();

            $list_users=array(); 

            foreach ($users as $u) {
  
                $arr_list=$u->getListId()[0];
                if($arr_list)
                {
                    foreach ($arr_list as $list) {

                        if($list===2)
                            {
                               array_push($list_users,array('email'=>$u->getEmail()));
                            }
        
                        }
                }
                 
            };


            return response()->json(['list_users' => $list_users],200);

            return;

            $cntlist = $this->dm->createQueryBuilder(ContactList::class)
            ->select('list_id')
            ->select('name')
            ->getQuery()->execute();

            foreach ($cntlist as $c) {

                print_r(array(
                    'list_id'=>$c->getListId(),
                    'name'=>$c->getName()
                    ));

            // array_push($cntlist,array(
            // 'list_id'=>$c->getListId(),
            // 'name'=>$c->getName()
            // )); 
            }
            return;
            $contactslist = $this->dm->createQueryBuilder(ContactList::class)
                        ->select('name')
                        ->getQuery()->execute();

            print_r($contactslist);
            // return;

           // $contacts_list=array(); 
            
            foreach ($contactslist as $c) {
  
                print_r($c);
                //echo $c->getListId();

                // array_push($contacts_list,array(
                // 'list_id'=>$c->getListId(),
                // 'name'=>$c->getName()
            //));  
            
            }            
          //  return response()->json(['contacts_list' => $contacts_list],200); 

        // $users = $this->dm->createQueryBuilder(Users::class)
        //         ->select('email')
        //         ->select('contact_email')
        //         ->select('surname')
        //         ->select('phoneno')
        //         ->getQuery()->execute();

        // foreach ($users as $r) {

        //     print_r($r->getEmail());
        //     print_r($r->getContactEmail());
        //     print_r($r->getFirstName());
        //     print_r($r->getSurName());
        //     print_r($r->getPhoneNo());
        // }

        // $users = $this->dm->createQueryBuilder(Users::class)
        //     // ->field('email')
        //     // ->equals($request->get('email'))
        //     // ->field('list.id')
        //     // ->equals($request->get('list_id'))
        //     // ->select('contact_email')
        //     ->select('firstname')
        //     ->getQuery()->execute();

        //     print_r($users);

    //         $list_users=array();   
    //         foreach ($users as $u)
    //         {   
    //             print_r($u->getFirstName());
    //  }

//////


            // Mail::send('mail',["data1"=>$data], 
            // function($message)  use ($data)
            // {
            //     $message->to($data['email'], $data['message'])
            //             ->subject($data['subject']);
            //     $message->from($data['sender'] ,'Admin');
            // }); 



            $data = [
                'email' =>$request->get('email'),
                'encrypt_email' =>md5($request->get('email')),
                'subject' => Config::get('constants.MAIL.RESETPASSWORD_SUBJECT'),
                'message' => Config::get('constants.MAIL.RESETPASSWORD_MESSAGE'),
            ];           
            
            $this->resetPasswordMail($data);


             public function resetPasswordMail($data)
    {
        Mail::send('forgetpassword',["data"=>$data],
        function($message)  use ($data)
        {
            $message->to($data['email'], Config::get('constants.messages.RESETPASSWORD_SUBJECT'))
                    ->subject(Config::get('constants.messages.RESETPASSWORD_SUBJECT'));
            $message->from('constants.MAIL.ADMIN_MAIL','Admin');
        });            
        return  response()->json(['message' =>Config::get('constants.messages.SUCCESS')], 200);
    }

    //////

    
        //     return  response()->json(['message' =>$request->All()], 200);

            
        // Mail::send($data['view'],["data1"=>$data], 
        // function($message)  use ($data)
        // {

        // $message->to($data['email'], $data['message'])
        // ->subject($data['subject']);
        // $message->from($data['sender'] ,'Admin');
        // });


///////////

        $cntlist = $this->dm->createQueryBuilder(ContactList::class)
                        ->select('list_id')
                        ->select('name')
                        ->getQuery()->execute();

            $contacts_list=array(); 
            
            foreach ($cntlist as $c) {
  
                if($c->getListId()==1)
                {
                    continue;
                }

                array_push($contacts_list,array(
                'list_id'=>$c->getListId(),
                'name'=>$c->getName()
            )); 

    }

    //print_r($contacts_list[1]['list_id']);
    //return;
    //Array ( 
    //[0] => Array ( [list_id] => 2 [name] => Your First List ) 
    //[1] => Array ( [list_id] => 3 [name] => list2 ) 
    // )

//////////

$contact_details = [];
$apikeys = [];

array_push($apikeys,array("key"=>"xxx","name"=>"internal"));
array_push($contact_details,array("company_name"=>$user->getCompanyName(),"email"=>$user->getEmail())); 






//////////////////////////




<?php 
namespace App\Http\Controllers;

use App\Http\Controllers\Admin\AdminController;
use Config;
use Illuminate\Http\Request;
use App\Users;

/**
 * [AccountController class contains functions for updating User Profile and Pass Recovery for Registered User ]
 */
class AccountController extends AdminController
{
    public function __construct()
    {
        parent::__construct();
    }    

    
    /**
     * [getProfile  function  gets User's email,username,cmpnyname,cmpnyaddress and cmpnyWebsite fields for Registerd User  and updates User Collection ]

     *  @param   Request  $request  [$request variable get email,username,cmpnyname,cmpnyaddress and cmpnyWebsite fields from api]
     *
     * @return  [Json]   [return Json object containing TOKEN_MISMATCH/profile_completed message ]
     */
    public function getProfile(Request $request)
    {
        if (empty($request->isMethod('post')))
        {
            return;
        }
        $token = $request->header('token');
        if (empty($token))
        {           
            return response()->json(
                               ['message' => Config::get('constants.messages.TOKEN_MISMATCH')], 200);
        }        
        try 
        {
            $user=$this->dm->createQueryBuilder(Users::class)
                            ->field('user_token')
                            ->equals($token)
                            ->getQuery()
                            ->getSingleResult();

            return response()->json(
                                    ['message' => Config::get('constants.messages.SUCCESS'),
                                     'username' => $user->getUserName(),
                                     'company_name' => $user->getContactDetails()['company_name'],
                                     'companyaddress' => $user->getCompanyAddress(),
                                     'companywebsite' => $user->getCompanyWebsite()],
                                    200);
        } 
        catch (Exception $e)
        {
            return response()->json(['exception' => $e], 200);
        }
    }
  

    /**
     * [updateProfile  function  updates User's email,username,cmpnyname,cmpnyaddress and cmpnyWebsite fields for Registerd User  and updates User Collection ]

     *  @param   Request  $request  [$request variable get email,username,cmpnyname,cmpnyaddress and cmpnyWebsite fields from api]
     *
     * @return  [Json]   [return Json object containing TOKEN_MISMATCH/profile_completed message ]
     */
    public function updateProfile(Request $request)
    {
        if (empty($request->isMethod('post')))
        {
            return;
        }
        $token = $request->header('token');
        if (empty($token))
        {           
            return response()->json(
                                    ['message' => Config::get('constants.messages.TOKEN_MISMATCH')], 200);
        }        
        try 
        {
          
            $this->dm->createQueryBuilder(Users::class)
                                        ->findAndUpdate()
                                        ->field('user_token')
                                        ->equals($token)
                                        ->field('username')->set($request->get('username'))
                                        ->field('companyaddress')->set($request->get('cmpnyAddress'))
                                        ->field('companywebsite')->set($request->get('cmpnyWebsite'))
                                        ->field('profile_completed')->set(true)
                                        ->field('contact_Details.company_name')->set($request->get('cmpnyName'))
                                        ->getQuery()
                                        ->execute();

            return response()->json(
                                    ['profile_completed' => true,
                                     'username' => $request->get('username'),
                                     'email' => $request->get('email'),
                                     'company_name' => $request->get('cmpnyName'),
                                     'companyaddress' => $request->get('cmpnyAddress'),
                                     'companywebsite' => $request->get('cmpnyWebsite')],
                                    200);
        } 
        catch (Exception $e)
        {
            return response()->json(['exception' => $e], 200);
        }
    }

    /**
     * [forgetPasswordMail function send a Reset Password Mail to User after Validating Users Email]
     *
     *  @param   Request  $request  [$request variable gets email from api]
     *
     *  @return  [Json]   [return Json object containing SUCCESS/FAIL message ]
     */
    public function forgetPasswordMail(Request $request)
    {
        if (empty($request->isMethod('post')))
        {
            return;
        }

        try 
        {        
          
            $data = [
                'email' =>$request->get('email'),
                'encrypt_email' =>md5($request->get('email')), 
                'subject' => Config::get('constants.MAIL.RESETPASSWORD_SUBJECT'),
                'message' => Config::get('constants.MAIL.RESETPASSWORD_MESSAGE'),
                'sender' => Config::get('constants.MAIL.ADMIN_MAIL'),
                'view' =>'forgetpassword'
            ];      
            
            
            $this->SendMail($data);

            return response()->json([
                                    'message' => Config::get('constants.messages.SUCCESS'),
                                    'email' =>$data['email']
                                    ], 200);
        } 
        catch (Exception $e)
        {
            return response()->json(['exception' => $e], 200);
        }
    }

    /**
     * [resetPassword function updates a New Password  to User Collection After Validating token Value]
     *
     * @param   Request  $request  [$request description]
     *
     *  @param   Request  $request  [$request variable gets token from api]
     *
     * @return  [Json]   [return Json object containing SUCCESS/OLD_PASSWORD message ]
    */
    public function resetPassword(Request $request)
    {
        if (empty($request->isMethod('post')))
        {
            return;
        }
        try 
        {
            $users = $this->dm->createQueryBuilder(Users::class)
                ->select('contact_Details.email')
                ->getQuery()
                ->execute();

            foreach ($users as $r) {

            if(md5($r->getContactDetails()['email'])==$request->header('email'))
            {
              
            $user_updated=$this->dm->createQueryBuilder(Users::class)
            ->findAndUpdate()
            ->field('password')->set($request->get('password'))
            ->getQuery()
            ->execute();

            if(!empty($user_updated))
            {
                return response()->json(['message' => Config::get('constants.messages.SUCCESS')], 200);
            }

            break;
            }

            }
 
        } 
        catch (Exception $e) 
        {
            return response()->json(['message' => $e], 200);
        }
    }

}


///////


Unused dependencies
* @babel/runtime
* @svgr/webpack
* browser-language
* date-fns
* exec
* get-google-fonts
* get-user-agent
* identity-obj-proxy
* jest-resolve
* jquery
* material-ui
* mdbreact
* moment
* node-cmd
* node-run-cmd
* nodemailer
* npm
* pm2
* react-bootstrap
* react-charts
* react-data-sort
* react-dropdown
* react-google-charts
* react-json-table
* react-loader
* react-native-material-dropdown
* react-password-mask
* react-router
* react-table
* react-tooltip
* rebass
* recharts
* request
* sass-loader
* semver
* sendmail
* text
* url-mask
* url-rewrite
* useragent
* view
* yarn
Unused devDependencies
* @babel/plugin-proposal-class-properties
* html-loader
Missing dependencies
* prop-types
* react-chartjs-2

////////


Array (
     
     [0] => Array ( [0] => Array ( [0] => 2 ) ) 
     [1] => Array ( [0] => Array ( [0] => 2 ) ) 
     [2] => Array ( [0] => Array ( [0] => 3 ) ) 
     
     )

//////



//////
<MaterialTable
							style={{ width: '100%',marginTop: '8em' }}
							columns={columns}
							data={data}
							title=" "
							
							editable={{
								// onRowAdd: newData =>
								//   new Promise(resolve => {
								//     setTimeout(() => {
								//         resolve();
								//       //  const data = [...data];
								//       //  data.push(newData);
								//       // this.setState({ ... data });
								//       addContact(newData);
								//     }, 600);
								//   }),
								// onRowUpdate: (newData, oldData) =>
								//   new Promise(resolve => {
								//     setTimeout(() => {

									
								//       resolve();
								//       const data = [...data];
								//       data[data.indexOf(oldData)] = newData;
								//       this.setState({ ... data });
								//     }, 600);
								//   }),
								// onRowDelete: oldData =>
								//   new Promise(resolve => {
								//     setTimeout(() => {
								//       resolve();
								//       const data = [...data];
								//       data.splice(data.indexOf(oldData), 1);
								//       this.setState({ ... data });
								//     }, 600);
								//   }),
							}}/>

////////

 $this->dm->createQueryBuilder(ClientUser::class)
                            ->findAndUpdate()
                            ->field('id')
                            ->equals("5db2ca3be74f0000e0003bea")
                            ->field('email')
                            ->set("k1k")
                            ->getQuery()
                            ->execute(); 

            return response()->json(['message' =>Config::get('constants.messages.SUCCESS')], 200);

        


        $cntlist = $this->dm->createQueryBuilder(ContactList::class)
                        ->select('list_id')
                        ->select('name')
                        ->getQuery()->execute();

            $contacts_list=array();            
            foreach ($cntlist as $c) 
            {  
                if($c->getListId()==1)
                {
                    continue;
                }

                array_push($contacts_list,array(
                'list_id'=>$c->getListId(),
                'name'=>$c->getName(),
                'userCount'=>$this->getUserCount($c->getListId())
            ));            
            }            
            return response()->json(['contacts_list' => $contacts_list],200); 


        $users = $this->dm->createQueryBuilder(ClientUser::class)
                        ->getQuery()->execute();


            foreach ($users as $u) 
            {

            print_r($u->getEmail());

            }
            return;
            $list_users=array();
            //return response()->json(['users' => $users],200); 
            foreach ($users as $u) 
            {    
                return response()->json(['users' => $u->getEmail()],200); 
                return;

                $arr_list=$u->getListId()[0];
                if($arr_list)
                {
                    foreach ($arr_list as $list) 
                    {
                        if($list==3)
                        {
                            array_push($list_users,array('id'=>$u->getId(),
                                    'email'=>$u->getEmail(),
                                    'firstname'=>$u->getFirstName(),
                                    'surname'=>$u->getSurName(),
                                    'phoneno'=>$u->getPhoneNo()));
                        }        
                    }
                }                
            };
            return response()->json(['list_users' => $list_users],200);  


        $users = $this->dm->createQueryBuilder(ClientUser::class)
                        ->getQuery()
                        ->execute();

        $arr_list=[];

        foreach ($users as $u) {

            foreach ( $u->getListId()[0] as $list ) {

                array_push($arr_list,$list);
            }

        };

        return array_count_values($arr_list)[2];

        return;
        
        $prev_id=null;
        $new_list=[];
        $count=[];

        foreach($arr_list as $lst)
        {
        if($lst!=$prev_id)
        {
            $count++;
           //do work
           array_push($new_list,['usr'=>$u['usr'],
                'count'=>$count]);

        }
        else
        {
            $lst=$prev_id;
        }
        }
        
        
        // Array ( 
        //     [0] => Array ( [user] => mail.nrj@gmail.com [list_id] => 2 ) 
        //     [1] => Array ( [user] => 1 [list_id] => 2 ) 
        //     [2] => Array ( [user] => 2 [list_id] => 3 ) 
        //     )
            
       


                if($arr_list)
                {
                    foreach ($arr_list as $list) {
                        
                        foreach ($cntlist as $c_list) {
                          
                        $count=0;
                        if($list==$c_list->getListId())
                            {
                                $count++;

                                if(in_array($list, $list_users))
                                {
                                   
                                } 
                                else
                                {
                                    array_push($list_users,['list_id'=>$list,
                                    'ContactsCount'=>$count]);
                                }
                                //echo in_array($list, $list_users);
                                //print_r($list);
                                print_r($list_users);
                                 
                            }
                        }
                    }
                }
                
        print_r($list_users);


        $users = $this->dm->createQueryBuilder(Users::class)
                ->select('contact_Details.email')
                ->getQuery()
                ->execute();

        foreach ($users as $r) {

        print_r($r->getContactDetails()['email']);

            // if(md5($r->getEmail())==$request->header('email'))
            // {
              
            // $user_updated=$users
            // ->findAndUpdate()
            // ->field('password')->set($request->get('password'))
            // ->getQuery()
            // ->execute();

            // if(!empty($user_updated))
            // {
            //     return response()->json(['message' => Config::get('constants.messages.SUCCESS')], 200);
            // }

            break;
           // }
            }


        return ;

        $user_updated = $this->dm->createQueryBuilder(Users::class)
            ->findAndUpdate()
            ->field('contact_Details.email')
            ->equals('mail.nrj@gmail.com')
            ->field('password')
            ->set('123')
            ->getQuery()
            ->execute();

        return ;
        if (ini_get('date.timezone')) {
            echo 'date.timezone: ' . ini_get('date.timezone');
        }
        return ;

        $now = Carbon::now(-1);

        echo $now->timezoneName ;
        
        
        $accounts = $this->dm->createQueryBuilder(Accounts::class)
                                       ->field('activation_request.token')
                                       ->equals('88b7d6c76f')
                                       ->getQuery()
                                       ->getSingleResult();

        print_r($accounts->getActivationRequest()['expiration_date']);

        return ;
        $accounts->addActivationRequest(array("token"=>'1',"db_created"=>'2'));
        try 
        {
            $this->dm->persist($accounts);
            $this->dm->flush();
            return  response()->json([
                'message' =>Config::get('constants.messages.SUCCESS') ], 200);

        } 
        catch (Exception $e) 
        {
            return  response()->json(['message' =>$e], 200);  
        }  


       
        // $count = $this->dm->createQueryBuilder(Users::class)->hydrate(false)
        // ->group(array('list_id.0' => 1), array('value' => 0))
        // ->reduce('function (curr,result) {
        //     result.value++;
        // }')
        // ->getQuery()
        // ->execute()->toArray();
        
///////////


						{/* <input
						accept="image/*"
						className={classes.input}
						style={{ display: 'none' }}
						id="raised-button-file"
						multiple
						type="file"
						/>
						<label htmlFor="raised-button-file">
						
						</label> */}
//////////
undersocre js group by 

<html> 
    <head> 
        <script type="text/javascript" src= 
        "https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.9.1/underscore.js"> 
        </script> 
    </head> 
      
    <body> 
        <script type="text/javascript"> 
            console.log(_.groupBy([2.7, 3.4, 6.6, 1.2, 2.0, 2.4], function(num) { 
                return Math.ceil(num);  
            })); 
        </script> 
    </body> 
</html>   
///////

	// var data = [{"Month":"Jan","Year":2015,"Count":15},{"Month":"Feb","Year":2015,"Count":5},{"Month":"Jan","Year":2016,"Count":25},{"Month":"Feb","Year":2016,"Count":50}]  

			// var result = []
			// data.forEach(function(e, i) {
			
			
			// if (!this[e.Month]) {
			// this[e.Month] = {
			// Month: e.Month,
			// ['Count_']: e.Count
			// }
			// result.push(this[e.Month])
			// } else {
			// this[e.Month]['Count_'] = e.Count
			// }
			// }, {})

columnMapRows.forEach(key => { 

	console.log(key.EMAIL)
	})


// columnMapRows.map((item, index) => {
	
// 		item.list.map((subitem, i) => {
		 
// 			console.log(subitem.value)
// 		})
	  
//   })

/////////

const keys = Object.keys(columnMapRows);
const items = columnMapRows[keys[0]].map(() => ({}));
keys.forEach((key) => {
  columnMapRows[key].forEach((data, i) => {
     items[i][key] = data;
  });
})



items.map((item) => {  
	
	console.log(item);

	 Object.keys(item).map((key) => {
		
		console.log(key);

	 })
	 })

     /////////

     

item.map(k => {

	console.log(k.key)

	k.val.map(r => {
		console.log(r)
	})

})

// let items;
// Object.keys(columnMapRows).forEach((key) => {
	
// 	if (!items) {
// 		items = columnMapRows[key].map(() => ({}));
// 	  }
// 	  columnMapRows[key].forEach((data, i) => {
// 		 items[i][key] = data;
// 	  });

// });

// console.log(items);


// 	item.key.map(k => (

// <TableRow >
// 	<TableCell align="center">{k}</TableCell>
// 	</TableRow>	
// ))


	{/* {columnMapRows.EMAIL.map(row => (
	<TableRow >
	<TableCell align="center">{row}</TableCell>
	</TableRow>
	))} */}


//////


0:
key: "EMAIL"
val: (3) ["john@example.com", "harry@example.com", "howard@example.com", Col: "EMAIL"]

1:
key: "LASTNAME"
val: (3) ["Smith", "Pierce", "Paige", Col: "LASTNAME"]

2:
key: "FIRSTNAME"
val: (3) ["John", "Harry", "Howard", Col: "FIRSTNAME"]

3:
key: "SMS"
val: (3) ["33123456789", "33111222222", "33777888898", Col: "SMS"]

/////////


		// this.state.tableData.map(k => {

		// 	k.val.map(r => {

		// 		console.log(this.state.csvHeaders[0]);

		// 		if(k.val["col"]===this.state.csvHeaders[0])
		// 		{

		// 		}
		// 		contacts.push({'Email':'','FirstName':'','LastName':'','SMS':'' })
				
		// //email - selected email value 1st r
		// //firstname
		// //lastname
		// //sms

		// //? get every select data 
		// //if item key(email)== selected list value(email)
	    // //k.val.email , k.val.firstname etc 

		// })})


//////////





	var contacts1=[];
	
	this.state.tableData.map(k => {
		
		Object.keys(this.state.csvHeaders).forEach(key => {
			
			//console.log(k.val)
			// contacts1.push({'Email':k.val.Email ,'FirstName':k.val.FirstName  ,'LastName':k.val.LastName,'SMS':k.val.SMS })
			
		})

	})

	//console.log(contacts1);


///////


	//   contacts=
	// 	this.state.tableData.reduce((result, { key, val }) => {
	// 	  val.forEach((val, index) => {
	// 		result[index] = result[index] || {};
	// 		result[index][key] = val;
	// 	  });
	// 	  return result;
	// 	}, []);

		//console.log(contacts);

///////////


I am trying to create Material UI tabs in class component . the standerd example is too much complex ...
I tried to simplified it 


    <AppBar position="static" color="default">
        <Tabs
          value={this.state.value}
          onChange={this.tabChange}
        >
          <Tab label="Item One" component={Link} to="/one" />
          <Tab label="Item Two" component={Link} to="/two" />
        </Tabs>
      </AppBar>
          <TabPanel value={value} index={0}>
            Item One
          </TabPanel>
          <TabPanel value={value} index={1}>
            Item Two
          </TabPanel>
          <TabPanel value={value} index={2}>
            Item Three
          </TabPanel>


this appears to be error free. but i want to conenct tabs to tabpanel in link . How can i do it ?



////////////





// function createData(name, calories, fat, carbs, protein) {
//   return { name, calories, fat, carbs, protein };
// }

// const rows = [
//   createData('Cupcake', 305, 3.7, 67, 4.3),
//   createData('Donut', 452, 25.0, 51, 4.9),
//   createData('Eclair', 262, 16.0, 24, 6.0),
//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),
//   createData('Gingerbread', 356, 16.0, 49, 3.9),
//   createData('Honeycomb', 408, 3.2, 87, 6.5),
//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),
//   createData('Jelly Bean', 375, 0.0, 94, 0.0),
//   createData('KitKat', 518, 26.0, 65, 7.0),
//   createData('Lollipop', 392, 0.2, 98, 0.0),
//   createData('Marshmallow', 318, 0, 81, 2.0),
//   createData('Nougat', 360, 19.0, 9, 37.0),
//   createData('Oreo', 437, 18.0, 63, 4.0),
// ];

// function desc(a, b, orderBy) {
//   if (b[orderBy] < a[orderBy]) {
//     return -1;
//   }
//   if (b[orderBy] > a[orderBy]) {
//     return 1;
//   }
//   return 0;
// }

// function stableSort(array, cmp) {
//   const stabilizedThis = array.map((el, index) => [el, index]);
//   stabilizedThis.sort((a, b) => {
//     const order = cmp(a[0], b[0]);
//     if (order !== 0) return order;
//     return a[1] - b[1];
//   });
//   return stabilizedThis.map(el => el[0]);
// }

// function getSorting(order, orderBy) {
//   return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);
// }

// const headCells = [
//   { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },
//   { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },
//   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },
//   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },
//   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },
// ];

// function EnhancedTableHead(props) {
//   const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;
//   const createSortHandler = property => event => {
//     onRequestSort(event, property);
//   };

//   return (
//     <TableHead>
//       <TableRow>
//         <TableCell padding="checkbox">
//           <Checkbox
//             indeterminate={numSelected > 0 && numSelected < rowCount}
//             checked={numSelected === rowCount}
//             onChange={onSelectAllClick}
//             inputProps={{ 'aria-label': 'select all desserts' }}
//           />
//         </TableCell>
//         {headCells.map(headCell => (
//           <TableCell
//             key={headCell.id}
//             align={headCell.numeric ? 'right' : 'left'}
//             padding={headCell.disablePadding ? 'none' : 'default'}
//             sortDirection={orderBy === headCell.id ? order : false}
//           >
//             <TableSortLabel
//               active={orderBy === headCell.id}
//               direction={order}
//               onClick={createSortHandler(headCell.id)}
//             >
//               {headCell.label}
//               {orderBy === headCell.id ? (
//                 <span className={classes.visuallyHidden}>
//                   {order === 'desc' ? 'sorted descending' : 'sorted ascending'}
//                 </span>
//               ) : null}
//             </TableSortLabel>
//           </TableCell>
//         ))}
//       </TableRow>
//     </TableHead>
//   );
// }

// EnhancedTableHead.propTypes = {
//   classes: PropTypes.object.isRequired,
//   numSelected: PropTypes.number.isRequired,
//   onRequestSort: PropTypes.func.isRequired,
//   onSelectAllClick: PropTypes.func.isRequired,
//   order: PropTypes.oneOf(['asc', 'desc']).isRequired,
//   orderBy: PropTypes.string.isRequired,
//   rowCount: PropTypes.number.isRequired,
// };

// const useToolbarStyles = makeStyles(theme => ({
//   root: {
//     paddingLeft: theme.spacing(2),
//     paddingRight: theme.spacing(1),
//   },
//   highlight:
//     theme.palette.type === 'light'
//       ? {
//           color: theme.palette.secondary.main,
//           backgroundColor: lighten(theme.palette.secondary.light, 0.85),
//         }
//       : {
//           color: theme.palette.text.primary,
//           backgroundColor: theme.palette.secondary.dark,
//         },
//   title: {
//     flex: '1 1 100%',
//   },
// }));

// const EnhancedTableToolbar = props => {
//   const classes = useToolbarStyles();
//   const { numSelected } = props;

//   return (
//     <Toolbar
//       className={clsx(classes.root, {
//         [classes.highlight]: numSelected > 0,
//       })}
//     >
//       {numSelected > 0 ? (
//         <Typography className={classes.title} color="inherit" variant="subtitle1">
//           {numSelected} selected
//         </Typography>
//       ) : (
//         <Typography className={classes.title} variant="h6" id="tableTitle">
//           Nutrition
//         </Typography>
//       )}

//       {numSelected > 0 ? (
//         <Tooltip title="Delete">
//           <IconButton aria-label="delete">
//             <DeleteIcon />
//           </IconButton>
//         </Tooltip>
//       ) : (
//         <Tooltip title="Filter list">
//           <IconButton aria-label="filter list">
//             <FilterListIcon />
//           </IconButton>
//         </Tooltip>
//       )}
//     </Toolbar>
//   );
// };

// EnhancedTableToolbar.propTypes = {
//   numSelected: PropTypes.number.isRequired,
// };

// const useStyles = makeStyles(theme => ({
//   root: {
//     width: '100%',
//     marginTop: theme.spacing(3),
//   },
//   paper: {
//     width: '100%',
//     marginBottom: theme.spacing(2),
//   },
//   table: {
//     minWidth: 750,
//   },
//   tableWrapper: {
//     overflowX: 'auto',
//   },
//   visuallyHidden: {
//     border: 0,
//     clip: 'rect(0 0 0 0)',
//     height: 1,
//     margin: -1,
//     overflow: 'hidden',
//     padding: 0,
//     position: 'absolute',
//     top: 20,
//     width: 1,
//   },
// }));

// export default function Test() {
//   const classes = useStyles();
//   const [order, setOrder] = React.useState('asc');
//   const [orderBy, setOrderBy] = React.useState('calories');
//   const [selected, setSelected] = React.useState([]);
//   const [page, setPage] = React.useState(0);
//   const [dense, setDense] = React.useState(false);
//   const [rowsPerPage, setRowsPerPage] = React.useState(5);

//   const handleRequestSort = (event, property) => {
//     const isDesc = orderBy === property && order === 'desc';
//     setOrder(isDesc ? 'asc' : 'desc');
//     setOrderBy(property);
//   };

//   const handleSelectAllClick = event => {
//     if (event.target.checked) {
//       const newSelecteds = rows.map(n => n.name);
//       setSelected(newSelecteds);
//       return;
//     }
//     setSelected([]);
//   };

//   const handleClick = (event, name) => {
//     const selectedIndex = selected.indexOf(name);
//     let newSelected = [];

//     if (selectedIndex === -1) {
//       newSelected = newSelected.concat(selected, name);
//     } else if (selectedIndex === 0) {
//       newSelected = newSelected.concat(selected.slice(1));
//     } else if (selectedIndex === selected.length - 1) {
//       newSelected = newSelected.concat(selected.slice(0, -1));
//     } else if (selectedIndex > 0) {
//       newSelected = newSelected.concat(
//         selected.slice(0, selectedIndex),
//         selected.slice(selectedIndex + 1),
//       );
//     }

//     setSelected(newSelected);
//   };

//   const handleChangePage = (event, newPage) => {
//     setPage(newPage);
//   };

//   const handleChangeRowsPerPage = event => {
//     setRowsPerPage(parseInt(event.target.value, 10));
//     setPage(0);
//   };

//   const handleChangeDense = event => {
//     setDense(event.target.checked);
//   };

//   const isSelected = name => selected.indexOf(name) !== -1;

//   const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);

//   console.log(rows.length)
//   console.log(rowsPerPage)

//   return (
//     <div className={classes.root}>
//       <Paper className={classes.paper}>
//         <EnhancedTableToolbar numSelected={selected.length} />
//         <div className={classes.tableWrapper}>
//           <Table
//             className={classes.table}
//             aria-labelledby="tableTitle"
//             size={dense ? 'small' : 'medium'}
//             aria-label="enhanced table"
//           >
//             <EnhancedTableHead
//               classes={classes}
//               numSelected={selected.length}
//               order={order}
//               orderBy={orderBy}
//               onSelectAllClick={handleSelectAllClick}
//               onRequestSort={handleRequestSort}
//               rowCount={rows.length}
//             />
//             <TableBody>
//               {stableSort(rows, getSorting(order, orderBy))
//                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)
//                 .map((row, index) => {
//                   const isItemSelected = isSelected(row.name);
//                   const labelId = `enhanced-table-checkbox-${index}`;

//                   return (
//                     <TableRow
//                       hover
//                       onClick={event => handleClick(event, row.name)}
//                       role="checkbox"
//                       aria-checked={isItemSelected}
//                       tabIndex={-1}
//                       key={row.name}
//                       selected={isItemSelected}
//                     >
//                       <TableCell padding="checkbox">
//                         <Checkbox
//                           checked={isItemSelected}
//                           inputProps={{ 'aria-labelledby': labelId }}
//                         />
//                       </TableCell>
//                       <TableCell component="th" id={labelId} scope="row" padding="none">
//                         {row.name}
//                       </TableCell>
//                       <TableCell align="right">{row.calories}</TableCell>
//                       <TableCell align="right">{row.fat}</TableCell>
//                       <TableCell align="right">{row.carbs}</TableCell>
//                       <TableCell align="right">{row.protein}</TableCell>
//                     </TableRow>
//                   );
//                 })}
//               {emptyRows > 0 && (
//                 <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>
//                   <TableCell colSpan={6} />
//                 </TableRow>
//               )}
//             </TableBody>
//           </Table>
//         </div>
//         <TablePagination
//           rowsPerPageOptions={[5, 10, 25]}
//           component="div"
//           count={rows.length}
//           rowsPerPage={rowsPerPage}
//           page={page}
//           backIconButtonProps={{
//             'aria-label': 'previous page',
//           }}
//           nextIconButtonProps={{
//             'aria-label': 'next page',
//           }}
//           onChangePage={handleChangePage}
//           onChangeRowsPerPage={handleChangeRowsPerPage}
//         />
//       </Paper>
      
//     </div>
//   );
// }

// //MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters

// //    display: flex !important;





/////////





import React from 'react';
import PropTypes from 'prop-types';
import clsx from 'clsx';
import { lighten, makeStyles } from '@material-ui/core/styles';
import Table from '@material-ui/core/Table';
import TableBody from '@material-ui/core/TableBody';
import TableCell from '@material-ui/core/TableCell';
import TableHead from '@material-ui/core/TableHead';
import TablePagination from '@material-ui/core/TablePagination';
import TableRow from '@material-ui/core/TableRow';
import TableSortLabel from '@material-ui/core/TableSortLabel';
import Toolbar from '@material-ui/core/Toolbar';
import Typography from '@material-ui/core/Typography';
import Paper from '@material-ui/core/Paper';
import Checkbox from '@material-ui/core/Checkbox';
import IconButton from '@material-ui/core/IconButton';
import Tooltip from '@material-ui/core/Tooltip';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import Switch from '@material-ui/core/Switch';
import DeleteIcon from '@material-ui/icons/Delete';
import FilterListIcon from '@material-ui/icons/FilterList';

class Test extends React.Component {

   createData(name, calories, fat, carbs, protein) {
    return { name, calories, fat, carbs, protein };
  }
  
   rows = [
    this.createData('Cupcake', 305, 3.7, 67, 4.3),
    this.createData('Donut', 452, 25.0, 51, 4.9),
    this.createData('Eclair', 262, 16.0, 24, 6.0),
    this.createData('Frozen yoghurt', 159, 6.0, 24, 4.0),
    this.createData('Gingerbread', 356, 16.0, 49, 3.9),
    this.createData('Honeycomb', 408, 3.2, 87, 6.5),
    this.createData('Ice cream sandwich', 237, 9.0, 37, 4.3),
    this.createData('Jelly Bean', 375, 0.0, 94, 0.0),
    this.createData('KitKat', 518, 26.0, 65, 7.0),
    this.createData('Lollipop', 392, 0.2, 98, 0.0),
    this.createData('Marshmallow', 318, 0, 81, 2.0),
    this.createData('Nougat', 360, 19.0, 9, 37.0),
    this.createData('Oreo', 437, 18.0, 63, 4.0),
  ];
  
   desc(a, b, orderBy) {
    if (b[orderBy] < a[orderBy]) {
      return -1;
    }
    if (b[orderBy] > a[orderBy]) {
      return 1;
    }
    return 0;
  }
  
   stableSort(array, cmp) {
    const stabilizedThis = array.map((el, index) => [el, index]);
    stabilizedThis.sort((a, b) => {
      const order = cmp(a[0], b[0]);
      if (order !== 0) return order;
      return a[1] - b[1];
    });
    return stabilizedThis.map(el => el[0]);
  }
  
   getSorting(order, orderBy) {
    return order === 'desc' ? (a, b) => this.desc(a, b, orderBy) : (a, b) => -this.desc(a, b, orderBy);
  }
  
   headCells = [
    { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },
    { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },
    { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },
    { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },
    { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },
  ];
  
   EnhancedTableHead(props) {
    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;
    const createSortHandler = property => event => {
      onRequestSort(event, property);
    };
  }

  
   handleRequestSort = (event, property) => {
    const isDesc = orderBy === property && order === 'desc';
    setOrder(isDesc ? 'asc' : 'desc');
    setOrderBy(property);
  };

   handleSelectAllClick = event => {
    if (event.target.checked) {
      const newSelecteds = rows.map(n => n.name);
      setSelected(newSelecteds);
      return;
    }
    setSelected([]);
  };

   handleClick = (event, name) => {
    const selectedIndex = selected.indexOf(name);
    let newSelected = [];

    if (selectedIndex === -1) {
      newSelected = newSelected.concat(selected, name);
    } else if (selectedIndex === 0) {
      newSelected = newSelected.concat(selected.slice(1));
    } else if (selectedIndex === selected.length - 1) {
      newSelected = newSelected.concat(selected.slice(0, -1));
    } else if (selectedIndex > 0) {
      newSelected = newSelected.concat(
        selected.slice(0, selectedIndex),
        selected.slice(selectedIndex + 1),
      );
    }

    setSelected(newSelected);
  };

   handleChangePage = (event, newPage) => {
    setPage(newPage);
  };

   handleChangeRowsPerPage = event => {
    setRowsPerPage(parseInt(event.target.value, 10));
    setPage(0);
  };

   handleChangeDense = event => {
    setDense(event.target.checked);
  };


   render() {
    return (
      <TableHead>
        <TableRow>
          <TableCell padding="checkbox">
            <Checkbox
              indeterminate={numSelected > 0 && numSelected < rowCount}
              checked={numSelected === rowCount}
              onChange={onSelectAllClick}
              inputProps={{ 'aria-label': 'select all desserts' }}
            />
          </TableCell>
          {this.headCells.map(headCell => (
            <TableCell
              key={headCell.id}
              align={headCell.numeric ? 'right' : 'left'}
              padding={headCell.disablePadding ? 'none' : 'default'}
              sortDirection={orderBy === headCell.id ? order : false}
            >
              <TableSortLabel
                active={orderBy === headCell.id}
                direction={order}
                onClick={createSortHandler(headCell.id)}
              >
                {headCell.label}
                {orderBy === headCell.id ? (
                  <span className={classes.visuallyHidden}>
                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}
                  </span>
                ) : null}
              </TableSortLabel>
            </TableCell>
          ))}
        </TableRow>
      </TableHead>
    );
   }

 }

 export default Test

this.EnhancedTableHead.propTypes = {
  classes: PropTypes.object.isRequired,
  numSelected: PropTypes.number.isRequired,
  onRequestSort: PropTypes.func.isRequired,
  onSelectAllClick: PropTypes.func.isRequired,
  order: PropTypes.oneOf(['asc', 'desc']).isRequired,
  orderBy: PropTypes.string.isRequired,
  rowCount: PropTypes.number.isRequired,
};

const useToolbarStyles = makeStyles(theme => ({
  root: {
    paddingLeft: theme.spacing(2),
    paddingRight: theme.spacing(1),
  },
  highlight:
    theme.palette.type === 'light'
      ? {
          color: theme.palette.secondary.main,
          backgroundColor: lighten(theme.palette.secondary.light, 0.85),
        }
      : {
          color: theme.palette.text.primary,
          backgroundColor: theme.palette.secondary.dark,
        },
  title: {
    flex: '1 1 100%',
  },
}));

const EnhancedTableToolbar = props => {
  const classes = useToolbarStyles();
  const { numSelected } = props;

  return (
    <Toolbar
      className={clsx(classes.root, {
        [classes.highlight]: numSelected > 0,
      })}
    >
      {numSelected > 0 ? (
        <Typography className={classes.title} color="inherit" variant="subtitle1">
          {numSelected} selected
        </Typography>
      ) : (
        <Typography className={classes.title} variant="h6" id="tableTitle">
          Nutrition
        </Typography>
      )}

      {numSelected > 0 ? (
        <Tooltip title="Delete">
          <IconButton aria-label="delete">
            <DeleteIcon />
          </IconButton>
        </Tooltip>
      ) : (
        <Tooltip title="Filter list">
          <IconButton aria-label="filter list">
            <FilterListIcon />
          </IconButton>
        </Tooltip>
      )}
    </Toolbar>
  );
};

EnhancedTableToolbar.propTypes = {
  numSelected: PropTypes.number.isRequired,
};

const useStyles = makeStyles(theme => ({
  root: {
    width: '100%',
    marginTop: theme.spacing(3),
  },
  paper: {
    width: '100%',
    marginBottom: theme.spacing(2),
  },
  table: {
    minWidth: 750,
  },
  tableWrapper: {
    overflowX: 'auto',
  },
  visuallyHidden: {
    border: 0,
    clip: 'rect(0 0 0 0)',
    height: 1,
    margin: -1,
    overflow: 'hidden',
    padding: 0,
    position: 'absolute',
    top: 20,
    width: 1,
  },
}));

export default function Test() {
  const classes = useStyles();
  const [order, setOrder] = React.useState('asc');
  const [orderBy, setOrderBy] = React.useState('calories');
  const [selected, setSelected] = React.useState([]);
  const [page, setPage] = React.useState(0);
  const [dense, setDense] = React.useState(false);
  const [rowsPerPage, setRowsPerPage] = React.useState(5);


  const isSelected = name => selected.indexOf(name) !== -1;

  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);

  console.log(rows.length)
  console.log(rowsPerPage)

  return (
    <div className={classes.root}>
      <Paper className={classes.paper}>
        <EnhancedTableToolbar numSelected={selected.length} />
        <div className={classes.tableWrapper}>
          <Table
            className={classes.table}
            aria-labelledby="tableTitle"
            size={dense ? 'small' : 'medium'}
            aria-label="enhanced table"
          >
            <EnhancedTableHead
              classes={classes}
              numSelected={selected.length}
              order={order}
              orderBy={orderBy}
              onSelectAllClick={this.handleSelectAllClick}
              onRequestSort={this.handleRequestSort}
              rowCount={rows.length}
            />
            <TableBody>
              {this.stableSort(rows, this.getSorting(order, orderBy))
                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)
                .map((row, index) => {
                  const isItemSelected = isSelected(row.name);
                  const labelId = `enhanced-table-checkbox-${index}`;

                  return (
                    <TableRow
                      hover
                      onClick={event => handleClick(event, row.name)}
                      role="checkbox"
                      aria-checked={isItemSelected}
                      tabIndex={-1}
                      key={row.name}
                      selected={isItemSelected}
                    >
                      <TableCell padding="checkbox">
                        <Checkbox
                          checked={isItemSelected}
                          inputProps={{ 'aria-labelledby': labelId }}
                        />
                      </TableCell>
                      <TableCell component="th" id={labelId} scope="row" padding="none">
                        {row.name}
                      </TableCell>
                      <TableCell align="right">{row.calories}</TableCell>
                      <TableCell align="right">{row.fat}</TableCell>
                      <TableCell align="right">{row.carbs}</TableCell>
                      <TableCell align="right">{row.protein}</TableCell>
                    </TableRow>
                  );
                })}
              {emptyRows > 0 && (
                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>
                  <TableCell colSpan={6} />
                </TableRow>
              )}
            </TableBody>
          </Table>
        </div>
        <TablePagination
          rowsPerPageOptions={[5, 10, 25]}
          component="div"
          count={rows.length}
          rowsPerPage={rowsPerPage}
          page={page}
          backIconButtonProps={{
            'aria-label': 'previous page',
          }}
          nextIconButtonProps={{
            'aria-label': 'next page',
          }}
          onChangePage={handleChangePage}
          onChangeRowsPerPage={handleChangeRowsPerPage}
        />
      </Paper>
      
    </div>
  );
}

// //MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters

// //    display: flex !important;

////////



// import React from 'react';
// import Button from '@material-ui/core/Button';
// import TextField from '@material-ui/core/TextField';
// import Paper from '@material-ui/core/Paper';
// import Grid from '@material-ui/core/Grid';
// import  { Component } from "react";
// import "../styles.css";
// import { withStyles } from '@material-ui/core/styles';
// import Const from '../Constants';
// import MdlContact from "../Modals/MdlContact.js";
// import {Helmet} from "react-helmet";
// import  {  createRef } from 'react'
// import Autocomplete from '@material-ui/lab/Autocomplete';
// import Table from '../table/Table'
// import TableBodyRow from '../table/contactRow'
// import {Link} from "react-router-dom";

// const STYLES = theme =>
// 	({
// 		root: {
// 			height: '100vh',
// 			margin: theme.spacing(2),
// 			padding: theme.spacing(2)
// 		},
// 		image: {
// 			backgroundImage: 'url(/img/newlogo.png)',
// 			backgroundRepeat: 'no-repeat',
// 			backgroundSize: 'cover',
// 			backgroundPosition: 'center',
// 			width: '45vh',
// 			height: '18vh',
// 		},
// 		paper: {
// 			margin: theme.spacing(8, 4),
// 			display: 'flex',
// 			flexDirection: 'column',
// 			alignItems: 'center',
// 		},
// 		avatar: {
// 			margin: theme.spacing(1)
// 		},
// 		form: {
// 			width: '100%',
// 			marginTop: theme.spacing(1),
// 		},
// 		submit: {


// 			margin: theme.spacing(1, 0, 1),
// 			width: '50%'
// 		},
// 	});

// class Contacts extends Component {
// 	constructor(props) {
// 		super(props);
// 		this.tableRef = createRef()
// 		this.state = {
// 			user_token: sessionStorage.getItem('token'),
// 			disabled:true,
// 			createList:false,
// 			show: false ,
// 			cntModalshow: false ,
// 			listName:'',
// 			rows:[],
// 			tableData:[],
// 			contactsList:[],
// 			selected_ListId:0,
// 			Email :'',
// 			firstName:'',
// 			surName :'',
// 			phoneNumber:'',
// 			filter: "",
// 			err: "",
// 			validPwd: null,
// 		};
// 		this.loggedIn = sessionStorage.getItem('email') === 'true';
// 		this.getContactsList(null);
// 		this.tableRef = createRef()
// 	}

// 	componentDidMount() {

// 		this.getContactsByList(2);	
// 	}

// 	onNextClick = () => {
// 		if (this.tableRef) {
// 		  alert(this.tableRef.current.state.lastEditingRow)
// 		  console.info(this.tableRef.current.state.lastEditingRow)
// 		}
// 	  }
	
// 	showModal = () => {
// 		this.setState({ show: true });
// 	  };
	
// 	hideModal = () => {
// 		this.setState({ show: false , cntModalshow: false  });
// 		this.setState({
// 						createList: false
// 					 });

// 		window.location.href="/contacts"
// 	  };

// 	getListID =(e) => 
// 	{
// 		if(!e)
// 		{
// 			return;
// 		}
		
// 		 this.getContactsByList(e.target.value);
// 		 this.setState({
// 			selected_ListId: e.target.value
// 		 });
// 	}

// 	getContactsList =($list_id) => {

// 		fetch(Const.URL.SERVER_BASE_URL + Const.URL.GET_CONTACTLIST, {
// 			method: 'post',
// 			credentials: "same-origin",
// 			headers: {
// 				'user_token': this.state.user_token,
// 				'Accept': 'application/json',
// 				'Content-Type': 'application/json'
// 			},
// 		})
// 		.then(response => response.json())
// 		.then(json => {
// 			console.log(json)
// 			var arr = [];
// 			Object.keys(json).forEach(function(key) {
// 				arr.push(json[key]); //
// 				});
// 			if($list_id)
// 			{
// 				this.setState({ contactsList: arr[0],selected_ListId:$list_id});
// 			}
// 			else
// 			{
// 				this.setState({ contactsList: arr[0],selected_ListId:arr[0][0]['list_id']});
// 			}
// 		})
// 	}

// 	getContactsByList =(selected_ListId) => {

// 		fetch(Const.URL.SERVER_BASE_URL + Const.URL.GET_CONTACTS_BY_LIST, {
// 			method: 'post',
// 			credentials: "same-origin",
// 			headers: {
// 				'user_token': this.state.user_token,
// 				'Accept': 'application/json',
// 				'Content-Type': 'application/json'
// 			},
// 			body: JSON.stringify({'list_id':selected_ListId}),
// 		})
// 		.then(response => response.json())
// 		.then(json => {
// 		console.log(json)
// 			var arr = [];
// 			Object.keys(json).forEach(function(key) {
// 				arr.push(json[key]); 
// 				});
// 			this.setState({ tableData: arr[0]});
// 		})
// 	}



// 		return fetch(Const.URL.SERVER_BASE_URL + Const.URL.ADD_CONTACTS, {
// 				method: 'post',
// 				credentials: "same-origin",
// 				headers: {
// 					'user_token': this.state.user_token,
// 					'Accept': 'application/json',
// 					'Content-Type': 'application/json'
// 				},
// 				body: JSON.stringify({
// 					'email' :this.state.Email,
// 					'firstname': this.state.firstName,
// 					'surname' :this.state.surName,
// 					'phonenumber':this.state.phoneNumber,
// 					'list_id':this.state.selected_ListId
// 				}),
// 			}).then(response => response.json())
// 			.then(resData => {
// 				console.log(resData)
// 				if(resData.message===Const.MESSAGES.FAIL)
// 				{
// 					this.setState({
// 						err: resData.desc
// 					});

// 				}
// 				else
// 				{
// 					this.getContactsList(this.state.selected_ListId);
// 					this.getContactsByList(this.state.selected_ListId);	
// 					this.hideModal();
// 				}
							
// 			})
// 	}

// 	deleteContacts= (oldData) => {
		
// 		return fetch(Const.URL.SERVER_BASE_URL + Const.URL.DELETE_CONTACTS, {
// 				method: 'post',
// 				credentials: "same-origin",
// 				headers: {
// 					'user_token': this.state.user_token,
// 					'Accept': 'application/json',
// 					'Content-Type': 'application/json'
// 				},
// 				body: JSON.stringify({
// 					'id' :oldData.id,
// 					'list_id':this.state.selected_ListId
// 				}),
// 			}).then(response => response.json())
// 			.then(resData => {
// 				this.getContactsList(this.state.selected_ListId);
// 				this.getContactsByList(this.state.selected_ListId);
// 			})
// 	}

// 	UpdateContacts = (newData) => {
		
// 		return fetch(Const.URL.SERVER_BASE_URL + Const.URL.UPDATE_CONTACTS, {
// 				method: 'post',
// 				credentials: "same-origin",
// 				headers: {
// 					'user_token': this.state.user_token,
// 					'Accept': 'application/json',
// 					'Content-Type': 'application/json'
// 				},
// 				body: JSON.stringify({
// 					'id' :newData.id,
// 					'email' :newData.email,
// 					'firstname': newData.firstname,
// 					'surname' :newData.surname,
// 					'phoneno':newData.phoneno,
// 					'list_id':this.state.selected_ListId
// 				}),
// 			}).then(response => response.json())
// 			.then(resData => {
// 				this.getContactsByList(this.state.selected_ListId);
// 			})
// 	}

// 	handleChange = event => {
// 		this.setState({
// 			[event.target.id]: event.target.value
// 		});
// 	}

// 	createData(type, name,count)
// 	{
// 		return { type, name,count};
// 	}
	  
// 	Create = (e) => 
// 	{
// 		if(this.state.createList)
// 		{
// 			this.setState({
// 				createList: false
// 			});
			
// 		}
// 		else
// 		{
// 			this.setState({
// 				createList: true
// 			});			
// 		}	
// 	}

// 	handlerowClick = (e) => {

// 	}
	
// 	search =(e) => {
		
// 		this.setState({ filter: e.target.value });
// 	}

// 	ImportContacts =(e) => {

// 		window.location.href="/ImportContacts"
// 	}

// 	render() 
// 	{
// 		const { classes } = this.props;
// 		const data = (this.state.tableData);
// 		let contacts_list = (this.state.contactsList);
// 		const columns= [
// 			{ title: 'Email', field: 'email' },
// 			{ title: 'FirstName', field: 'firstname' },
// 			{ title: 'SurName', field: 'surname' },
// 			{ title: 'Phone No', field: 'phoneno' }
// 		];

// 		let selected_ListId=this.state.selected_ListId;
		
// 		let userCount=0;

// 		if(contacts_list!==undefined)
// 		{
// 			contacts_list.forEach(function(key) {
			
// 				if(parseInt(key.list_id)===parseInt(selected_ListId))
// 				{
// 					userCount=key.userCount;
// 				}
// 				});
// 		}

// 		let  filteredData=data;

// 		const filter = this.state.filter;

// 		const err = this.state.err;

// 		if(filter)
// 		{
// 		const lowercasedFilter = filter.toLowerCase();

// 		filteredData = data.filter(e =>
// 			Object.values(e)
// 			  .join("")
// 			  .toLowerCase()
// 			  .match(lowercasedFilter)
// 		  );

// 		}

// 		console.log(filteredData)
// 		return (
// 			<div className="Profile"  style={{fontFamily: 'Montserrat, sans-serif'}}>
// 				<Helmet>
// 					<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons"/>
// 				</Helmet>
// 				<Grid container  component={Paper} square >
// 					<Grid item xs={12}  container  className={classes.root}>
// 						<Grid item xs={6} style={{ height:'1vh'}}>
// 							<h1>Contacts</h1>
// 							<div className="btn-group contactHeader">	
// 								<select className="form-control"  onChange={this.getListID} style={{width: '18em'}} >
// 									{
// 										contacts_list &&
// 										contacts_list.map((h, i) => 
// 										(
// 										<option key={i} value={h.list_id}>{h.name}</option>))
// 									}
// 							</select>
// 							<div style={{ padding: '13px'}}>{userCount}</div>

// 							<div style={{width: '15em',marginLeft: '29em',marginTop: '1em'}}>
// 									<Autocomplete
// 									freeSolo
// 									renderInput={params => (
// 									<TextField {...params} variant="outlined"  value={filter}  onKeyDown={this.search}  fullWidth />
// 									)}
// 									/>
// 								</div>

// 							</div>
// 						</Grid>
// 						<Grid item xs={6} container justify="flex-end" direction="row"  style={{ height:'1vh'}}>							
// 							<span  justify="right" direction="column" >
// 								<Button  margin="normal" type="submit"  variant="contained"  onClick={this.showModal} > Add Contacts </Button>
// 							</span>
// 							<span  justify="right" direction="column" style={{padding:'5px'}} className="btn btn-primary" >                                
//                                 <Link to="/importContacts" style={{color:'#fff',padding:'5px'}}> Import Contacts </Link>
//                             </span>
// 						</Grid>


					
// 		<Table
// 		style={{top: '2em',width: '63em' }}
//         options={{
//           selection: true,
//           actionsColumnIndex: -1
//         }}
//         components={{
//           Row: TableBodyRow
//         }}
//         columns={columns}
// 		data={data}
//         editable={{
//           onRowAdd: newData =>
//             new Promise((resolve) => {
//               setTimeout(() => {
//                 this.addContactList(newData);
//                 resolve()
//               }, 1000)
//             }),
//           onRowUpdate: (newData) =>
//             new Promise((resolve) => {
//               setTimeout(() => {
//                 this.UpdateContacts(newData);
//                 resolve()
//               }, 1000)
//             }),
//           onRowDelete: oldData =>
//             new Promise((resolve) => {
//               setTimeout(() => {
//                 this.deleteContacts(oldData);
//                 resolve()
//               }, 1000)
//             })
//         }}
//       />
// 				</Grid>
// 				</Grid>
// 				<MdlContact show={this.state.show} handleClose={this.hideModal}>
// 					<p>Create a New Contact</p>
// 					<p style={{ height: '1em', color: 'red' }}>{err}</p>
// 					<TextField margin="normal"  required fullWidth id="Email" label="Email" name="Email"   type="text" value={this.state.Email} onChange={this.handleChange} />
// 					<TextField margin="normal"  required fullWidth id="firstName" label="First Name" name="firstName"   type="text" value={this.state.firstName} onChange={this.handleChange} />
// 					<TextField margin="normal"  required fullWidth id="surName" label="Last Name" name="surName" autoComplete="Last  Name"  type="text" value={this.state.surName} onChange={this.handleChange} />
// 					<TextField margin="normal"  required fullWidth id="phoneNumber" label="phoneNumber" name="phoneNumber" autoComplete="phoneNumber"  type="text" value={this.state.phoneNumber} onChange={this.handleChange} />
// 					<span  justify="right" direction="column" >
// 						<Button  margin="normal" type="submit"  onClick={this.addContact}  variant="contained" > Save Contact </Button>
// 						<Button  margin="normal" type="submit" variant="contained"  onClick={this.hideModal} > Cancel </Button> 
// 					</span>
// 				</MdlContact>	

// 			</div>
// 		);
// 	}
// }
// export default withStyles(STYLES)(Contacts);


//////////////////////

https://www.amazon.com/Vision-Webcam-Camera-Windows-Android/dp/B01M9DM4R6 -3,072.52
INR

https://www.amazon.com/ELP-Fisheye-170degree-Infrared-Housing/dp/B07DWWSWNH/ref=pd_cp_421_3/140-2401320-0028667?_encoding=UTF8&pd_rd_i=B07DWWSWNH&pd_rd_r=e8c8ac22-4935-4cb4-99f0-90cb8e6c2a9e&pd_rd_w=4KZco&pd_rd_wg=3Fpxw&pf_rd_p=0e5324e1-c848-4872-bbd5-5be6baedf80e&pf_rd_r=608Q02N09EYPDHBAHWBV&psc=1&refRID=608Q02N09EYPDHBAHWBV - 4,215.78

https://www.amazon.in/0-3Mp-Mjpeg-Night-Vision-Camera/dp/B07YZ6PGW9/ref=sr_1_42?adgrpid=59615310660&ext_vrnc=hi&gclid=CjwKCAiAh5_uBRA5EiwASW3Iaq6eGM21MvjD087EoPD2proLvrzwUUbvnPt3A9IpiPJLi_Xd-hGXwRoCSFYQAvD_BwE&hvadid=294145195144&hvdev=c&hvlocphy=1007826&hvnetw=g&hvpos=1t1&hvqmt=e&hvrand=1992996955095677665&hvtargid=kwd-320530499194&hydadcr=22038_1892547&keywords=night+vision+webcam&qid=1573453417&s=computers&sr=1-42

https://www.amazon.in/Tooarts-Raspberry-Infrared-Camera-Module/dp/B07QRS3N25/ref=sr_1_15?keywords=ir+led+lights&qid=1573453860&s=computers&sr=1-15


////

https://www.youtube.com/watch?v=1kIybuUfIx8&feature=youtu.be
done following updates :
bulk copy , move , delete of contacts 
page refresh removed on every event
searching , filtering sorting , pagination of contacts 
extra dependencies removed 

///////

https://youtu.be/1kIybuUfIx8


//////////



//  export default Test


// import React from 'react';
// import PropTypes from 'prop-types';
// import clsx from 'clsx';
// import { lighten, makeStyles } from '@material-ui/core/styles';
// import Table from '@material-ui/core/Table';
// import TableBody from '@material-ui/core/TableBody';
// import TableCell from '@material-ui/core/TableCell';
// import TableHead from '@material-ui/core/TableHead';
// import TablePagination from '@material-ui/core/TablePagination';
// import TableRow from '@material-ui/core/TableRow';
// import TableSortLabel from '@material-ui/core/TableSortLabel';
// import Toolbar from '@material-ui/core/Toolbar';
// import Typography from '@material-ui/core/Typography';
// import Paper from '@material-ui/core/Paper';
// import Checkbox from '@material-ui/core/Checkbox';
// import IconButton from '@material-ui/core/IconButton';
// import Tooltip from '@material-ui/core/Tooltip';
// import FormControlLabel from '@material-ui/core/FormControlLabel';
// import Switch from '@material-ui/core/Switch';
// import DeleteIcon from '@material-ui/icons/Delete';
// import FilterListIcon from '@material-ui/icons/FilterList';
// import "./styles.css";

// function createData(name, calories, fat, carbs, protein) {
//   return { name, calories, fat, carbs, protein };
// }

// const rows = [
//   createData('Cupcake', 305, 3.7, 67, 4.3),
//   createData('Donut', 452, 25.0, 51, 4.9),
//   createData('Eclair', 262, 16.0, 24, 6.0),
//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),
//   createData('Gingerbread', 356, 16.0, 49, 3.9),
//   createData('Honeycomb', 408, 3.2, 87, 6.5),
//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),
//   createData('Jelly Bean', 375, 0.0, 94, 0.0),
//   createData('KitKat', 518, 26.0, 65, 7.0),
//   createData('Lollipop', 392, 0.2, 98, 0.0),
//   createData('Marshmallow', 318, 0, 81, 2.0),
//   createData('Nougat', 360, 19.0, 9, 37.0),
//   createData('Oreo', 437, 18.0, 63, 4.0),
// ];

// function desc(a, b, orderBy) {
//   if (b[orderBy] < a[orderBy]) {
//     return -1;
//   }
//   if (b[orderBy] > a[orderBy]) {
//     return 1;
//   }
//   return 0;
// }

// function stableSort(array, cmp) {
//   const stabilizedThis = array.map((el, index) => [el, index]);
//   stabilizedThis.sort((a, b) => {
//     const order = cmp(a[0], b[0]);
//     if (order !== 0) return order;
//     return a[1] - b[1];
//   });
//   return stabilizedThis.map(el => el[0]);
// }

// function getSorting(order, orderBy) {
//   return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);
// }

// const headCells = [
//   { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },
//   { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },
//   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },
//   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },
//   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },
// ];

// function EnhancedTableHead(props) {
//   const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;
//   const createSortHandler = property => event => {
//     onRequestSort(event, property);
//   };

//   return (
//     <TableHead>
//       <TableRow>
//         <TableCell padding="checkbox">
//           <Checkbox
//             indeterminate={numSelected > 0 && numSelected < rowCount}
//             checked={numSelected === rowCount}
//             onChange={onSelectAllClick}
//             inputProps={{ 'aria-label': 'select all desserts' }}
//           />
//         </TableCell>
//         {headCells.map(headCell => (
//           <TableCell
//             key={headCell.id}
//             align={headCell.numeric ? 'right' : 'left'}
//             padding={headCell.disablePadding ? 'none' : 'default'}
//             sortDirection={orderBy === headCell.id ? order : false}
//           >
//             <TableSortLabel
//               active={orderBy === headCell.id}
//               direction={order}
//               onClick={createSortHandler(headCell.id)}
//             >
//               {headCell.label}
//               {orderBy === headCell.id ? (
//                 <span className={classes.visuallyHidden}>
//                   {order === 'desc' ? 'sorted descending' : 'sorted ascending'}
//                 </span>
//               ) : null}
//             </TableSortLabel>
//           </TableCell>
//         ))}
//       </TableRow>
//     </TableHead>
//   );
// }

// EnhancedTableHead.propTypes = {
//   classes: PropTypes.object.isRequired,
//   numSelected: PropTypes.number.isRequired,
//   onRequestSort: PropTypes.func.isRequired,
//   onSelectAllClick: PropTypes.func.isRequired,
//   order: PropTypes.oneOf(['asc', 'desc']).isRequired,
//   orderBy: PropTypes.string.isRequired,
//   rowCount: PropTypes.number.isRequired,
// };

// const useToolbarStyles = makeStyles(theme => ({
//   root: {
//     paddingLeft: theme.spacing(2),
//     paddingRight: theme.spacing(1),
//   },
//   highlight:
//     theme.palette.type === 'light'
//       ? {
//           color: theme.palette.secondary.main,
//           backgroundColor: lighten(theme.palette.secondary.light, 0.85),
//         }
//       : {
//           color: theme.palette.text.primary,
//           backgroundColor: theme.palette.secondary.dark,
//         },
//   title: {
//     flex: '1 1 100%',
//   },
// }));

// const EnhancedTableToolbar = props => {
//   const classes = useToolbarStyles();
//   const { numSelected } = props;

//   return (
//     <Toolbar
//       className={clsx(classes.root, {
//         [classes.highlight]: numSelected > 0,
//       })}
//     >
//       {numSelected > 0 ? (
//         <Typography className={classes.title} color="inherit" variant="subtitle1">
//           {numSelected} selected
//         </Typography>
//       ) : (
//         <Typography className={classes.title} variant="h6" id="tableTitle">
//           Nutrition
//         </Typography>
//       )}

//       {numSelected > 0 ? (
//         <Tooltip title="Delete">
//           <IconButton aria-label="delete">
//             <DeleteIcon />
//           </IconButton>
//         </Tooltip>
//       ) : (
//         <Tooltip title="Filter list">
//           <IconButton aria-label="filter list">
//             <FilterListIcon />
//           </IconButton>
//         </Tooltip>
//       )}
//     </Toolbar>
//   );
// };

// EnhancedTableToolbar.propTypes = {
//   numSelected: PropTypes.number.isRequired,
// };

// const useStyles = makeStyles(theme => ({
//   root: {
//     width: '100%',
//     marginTop: theme.spacing(3),
//   },
//   paper: {
//     width: '100%',
//     marginBottom: theme.spacing(2),
//   },
//   table: {
//     minWidth: 750,
//   },
//   tableWrapper: {
//     overflowX: 'auto',
//   },
//   visuallyHidden: {
//     border: 0,
//     clip: 'rect(0 0 0 0)',
//     height: 1,
//     margin: -1,
//     overflow: 'hidden',
//     padding: 0,
//     position: 'absolute',
//     top: 20,
//     width: 1,
//   },
// }));

export default function Test() {
  const classes = useStyles();
  const [order, setOrder] = React.useState('asc');
  const [orderBy, setOrderBy] = React.useState('calories');
  const [selected, setSelected] = React.useState([]);
  const [page, setPage] = React.useState(0);
  const [dense, setDense] = React.useState(false);
  const [rowsPerPage, setRowsPerPage] = React.useState(5);

  const handleRequestSort = (event, property) => {
    const isDesc = orderBy === property && order === 'desc';
    setOrder(isDesc ? 'asc' : 'desc');
    setOrderBy(property);
  };

  const handleSelectAllClick = event => {
    if (event.target.checked) {
      const newSelecteds = rows.map(n => n.name);
      setSelected(newSelecteds);
      return;
    }
    setSelected([]);
  };

  const handleClick = (event, name) => {
    const selectedIndex = selected.indexOf(name);
    let newSelected = [];

    if (selectedIndex === -1) {
      newSelected = newSelected.concat(selected, name);
    } else if (selectedIndex === 0) {
      newSelected = newSelected.concat(selected.slice(1));
    } else if (selectedIndex === selected.length - 1) {
      newSelected = newSelected.concat(selected.slice(0, -1));
    } else if (selectedIndex > 0) {
      newSelected = newSelected.concat(
        selected.slice(0, selectedIndex),
        selected.slice(selectedIndex + 1),
      );
    }

    setSelected(newSelected);
  };

  const handleChangePage = (event, newPage) => {
    setPage(newPage);
  };

  const handleChangeRowsPerPage = event => {
    setRowsPerPage(parseInt(event.target.value, 10));
    setPage(0);
  };

  const handleChangeDense = event => {
    setDense(event.target.checked);
  };

  const isSelected = name => selected.indexOf(name) !== -1;

  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);

  return (
    <div className={classes.root}>
      <Paper className={classes.paper}>
        <EnhancedTableToolbar numSelected={selected.length} />
        <div className={classes.tableWrapper}>
          <Table
            className={classes.table}
            aria-labelledby="tableTitle"
            size={dense ? 'small' : 'medium'}
            aria-label="enhanced table"
          >
            <EnhancedTableHead
              classes={classes}
              numSelected={selected.length}
              order={order}
              orderBy={orderBy}
              onSelectAllClick={handleSelectAllClick}
              onRequestSort={handleRequestSort}
              rowCount={rows.length}
            />
            <TableBody>
              {stableSort(rows, getSorting(order, orderBy))
                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)
                .map((row, index) => {
                  const isItemSelected = isSelected(row.name);
                  const labelId = `enhanced-table-checkbox-${index}`;

                  return (
                    <TableRow
                      hover
                      onClick={event => handleClick(event, row.name)}
                      role="checkbox"
                      aria-checked={isItemSelected}
                      tabIndex={-1}
                      key={row.name}
                      selected={isItemSelected}
                    >
                      <TableCell padding="checkbox">
                        <Checkbox
                          checked={isItemSelected}
                          inputProps={{ 'aria-labelledby': labelId }}
                        />
                      </TableCell>
                      <TableCell component="th" id={labelId} scope="row" padding="none">
                        {row.name}
                      </TableCell>
                      <TableCell align="right">{row.calories}</TableCell>
                      <TableCell align="right">{row.fat}</TableCell>
                      <TableCell align="right">{row.carbs}</TableCell>
                      <TableCell align="right">{row.protein}</TableCell>
                    </TableRow>
                  );
                })}
              {emptyRows > 0 && (
                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>
                  <TableCell colSpan={6} />
                </TableRow>
              )}
            </TableBody>
          </Table>
        </div>
        <TablePagination
          rowsPerPageOptions={[5, 10, 25]}
          component="div"
          count={rows.length}
          rowsPerPage={rowsPerPage}
          page={page}
          backIconButtonProps={{
            'aria-label': 'previous page',
          }}
          nextIconButtonProps={{
            'aria-label': 'next page',
          }}
          onChangePage={handleChangePage}
          onChangeRowsPerPage={handleChangeRowsPerPage}
        />
      </Paper>
     
    </div>
  );
}

////////


//header ("Access-Control-Allow-Origin: *");
// header ("Access-Control-Expose-Headers: Content-Length, X-JSON");
// header ("Access-Control-Allow-Methods: GET, POST, PATCH, PUT, DELETE, OPTIONS");
// header ("Access-Control-Allow-Headers: *");

// Route::apiResource('cors', 'HomeController@test')->middleware('cors');

//////

		return fetch(Const.URL.SERVER_BASE_URL + '/cors1', 
			{
				method: 'post',
				credentials: "same-origin",
				headers: {    
					'Accept': 'application/json',
					'Content-Type': 'application/json',
					//'Access-Control-Allow-Origin': '*' 
				},

			}
			).then(response => response.json())
			.then(resData => {			
								
				console.log(resData)
			})


//////////////////
/usr/share/code/code
sudo -i gedit /etc/resolve.conf


//////


127.0.0.1 abc
127.0.0.1:3000 abc

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters


////////


sudo apt-get install nscd
sudo service dns-clean start
 sudo service nscd restart
 Kill dnsmasq
reboot

"/home/neeraj/neeraj/laravel-mailapp/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/AbstractSmtpTransport.php"


"Expected response code 250 but got code 530, with message 530 5.7.1 Authentication required
""

///////


csv upload file size - 1k rows
dynamic header 10 - like sending blue
forms remove
change pwd -modal
import contacts >10k process table entry  - used if , flag 0 /1
>1 lakh , msg comes - notifaction keeps running on same page 
csrf token - enable
.env prod default , filter by ip


//////////////

Kanha(2N)
Gwalior(1N) | Orchha(1N) | Khajuraho(2N)
Ujjain(1N) | Indore(3N)

Jabalpur to Kanha National Park: 164 km
bandhavgarh to kanha - 215 - Umaria and Katni

kanha to khajuraho road distance - 404
bandhavgarh to pachmarhi distance  -500
kanha to pachmarhi distance- 400

Individual bookings are possible for the safaris : 2000 Rs (entry for the jeep) + 150 Rs (guide) + 30 Rs (tax) + 1000 Rs (gipsy rent at Bandhavgarh, a little bit more at Kanha)= 3180 Rs per safari. Expensive 

panchamani to bandhavgarh -8 hrs

		const fileData = JSON.stringify({
			 			'importedContacts' :this.state.importedContacts,
			 			'newList': this.state.newList
			 		});
		const blob = new Blob([fileData], {type: "text/plain"});
		const url = URL.createObjectURL(blob);
		const link = document.createElement('a');
		link.download = 'csv.json';
		link.href = "http://campaignserver.com:3001/api/storage";
		link.click();

/////


return "success";


             $this->dm->createQueryBuilder(ContactList::class)
                                ->findAndUpdate()
                                ->field('list_id')
                                ->equals($request->get('list_id'))
                                ->field('name')
                                ->set($request->get('name'))
                                ->getQuery()
                                ->execute(); 


            $flag = $this->dm->createQueryBuilder(Process::class)
            ->getQuery()
            ->getSingleResult();


         print_r($flag);

        Storage::put('file.json', 'Your name');


            // $fs = require('fs');

            // $fs.writeFile("/tmp/test", "Hey there!", function(err) {

            // if(err) {
            // return err;
            // }

            // return "The file was saved!" ;
            // });


        $json = Storage::disk('local')->get('csv.json');
        $json = json_decode($json, true);

        foreach($json as $j)
        {
            print_r($j['FIRSTNAME']);

            // [Name Prefix] => Ms. [FIRSTNAME] => Hermila [LASTNAME] => Suhr [Gender] => F [EMAIL] => hermila.suhr@gmail.com [Father's Name] => Todd Suhr [Mother's Name] => Cathrine Suhr [Date of Birth] => 9/4/1992 [Age in Yrs.] => 24.91 [PhoneNo] => 479-539-4593 [County] => Clay [City] => Peach Orchard [State] => AR [Zip] => 72453 [] => [__1] => [__2] => [__3] => [__4] => ) [1
        }
        //print_r($json);

        $path = '/uploads/csv.json';
        $content = json_decode(file_get_contents($path), true);

        return response()->json(['message' =>'corstest'], 200);

        $config =$this->dbConfiguration();
        $config->setDefaultDB('e_056365a097');
        $this->dm = DocumentManager::create($this->connection, $config);

        $usersExist = $this->dm->createQueryBuilder(ClientUser::class)
        ->field('email')->equals('a@gmail.com')
        ->getQuery()
        ->getSingleResult();

            foreach ( $usersExist->getListId() as $list ) {

                // if($list)
                // {
                //     array_push($arr_list,(int)$list);
                // }
               
            }


        return;
                
/////////////
on click upload  -  save csv to laravel storage

save file name , path,flag ,column header mapping to client-> process 

schedular runs on laravel start 

--> reach master process --> take client id ,
      for each client --> connect to client

-->get client process --flag , 
            if 0 - return to be not imported
            if 1 - pickup csv file , header , --> insert according to header Mapped
             2 - return completed 
if(0)
{
    nothing
}
csv uploaded - set 1
if(1)
{

    //insert from csv to db 
    //insert complete  - 2

}
if(2)
{
    completed 
}
* * * * * cd /home/neeraj/neeraj/laravel-mailapp/app && php artisan schedule:run 1>> /dev/null 2>&1

* * * * * php /home/neeraj/neeraj/laravel-mailapp/artisan schedule:run 1>> /dev/null 2>&1


 //1.csv upload not started --> flagCron=0 ,flagState=0 
        //2.csv upload bnt pressed 
            //--> csv upload >10k
            // --> flagcron =1 

            //$flag=0 -- not uploaded
            //$flag=1 --  uploaded , ready to insert
            //$flag=2 -- insert start
            //$flag=3 -- insert done

        $flag=0;

/////

 // $schedule->command('log:demo')
                // ->everyMinute();

        // $schedule->call(function() {

        //     \Log::info("schedule");
        // });

       // $schedule->call('\App\Http\Controllers\HomeController::test("abc")');

///////
    //pickup from csv in storage and insert

    $json = Storage::disk('local')->get('contacts.json');
    $json = json_decode($json, true);

    foreach($json as $j)
    {
    }
///////

console.log('move')
  if (i == 0) {
    i = 1;
    var elem = document.getElementById("myBar");
    var width = 1;
    var id = setInterval(frame, 100);
    function frame() {
      if (width >= 100) {
        clearInterval(id);
        i = 0;
      } else {
        width++;
        elem.style.width = width + "%";
      }
    }
  }

  ///////



// 0: {name_prefix: "Ms.", , lastname: "Suhr", gender: "F", email: "hermila.suhr@gmail.com", …}
// 1: {name_prefix: "Mr.", firstname: "Antonio", lastname: "Joy", gender: "M", email: "antonio.joy@yahoo.com", …}
// 2: {name_prefix: "Prof.", firstname: "Sebastian", lastname: "Moores", gender: "M", email: "sebastian.moores@ibm.com", …}
// 3: {name_prefix: "Mr.", firstname: "Alec", lastname: "Rittenhouse", gender: "M", email: "alec.rittenhouse@gmail.com", …}
// 4:
// "": nu


        // $request->get('csvHeaders');
        // $request->get('uploadedData');
        //Storage::put('contacts.csv', $request->get('uploadedData'));
        

                    // // $filename = "neeraj";

            // header("Content-type: text/csv");
            // header("Content-Disposition: attachment; filename={$filename}.csv");
            // header("Pragma: no-cache");
            // header("Expires: 0");
            
            // $outputBuffer = fopen("php://output", 'w');
            //  foreach($data as $val) {
            //     Storage::put('contacts.csv', $val);
            // //     fputcsv($outputBuffer, $val);
            //  }
            //  fclose($outputBuffer);


//////////



            $data = array(
                array( "a"=>"row", "b"=>"col")
            );
        
        // Create a stream opening it with read / write mode
        $stream = fopen('data://text/plain,' . "", 'w+');
        
        // Iterate over the data, writting each line to the text stream
        foreach ($data as $val) {
            fputcsv($stream, $val);
        }
        
        // Rewind the stream
        rewind($stream);
        
        // You can now echo it's content
        echo stream_get_contents($stream);
        
        // Close the stream 
        fclose($stream);


/////////


        $headers = [
            "Content-type" => "text/csv",
            "Content-Disposition" => "attachment; filename=" . $fileName,
            "Pragma" => "no-cache",
            "Cache-Control" => "must-revalidate, post-check=0, pre-check=0",
            "Expires" => "0"
        ];
        $callback = function() use ($columnNames, $rows ) {
            $file = fopen('php://output', 'w');
            fputcsv($file, $columnNames);
            foreach ($rows as $row) {
                fputcsv($file, $row);
            }
            fclose($file);
        };
        return response()->stream($callback, 200, $headers);


        //////////




            $headers = array(
                "Content-type" => "text/csv",
                "Content-Disposition" => "attachment; filename=file.csv",
                "Pragma" => "no-cache",
                "Cache-Control" => "must-revalidate, post-check=0, pre-check=0",
                "Expires" => "0"
            );
        
            $data1 =array(array('name_prefix'=> "a","firstname"=> "b"));

            $columns = array('ReviewID', 'Provider', 'Title', 'Review', 'Location', 'Created', 'Anonymous', 'Escalate', 'Rating', 'Name');
        
            $callback = function() use ($data1, $columns)
            {
                $file = fopen('php://output', 'w');
                fputcsv($file, $columns);
                fputcsv($file,array('name_prefix'=> "a","firstname"=> "b"));
                fclose($file);
            };
          //  return Response::stream($callback, 200, $headers);

        
        // array('name_prefix'=> "c","firstname"=> "d"));

        // $csv_data = $this->array_2_csv($data1);
    
        // Storage::put('contacts.csv', $csv_data);


/////
            
        $headers = [
        "Content-type" => "text/csv",
        "Content-Disposition" => "attachment; filename=file1.csv",
        "Pragma" => "no-cache",
        "Cache-Control" => "must-revalidate, post-check=0, pre-check=0",
        "Expires" => "0"
        ];

        $file = fopen('php://output', 'w');
        fputcsv($file, $columnNames);
        foreach ($rows as $row) {
        fputcsv($file, $row);
        }
        fclose($file);
             
        return 'success';


            $data =array(array('name_prefix'=> "Ms.","firstname"=> "Hermila"),
            array('name_prefix'=> "Ms.","firstname"=> "Hermila"));

            $filename = "neeraj";

            header("Content-type: text/csv");
            header("Content-Disposition: attachment; filename={$filename}.csv");
            header("Pragma: no-cache");
            header("Expires: 0");
            
            $outputBuffer = fopen("php://output", 'w');
            foreach($data as $val) {
                fputcsv($outputBuffer, $val);
            }
            fclose($outputBuffer);



            return;


            Storage::put('file.csv', 'Your name');
            return ;

            $config =$this->dbConfiguration();
            $config->setDefaultDB('e_056365a097');
            $this->dm = DocumentManager::create($this->connection, $config);

            $flagQuery = $this->dm->createQueryBuilder(Process::class)
            ->getQuery()
            ->getSingleResult();

            if(!$flagQuery)
            {
            return ;
            }

            $flag=$flagQuery->getFlag();

            return response()->json(['flag' => $flag],200); 

            $this->dm->createQueryBuilder(ClientUser::class)
            ->remove()
            ->field('email')
            ->notEqual('mail.nrj@gmail.com')
            ->getQuery()
            ->execute();

            $users = $this->dm->createQueryBuilder(ClientUser::class)
            ->getQuery()
            ->execute();

            $arr_list=[];

            foreach ($users as $u) {

                print_r($u->getListId()[0]);
            // foreach ( $u->getListId()[0] as $list ) {

            //     if($list)
            //     {
            //         array_push($arr_list,(int)$list);
            //     }
            
            // }

        }

            return;

    
       
        $flagQuery = $this->dm->createQueryBuilder(Process::class)
        ->getQuery()
        ->getSingleResult();

        print_r($flagQuery->getFlag());

        $file_n = Storage::path('100Contacts.csv');
        $file = fopen($file_n, "r");
        $all_data = array();

        $Headers=['Prefix','FIRSTNAME','LASTNAME','Gender','EMAIL','Father Name','Mother Name','Date of Birth',
        'Age in Yrs.','PhoneNo','County','City','State','Zip'];
        
        while (($data = fgetcsv($file, 200, ",")) !==FALSE) 
        {
                for($j=0;$j<count($data);$j++)
                {
                    if (in_array($data[$j], $Headers)) 
                    {
                        echo "Header :".$data[$j]."<br/>";

                        $file1 = fopen($file_n, "r");
                        while (($row = fgetcsv($file1, 200, ",")) !==FALSE)  
                        {
                            if (!in_array($row[$j], $Headers))
                            {
                                echo $row[$j]."<br/>";
                            }
                        }
                    }
                }
           
         }

        fclose($file);
        return;

        $array = array_map("str_getcsv", explode("\n", $csv));
        $json = json_encode($array);


        $json = Storage::disk('local')->get('contacts.json');
        $json = json_decode($json, true);
            
        $flag = $this->dm->createQueryBuilder(Process::class)
        ->getQuery()
        ->getSingleResult()->getFlag();

        print_r($flag);

        if($flag==0)
        {
            return 0;
        }
        if($flag==1)
        {
            $flag=2;

            //pickup from csv in storage and insert

            $json = Storage::disk('local')->get('csv.json');
            $json = json_decode($json, true);

            foreach($json as $j)
            {

            $clientUser = new ClientUser();
            
            $clientUser->setFirstName($j['FIRSTNAME']); 
            $this->dm->persist($clientUser);
            $this->dm->flush();

            $flag=3;

            }

            return 'insert finished';

        }
        if($flag==3)
        {
            return 'insert completed';
        }
  ///////

    //  return Response::stream($callback, 200, $headers);

        
        // array('name_prefix'=> "c","firstname"=> "d"));

        // $csv_data = $this->array_2_csv($data1);
    
        // Storage::put('contacts.csv', $csv_data);
        
//////////


            $headers = array(
                "Content-type" => "text/csv",
                "Content-Disposition" => "attachment; filename=file.csv",
                "Pragma" => "no-cache",
                "Cache-Control" => "must-revalidate, post-check=0, pre-check=0",
                "Expires" => "0"
            );
        
            $data1 =array(array('name_prefix'=> "a","firstname"=> "b"));

            $columns = array('ReviewID', 'Provider', 'Title', 'Review', 'Location', 'Created', 'Anonymous', 'Escalate', 'Rating', 'Name');
        
            $callback = function() use ($data1, $columns)
            {
                $file = fopen('php://output', 'w');
                fputcsv($file, $columns);
                fputcsv($file,array('name_prefix'=> "a","firstname"=> "b"));
                fclose($file);
            };


 //////////

 

						{/* Object.keys(row).forEach(function(key) {
							
						}); */}

					{/* Object.keys(row).forEach(function(key) (
					
					<TableCell >{row[key]}</TableCell>
					)) */}
           

////////


"name_prefix","firstname","lastname","gender","email","father_s_name","mother_s_name","date_of_birth","age_in_yrs_","phoneno","county","city","state","zip"

///////


    public function array_2_csv($array) {
        $csv = array();
        foreach ($array as $item) {
            if (is_array($item)) {
                $csv[] = $this->array_2_csv($item);
            } else {
                
                $csv[] = $item;
            }
            implode(",\n", $csv);
        }
        return implode(',', $csv);
    } 

    public static function getCsv($columnNames, $rows, $fileName = 'file.csv') {

        $rows = [['a','b','c'],[1,2,3]];//replace this with your own array of arrays
        $columnNames = ['blah', 'yada', 'hmm'];//replace this with your own array of string column headers        
        return self::getCsv($columnNames, $rows);
    
    }

/////


 case 'Prefix':
                                    $users->setPrefix($row[$j]);
                                    break;
                                    
                                    case 'FIRSTNAME':
                                    $users->setFirstName($row[$j]); 
                                    break;

                                    case 'LASTNAME':
                                        $users->setSurName($row[$j]);
                                    break;

                                    case 'Gender':
                                        $users->setGender($row[$j]);
                                    break;

                                    case 'EMAIL':
                                        $users->setEmail($row[$j]);
                                    break;

                                    case 'Father Name':
                                        $users->setFatherName($row[$j]);
                                    break;

                                    case 'Mother Name':
                                        $users->setMotherName($row[$j]);
                                    break;

                                    case 'Date of Birth':
                                        $users->setDob($row[$j]);
                                    break;

                                    case 'Age_in_Yrs,PhoneNo,County,City,State,Zip
Prefix	FIRSTNAME	LASTNAME	Gender	EMAIL	Father_Name	Mother's Name	Date of Birth	Age in Yrs.	PhoneNo	County	City	State	Zip

Prefix,FIRSTNAME,LASTNAME,Gender,EMAIL,Father_Name,Mother_Name,DOB,Age,PhoneNo,County,City,State,Zip


///////


 //return response()->json(['message' =>$data], 200);

                for($j=0;$j<count($data);$j++)
                {
                    if (in_array($data[$j], $Headers)) 
                    {
                        $file1 = fopen($file_n, "r");
                        while (($row = fgetcsv($file1, 200, ",")) !==FALSE)  
                        {
                            if (!in_array($row[$j], $Headers))
                            {
                                $users = new ClientUser();

                                switch ($data[$j]) {

                                    case 'Prefix':
                                    $users->setPrefix($row[$j]);
                                    break;
                                    
                                    case 'FIRSTNAME':
                                    $users->setFirstName($row[$j]); 
                                    break;

                                    case 'LASTNAME':
                                        $users->setSurName($row[$j]);
                                    break;

                                    case 'Gender':
                                        $users->setGender($row[$j]);
                                    break;

                                    case 'EMAIL':
                                        $users->setEmail($row[$j]);
                                    break;

                                    case 'Father_Name':
                                        $users->setFatherName($row[$j]);
                                    break;

                                    case 'Mother_Name':
                                        $users->setMotherName($row[$j]);
                                    break;

                                    case 'DOB':
                                        $users->setDob($row[$j]);
                                    break;

                                    case 'Age':
                                        $users->setAge($row[$j]);
                                    break;

                                    case 'PhoneNo':
                                        $users->setPhoneNo($row[$j]);
                                    break;

                                    case 'County':
                                        $users->setCounty($row[$j]);
                                    break;

                                    case 'City':
                                        $users->setCity($row[$j]);
                                    break;

                                    case 'State':
                                        $users->setState($row[$j]);
                                    break;

                                    case 'Zip':
                                        $users->setZip($row[$j]);
                                    break;

                                }

                                $users->setUserBlacklist(array());
                                $users->setUserHistory(array());
                                $users->setShrKey(1);
                                $users->setAttributes(array());
                                $users->setBlackListed(0);
                                $users->setEntered();
                                $users->setSc(-1);
                                $users->setListId(array("0"=>$request->get('newList')[0]));
                                $this->dm->persist($users);
                                $this->dm->flush();

                            }

                        }

                        return response()->json(['message' =>Config::get('constants.messages.SUCCESS')], 200);
                    }
                }

//////


The '' function makes the dependencies of useEffect Hook  change on every render. To fix this, wrap the '' definition into its own useCallback() Hook

//////////




      console.log(from)
      //console.log(to)

      //console.log(document.getElementsByTagName('button')[0].getAttribute("aria-label"))

      if(document.getElementsByTagName('button')[0].getAttribute("name")==="Next Page")
      {
        console.log("Next page")
      }
    
      else if(document.getElementsByTagName('button')[0].getAttribute("title")==="Previous Page")
      {
        console.log("Previous page")
      }



  // const abc1 = e => {

  //   console.log(e)
  //   console.log(e.target.value)
  //   console.log(document.getElementsByTagName('button')[0].getAttribute("name"))

  // }

 // console.log(e)
    // console.log(e.target.value)
    //console.log(document.getElementsByTagName('button').length)
   
       
    // console.log(from); //3
    // console.log(to); //25

    // console.log(document.querySelectorAll('[title="Next page"]')[0])
    // if(document.querySelectorAll('[title="Next page"]')[0])
    // {
    //   console.log(document.querySelectorAll('[title="Next page"]')[0].getAttribute("title"))
    //   // if(document.getElementsByClassName('MuiTypography-root')[1])
    //   // {
        
    //   // }
    // }
    
  // document.querySelectorAll('[title="Next page"]');


//document.querySelectorAll('[title="Next page"]')[0].addClass('Next')


  document.getElementsByTagName('button').onClick=abc();
  
  function abc()
  {
   
    // if(document.getElementsByTagName('button').length>0)
    // {
    //   console.log(document.getElementsByTagName('button')[0])
    //   let rangeText=document.getElementsByClassName('MuiTypography-root')[1].innerHTML;

    //   console.log(rangeText)
    //   let from =rangeText.split('-', 1)[0]
    //   let to = rangeText.slice(2, rangeText.lastIndexOf('-') + 3)

    //   console.log(from)
    //   console.log(to)

    // }

  }


  ///////




            $list_users=array();
            foreach ($users as $u) 
            {    
                $arr_list=$u->getListId()[0];
                if($arr_list)
                {
                    foreach ($arr_list as $list) 
                    {
                        if($list==$request->get('list_id'))
                        {
                            array_push($list_users,array(
                                    'id'=>$u->getId(),
                                    'email'=>$u->getEmail(),
                                    'firstname'=>$u->getFirstName(),
                                    'surname'=>$u->getSurName(),
                                    'phoneno'=>$u->getPhoneNo(),
                                    'list_id'=>$request->get('list_id'),
                                    'userCount'=>$this->getUserCount($request->get('list_id'))));
                        }        
                    }
                }                
            };
            return response()->json(['list_users' => $list_users],200);   

////////


  $rownum=0;

            foreach ($users as $u) 
            { 
              if($rownum>=$request->get('from'))
                 {
                 $arr_list=$u->getListId()[0];
                    if($arr_list)
                    {
                        foreach ($arr_list as $list) 
                        { 
                            if($list==$request->get('list_id'))
                            {
                                
                                    array_push($list_users,array(
                                        'id'=>$u->getId(),
                                        'email'=>$u->getEmail(),
                                        'firstname'=>$u->getFirstName(),
                                        'surname'=>$u->getSurName(),
                                        'phoneno'=>$u->getPhoneNo()));
                                }
                                
                            };
                            
                        }
                  }
              if($rownum==$request->get('to'))
                 {
                   break;
                 }
                 
            $rownum++;
                
            }

            array_push($list_users,['userCount'=>$this->getUserCount($request->get('list_id'))]);
            
            return response()->json(['list_users' => $list_users],200);  



https://stackoverflow.com/questions/20100829/doctrine-odm-query-builder-find-where-collection-is-empty


/////////

https://www.w3resource.com/mongodb/shell-methods/collection/db-collection-count.php
db.restaurants.find({"cuisine" : "American "}).count() 

{"_id":"59f889e46803fa3713454b5d","projectName":"usecase-updated","classes":{"_id":"ObjectId(\"59f9d7776803faea30b895dd\")","className":"OLA"}}


           $builder->addFields()
            ->field('list_id[0][0]')
            ->expression(['list_id[0][0]' => 2])
            ->count('list_id[0][0]');

//////////

 $config =$this->dbConfiguration();
            $config->setDefaultDB('e_056365a097');
            $this->dm = DocumentManager::create($this->connection, $config);
            
            $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
            ->field('list_id.0')
            ->equals([2])
            ->limit(0)
            ->skip(100)
            ->getQuery();

            $list_users=array();

            foreach($usersQuery->execute() as $u)
            {
                array_push($list_users,array(
                    'id'=>$u->getId(),
                    'email'=>$u->getEmail(),
                    'firstname'=>$u->getFirstName(),
                    'surname'=>$u->getSurName(),
                    'phoneno'=>$u->getPhoneNo()));
            }
            return response()->json(['list_users' => $list_users,"userCount"=>$usersQuery->count()],200); 

        $users = $this->dm->createQueryBuilder(ClientUser::class)
        ->field('list_id.0')
        ->equals([2])
        ->getQuery()->count();

        print_r($users);
        // foreach($users as $r)
        // {

            
        // }
        return ;


            $users = $this->dm->createAggregationBuilder(ClientUser::class)
            ->addFields()
            ->field('list.0.0')
            ->equals(2)
            ->getQuery()->count();



           //$builder =$this->dm->createAggregationBuilder(ClientUser::class);

        $users = $this->dm->createAggregationBuilder(ClientUser::class)
        ->addFields()
        ->field('list[0][0]')
        ->equals(2)
        ->getQuery()->count();

        //$result = $builder->execute();

            $builder->addFields()
            ->field('list_id[0][0]')
            ->expression(['list_id[0][0]' => 1113])
            ->count('list_id[0][0]');

            // $builder
            // ->match()
            // ->field('email')
            // ->equals('mail.nrj@gmail.com')
            // ->count('list_id[0][0]')
            // ;


            

           $pipeline = array(
            array('$match' =>
                array(
                    'email' => array('$exists' => true)
                )
            )
        );
    
        return $this->getDocumentManager()->getDocumentCollection('Product')->aggregate($pipeline);
        
           $builder
            ->match()
            ->field('email')
            ->in(['mail.nrj@gmail.com'])
            ->group()
                ->field('email')
                ->expression('mail.nrj@gmail.com')
                ->field('email')
                ->count('email');

            $result = $builder->execute();

            foreach($result as $r)
            {

                print_r($r);
            }
            return ;

           $classObject = $qb->match()
              ->field("id", new \MongoId('59f889e46803fa3713454b5d'))
              ->project()
              ->field("classes")
              ->execute()->getSingleResult();

           return ;

           $builder = $this->dm->createAggregationBuilder(Counter::class);

            $builder
            ->match()
            ->field('email')
            ->equals('mail.nrj@gmail.com')
            ->count('list_id')
            ->group()
                ->field('_id')
                ->expression('$email')
                ->field('email')
                ->sum(1)
            ;

            $result = $builder->execute();

            print_r($result);
            return $result;

           $qb->group()
                    ->field('email')
                    ->expression('mail.nrj@gmail.com')
                    ->execute()
                    ->count();

                    //$results = $qb->execute();

                    //print_r($results);
                    return $qb;

            $qb = $this->dm->createAggregationBuilder(ClientUser::class);

            $qb->group()
            ->field('list_id.0.0')
            ->equals(2)
            ->sum(1);



            $dbName = 'e_056365a097';

            $mongo = $this->connection->getMongo();
            $db = $mongo->selectDB($dbName);


            //-- runCommand
        $itemResultSet = $this->dm->getDocumentDatabase('ClientUser')->command([
            'text' => 'list.0.0',
            'search' => 2,
            'limit' => 1
        ]);


        return $resultSet;


            $results = $db ->command([
            'count' => 'ClientUser',
            'pipeline' => [
            ['$group' => ['count' => ['list.0.0' => 2]]]
            ]
            ]);

            print_r($results);
            return ;


            //$count = DB::table('users')->count();


           // print_r($count);
            
            // $count = \DB::collection('users')->raw()->aggregate([
            //     ['$project' => ['_id' => 0,
            //                    'likes' => array('$size' => array('$like')),
            //                    ]
            //     ],['$sort' => array('likes' => -1)]
            // ]);

            $count = $this->dm->createQueryBuilder(ClientUser::class)
            ->raw()->aggregate([
                    ['$project' => ['_id' => 0,
                                   'likes' => array('$size' => array('$like')),
                                   ]
                    ],['$sort' => array('likes' => -1)]
                ]);


            // $count = $this->dm->createQueryBuilder(ClientUser::class)
            // ->field('list_id.0.0')->equals(2)
            // ->getQuery()->count();

            print_r($count);

            return ;

            $qb = $this->createQueryBuilder('User');

            $qb->addAnd($qb->expr()->field('first_name')->equals('Kris'));
  
  
            // $count1 = $this->dm->createQueryBuilder(ClientUser::class)->select('list_id.0')->field('0')->equals(2)->getQuery()->count();

        $clientDB='e_056365a097';
        $process_id = $this->dm->createQueryBuilder(Process::class)
        ->getQuery()->getSingleResult()->getId();


        $config =$this->dbConfiguration();
        $config->setDefaultDB('CentralDB');
        $this->dm = DocumentManager::create($this->connection, $config);

        $masterProcess = new Master_Process(); 
        $masterProcess->setClientDB($clientDB);
        $masterProcess->setProcessID($process_id);
        $this->dm->persist($masterProcess);
        $this->dm->flush();

            
            // foreach ($users as $u)
            // {

            //     //print_r($users);
            // }

            // $users1 = $this->dm->createQueryBuilder(ClientUser::class)
            // ->getQuery()->getSingleResult();

            // $users = $this->dm->createQueryBuilder(ClientUser::class)
            // ->field('list.0.0')
            // ->equals('mail.nrj@gmail.com')
            // ->getQuery()->execute()->count();

            $users = $this->dm->createQueryBuilder(ClientUser::class)
            ->getQuery()->execute();
            $count=0;
            foreach ($users as $u)
            {
                if($u->getListId()[0][0]==2)
                {
                    $count++;
                }
            }
            
           
            
            //response()->json(['list_users' => $users],200);


            $list_users=array();

            $rownum=0;

            foreach ($users as $u) 
            { 
              if($rownum>=2)
                 {
                 $arr_list=$u->getListId()[0];
                    if($arr_list)
                    {
                        foreach ($arr_list as $list) 
                        { 
                            if($list==2)
                            {
                                
                                    array_push($list_users,array(
                                        'id'=>$u->getId(),
                                        'email'=>$u->getEmail(),
                                        'firstname'=>$u->getFirstName(),
                                        'surname'=>$u->getSurName(),
                                        'phoneno'=>$u->getPhoneNo()));
                            }
                                
                            };
                          
                            

                        }

                       
                    
                  }
              if($rownum==8)
                 {
                   break;
                 }
                 
            $rownum++;
            }

            return response()->json(['list_users' => $list_users],200);

            foreach ($users as $u) 
            { 
                $arr_list=$u->getListId()[0];
                if($arr_list)
                {
                    foreach ($arr_list as $list) 
                    { 
                        if($list==2)
                        {
                            if($rownum>=4)
                            {
                                array_push($list_users,array(
                                    'id'=>$u->getId(),
                                    'email'=>$u->getEmail(),
                                    'firstname'=>$u->getFirstName(),
                                    'surname'=>$u->getSurName(),
                                    'phoneno'=>$u->getPhoneNo()));
                            }
                            if($rownum==8)
                            {
                            break;
                            }
                        $rownum++;

                        //array_push($list_users,['userCount'=>$this->getUserCount(2)]);
            
                        };
                        
                    }
                }
                
            }
            
            

            $clientDB=$this->clientDB;

            $file_n = Storage::path('/e_056365a097/Contacts.csv');
            $file = fopen($file_n, "r");

            while (($data = fgetcsv($file)) !==FALSE) 
            {
            //Array ( [0] => Ms. [1] => Hermila [2] => Suhr [3] => F [4] => hermila.suhr@gmail.com [5] => Todd Suhr [6] => Cathrine Suhr [7] => 9/4/1992 [8] => 24.91 [9] => 479-539-4593 [10] => Clay [11] => Peach Orchard [12] => AR [13] => 72453 [14] => ) 

            $users = new ClientUser();

            $users->setPrefix($data[0]);
            $users->setFirstName($data[1]); 
            $users->setSurName($data[2]);
            $users->setGender($data[3]);
            $users->setEmail($data[4]);
            $users->setFatherName($data[5]);
            $users->setMotherName($data[6]);
            $users->setDob($data[7]);
            $users->setAge($data[8]);
            $users->setPhoneNo($data[9]);
            $users->setCounty($data[10]);
            $users->setCity($data[11]);
            $users->setState($data[12]);
            $users->setZip($data[13]);

            $users->setUserBlacklist(array());
            $users->setUserHistory(array());
            $users->setShrKey(1);
            $users->setAttributes(array());
            $users->setBlackListed(0);
            $users->setEntered();
            $users->setSc(-1);
            $users->setListId(array("id"=>array("0"=>"2")));
            $this->dm->persist($users);
            $this->dm->flush();

            }


            $this->dm->createQueryBuilder(Process::class)->findAndUpdate()->field('flagState')->set(1)->getQuery()->execute();


            $this->dm->createQueryBuilder(Process::class)
            ->findAndUpdate()
            ->field('email')
            ->equals($request->get('email'))
            ->field('list_id')
            ->set($arr_list)
            ->getQuery()
            ->execute(); 

            $this->dm->createQueryBuilder(Process::class)
            ->findAndUpdate()
            ->field('flagState')
            ->set(1)
            ->getQuery()
            ->execute();



            return;

            $settings = $this->dm->createQueryBuilder(Settings::class)
            ->getQuery()->getSingleResult();
          
            return response()->json(['csvheaders' => $settings->getCsvHeaders()],200);  


            $columnNames = ['blah', 'yada'];

            $rows =array(array('name_prefix'=> "abc","firstname"=> "bde"));
            
            $writer = Writer::createFromPath(storage_path().'/file1.csv', 'w+');
            $writer->insertAll($rows); 
            return;
            
            $csv = Reader::createFromPath('/path/to/your/csv/file.csv', 'r');
            $csv->setHeaderOffset(0); //set the CSV header offset

            
            //$csv = Writer::createFromFileObject(new SplTempFileObject());

            $csv->insertOne($columnNames);
            $csv->insertAll($rows);

            foreach($csv->getRecords() as $r)
            {
                Storage::put('11.csv', $r);
            }
            

            //$csv->output('/storage/1.csv');

    }

    public function getUserCount($list_id)
    {
  
        $users = $this->dm->createQueryBuilder(ClientUser::class)
                        ->getQuery()
                        ->execute();

        $arr_list=[];

        foreach ($users as $u) {

            foreach ( $u->getListId() as $list ) {

                if($list)
                {
                    array_push($arr_list,(int)$list);
                }
               
            }

        };

        if (!in_array($list_id, $arr_list)) {
            return 0;
        }
        return array_count_values($arr_list)[$list_id];



/////////


            $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
            ->field('list_id.0')
            ->equals([$request->get('list_id')])
            ->getQuery();

            $rownum=0;
            $list_users=array();
            foreach($usersQuery->execute() as $u)
            {
                if($rownum>=$request->get('from'))
                {
                    array_push($list_users,array(
                        'id'=>$u->getId(),
                        'email'=>$u->getEmail(),
                        'firstname'=>$u->getFirstName(),
                        'surname'=>$u->getSurName(),
                        'phoneno'=>$u->getPhoneNo()));
                }
                if($rownum>=$request->get('to'))
                {
                    break ;
                }
                $rownum++;
            }
            return response()->json(['list_users' => $list_users,"userCount"=>$usersQuery->count()],200); 

            $users = $this->dm->createQueryBuilder(ClientUser::class)->getQuery()->execute();
            $list_users=array();
          
            $rownum=0;

            foreach ($users as $u) 
            { 
                if($rownum>=$request->get('from'))
                 {
                 $arr_list=$u->getListId()[0];
                    if($arr_list)
                    {
                        foreach ($arr_list as $list) 
                        { 
                            if($list==$request->get('list_id'))
                            {
                                array_push($list_users,array(
                                    'id'=>$u->getId(),
                                    'email'=>$u->getEmail(),
                                    'firstname'=>$u->getFirstName(),
                                    'surname'=>$u->getSurName(),
                                    'phoneno'=>$u->getPhoneNo()));
                            }
                                
                            };

                        }
                  }
                  if($rownum>=$request->get('to'))
                 {
                   break;
                 }
                 
            $rownum++;
            }

            $userCount = $this->dm->createQueryBuilder(ClientUser::class)
            ->field('list_id.0')
            ->equals([$request->get('list_id')])
            ->getQuery()->count();

            return response()->json(['list_users' => $list_users,"userCount"=>$userCount],200); 

////////


    //  .then(function(response) {
    //   if (response.status === 404 || response.status === 200) {
    //     return response.json()
    //   }
    // }).then(function(object) {
    //   if (object.type === 'error') {
    //     console.log(object.type, object.message)
    //   } else {
    //     console.log('success')
    //     // var arr = [];
    //   // Object.keys(json).forEach(function(key) {
    //   //   arr.push(json[key]); 
    //   //   });
    //   // setListID(listID)
    //   // setfilteredcontacts(arr[0])
    //   // setUserCount(json.userCount)
    //   // setUploadStatus(""); 

    //   }
    // })

    // .then(json => {


    //   if (object.type === 'error') {
    //     console.log(object.type, object.message)
    //   } else {
    //     console.log('success')
    //   }


    //   if(json.list_users && json.list_users.email.length)
    //   {

    //   // var arr = [];
    //   // Object.keys(json).forEach(function(key) {
    //   //   arr.push(json[key]); 
    //   //   });
    //   // setListID(listID)
    //   // setfilteredcontacts(arr[0])
    //   // setUserCount(json.userCount)
    //   // setUploadStatus("");  
    //   }
        
    // })





mongodump -d <e_056365a097> -o <directory_backup>


mongo --port 27017 -u "myUserAdmin" -p "abc123" 

////////

// return fetch(Const.URL.SERVER_BASE_URL + Const.URL.IMPORTCONTACTS, {
		// 		method: 'post',
		// 		credentials: "same-origin",
		// 		headers: {
		// 			'user_token': sessionStorage.getItem('token'),
		// 			'Accept': 'application/json',
		// 			'Content-Type': 'application/json'
		// 		},
		// 		body: JSON.stringify({
		// 			'importedContacts' :this.state.importedContacts,
		// 			'newList': this.state.newList
		// 		}),
		// 	}).then(response => response.json())
		// 	.then(resData => {
		// 		console.log(resData)
		// 		if(resData.message===Const.MESSAGES.FAIL)
		// 		{
		// 			this.setState({
		// 				err: resData.desc
		// 			});
		// 		}
		// 		else
		// 		{
		// 			this.setState({
		// 				msg:'Contacts Added to List'
		// 			});

		// 			// this.getContactsList(this.state.selected_ListId);
		// 			// this.getContactsByList(this.state.selected_ListId);	
		// 			// this.hideModal();
		// 		}							
		// 	})

		//if rows<10k direct insert
		

        .......



        {"_id":"5de65ff03c2a4568e73090aa","list_id":[[2,3]]}
///////


 $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
            ->field('list_id.0')
            ->equals([intval($request->get('list_id'))])
            ->field('email')
            ->equals(new \MongoRegex('/.*'.$request->get('filterText').'.*/i'))
            ->limit($request->get('limit'))
            ->skip($request->get('from'))
            ->getQuery();
            
            $list_users=array();

            $users =  $usersQuery->execute();
            $usersCount = $usersQuery->count();

            foreach($users as $u)
            {
                array_push($list_users,array(
                    'id'=>$u->getId(),
                    'email'=>$u->getEmail(),
                    'firstname'=>$u->getFirstName(),
                    'surname'=>$u->getSurName(),
                    'phoneno'=>$u->getPhoneNo(),
                    "usersCount"=>$usersCount));
                
            }

            return response()->json(['list_users' => $list_users,"userCount"=>$usersCount,
        ],200); 
 
         

         ///////



                 $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
        ->field('list_id.0')
        ->equals([4])
        ->getQuery();

        $users =  $usersQuery->execute();
        $usersCount = $usersQuery->count();
        $list_users=array();

        foreach($users as $u)
        {
            array_push($list_users,array(
                'id'=>$u->getId(),
                'email'=>$u->getEmail(),
                'firstname'=>$u->getFirstName(),
                'surname'=>$u->getSurName(),
                'phoneno'=>$u->getPhoneNo()));
        }

        return response()->json(['list_users' => $list_users,"userCount"=>$usersCount,
        ],200);


        $count= $this->dm->createQueryBuilder(ContactList::class)
        ->getQuery()->e();

        $usersQuery = $this->dm->getRepository(ClientUser::class).find(['list.0' => [2]]);


        $i=0;
        while($i<=$count)
        {
           // $usersQuery = $this->dm->getRepository(ClientUser::class)->findBy(['list_id.0.1' => 3]);


           $arr=null;

           $list_id=4;
           if($i==0)
           {
            $arr=[$list_id];

           }
           else
           {
            $arr=$list_id;
           }

            $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
            ->field('list_id.0.'.$i.'')
            ->equals($arr)
            ->getQuery();

            $users =  $usersQuery->execute();
            $usersCount = $usersQuery->count();

            $list_users=array();

            foreach($users as $u)
            {
                array_push($list_users,array(
                    'email'=>$u->getEmail(),
                    "usersCount"=>$usersCount));
                
            }
    
            print_r($list_users);
            $i++;
        }


        return;

        //$users =  $usersQuery->execute();
        
        


        $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
        ->field('list_id.0.1')
        ->in(3)
        ->getQuery();

        $users =  $usersQuery->execute();

        foreach($users as $u)
        {
            print_r($u->getListId()[0]);
            
        }

        return;

        $i=0;
        while($i<=$count)
        {
        echo ('<br/>'.'list_id.0.'.$i.''.'<br/>');

        $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
        ->field('list_id.0')
        ->getQuery();

        $users =  $usersQuery->execute();

        $list_users=array();

        foreach($users as $u)
        {
            print_r($list_users);

            array_push($list_users,array(
                'email'=>$u->getEmail()));
            
        }

        print_r($list_users);
        $i++;
        }
          
        return;  
        $arr_list = array(
            '0'=>array(
                '0'=>2
            )
        ); 

        $this->dm->createQueryBuilder(ClientUser::class)
        ->findAndUpdate()
        ->field('email')
        ->equals('abc')
        ->field('list_id')
        ->set($arr_list)
        ->getQuery()
        ->execute(); 

        return;

        $this->dm->createQueryBuilder(ClientUser::class)
            ->remove()
            ->field('email')
            ->notEqual('mail.nrj@gmail.com')
            ->getQuery()
            ->execute();

        $flagQuery = $this->dm->createQueryBuilder(Process::class)
        ->getQuery()
        ->getSingleResult();

        if(!$flagQuery)
        {
            return ;
        }

        $flag=$flagQuery->getFlag();

        print_r($flag);
        return;

        $users= $this->dm->createQueryBuilder(ClientUser::class)
        ->field('list_id.0')
        ->equals([2])
        ->field('email')
        ->equals(new \MongoRegex('/.*'."mail.nrj".'.*/i'))
        ->getQuery()
        ->getSingleResult();

        print_r($users->getEmail());
        return ;

        $count1 = $this->dm->createQueryBuilder(ClientUser::class)->field('list_id.0')->equals([intval("3")])->getQuery()->count();

        print_r($count1);
        return;

        $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
        ->field('list_id.0')
        ->equals([2])
        ->getQuery();

        $list_users=array();

        $usersCount = $this->dm->createQueryBuilder(ClientUser::class)
        ->field('list_id.0')
        ->equals([3])
        ->getQuery()->count();


        foreach($usersQuery->execute() as $u)
        {
            array_push($list_users,array(
                'id'=>$u->getId(),
                'email'=>$u->getEmail(),
                'firstname'=>$u->getFirstName(),
                'surname'=>$u->getSurName(),
                'phoneno'=>$u->getPhoneNo(),
                "usersCount"=>$usersCount));
            
        }
        return response()->json(['list_users' => $list_users,"userCount"=>$usersCount,
        ],200); 
            
        $cntlist = $this->dm->createQueryBuilder(ContactList::class)
        ->getQuery()->execute();

        return response()->json(['contacts_list' => $contacts_list],200);  
        $contacts_list=array();            
        foreach ($cntlist as $c) 
        {  
            if($c->getListId()==1)
            {
                continue;
            }

            array_push($contacts_list,array(
            'id'=>$c->getId(),    
            'list_id'=>$c->getListId(),
            'name'=>$c->getName()));            
        }            


///////////////



{"_id":"5de7fdb37d444b7a49236c83","list_id":[[3,2,4]]}

//////////




        $i=1;
        while($i<=$listCount)
        {
            $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
            ->field('list_id.0.'.$i.'')
            ->equals($request->get('list_id'))
            ->field('email')
            ->equals(new \MongoRegex('/.*'.$request->get('filterText').'.*/i'))
            ->limit($request->get('limit'))
            ->skip($request->get('from'))
            ->getQuery();

            $users =  $usersQuery->execute();
            $usersCount=$this->getUserCount($request->get('list_id'));

            $list_users=array();

            foreach($users as $u)
            {
                array_push($list_users,array(
                    'id'=>$u->getId(),
                    'email'=>$u->getEmail(),
                    'firstname'=>$u->getFirstName(),
                    'surname'=>$u->getSurName(),
                    'phoneno'=>$u->getPhoneNo(),
                    "usersCount"=>$usersCount));
            }

            if(count($list_users)>0)
            {
                return response()->json(['list_users' => $list_users,"userCount"=>$usersCount,
            ],200);
            }
    
            $i++;
        }

        return response()->json(['list_users' => [],"userCount"=>0],200);
  
////////


  

        $this->dm->createQueryBuilder(ClientUser::class)
        ->remove()
        ->field('email')
        ->notEqual('mail.nrj@gmail.com')
        ->getQuery()
        ->execute();

        return;

        $listCount= $this->dm->createQueryBuilder(ContactList::class)
        ->getQuery()->count();

        $i=1;
        $arr=[];
        $count=0;

        $usersCount=$this->getUserCount(2);
        while($i<=$listCount)
        {
            $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
            ->field('list_id.0.'.$i.'')
            ->equals(2)
            ->field('email')
            ->equals(new \MongoRegex('/.*'.''.'.*/i'))
            ->getQuery();

            $users =  $usersQuery->execute();

            foreach($users as $u)
            {
                if($u)
                {
                    array_push($arr,array(
                        'id'=>$u->getId(),
                        'email'=>$u->getEmail(),
                        'firstname'=>$u->getFirstName(),
                        'surname'=>$u->getSurName(),
                        'phoneno'=>$u->getPhoneNo()));
                }
            }
    
            $i++;
        }

        return response()->json(['list_users' => $arr,"userCount"=>$usersCount],200);


        $users = new ClientUser();
         
            $users->setListId(array("0"=>array('0'=>1,"1"=>2)));

            $this->dm->persist($users);
            $this->dm->flush();

        $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
        ->field('list_id.0.1')
        ->equals(3)
        ->getQuery();

        $usersCount = $usersQuery->count();

        return $usersCount;

        // $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
        // ->field('list_id.0.'.$i.'')
        // ->equals($arr)
        // ->getQuery();

        // $usersCount = $usersQuery->count();
        // if($usersCount>0)
        // {
        //     return $usersCount;
        // }

        return $this->getUserCount(2);
////////

                        if($list==$request->get('prev_list_id'))
                        {
                            $arr[$i]=$request->get('list_id');

                            $this->dm->createQueryBuilder(ClientUser::class)
                            ->findAndUpdate()
                            ->field('id')
                            ->equals($id)
                            ->field('list_id')
                            ->set(array('0'=>$arr_list))
                            ->getQuery()
                            ->execute();

                        }


                    $user=$this->dm->createQueryBuilder(ClientUser::class)
                    ->findAndUpdate()
                    ->field('id')
                    ->equals($id)
                    ->field('list_id')
                    ->set(array('0'=>$arr))
                    ->getQuery()
                    ->execute(); 

////

       
        // list_id: 3
        // prev_list_id: 2

        $selected=["5dea1359cc40451bcb37854a","5dea1369cc40451bcb37854b"];

                foreach ($selected as $id) 
                {
                   // if already in list return 
                    $arr=$this->dm->createQueryBuilder(ClientUser::class)
                    ->field('id')
                    ->equals($id)
                    ->getQuery()
                    ->getSingleResult()
                    ->getListId()[0]; 

                    $list=3;

                    if(in_array($list,$arr))
                    {
                    return response()->json(['message' =>Config::get('constants.messages.FAIL'),"desc"=>Config::get('constants.messages.CONTACT_EXIST')], 200); 
                    }

                     else
                    {
                        $listCount= $this->dm->createQueryBuilder(ContactList::class)
                        ->getQuery()->count();

                        $i=1;
                        while($i<=$listCount)
                        {

                        $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
                        ->findAndUpdate()
                        ->field('list_id.0.'.$i.'')
                        ->equals(2)
                        ->field('list_id.0.'.$i.'')
                        ->set(3)
                        ->getQuery()
                        ->execute();

                        $i++;
                        }
                        }

                
                } 
        return response()->json(['message' =>Config::get('constants.messages.SUCCESS')], 200);

        $cntlist = $this->dm->createQueryBuilder(ContactList::class)
            ->getQuery()->execute();

        $contacts_list=array();
        foreach ($cntlist as $c) 
        {  
            if($c->getListId()==1)
            {
                continue;
            }

            $usersCount=$this->getUserCountByList($c->getListId()); 
            
            array_push($contacts_list,array(
                'id'=>$c->getId(),    
                'list_id'=>$c->getListId(),
                'name'=>$c->getName(),
                'userCount'=>$usersCount));            
            } 


list edit ,
header mapping63px 0px 12px 14px

#ECEFF4 !important

///////
<Switch>
    <Route exact path="/" component={Welcome}/>
</Switch>,
  document.getElementById('app')
)






getSms
getLastChange()
getValid
getDateAdded


 $users->setSms(-1);
        $users->setLastChange(-1);
        $users->setValid(-1);
        $users->setDateAdded(-1);


i have included screen screns after login
layout , font updated
post api converted to get
one react warning left in contaclist page , will fix that
right now edit and searching is done based on email
more contacts fields as per new screen (sms , date added , last change , valid)

campaign / trans/ contacts

notifications above controls 

serach 3 words min

import contacts no duplicacy

single user parrallel upliad only in diff lists



import AppBar from '@material-ui/core/AppBar';
import Box from '@material-ui/core/Box';
import PropTypes from 'prop-types';



<ExpansionPanel  expanded={!this.state.grid3} style={{width: '100%',marginTop: '2em'}} >
	<ExpansionPanelSummary	aria-controls="panel3a-content"	id="panel3a-header">
	<Typography >3. Select a list</Typography>
	</ExpansionPanelSummary>
	<ExpansionPanelDetails>
	<Grid item xs={12} container direction="row">
	<p style={{ color:'Red' ,height:'1em'}}><b> {this.state.msg}</b></p>
	<AppBar position="static">
	<Tabs value={value} onChange={this.tabChange} aria-label="simple tabs example">
	<Tab label="Select a List" {...this.a11yProps(0)} />
	<Tab label="Create List" {...this.a11yProps(1)} />
	</Tabs>
	</AppBar>
	<TabPanel value={value} index={0}>
	<div>
	<Autocomplete freeSolo renderInput={params => (
	<TextField {...params}  style={{  float:'left',width: '13em',marginRight: '3em' }}   value={this.state.filter}  onKeyUp={this.searchList}/>
	)}
	/>
	<select className="form-control"  onChange={this.getFolderID} style={{float:'left',width: '18em'}} >
	<option key={0} value={0}>All Folders</option>
	{
	this.state.folderList &&
	this.state.folderList.map((h, i) => 
	(
	<option key={i} value={h.folder_id}>{h.name}</option>))
	}
	</select>
	</div>									
	<Table className={classes.table} size="small" aria-label="a dense table" style={{ margin:'2em'}}>
	<TableBody>
	<TableRow>
	<TableCell></TableCell>
	<TableCell>id</TableCell>
	<TableCell>name</TableCell>
	</TableRow> 
	{this.state.filterList.map((row,index) => (
	<TableRow  key={'k_'+index}>
	<TableCell>
	<Checkbox name="myCheckBox1" onChange={(e,checked) => this.checkChange(row.list_id, checked)}/>
	</TableCell>
	<TableCell >{row.list_id}</TableCell>
	<TableCell >{row.name}</TableCell>
	</TableRow>
	))}
	</TableBody>
	</Table>
	<Button  margin="normal" type="submit" variant="contained" color="primary" onClick={this.confirmYourList}  style={{ margin: '2em' }} > Confirm Your List </Button> 
	</TabPanel>
	<TabPanel value={value} index={1}>								
	<TextField margin="normal"  required  id="listName" label="Save List" name="listName" type="text" value={this.state.listName} onChange={this.handleChange} />
	<br/>
	<select className="form-control"  onChange={this.getFolderID} style={{float:'left',width: '18em'}} >
	<option key={0} value={0}>All Folders</option>
	{
	this.state.folderList &&
	this.state.folderList.map((h, i) => 
	(
	<option key={i} value={h.folder_id}>{h.name}</option>))
	}
	</select>
	<br/>
	<Button  margin="normal" type="submit" name="save" onClick={this.saveContactList}  variant="contained" > Create a New List </Button>								
	</TabPanel>
	</Grid>
	</ExpansionPanelDetails>
	
	</ExpansionPanel>
	

    //////



    public function getUserCount($list_id)
    {
  
        $listCount= $this->dm->createQueryBuilder(ContactList::class)
        ->getQuery()->count();

        $i=0;
        $totalcount=0;
        while($i<=$listCount)
        {
           $arr=null;

           if($i==0)
           {
            $arr=[$list_id];
           }
           else
           {
            $arr=$list_id;
           }

            $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
            ->field('list_id.0.'.$i.'')
            ->equals($arr)
            ->getQuery();

            $usersCount = $usersQuery->count();
            if($usersCount>0)
            {
                $totalcount+=$usersCount;
            }
            
            $i++;
        }
        return $totalcount;

    }
    
    public function getUserCountByList($list_id)
    {
  
        $listCount= $this->dm->createQueryBuilder(ContactList::class)
        ->getQuery()->count();

        $i=1;
        $totalcount=0;
        while($i<=$listCount)
        {
            $usersQuery = $this->dm->createQueryBuilder(ClientUser::class)
            ->field('list_id.0.'.$i.'')
            ->equals($list_id)
            ->getQuery();

            $usersCount = $usersQuery->count();
            if($usersCount>0)
            {
                $totalcount+=$usersCount;
            }
            
            $i++;
        }
        return $totalcount;

    }


///////


        return response()->json(['message' =>Config::get('constants.messages.SUCCESS')], 200);

        //$reader = Reader::createFromPath(storage_path().'/app/'.$this->clientDB.'/Contacts.csv', 'r');
       
        // foreach ($results as $row) {
        // //do something here
        // }



        // foreach ($results as $row) {
        //     $writer->insertOne($row); 
        // }


       // $writer->insertAll($results); 

        // $file = new SplFileObject(storage_path().'/app/'.$this->clientDB.'/Contacts.csv', 'a');
        // $file->fputcsv(array($request->get('uploadedData')));
        // $file = null;


            // $file = new SplTempFileObject(storage_path().'/app/'.$this->clientDB.'/Contacts.csv', 'a');
            // $file->fputcsv($request->get('uploadedData'));
            // $file = null;


// middleware login
//on focusout
//5 lakh contacts - unlimited queue



/// csv column mapping 



  //return response()->json(['message' =>Config::get('constants.messages.SUCCESS')], 200);

        // while (($data = fgetcsv($file, 200, ",")) !==FALSE) 
        // {
        //         for($j=0;$j<count($data);$j++)
        //         {
        //             if (in_array($data[$j], $Headers)) 
        //             {
        //                 $file1 = fopen($file_n, "r");
        //                 while (($row = fgetcsv($file1, 200, ",")) !==FALSE)  
        //                 {
        //                     if (!in_array($row[$j], $Headers))
        //                     {
        //                         $users = new ClientUser();

        //                         switch ($data[$j]) {

        //                             case 'Prefix':
        //                             $users->setPrefix($row[$j]);
        //                             break;
                                    
        //                             case 'FIRSTNAME':
        //                             $users->setFirstName($row[$j]); 
        //                             break;
        //                             case 'LASTNAME':
        //                                 $users->setSurName($row[$j]);
        //                             break;

        //                             case 'Gender':
        //                                 $users->setGender($row[$j]);
        //                             break;

        //                             case 'EMAIL':
        //                                 $users->setEmail($row[$j]);
        //                             break;

        //                             case 'Father Name':
        //                                 $users->setFatherName($row[$j]);
        //                             break;

        //                             case 'Mother Name':
        //                                 $users->setMotherName($row[$j]);
        //                             break;

        //                             case 'Date of Birth':
        //                                 $users->setDob($row[$j]);
        //                             break;

        //                             case 'Age in Yrs':
        //                                 $users->setAge($row[$j]);
        //                             break;

        //                             case 'PhoneNo':
        //                                 $users->setPhoneNo($row[$j]);
        //                             break;

        //                             case 'County':
        //                                 $users->setCounty($row[$j]);
        //                             break;

        //                             case 'City':
        //                                 $users->setCity($row[$j]);
        //                             break;

        //                             case 'State':
        //                                 $users->setState($row[$j]);
        //                             break;

        //                             case 'Zip':
        //                                 $users->setZip($row[$j]);
        //                             break;

        //                         }

        //                         $users->setUserBlacklist(array());
        //                         $users->setUserHistory(array());
        //                         $users->setShrKey(1);
        //                         $users->setAttributes(array());
        //                         $users->setBlackListed(0);
        //                         $users->setEntered();
        //                         $users->setSc(-1);
        //                         $users->setListId(array("id"=>$List));
        //                         $this->dm->persist($users);
        //                         $this->dm->flush();

        //                     }

        //                 }

        //             $this->dm->createQueryBuilder(Process::class)->findAndUpdate()->field('flagState')->set(3)->getQuery()->execute();

        //             \Log::info("clientDB :".$ClientDB." csv insert finished");
        
        //             return 'insert finished';
        //             }
        //         }
           
        //  }


/////////////        

in operator

    $data=$this->dm->createQueryBuilder(Process::class)
    ->field('flagState')
    ->in([1,2])
    ->getQuery()
    ->execute();

    if($data)
    {
        print_r($data->getFlag());
    }

    ////csv column map

        //return response()->json(['message' =>Config::get('constants.messages.SUCCESS')], 200);

        // while (($data = fgetcsv($file, 200, ",")) !==FALSE) 
        // {
        //         for($j=0;$j<count($data);$j++)
        //         {
        //             if (in_array($data[$j], $Headers)) 
        //             {
        //                 $file1 = fopen($file_n, "r");
        //                 while (($row = fgetcsv($file1, 200, ",")) !==FALSE)  
        //                 {
        //                     if (!in_array($row[$j], $Headers))
        //                     {
        //                         $users = new ClientUser();

        //                         switch ($data[$j]) {

        //                             case 'Prefix':
        //                             $users->setPrefix($row[$j]);
        //                             break;
                                    
        //                             case 'FIRSTNAME':
        //                             $users->setFirstName($row[$j]); 
        //                             break;
        //                             case 'LASTNAME':
        //                                 $users->setSurName($row[$j]);
        //                             break;

        //                             case 'Gender':
        //                                 $users->setGender($row[$j]);
        //                             break;

        //                             case 'EMAIL':
        //                                 $users->setEmail($row[$j]);
        //                             break;

        //                             case 'Father Name':
        //                                 $users->setFatherName($row[$j]);
        //                             break;

        //                             case 'Mother Name':
        //                                 $users->setMotherName($row[$j]);
        //                             break;

        //                             case 'Date of Birth':
        //                                 $users->setDob($row[$j]);
        //                             break;

        //                             case 'Age in Yrs':
        //                                 $users->setAge($row[$j]);
        //                             break;

        //                             case 'PhoneNo':
        //                                 $users->setPhoneNo($row[$j]);
        //                             break;

        //                             case 'County':
        //                                 $users->setCounty($row[$j]);
        //                             break;

        //                             case 'City':
        //                                 $users->setCity($row[$j]);
        //                             break;

        //                             case 'State':
        //                                 $users->setState($row[$j]);
        //                             break;

        //                             case 'Zip':
        //                                 $users->setZip($row[$j]);
        //                             break;

        //                         }

        //                         $users->setUserBlacklist(array());
        //                         $users->setUserHistory(array());
        //                         $users->setShrKey(1);
        //                         $users->setAttributes(array());
        //                         $users->setBlackListed(0);
        //                         $users->setEntered();
        //                         $users->setSc(-1);
        //                         $users->setListId(array("id"=>$List));
        //                         $this->dm->persist($users);
        //                         $this->dm->flush();

        //                     }

        //                 }

        //             $this->dm->createQueryBuilder(Process::class)->findAndUpdate()->field('flagState')->set(3)->getQuery()->execute();

        //             \Log::info("clientDB :".$ClientDB." csv insert finished");
        
        //             return 'insert finished';
        //             }
        //         }
           
        //  }

/////////


-imports contacts new UI
-Previous UI fixes 
-multi file uploads with single user
- fix page load fails on empty collection 


-login check from middleware 

////


{"_id":"5df0cea697fe613dcd120dc0","black_listed":0,"attributes":[],"shr_key":"1","user_history":[],"user_blacklist":[],"email":"mail.nrj@gmail.com","email_tag":"www.campaignpulse.com:3000","entered":"2019-12-11 11:10:30","list_id":[[1,3]],"sc":-1}

////////



              <div style={{ width: '252px', marginLeft: '26.6em', marginTop: '1em' }}>
                <div className="row" style={{ right: '2em', position: 'absolute', top: '0em' }}>

{/* 
                <div class="input-group">
                <input type="text" className="form-control"  placeholder="Search By RoleName" aria-describedby="basic-addon2" />
                <span class="input-group-addon fa fa-search" id="basic-addon2"></span>

                <Link to="/importContacts" style={{ color: '#000', marginTop: '19px', backgroundColor: '#fff', border: '1px solid #cad1d7', fontSize: '13px' }} className="btn" > Advance Search and Segmentation </Link>

                </div> */}


                  {/* <Autocomplete freeSolo style={{ marginRight: '1em', width: '12em' }}
                      disableClearable
                      renderInput={params => (
                        <TextField style={{ top: '20px', backgroundColor: '#fff' }} {...params} variant="outlined" value={filter} onKeyUp={searchContacts} fullWidth />
                      )}
                  /> */}

                  
                </div>
              </div>


////////


<div className="btn-group boxbtn" style={{width:'100%'}}>
              
              <div className="col-xs-3 col-sm-3 col-md-3 col-lg-3 col-xl-3">

              <select className="form-control" onChange={getListID} style={{ width: '11em',fontWeight:'500',color:'#000' }} >
              <option key={0} value={0}>All Contacts</option>
              {
              contactsList &&
              contactsList.map((h, i) =>
              (
              <option key={i} value={h.list_id}>{h.name}</option>
              ))
              }
              </select>
              
              </div>

              <div className="col-xs-2 col-sm-2 col-md-2 col-lg-2 col-xl-2">

              <i style={{fontSize:'23px',color:'#000'}} className="fa fa-user-circle-o" aria-hidden="true"></i>

              <div style={{ padding:'13px', marginTop:'14px', color:'#000'}}>{userCount}</div>

              </div>


            </div>

 ////////////// 

NEER1302
 	If your name appears on the statement as RAVI SHANKAR and your Date of Birth updated with bank is 09/09/1984, then the password would be RAVI0909
 	If your name appears on the statement as R.SHIVA KUMAR and your date of birth updated with bank is 29/12/1984, then the password would be RSHI2912
 	If your name appears on the statement as R SHIVA KUMAR and your date of birth updated with bank is 29/12/1984, then the password would be RSHI2912




///////



254369086651-bekp9o7ps1u8f51uajvpa322a7blt3m0.apps.googleusercontent.com
Your Client ID
693KJDzU6rvceLzeGeyKQ_Kl
Your Client Secret


//////

    <ExpansionPanel  expanded={!this.state.grid1}  style={{width: '100%'}} >
        <ExpansionPanelSummary	aria-controls="panel1a-content"	id="panel1a-header">
            {this.state.summary1}
            <button  justify="right" type="submit" color="primary" onClick={this.editFileImport}
            style={{ position: 'absolute',right: '0em', display: this.state.grid1?'block':'none'}} > Edit </button> 
        </ExpansionPanelSummary>
        <ExpansionPanelDetails>					
        <div className="row" style={{overflowX:'auto'}}>
        <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
            <p style={{ fontSize:'15px' }}><b>1. Upload a file </b> (Select a file containing Your contacts to import)</p>
            <CSVReader
            cssclassName="csv-reader-input" 
            onFileLoaded={this.uploadFile.bind(this)}
            parserOptions={this.papaparseOptions}
            inputStyle={{color: 'red'}}
            /><br/>
            <div className="alertsuccess" style={{ display: (this.state.uploadedData.length>0)?'block':'none'}}>
                
            {this.state.fileName} has been uploaded successfully
            </div>
        </div>
        <div className="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6" style={{marginTop:'1em'}}>
            <h5 style={{ display: (this.state.uploadedData.length>0)?'block':'none'}}>Your list preview below:</h5>
        </div>
        <div className="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6" style={{marginTop:'1em'}}>
            <button className="btn pull-right confirmFile" type="submit" onClick={this.confirmFile}  style={{ display: (this.state.uploadedData.length>0)?'block':'none'}} > Confirm your file <i className="fa fa-arrow-right" aria-hidden="true"></i></button>
        </div>
        <div  style={{ marginTop: '10px',width:"100%" , overflowX:'auto',display: (this.state.uploadedData.length>0)?'block':'none',}}>
            <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
                <table className="table tableborder table-borderless">
                    <thead>
                        <tr>
                        {this.state.csvHeaders.map((row, index) => (
                        <th  key={'key_' + index}>{row}</th>
                    ))}
                        </tr>
                    </thead>
                    <tbody>
                    {this.state.uploadedData.slice(0,10).map((row,index) => (
                    <tr key={'k_'+index}>
                    {
                    Object.keys(row).map((key,index) => 
                    (
                        <td key={'k_'+index}>{row[key]}</td>

                    )				
                    )
                    }
                    </tr>
                    ))}
                    </tbody>
                </table>
            </div>
            
        </div>
        
        </div>
        </ExpansionPanelDetails>
        </ExpansionPanel>

    <ExpansionPanel expanded={!this.state.grid2}  style={{width: '100%'}} >
        <ExpansionPanelSummary aria-controls="panel2a-content" id="panel2a-header">
        <p >2. Mapping data</p>
        {/* <button type="submit" onClick={this.editMappingData} style={{ position: 'absolute',right: '1em', display: this.state.mappingdata.length>0?'block':'none'}} > Edit </button>  */}
        <button  justify="right" type="submit" color="primary" onClick={this.editMappingData}
            style={{ position: 'absolute',right: '0em', display: this.state.gridEdit?'block':'none'}} > Edit </button>
        </ExpansionPanelSummary>
        <ExpansionPanelDetails>
            <div className="row">
                <div className="col-xs-12 col-sm-6 col-md-6  col-lg-6 col-xl-6">
                    <h5>
                    Please select attributes that match your data. You can select existing attributes or create new ones.
                    The default setting doesn't import the data
                    </h5>
                </div>
                <div className="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6">
                    
                    <button className="btn pull-right confirmFile" type="submit" onClick={this.confirmMapping}
                    style={{ grid2Err }} disabled={this.state.grid2Err?true:false}  > Confirm your file<i className="fa fa-arrow-right" aria-hidden="true"></i> </button>
                    <h5 className="pull-right" style={{textAlign:'end',paddingRight:'16px'}}>{this.state.csvHeaders.length} columns <span style={{color:'#8c8c8c'}}>to be imported</span><br/>
                    <span style={{color:'#8c8c8c'}}>Ignored</span> 0 columns</h5>
                </div>

                <p style={{color:'Red',left: '2em',position: 'absolute',top: '42px',fontWeight: '500'}}>{grid2Err}</p>
                <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12" style={{ overflowX: 'auto',    width: '59em' }}>

                    <table className="table tableborder table-borderless" size="small" aria-label="a dense table">
                        <tbody>

                        <tr >
                        {
                        this.state.csvHeaders.map((k,i) => (	
                        
                        <td  key={'k_'+i}style={{padding: '0em 1em 0em 1em'}}>

                        <p style={{border: '2px solid  #b1a8a8',textAlign: 'center',marginBottom: '0rem',width: '15em',borderRadius: '9px 9px 0px 0px',padding:'8px',fontWeight: '500',
                        color: 'grey'}}>{k}</p>

                        </td>

                        ))
                        }
                        </tr>

                        {this.state.uploadedData.slice(0,5).map((row,index) => (
                        <tr key={'k_'+index}>
                        {
                        Object.keys(row).map((key,index2) => 
                        (<td key={'k_'+index2} style={{ padding: '0em 1em 0em 1em'}}>

                                <p style={{borderLeft: '1px solid  #b1a8a8',borderRight: '1px solid #b1a8a8',textAlign: 'center',marginBottom: '0rem', fontSize:'15px',padding:'8px',lineHeight: '0.8',fontWeight: '500',
                                color: 'grey'}}  key={'k_'+index}>{row[key]}</p>
                            </td>

                        )				
                        )
                        }

                        </tr>

                        ))}


                        <tr >
                        {
                        this.state.csvHeaders.map((k,i) => (	

                            <td key={'k_'+i}  style={{    padding: '0em 1em 0em 1em'}}>

                            <p style={{border: '1px solid  #b1a8a8',textAlign: 'center',marginBottom: '0rem',width: '15em',borderRadius: ' 0px 0px 9px 9px'}} key={'k_'+i}>
                            <select className="form-control" onChange={(e) => this.pair(i, e.target.value)}>
                            {this.state.DBCsvHeaders.map((row,index)=>(
                            <option key={'key_'+index} >{row}</option>
                            ))
                            }<option>Dont Import</option>
                            </select>
                            </p>



                            </td>
                        
                        ))
                        }

                        </tr>

                        </tbody>
                
                    </table>
                </div>
            </div>
        </ExpansionPanelDetails>
    </ExpansionPanel>

    <ExpansionPanel  expanded={!this.state.grid3} style={{width: '100%'}} >
        <ExpansionPanelSummary	aria-controls="panel3a-content"	id="panel3a-header">
        <p  style={{fontSize:'15px',fontWeight: '500',color: 'grey'}} >3) Select a list</p>
        </ExpansionPanelSummary>
        <ExpansionPanelDetails>
            <div className="container">
                <div className="row">
                    <p style={{ color:'Red' ,height:'1em',width:'100%'}}><b> {this.state.msg}</b></p>

                    <div className="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6">
                        <div className="row">
                        <div className="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6">
                        <Autocomplete style={{ marginRight: '1em', width: '12em' }} freeSolo renderInput={params => (
                        <TextField {...params}  style={{width:'13em', backgroundColor: '#fff',border:'1px solid #e1e1e1',height: '38px'}}   value={this.state.filter} onKeyUp={this.searchList}/>
                        )}
                        />
                        </div>
                        <div className="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6">
                        <select className="form-control folders"  onChange={this.getFolderID}>
                        <option key={0} value={0}>All Folders</option>
                        {
                        this.state.folderList &&
                        this.state.folderList.map((h, i) => 
                        (
                        <option key={i} value={h.folder_id}>{h.name}</option>))
                        }
                        </select>
                        </div>
                        </div>
                    </div>
                    <div className="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6">
                            <button className="btn confirmFile pull-right" type="submit" onClick={this.confirmYourList}> Confirm Your List <i className="fa fa-arrow-right" aria-hidden="true"></i></button>
                            <h5 className="pull-right" style={{paddingTop: '6px',paddingRight:'15px'}}>0 list selected</h5>
                    </div>
                </div>
                <div className="row">
                    
                    <div className="col-xs-12 col-sm-12 col-md-12 
                    col-lg-12 col-xl-12" style={{marginTop:'8px'}}>

                        <div className={classes.loader} style={{zIndex:1111 ,position: 'absolute' ,left: '25%',display:this.state.loader===true?'block':'none'}}></div>

<div  style={{position: 'relative' }}><table className="table tableborder table-borderedless">
                            <thead>
                                <tr>
                                    <th><Checkbox className="myCheckBox1" name="myCheckBox1" onChange={(e,checked) => this.checkChange(checked.list_id)}/></th>
                                    <th>ID</th>
                                    <th>List Name</th>
                                    <th>Folder</th>
                                    <th>No of Contacts</th>
                                    <th>Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                {filterList.map((row,index) => (
                                <tr key={'k_'+index}>
                                    <td>
                                        <Checkbox className="myCheckBox1"  name="myCheckBox1" onChange={(e,checked) => this.checkChange(row.list_id, checked)}/>
                                    </td>
                                    <td>{row.list_id}</td>
                                    <td>{row.name}</td>
                                    {
                                        this.state.folderList &&
                                        this.state.folderList.map((h, i) => 
                                        (
                                        <td key={i} value={h.folder_id}>{h.name}</td>))
                                    }
                                    <td>{row.userCount}</td>
                                    <td>{row.dateAdded}</td>
                                </tr>
                                ))}
                            </tbody>
                        </table>
                    </div>

                    </div>
                </div>
            </div>
        
        </ExpansionPanelDetails>
    </ExpansionPanel>
										

//////////////


{/* accordian  */}


{/* <ExpansionPanel  expanded={!this.state.grid1}  style={{width: '100%'}} >
        <ExpansionPanelSummary	aria-controls="panel1a-content"	id="panel1a-header">
            {this.state.summary1}
            <button  justify="right" type="submit" color="primary" onClick={this.editFileImport}
            style={{ position: 'absolute',right: '0em', display: this.state.grid1?'block':'none'}} > Edit </button> 
        </ExpansionPanelSummary>
        <ExpansionPanelDetails>					
        <div className="row" style={{overflowX:'auto'}}>
        <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
            <p style={{ fontSize:'15px' }}><b>1. Upload a file </b> (Select a file containing Your contacts to import)</p>
            <CSVReader
            cssclassName="csv-reader-input" 
            onFileLoaded={this.uploadFile.bind(this)}
            parserOptions={this.papaparseOptions}
            inputStyle={{color: 'red'}}
            /><br/>
            <div className="alertsuccess" style={{ display: (this.state.uploadedData.length>0)?'block':'none'}}>
                
            {this.state.fileName} has been uploaded successfully
            </div>
        </div>
        <div className="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6" style={{marginTop:'1em'}}>
            <h5 style={{ display: (this.state.uploadedData.length>0)?'block':'none'}}>Your list preview below:</h5>
        </div>
        <div className="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6" style={{marginTop:'1em'}}>
            <button className="btn pull-right confirmFile" type="submit" onClick={this.confirmFile}  style={{ display: (this.state.uploadedData.length>0)?'block':'none'}} > Confirm your file <i className="fa fa-arrow-right" aria-hidden="true"></i></button>
        </div>
        <div  style={{ marginTop: '10px',width:"100%" , overflowX:'auto',display: (this.state.uploadedData.length>0)?'block':'none',}}>
            <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
                <table className="table tableborder table-borderless">
                    <thead>
                        <tr>
                        {this.state.csvHeaders.map((row, index) => (
                        <th  key={'key_' + index}>{row}</th>
                    ))}
                        </tr>
                    </thead>
                    <tbody>
                    {this.state.uploadedData.slice(0,10).map((row,index) => (
                    <tr key={'k_'+index}>
                    {
                    Object.keys(row).map((key,index) => 
                    (
                        <td key={'k_'+index}>{row[key]}</td>

                    )				
                    )
                    }
                    </tr>
                    ))}
                    </tbody>
                </table>
            </div>
            
        </div>
        
        </div>
        </ExpansionPanelDetails>
        </ExpansionPanel>

    <ExpansionPanel expanded={!this.state.grid2}  style={{width: '100%'}} >
        <ExpansionPanelSummary aria-controls="panel2a-content" id="panel2a-header">
        <p >2. Mapping data</p>
        {/* <button type="submit" onClick={this.editMappingData} style={{ position: 'absolute',right: '1em', display: this.state.mappingdata.length>0?'block':'none'}} > Edit </button>  
        <button  justify="right" type="submit" color="primary" onClick={this.editMappingData}
            style={{ position: 'absolute',right: '0em', display: this.state.gridEdit?'block':'none'}} > Edit </button>
        </ExpansionPanelSummary>
        <ExpansionPanelDetails>
            <div className="row">
                <div className="col-xs-12 col-sm-6 col-md-6  col-lg-6 col-xl-6">
                    <h5>
                    Please select attributes that match your data. You can select existing attributes or create new ones.
                    The default setting doesn't import the data
                    </h5>
                </div>
                <div className="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6">
                    
                    <button className="btn pull-right confirmFile" type="submit" onClick={this.confirmMapping}
                    style={{ grid2Err }} disabled={this.state.grid2Err?true:false}  > Confirm your file<i className="fa fa-arrow-right" aria-hidden="true"></i> </button>
                    <h5 className="pull-right" style={{textAlign:'end',paddingRight:'16px'}}>{this.state.csvHeaders.length} columns <span style={{color:'#8c8c8c'}}>to be imported</span><br/>
                    <span style={{color:'#8c8c8c'}}>Ignored</span> 0 columns</h5>
                </div>

                <p style={{color:'Red',left: '2em',position: 'absolute',top: '42px',fontWeight: '500'}}>{grid2Err}</p>
                <div className="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12" style={{ overflowX: 'auto',    width: '59em' }}>

                    <table className="table tableborder table-borderless" size="small" aria-label="a dense table">
                        <tbody>

                        <tr >
                        {
                        this.state.csvHeaders.map((k,i) => (	
                        
                        <td  key={'k_'+i}style={{padding: '0em 1em 0em 1em'}}>

                        <p style={{border: '2px solid  #b1a8a8',textAlign: 'center',marginBottom: '0rem',width: '15em',borderRadius: '9px 9px 0px 0px',padding:'8px',fontWeight: '500',
                        color: 'grey'}}>{k}</p>

                        </td>

                        ))
                        }
                        </tr>

                        {this.state.uploadedData.slice(0,5).map((row,index) => (
                        <tr key={'k_'+index}>
                        {
                        Object.keys(row).map((key,index2) => 
                        (<td key={'k_'+index2} style={{ padding: '0em 1em 0em 1em'}}>

                                <p style={{borderLeft: '1px solid  #b1a8a8',borderRight: '1px solid #b1a8a8',textAlign: 'center',marginBottom: '0rem', fontSize:'15px',padding:'8px',lineHeight: '0.8',fontWeight: '500',
                                color: 'grey'}}  key={'k_'+index}>{row[key]}</p>
                            </td>

                        )				
                        )
                        }

                        </tr>

                        ))}


                        <tr >
                        {
                        this.state.csvHeaders.map((k,i) => (	

                            <td key={'k_'+i}  style={{    padding: '0em 1em 0em 1em'}}>

                            <p style={{border: '1px solid  #b1a8a8',textAlign: 'center',marginBottom: '0rem',width: '15em',borderRadius: ' 0px 0px 9px 9px'}} key={'k_'+i}>
                            <select className="form-control" onChange={(e) => this.pair(i, e.target.value)}>
                            {this.state.DBCsvHeaders.map((row,index)=>(
                            <option key={'key_'+index} >{row}</option>
                            ))
                            }<option>Dont Import</option>
                            </select>
                            </p>



                            </td>
                        
                        ))
                        }

                        </tr>

                        </tbody>
                
                    </table>
                </div>
            </div>
        </ExpansionPanelDetails>
    </ExpansionPanel>

    <ExpansionPanel  expanded={!this.state.grid3} style={{width: '100%'}} >
        <ExpansionPanelSummary	aria-controls="panel3a-content"	id="panel3a-header">
        <p  style={{fontSize:'15px',fontWeight: '500',color: 'grey'}} >3) Select a list</p>
        </ExpansionPanelSummary>
        <ExpansionPanelDetails>
            <div className="container">
                <div className="row">
                    <p style={{ color:'Red' ,height:'1em',width:'100%'}}><b> {this.state.msg}</b></p>

                    <div className="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6">
                        <div className="row">
                        <div className="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6">
                        <Autocomplete style={{ marginRight: '1em', width: '12em' }} freeSolo renderInput={params => (
                        <TextField {...params}  style={{width:'13em', backgroundColor: '#fff',border:'1px solid #e1e1e1',height: '38px'}}   value={this.state.filter} onKeyUp={this.searchList}/>
                        )}
                        />
                        </div>
                        <div className="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6">
                        <select className="form-control folders"  onChange={this.getFolderID}>
                        <option key={0} value={0}>All Folders</option>
                        {
                        this.state.folderList &&
                        this.state.folderList.map((h, i) => 
                        (
                        <option key={i} value={h.folder_id}>{h.name}</option>))
                        }
                        </select>
                        </div>
                        </div>
                    </div>
                    <div className="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6">
                            <button className="btn confirmFile pull-right" type="submit" onClick={this.confirmYourList}> Confirm Your List <i className="fa fa-arrow-right" aria-hidden="true"></i></button>
                            <h5 className="pull-right" style={{paddingTop: '6px',paddingRight:'15px'}}>0 list selected</h5>
                    </div>
                </div>
                <div className="row">
                    
                    <div className="col-xs-12 col-sm-12 col-md-12 
                    col-lg-12 col-xl-12" style={{marginTop:'8px'}}>

                        <div className={classes.loader} style={{zIndex:1111 ,position: 'absolute' ,left: '25%',display:this.state.loader===true?'block':'none'}}></div>

<div  style={{position: 'relative' }}><table className="table tableborder table-borderedless">
                            <thead>
                                <tr>
                                    <th><Checkbox className="myCheckBox1" name="myCheckBox1" onChange={(e,checked) => this.checkChange(checked.list_id)}/></th>
                                    <th>ID</th>
                                    <th>List Name</th>
                                    <th>Folder</th>
                                    <th>No of Contacts</th>
                                    <th>Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                {filterList.map((row,index) => (
                                <tr key={'k_'+index}>
                                    <td>
                                        <Checkbox className="myCheckBox1"  name="myCheckBox1" onChange={(e,checked) => this.checkChange(row.list_id, checked)}/>
                                    </td>
                                    <td>{row.list_id}</td>
                                    <td>{row.name}</td>
                                    {
                                        this.state.folderList &&
                                        this.state.folderList.map((h, i) => 
                                        (
                                        <td key={i} value={h.folder_id}>{h.name}</td>))
                                    }
                                    <td>{row.userCount}</td>
                                    <td>{row.dateAdded}</td>
                                </tr>
                                ))}
                            </tbody>
                        </table>
                    </div>

                    </div>
                </div>
            </div>
        
        </ExpansionPanelDetails>
    </ExpansionPanel>
 */}



//////




function toggle(ths)
{

  var AllPanel=document.getElementsByClassName("panel");

  for(var j=0;j<=AllPanel.length-1;j++)
  {
    AllPanel.item(j).style.display = "none";
  }

  var panel = getNextSibling(ths.target,".panel");
  panel.style.display = (panel.style.display === "block")?(panel.style.display = "none"):(panel.style.display = "block");  

}


var getNextSibling = function (elem, selector) {

	var sibling = elem.nextElementSibling;
	if (!selector) return sibling;
	while (sibling) {
		if (sibling.matches(selector)) return sibling;
		sibling = sibling.nextElementSibling
	}

};


{/*////////////////////////////////*/}

Material-UI 
 Models moved , and table folder removed - done 
Jest removed 
repalce cdn 

3 lac , 5 lac record test
google link on virtual domain 
mapped with custom header

///////////


  const [editAge, setEditAge] = React.useState('');
  const [editFirstName, setEditFirstName] = React.useState('');
  const [editSurName, setEditSurName] = React.useState('');
  const [editPhoneNumber, setEditPhoneNumber] = React.useState('');

  const [cntAge, setCntAge] = React.useState('');
  const [cntFirstName, setCntFirstName] = React.useState('');
  const [cntSurName, setCntSurName] = React.useState('');
  const [cntPhoneNumber, setCntPhoneNumber] = React.useState('');

//////

// namespace App\Http\Middleware;

// use Illuminate\Auth\Middleware\Authenticate as Middleware;

// class Authenticate extends Middleware
// {
//     /**
//      * Get the path the user should be redirected to when they are not authenticated.
//      *
//      * @param  \Illuminate\Http\Request  $request
//      * @return string
//      */
//     public function handle($request, Closure $next)
//     {
//         if (true) {
//             return redirect('test');
//         }
//         return $next($request);
//     }

//     // protected function redirectTo($request)
//     // {
//     //     if (! $request->expectsJson()) {
//     //         return route('login');
//     //     }
//     // }
     
//     // public function handle($request, Closure $next)
//     // {

//     //     // if (Auth::guard($guard)->check()) {
            
//     //     // }
//     //    // return redirect()->action('HomeController@test2');

//     //     //return route('home');

//     //     return $next($request);
//     // }


// }

updates
-created seperate laravel instance for cron and placed only cron controller with db configuration 
3,4 models are placed along with that , rest maximum code removed in cron instance , i did single testing on it , it is working 

- refactored controller in 1st instance and plaed them in new folder , removed client folder 

- split contact controller into import controller ,contact controller and contactList controller
maximum code is around 500 to 600 lines 

Middlware code craeted from logged in check ,i have placed logged api in route group , i am testing on that

/////////

    // return redirect('/api/index');

    //return redirect()->action('HomeController@test2');
    //\Log::info($request->path());
    //return response()->json(['message' => Config::get('constants.messages.SUCCESS')],200);

///////

            //\Log::info($request->session()->get('lang'));

            //$request->session()->put('lang','111');

            // \Log::info(Session::get('lang'));
            //  Session::put('lang','en');
            //  Session::save();
            //\Log::info(\Session::get('lang'));

            //$url=$request->path();
            //\Log::info($request->path());

            // if($url=='api/signin' || $url=='/api/signup')
            // {
            //     // if($_SESSION["userToken"])
            //     // {

            //     // \Log::info('auth userToken '.$_SESSION["userToken"]);

            //     //     return redirect('/api/Home');
            //     //     //return redirect('http://localhost:3000/Home');
            //     // }
            //     // else
            //     // {

            //     // \Log::info('no userToken ');
            //     // }

            // }
            // else
            // {
            //    return redirect('/api/SamePage');

            // }

////////


    // \Log::info('userToken test'.(!Session::get('userToken')));
    // \Log::info('userToken test'.session(['userToken']));

    // if(!Session::get('userToken'))
    // {
    //     session(['userToken' => $user->getToken()]);
    //     Session::put('userToken', $user->getToken());
    // }

    // if(!$_SESSION["userToken"])
    // {
    //     $_SESSION["userToken"]= $user->getToken();
    // }
             

/////////////

// $_SESSION["favcolor"] = "green";
// \Log::info('12'.($_SESSION["favcolor"]));

// Session::put('12','11');


$app = require '/home/neeraj/neeraj/laravel-mailapp/bootstrap/app.php';

$app->useEnvironmentPath('.env.staging');
$app->loadEnvironmentFrom('.env.staging');


// try
// {
//     (new Dotenv\Dotenv(__DIR__.'/../'))->load();
// }
// catch (Dotenv\Exception\InvalidPathException $ignored) { }

//$app = require '/home/neeraj/neeraj/laravel-mailapp/bootstrap/app.php';
//$app->useEnvironmentPath('/home/neeraj/neeraj/laravel-mailapp/.env.staging');

//print_r(app()-> detectEnvironment(null));

/////

 
$app-> detectEnvironment (function ()
{
// if ($ _ SERVER ['HTTP_HOST'] == 'laravel5e.com')
// {
// // Load environment required
// app () -> loadEnvironmentFrom ('. Production.env');
// }
// else {
// // Load the default environment
// //Dotenv :: load (DIR__ __. ‘/ .. /’);
// app () -> loadEnvironmentFrom ();
// }
// return getenv ('APP_ENV');

//return 'detectEnvironment';

}
);
////

    // switch(array_shift(explode(".",$_SERVER['HTTP_HOST']))){
    //     case 'http://localhost:3001':
    //         $app->loadEnvironmentFrom('.env.staging');		
    //         break;
    //     default:
    //     $app->loadEnvironmentFrom('.env');
    //     break;
    // };

    // if(true)
    // {
        // $r=new Illuminate\Http\Request();
        // print_r($r->ip);
    //      $app->loadEnvironmentFrom('.env.dev');
        
    // }
    // else
    // {
    //     print_r(0); 
    // }

/////////////
       
No environment  file -set in app.php
Cross issue ( cross origin again) - test 
Database.php(mysql with central_db ? - test 
Webppack.js in laravel (purpose) - test
Where is define login middleware ? -  middleware/Authenticate.php
Exception handling if route is not defined - test

Token after signup( it is visible on network response)
Design issue

////////

//console.dir(this);
//note evt.target can be a nested element, not the body element, resulting in misfires

//document.getElementsByClassName('notification-content')[1].style.visibility = 'hidden';


      // let notificationContent=document.getElementsByClassName("notification-content");

      // if(notificationContent)
      // {

      //    console.dir(notificationContent[0].style.visibility);
      // }
      // else
      // {
      // }
      //alert("body clicked");
      //bellIcon

/////////
sign in invalid credentials msg not show -test
signup alert div height -test

Profile.js
1-profile dropdown not fixed -skip
2-profile show empty error, first on mobile number -skip
3-prifile checkbox -test
4-profile tab -test
5-profile sidebar scrollable -test
6-profile alert div height -test

contact.js

1-add contact success msg not show -skip
2-all contacts show 3 times-test
3-copy/move error msg not show in div and not show success msg -skip
4-contact not deleted
5-update contact success msg not show and not get age,valid in edit modal
6-contact sidebar hover not proper show
7-uploading file msg scrollable
8-loader size
9-selected contact not unselect after change list
10-Warning: Each child in a list should have a unique "key" prop.


contactList.js
1-add new list error msg not show in div,not show success and extra errror msg on contactlist page
2-list deleted but contacts not deleted of list
3-list modals ui
4-contact list updated a null value
5-add list fisrt error show folderid if both is empaty
6-again open add list modal data not reset
importContact.js
1-contacts imported without select list
2-import salect a list scrollable
3-10k contacts not imported any list
4-loader size
5-select a list error not show  in danger class
6-Warning: Failed prop type: Invalid prop `label` of type `object` supplied to `TabComponent`, expected `string`.
Navbar.js
bell notification open double click

///////////

database.php - remove set from env variables
signin - password msg
enables login on keypress
Settings - contact controller 


/////////
chmod 755 xampp-linux-x64-7.4.1-0-installer.run

chmod +x xampp-linux-x64-7.4.1-0-installer.run
./xampp-linux-x64-7.4.1-0-installer.run




////

sudo cp -r /home/neeraj/Downloads/Document /opt

extension=sqlsrv
extension=pdo_sqlsrv
extension=mongodb

extension=sqlsrv.so
extension=pdo_sqlsrv.so
extension=mongodb.so


//////////


dashboard- 
        new Project  
            membership Card 
              New Program 
              Design Card 
              Details 
              Finish 

                Redirect to DashBoard 
                    Enrol Members    

//////////////////


1) The yellow area for the Function rooms seems to be a bit large.  Not sure why we need so much space for that area.  

1)Function rooms yellow area width reduced.Maximum width is till Room Named "Lakeside Meeting Center (50)"

2)Function rooms, dates, booking, customer name font are changed from 12px to14px 

3) equal spaces being done for  half hours in availibilty Grid

4) in the availability tab-> booking name textbox now should display "EDOT - Discovery Retreat"(booking name) instead of customer name for 28feb booking 

5) availability dates are converted as format of 02/29/2020  

6) The dates section at the top of the page converted to "02/28/2020-03/01/2020"

7)  open and empty space reduced

8) Available Sleeping Rooms (16 Available Sleeping Rooms)- right now I am not able to set it ,Can you give couple of more example of existing bookings for this label ? i tried to map blocked sleeping room with this label . but they doesnot seem to be directly related
 
left bar is a combination of legacy esp top bars + right bar . I have given several demo's of client DAC and HARVARD with that . if i changed it , i have to do of rework 


/////////////
booking profile - load stuck
bkg search -  date time bug 
av- go to --> not set on function click 





Scaffold-DbContext "Server=local;Database=test;Uid=root;Pwd=password;;" MySql.Data.EntityFrameworkCore -OutputDir Models
		

Install-Package MySql.Data.EntityFrameworkCore -Version 8.0.19


 FOREIGN KEY (PersonID) REFERENCES Persons(PersonID)

 ///////

mohini@aviktechnosoft.com / ndt2gx12

slack
mohini@aviktechnosoft.com / ndt2sx12

j>H9==Sr

login kar liya

//////


 'Microsoft.AspNetCore.App'

  InsertDataPhone,  InsertDataToughbook 

  /////////////

  include("../common/styles.php");

include("../common/css/googleFonts.css");

https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWJ0bbck.woff2







/////////////////////
Array ( [0] => [1] => T [2] => h [3] => e [4] => [5] => J [6] => a [7] => i [8] => n [9] => [10] => S [11] => o [12] => c [13] => i [14] => e [15] => t [16] => y [17] => [18] => o [19] => f [20] => [21] => H [22] => o [23] => u [24] => s [25] => t [26] => o [27] => n )



 Array ( [0] => [1] => T [2] => h [3] => e [4] => [5] => J [6] => a [7] => i [8] => n [9] => [10] => S [11] => o [12] => c [13] => i [14] => e [15] => t [16] => y [17] => [18] => o [19] => f [20] => [21] => H [22] => o [23] => u [24] => s [25] => t [26] => o [27] => n ) Array ( [0] => [1] => T [2] => h [3] => e [4] => [5] => J [6] => a [7] => i [8] => n [9] => [10] => S [11] => o [12] => c [13] => i [14] => e [15] => t [16] => y [17] => [18] => o [19] => f [20] => [21] => H [22] => o [23] => u [24] => s [25] => t [26] => o [27] => n ) Array ( [0] => [1] => T [2] => h [3] => e [4] => [5] => J [6] => a [7] => i [8] => n [9] => [10] => S [11] => o [12] => c [13] => i [14] => e [15] => t [16] => y [17] => [18] => o [19] => f [20] => [21] => H [22] => o [23] => u [24] => s [25] => t [26] => o [27] => n ) Array ( [0] => [1] => T [2] => h [3] => e [4] => [5] => J [6] => a [7] => i [8] => n [9] => [10] => S [11] => o [12] => c [13] => i [14] => e [15] => t [16] => y [17] => [18] => o [19] => f [20] => [21] => H [22] => o [23] => u [24] => s [25] => t [26] => o [27] => n ) Array ( [0] => [1] => T [2] => h [3] => e [4] => [5] => J [6] => a [7] => i [8] => n [9] => [10] => S [11] => o [12] => c [13] => i [14] => e [15] => t [16] => y [17] => [18] => o [19] => f [20] => [21] => H [22] => o [23] => u [24] => s [25] => t [26] => o [27] => n ) Array ( [0] => [1] => T [2] => h [3] => e [4] => [5] => J [6] => a [7] => i [8] => n [9] => [10] => S [11] => o [12] => c [13] => i [14] => e [15] => t [16] => y [17] => [18] => o [19] => f [20] => [21] => H [22] => o [23] => u [24] => s [25] => t [26] => o [27] => n ) Array ( [0] => [1] => T [2] => h [3] => e [4] => [5] => J [6] => a [7] => i [8] => n [9] => [10] => S [11] => o [12] => c [13] => i [14] => e [15] => t [16] => y [17] => [18] => o [19] => f [20] => [21] => H [22] => o [23] => u [24] => s [25] => t [26] => o [27] => n ) Array ( [0] => [1] => T [2] => h [3] => e [4] => [5] => J [6] => a [7] => i [8] => n [9] => [10] => S [11] => o [12] => c [13] => i [14] => e [15] => t [16] => y [17] => [18] => o [19] => f [20] => [21] => H [22] => o [23] => u [24] => s [25] => t [26] => o [27] => n ) Array ( [0] => [1] => T [2] => h [3] => e [4] => [5] => J [6] => a [7] => i [8] => n [9] => [10] => S [11] => o [12] => c [13] => i [14] => e [15] => t [16] => y [17] => [18] => o [19] => f [20] => [21] => H [22] => o [23] => u [24] => s [25] => t [26] => o [27] => n ) Array ( [0] => [1] => T [2] => h [3] => e [4] => [5] => J [6] => a [7] => i [8] => n [9] => [10] 


 if($_POST['view']=="Daily")
        {
            for($i=4;$i<=12;$i++) { $table.='<th style="width: 1.7%;">'.$i.'a</th><th style="width: 1.7%;"></th>';}
            for($i=1;$i<=12;$i++) { $table.='<th style="width: 1.7%;">'.$i.'p</th><th  style="width:1.7%;"></th>';}
            for($i=1;$i<=3;$i++) { $table.='<th style="width: 1.7%;">'.$i.'a</th><th  style="width: 1.7%;"></th>';}

            $table.='</th></tr> </thead> <tbody id="contenttdme">';

            $frdidQuery="select SFRDT.frdid from FUNCT left join TSLTT on TSLTT.FunctID = FUNCT.functid left join EVENT bkg on bkg.EvtID = FUNCT.evtid left join SFRDT on SFRDT.FrdID = TSLTT.FRID left join CUSTT cst on bkg.CustID=cst.CustID left join contacts cnt on cnt.ContactID=FUNCT.onsitecontact left join SALPT slps on slps.SalesID=FUNCT.spid left join functnotes on functnotes.functid= FUNCT.functid left join slphdrt on bkg.evtid= slphdrt.evtid left join functnames on funct.functname=functnames.resdesc where bkg.EvtStatus < 4 and FUNCT.startdate = '2020-02-29' ";

            $frdidArray=array();
            
            foreach($conn->query($frdidQuery)->fetchAll(PDO::FETCH_OBJ) as $frdidRow)
            {
                array_push($frdidArray,$frdidRow->frdid);
            }

             foreach($res as $row)
                 {
                  
                    $count=0;

                    $subidxQuery="select count(frsubidx)  as count from SFRDT where frsuperidx=".$row->frsuperidx." and frsprid=".$row->frsprid." ";

                    $resSubidx = $conn->query($subidxQuery)->fetchAll(PDO::FETCH_OBJ);

                    $count=$resSubidx[0]->count;

                    $expand="";

                    if($count>1)
                    {
                        $expand="<input  frsuperidx=".$row->frsuperidx." frsprid=".$row->frsprid."  type='button' class='expand' value='+' onClick='expandChildRooms(this)'/>";
                    }

                    $child="";

                    if($row->frsubidx>0)
                    {
                        $child="childRow c_".$row->frsuperidx."_".$row->frsprid."";
                        $expand="<input  frsuperidx=".$row->frsuperidx." frsprid=".$row->frsprid."  type='button' class='expand' value='-' />";
                    }
                    
                    //temp
                    // $child="";
                    // $expand="<input  type='button' class='expand' value='+' />";
                    //temp
                    
                    $table.="<tr class='grid_back ".$child."' frdid='" .$row->frdid."' frsuperidx='" .$row->frsuperidx."' frsubidx='" .$row->frsubidx."'><td class='text-center'  style='width: 1%;' > ".$expand."</td><td style='width: 1%;'><div class='col-sm-12 col-md-12 col-lg-12' style='border:none;padding:0px;'><input type='checkbox' name='Av_checkbox' style='margin: 0px;padding:0px;'></div></td><td style='width: 13%;'><center>" .$row->frname . "</center></td>";

                    $now = DateTime::createFromFormat('H:i', '04:00'); 
                    $end = clone $now;
                    $end->modify("+1410 minutes");
                    
                    $i=0;$j=0;
                    $time= $now->format('H:i');
                    $arrSpaceHold=array("U","N","A");
                        
                    while ($now <= $end) {

                    $table.='<td style="position:relative;" onclick="av_NewBooking(this)" onmouseover="popUpHide(this)" >';
                    
                    // $spaceholdQuery = "select top 1 convert(char(5), starttime , 108) as starttime,convert(char(5), endtime , 108) as endtime from roomholddates where roomid=".$row->frdid." and  startdate='".$_POST["date"]."' and enddate='".$_POST["date"]."' ";

                    // $spaceholdRes=$conn->query($spaceholdQuery)->fetchAll(PDO::FETCH_OBJ);
                    
                    // foreach( $spaceholdRes as $spaceholdRow)
                    // {   
                        
                    //     if ($time >= $spaceholdRow->starttime && $time <= $spaceholdRow->endtime) 
                    //     {
                    //         $table.='<div style="width: 100%; height: 100%; z-index: 0;position:absolute; top: 0; left: 0;cursor:pointer;background:grey" ><p style="color:white;">'.$arrSpaceHold[$j].'</p></div>';
                    //     }
                    // }

                if (in_array($row->frdid, $frdidArray))
                { 
                $RoomQuery=$fnRoomQuery." where  bkg.EvtStatus < 4 and FUNCT.startdate = '2020-02-29' and SFRDT.FrdID=".$row->frdid."";
    
                $arr=array();
                 
                //print_r($RoomQuery);

                 foreach($conn->query($RoomQuery)->fetchAll(PDO::FETCH_OBJ) as $row1)
                {  

                    $roomBlockQuery = "select count(srid) as srid from SlpRooms where SRHdrID=".$row1->evtid."";
                
                    $resRoomBlock=$conn->query($roomBlockQuery)->fetchAll(PDO::FETCH_OBJ);

                    if(count($resRoomBlock)>0)
                    {
                        $img = '<img style="height: 100%;position: absolute;" src="../Availability/assets/images/bed.png" />';
                        array_push($arr,$img);

                    }

                    $servQuery = "select distinct servpictkey from headertypes join servitems  on servitems.headertypeid=headertypes.headertypeid  join FUNCT on servitems.FunctID= FUNCT.FunctID where FUNCT.FunctID=".$row1->functid."";

                    foreach($conn->query($servQuery)->fetchAll(PDO::FETCH_OBJ) as $servRow)
                    { 
                        $img = '<img style="height: 100%;position: absolute;" src="../Availability/assets/images/servpictkey/'.$_SESSION["db"].'/'.$servRow->servpictkey.'.png" />';
                        array_push($arr,$img);
                            
                    }

                    foreach(str_split($row1->CustName) as $c)
                    {
                        $ch='<p style="margin: 0px 1px">'.$c.'</p>';
                        array_push($arr,$c);
                    }

                    if ($row1->EvtStatus == 1) {
                        $color = 'blueColor'; $lightclr = 'lightblueColor';
                    } else if ($row1->EvtStatus == 2) {
                        $color = 'redColor'; $lightclr = 'lightredColor';
                    } else if ($row1->EvtStatus == 3) {
                        $color = 'greenColor'; $lightclr = 'lightgreenColor';
                    }
        
                     if($row1->StartTime>$row1->EndTime)
                    {
                        if ($time >= $row1->StartTime && $time <= '23:59') 
                        {
                            $id=$row1->functid.'_'.$i;
                
                            $table.='<div id='.$id.' onmouseover="popUp(\''.$id.'\','.$row1->functid.')" onclick="fnInfo('.$row1->functid.')" ondblclick="Editfn('.$row1->functid.')" class=" '.$color.' " style="width: 100%; height: 100%; z-index: 0;position:absolute; top: 0; left: 0;cursor:pointer" ><p data-functid="'.$row1->functid.'" data-evtid='.$row1->evtid.' class="daily" style="color:white;margin:0px 2px;font-size: 15px;">'.$arr[$i].'</p></div>';

                            $i++;

                        }

                        if ($time >= '00:00' && $time <= $row1->EndTime) 
                        {
                            $id=$row1->functid.'_'.$i;
                
                            $table.='<div id='.$id.' onmouseover="popUp(\''.$id.'\','.$row1->functid.')" onclick="fnInfo('.$row1->functid.')" ondblclick="Editfn('.$row1->functid.')" class=" '.$color.' " style="width: 100%; height: 100%; z-index: 0;position:absolute; top: 0; left: 0;cursor:pointer" ><p data-functid="'.$row1->functid.'" data-evtid='.$row1->evtid.' class="daily" style="color:white;margin:0px 2px;font-size: 15px;">'.$arr[$i].'</p></div>';

                            $i++;

                        }

                    }

                    else
                    {

                        if ( (strtotime($time) >= strtotime($row1->setup)) &&  (strtotime($time) < strtotime($row1->StartTime))  ) 
                        {
                        $table.='<div class="'.$lightclr.'" style="width: 100%; height: 100%; z-index: 0;position:absolute; top: 0; left: 0;cursor:pointer" ></div>';

                        }

                    if ($time >= $row1->StartTime && $time <= $row1->EndTime) 
                    {
                        $id=$row1->functid.'_'.$i;
            
                        $table.='<div id='.$id.' onmouseover="popUp(\''.$id.'\','.$row1->functid.')" onclick="fnInfo('.$row1->functid.')" ondblclick="Editfn('.$row1->functid.')" class=" '.$color.' " style="width: 100%; height: 100%; z-index: 0;position:absolute; top: 0; left: 0;cursor:pointer" ><p data-functid="'.$row1->functid.'" data-evtid='.$row1->evtid.' class="daily" style="color:white;margin:0px 2px;font-size: 15px;">'.$arr[$i].'</p></div>';

                        $i++;

                    }
        
                    if ( (strtotime($time) <= strtotime($row1->knock)) &&  (strtotime($time) > strtotime($row1->EndTime))  ) 
                    {
        
                        $table.='<div class="'.$lightclr.'" style="width: 100%; height: 100%; z-index: 0;position:absolute; top: 0; left: 0;cursor:pointer" ></div>';
            
                    }

               // }
                    

                }
                
                     $table.="</td>";
        
            //         $time= $now->add(new DateInterval('PT30M'))->format('H:i');

                    $j++;

                }

                
                } 
                  $time= $now->add(new DateInterval('PT30M'))->format('H:i');

                 }
               
            
                 $table.= "</tr>";
                // break;
                 }
                
           
                $table.='</tbody> <tbody id="offsiteData" style="display: none"> </tbody> </table>';
        
        }
    

    //////////


Eloquent ORM  - https://www.youtube.com/watch?v=eYbILgfk0DY

Reverse routing

Migrations - https://www.youtube.com/watch?v=ZexzgVyzvfE
Database Seeding
Automatic pagination
Unit testing
Homestead

CORS Support- https://www.youtube.com/watch?v=1U74kJKy9XU
https://www.youtube.com/watch?v=wKuIU09FkLk


/////////

Uncaught ErrorException: count(): Parameter must be an array or an object that implements Countable in C:\quickstart\vendor\symfony\process\Pipes\WindowsPipes.php:221


Uncaught ErrorException: count(): Parameter must be an array or an object that implements Countable in WindowsPipes.php


//////////



    
/**
     * Show Task Dashboard
     */
    Route::get('/', function () {
        return view('tasks', [
            'tasks' => Task::orderBy('created_at', 'asc')->get()
        ]);
    });

    /**
     * Add New Task
     */
    Route::post('/task', function (Request $request) {
        $validator = Validator::make($request->all(), [
            'name' => 'required|max:255',
        ]);

        if ($validator->fails()) {
            return redirect('/')
                ->withInput()
                ->withErrors($validator);
        }

        $task = new Task;
        $task->name = $request->name;
        $task->save();

        return redirect('/');
    });
 
    /**
     * Delete Task
     */
    Route::delete('/task/{id}', function ($id) {
        Task::findOrFail($id)->delete();

        return redirect('/');
    });


////////////



/**
 * Display All Tasks
 */
Route::get('/', function () {
    $tasks = Task::orderBy('created_at', 'asc')->get();

    return view('tasks', [
        'tasks' => $tasks
    ]);
});


/**
 * Add A New Task
 */
Route::post('/task', function (Request $request) {
    $validator = Validator::make($request->all(), [
        'name' => 'required|max:255',
    ]);

    if ($validator->fails()) {
        return redirect('/')
            ->withInput()
            ->withErrors($validator);
    }

    // Create The Task...

    $task = new Task;
    $task->name = $request->name;
    $task->save();

    return redirect('/');

});

/**
 * Delete An Existing Task
 */

Route::delete('/task/{id}', function ($id) {
    Task::findOrFail($id)->delete();

    return redirect('/');
});




/////

php_pdo_sqlsrv_7_ts_x64.dll
php_pdo_sqlsrv_72_ts_x64.dll
php_pdo_sqlsrv_73_ts_x64.dll
php_pdo_sqlsrv_74_ts_x64.dll

php_sqlsrv_7_ts_x64.dll
php_sqlsrv_72_ts_x64.dll
php_sqlsrv_73_ts_x64.dll
php_sqlsrv_74_ts_x64.dll


/////////


atstt, attendee, autotrace, billtype, bkgrevenuerpt, client, clientoptions, competition, consolidation, contactphones, contacts, contractrates, custgroups, custnotes, custpayment, custt, custtransient, dailycodes, depositt, DiagramMatrix, DiagramT, DiagSuMatrix, discount, doctemplates, documents, error_log, event, eventnotes, eventpackage, eventpayment, eventtransacts, evt_packagedays, evt_packagefuncts, evt_packageservdesc, evt_slprooms, exportqueue, FRAVDET, FRAVLevel, funct, functnames, functnotes, functtransacts, grcdefaults, grcsections, grct, grouppermissions, headertypes, holidays, inventory, inventorycontrol, invoicedet, invoiceheader, itf_availableboard, itf_availablepms, itf_availableyield, itf_deletedblock, itf_editblock, itf_newblock, itf_newcustomer, lbrt, ledger, lostheader, marketrates, matter, mrkt, needdates, packagedays, packagefuncts, packages, packageservdesc, packageservitems, paymentfields, paymenttypes, paymethods, period, periodgoals, permissions, qrydetail, queries, querycategories, recept_prop, referraltypes, refsource, repoptions, resmthd, 
restriction, restype, RollingScreen, roomholddates, roomrenthdr, roomtypes, salesgoals, salesgroups, salpt, salutations, sections, servdesc, servdet, servdetsetup
